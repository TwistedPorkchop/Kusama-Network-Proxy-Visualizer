// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"node_modules/core-js/modules/_global.js":[function(require,module,exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef

},{}],"node_modules/core-js/modules/_has.js":[function(require,module,exports) {
var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};

},{}],"node_modules/core-js/modules/_fails.js":[function(require,module,exports) {
module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};

},{}],"node_modules/core-js/modules/_descriptors.js":[function(require,module,exports) {
// Thank's IE8 for his funny defineProperty
module.exports = !require('./_fails')(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});

},{"./_fails":"node_modules/core-js/modules/_fails.js"}],"node_modules/core-js/modules/_core.js":[function(require,module,exports) {
var core = module.exports = { version: '2.6.12' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef

},{}],"node_modules/core-js/modules/_is-object.js":[function(require,module,exports) {
module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

},{}],"node_modules/core-js/modules/_an-object.js":[function(require,module,exports) {
var isObject = require('./_is-object');
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};

},{"./_is-object":"node_modules/core-js/modules/_is-object.js"}],"node_modules/core-js/modules/_dom-create.js":[function(require,module,exports) {
var isObject = require('./_is-object');
var document = require('./_global').document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};

},{"./_is-object":"node_modules/core-js/modules/_is-object.js","./_global":"node_modules/core-js/modules/_global.js"}],"node_modules/core-js/modules/_ie8-dom-define.js":[function(require,module,exports) {
module.exports = !require('./_descriptors') && !require('./_fails')(function () {
  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;
});

},{"./_descriptors":"node_modules/core-js/modules/_descriptors.js","./_fails":"node_modules/core-js/modules/_fails.js","./_dom-create":"node_modules/core-js/modules/_dom-create.js"}],"node_modules/core-js/modules/_to-primitive.js":[function(require,module,exports) {
// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = require('./_is-object');
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};

},{"./_is-object":"node_modules/core-js/modules/_is-object.js"}],"node_modules/core-js/modules/_object-dp.js":[function(require,module,exports) {
var anObject = require('./_an-object');
var IE8_DOM_DEFINE = require('./_ie8-dom-define');
var toPrimitive = require('./_to-primitive');
var dP = Object.defineProperty;

exports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

},{"./_an-object":"node_modules/core-js/modules/_an-object.js","./_ie8-dom-define":"node_modules/core-js/modules/_ie8-dom-define.js","./_to-primitive":"node_modules/core-js/modules/_to-primitive.js","./_descriptors":"node_modules/core-js/modules/_descriptors.js"}],"node_modules/core-js/modules/_property-desc.js":[function(require,module,exports) {
module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

},{}],"node_modules/core-js/modules/_hide.js":[function(require,module,exports) {
var dP = require('./_object-dp');
var createDesc = require('./_property-desc');
module.exports = require('./_descriptors') ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

},{"./_object-dp":"node_modules/core-js/modules/_object-dp.js","./_property-desc":"node_modules/core-js/modules/_property-desc.js","./_descriptors":"node_modules/core-js/modules/_descriptors.js"}],"node_modules/core-js/modules/_uid.js":[function(require,module,exports) {
var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};

},{}],"node_modules/core-js/modules/_library.js":[function(require,module,exports) {
module.exports = false;

},{}],"node_modules/core-js/modules/_shared.js":[function(require,module,exports) {

var core = require('./_core');
var global = require('./_global');
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: require('./_library') ? 'pure' : 'global',
  copyright: 'Â© 2020 Denis Pushkarev (zloirock.ru)'
});

},{"./_core":"node_modules/core-js/modules/_core.js","./_global":"node_modules/core-js/modules/_global.js","./_library":"node_modules/core-js/modules/_library.js"}],"node_modules/core-js/modules/_function-to-string.js":[function(require,module,exports) {
module.exports = require('./_shared')('native-function-to-string', Function.toString);

},{"./_shared":"node_modules/core-js/modules/_shared.js"}],"node_modules/core-js/modules/_redefine.js":[function(require,module,exports) {

var global = require('./_global');
var hide = require('./_hide');
var has = require('./_has');
var SRC = require('./_uid')('src');
var $toString = require('./_function-to-string');
var TO_STRING = 'toString';
var TPL = ('' + $toString).split(TO_STRING);

require('./_core').inspectSource = function (it) {
  return $toString.call(it);
};

(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) has(val, 'name') || hide(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if (O === global) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    hide(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    hide(O, key, val);
  }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});

},{"./_global":"node_modules/core-js/modules/_global.js","./_hide":"node_modules/core-js/modules/_hide.js","./_has":"node_modules/core-js/modules/_has.js","./_uid":"node_modules/core-js/modules/_uid.js","./_function-to-string":"node_modules/core-js/modules/_function-to-string.js","./_core":"node_modules/core-js/modules/_core.js"}],"node_modules/core-js/modules/_a-function.js":[function(require,module,exports) {
module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};

},{}],"node_modules/core-js/modules/_ctx.js":[function(require,module,exports) {
// optional / simple context binding
var aFunction = require('./_a-function');
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};

},{"./_a-function":"node_modules/core-js/modules/_a-function.js"}],"node_modules/core-js/modules/_export.js":[function(require,module,exports) {

var global = require('./_global');
var core = require('./_core');
var hide = require('./_hide');
var redefine = require('./_redefine');
var ctx = require('./_ctx');
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // extend global
    if (target) redefine(target, key, out, type & $export.U);
    // export
    if (exports[key] != out) hide(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};
global.core = core;
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;

},{"./_global":"node_modules/core-js/modules/_global.js","./_core":"node_modules/core-js/modules/_core.js","./_hide":"node_modules/core-js/modules/_hide.js","./_redefine":"node_modules/core-js/modules/_redefine.js","./_ctx":"node_modules/core-js/modules/_ctx.js"}],"node_modules/core-js/modules/_meta.js":[function(require,module,exports) {
var META = require('./_uid')('meta');
var isObject = require('./_is-object');
var has = require('./_has');
var setDesc = require('./_object-dp').f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !require('./_fails')(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};

},{"./_uid":"node_modules/core-js/modules/_uid.js","./_is-object":"node_modules/core-js/modules/_is-object.js","./_has":"node_modules/core-js/modules/_has.js","./_object-dp":"node_modules/core-js/modules/_object-dp.js","./_fails":"node_modules/core-js/modules/_fails.js"}],"node_modules/core-js/modules/_wks.js":[function(require,module,exports) {
var store = require('./_shared')('wks');
var uid = require('./_uid');
var Symbol = require('./_global').Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;

},{"./_shared":"node_modules/core-js/modules/_shared.js","./_uid":"node_modules/core-js/modules/_uid.js","./_global":"node_modules/core-js/modules/_global.js"}],"node_modules/core-js/modules/_set-to-string-tag.js":[function(require,module,exports) {
var def = require('./_object-dp').f;
var has = require('./_has');
var TAG = require('./_wks')('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};

},{"./_object-dp":"node_modules/core-js/modules/_object-dp.js","./_has":"node_modules/core-js/modules/_has.js","./_wks":"node_modules/core-js/modules/_wks.js"}],"node_modules/core-js/modules/_wks-ext.js":[function(require,module,exports) {
exports.f = require('./_wks');

},{"./_wks":"node_modules/core-js/modules/_wks.js"}],"node_modules/core-js/modules/_wks-define.js":[function(require,module,exports) {

var global = require('./_global');
var core = require('./_core');
var LIBRARY = require('./_library');
var wksExt = require('./_wks-ext');
var defineProperty = require('./_object-dp').f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};

},{"./_global":"node_modules/core-js/modules/_global.js","./_core":"node_modules/core-js/modules/_core.js","./_library":"node_modules/core-js/modules/_library.js","./_wks-ext":"node_modules/core-js/modules/_wks-ext.js","./_object-dp":"node_modules/core-js/modules/_object-dp.js"}],"node_modules/core-js/modules/_cof.js":[function(require,module,exports) {
var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};

},{}],"node_modules/core-js/modules/_iobject.js":[function(require,module,exports) {
// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = require('./_cof');
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};

},{"./_cof":"node_modules/core-js/modules/_cof.js"}],"node_modules/core-js/modules/_defined.js":[function(require,module,exports) {
// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};

},{}],"node_modules/core-js/modules/_to-iobject.js":[function(require,module,exports) {
// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = require('./_iobject');
var defined = require('./_defined');
module.exports = function (it) {
  return IObject(defined(it));
};

},{"./_iobject":"node_modules/core-js/modules/_iobject.js","./_defined":"node_modules/core-js/modules/_defined.js"}],"node_modules/core-js/modules/_to-integer.js":[function(require,module,exports) {
// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};

},{}],"node_modules/core-js/modules/_to-length.js":[function(require,module,exports) {
// 7.1.15 ToLength
var toInteger = require('./_to-integer');
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};

},{"./_to-integer":"node_modules/core-js/modules/_to-integer.js"}],"node_modules/core-js/modules/_to-absolute-index.js":[function(require,module,exports) {
var toInteger = require('./_to-integer');
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};

},{"./_to-integer":"node_modules/core-js/modules/_to-integer.js"}],"node_modules/core-js/modules/_array-includes.js":[function(require,module,exports) {
// false -> Array#indexOf
// true  -> Array#includes
var toIObject = require('./_to-iobject');
var toLength = require('./_to-length');
var toAbsoluteIndex = require('./_to-absolute-index');
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

},{"./_to-iobject":"node_modules/core-js/modules/_to-iobject.js","./_to-length":"node_modules/core-js/modules/_to-length.js","./_to-absolute-index":"node_modules/core-js/modules/_to-absolute-index.js"}],"node_modules/core-js/modules/_shared-key.js":[function(require,module,exports) {
var shared = require('./_shared')('keys');
var uid = require('./_uid');
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};

},{"./_shared":"node_modules/core-js/modules/_shared.js","./_uid":"node_modules/core-js/modules/_uid.js"}],"node_modules/core-js/modules/_object-keys-internal.js":[function(require,module,exports) {
var has = require('./_has');
var toIObject = require('./_to-iobject');
var arrayIndexOf = require('./_array-includes')(false);
var IE_PROTO = require('./_shared-key')('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};

},{"./_has":"node_modules/core-js/modules/_has.js","./_to-iobject":"node_modules/core-js/modules/_to-iobject.js","./_array-includes":"node_modules/core-js/modules/_array-includes.js","./_shared-key":"node_modules/core-js/modules/_shared-key.js"}],"node_modules/core-js/modules/_enum-bug-keys.js":[function(require,module,exports) {
// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');

},{}],"node_modules/core-js/modules/_object-keys.js":[function(require,module,exports) {
// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = require('./_object-keys-internal');
var enumBugKeys = require('./_enum-bug-keys');

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};

},{"./_object-keys-internal":"node_modules/core-js/modules/_object-keys-internal.js","./_enum-bug-keys":"node_modules/core-js/modules/_enum-bug-keys.js"}],"node_modules/core-js/modules/_object-gops.js":[function(require,module,exports) {
exports.f = Object.getOwnPropertySymbols;

},{}],"node_modules/core-js/modules/_object-pie.js":[function(require,module,exports) {
exports.f = {}.propertyIsEnumerable;

},{}],"node_modules/core-js/modules/_enum-keys.js":[function(require,module,exports) {
// all enumerable object keys, includes symbols
var getKeys = require('./_object-keys');
var gOPS = require('./_object-gops');
var pIE = require('./_object-pie');
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};

},{"./_object-keys":"node_modules/core-js/modules/_object-keys.js","./_object-gops":"node_modules/core-js/modules/_object-gops.js","./_object-pie":"node_modules/core-js/modules/_object-pie.js"}],"node_modules/core-js/modules/_is-array.js":[function(require,module,exports) {
// 7.2.2 IsArray(argument)
var cof = require('./_cof');
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};

},{"./_cof":"node_modules/core-js/modules/_cof.js"}],"node_modules/core-js/modules/_to-object.js":[function(require,module,exports) {
// 7.1.13 ToObject(argument)
var defined = require('./_defined');
module.exports = function (it) {
  return Object(defined(it));
};

},{"./_defined":"node_modules/core-js/modules/_defined.js"}],"node_modules/core-js/modules/_object-dps.js":[function(require,module,exports) {
var dP = require('./_object-dp');
var anObject = require('./_an-object');
var getKeys = require('./_object-keys');

module.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};

},{"./_object-dp":"node_modules/core-js/modules/_object-dp.js","./_an-object":"node_modules/core-js/modules/_an-object.js","./_object-keys":"node_modules/core-js/modules/_object-keys.js","./_descriptors":"node_modules/core-js/modules/_descriptors.js"}],"node_modules/core-js/modules/_html.js":[function(require,module,exports) {
var document = require('./_global').document;
module.exports = document && document.documentElement;

},{"./_global":"node_modules/core-js/modules/_global.js"}],"node_modules/core-js/modules/_object-create.js":[function(require,module,exports) {
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = require('./_an-object');
var dPs = require('./_object-dps');
var enumBugKeys = require('./_enum-bug-keys');
var IE_PROTO = require('./_shared-key')('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = require('./_dom-create')('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  require('./_html').appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};

},{"./_an-object":"node_modules/core-js/modules/_an-object.js","./_object-dps":"node_modules/core-js/modules/_object-dps.js","./_enum-bug-keys":"node_modules/core-js/modules/_enum-bug-keys.js","./_shared-key":"node_modules/core-js/modules/_shared-key.js","./_dom-create":"node_modules/core-js/modules/_dom-create.js","./_html":"node_modules/core-js/modules/_html.js"}],"node_modules/core-js/modules/_object-gopn.js":[function(require,module,exports) {
// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = require('./_object-keys-internal');
var hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};

},{"./_object-keys-internal":"node_modules/core-js/modules/_object-keys-internal.js","./_enum-bug-keys":"node_modules/core-js/modules/_enum-bug-keys.js"}],"node_modules/core-js/modules/_object-gopn-ext.js":[function(require,module,exports) {
// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = require('./_to-iobject');
var gOPN = require('./_object-gopn').f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};

},{"./_to-iobject":"node_modules/core-js/modules/_to-iobject.js","./_object-gopn":"node_modules/core-js/modules/_object-gopn.js"}],"node_modules/core-js/modules/_object-gopd.js":[function(require,module,exports) {
var pIE = require('./_object-pie');
var createDesc = require('./_property-desc');
var toIObject = require('./_to-iobject');
var toPrimitive = require('./_to-primitive');
var has = require('./_has');
var IE8_DOM_DEFINE = require('./_ie8-dom-define');
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};

},{"./_object-pie":"node_modules/core-js/modules/_object-pie.js","./_property-desc":"node_modules/core-js/modules/_property-desc.js","./_to-iobject":"node_modules/core-js/modules/_to-iobject.js","./_to-primitive":"node_modules/core-js/modules/_to-primitive.js","./_has":"node_modules/core-js/modules/_has.js","./_ie8-dom-define":"node_modules/core-js/modules/_ie8-dom-define.js","./_descriptors":"node_modules/core-js/modules/_descriptors.js"}],"node_modules/core-js/modules/es6.symbol.js":[function(require,module,exports) {

'use strict';
// ECMAScript 6 symbols shim
var global = require('./_global');
var has = require('./_has');
var DESCRIPTORS = require('./_descriptors');
var $export = require('./_export');
var redefine = require('./_redefine');
var META = require('./_meta').KEY;
var $fails = require('./_fails');
var shared = require('./_shared');
var setToStringTag = require('./_set-to-string-tag');
var uid = require('./_uid');
var wks = require('./_wks');
var wksExt = require('./_wks-ext');
var wksDefine = require('./_wks-define');
var enumKeys = require('./_enum-keys');
var isArray = require('./_is-array');
var anObject = require('./_an-object');
var isObject = require('./_is-object');
var toObject = require('./_to-object');
var toIObject = require('./_to-iobject');
var toPrimitive = require('./_to-primitive');
var createDesc = require('./_property-desc');
var _create = require('./_object-create');
var gOPNExt = require('./_object-gopn-ext');
var $GOPD = require('./_object-gopd');
var $GOPS = require('./_object-gops');
var $DP = require('./_object-dp');
var $keys = require('./_object-keys');
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function' && !!$GOPS.f;
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;
  require('./_object-pie').f = $propertyIsEnumerable;
  $GOPS.f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !require('./_library')) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
var FAILS_ON_PRIMITIVES = $fails(function () { $GOPS.f(1); });

$export($export.S + $export.F * FAILS_ON_PRIMITIVES, 'Object', {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return $GOPS.f(toObject(it));
  }
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);

},{"./_global":"node_modules/core-js/modules/_global.js","./_has":"node_modules/core-js/modules/_has.js","./_descriptors":"node_modules/core-js/modules/_descriptors.js","./_export":"node_modules/core-js/modules/_export.js","./_redefine":"node_modules/core-js/modules/_redefine.js","./_meta":"node_modules/core-js/modules/_meta.js","./_fails":"node_modules/core-js/modules/_fails.js","./_shared":"node_modules/core-js/modules/_shared.js","./_set-to-string-tag":"node_modules/core-js/modules/_set-to-string-tag.js","./_uid":"node_modules/core-js/modules/_uid.js","./_wks":"node_modules/core-js/modules/_wks.js","./_wks-ext":"node_modules/core-js/modules/_wks-ext.js","./_wks-define":"node_modules/core-js/modules/_wks-define.js","./_enum-keys":"node_modules/core-js/modules/_enum-keys.js","./_is-array":"node_modules/core-js/modules/_is-array.js","./_an-object":"node_modules/core-js/modules/_an-object.js","./_is-object":"node_modules/core-js/modules/_is-object.js","./_to-object":"node_modules/core-js/modules/_to-object.js","./_to-iobject":"node_modules/core-js/modules/_to-iobject.js","./_to-primitive":"node_modules/core-js/modules/_to-primitive.js","./_property-desc":"node_modules/core-js/modules/_property-desc.js","./_object-create":"node_modules/core-js/modules/_object-create.js","./_object-gopn-ext":"node_modules/core-js/modules/_object-gopn-ext.js","./_object-gopd":"node_modules/core-js/modules/_object-gopd.js","./_object-gops":"node_modules/core-js/modules/_object-gops.js","./_object-dp":"node_modules/core-js/modules/_object-dp.js","./_object-keys":"node_modules/core-js/modules/_object-keys.js","./_object-gopn":"node_modules/core-js/modules/_object-gopn.js","./_object-pie":"node_modules/core-js/modules/_object-pie.js","./_library":"node_modules/core-js/modules/_library.js","./_hide":"node_modules/core-js/modules/_hide.js"}],"node_modules/core-js/modules/es6.object.create.js":[function(require,module,exports) {
var $export = require('./_export');
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', { create: require('./_object-create') });

},{"./_export":"node_modules/core-js/modules/_export.js","./_object-create":"node_modules/core-js/modules/_object-create.js"}],"node_modules/core-js/modules/es6.object.define-property.js":[function(require,module,exports) {
var $export = require('./_export');
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });

},{"./_export":"node_modules/core-js/modules/_export.js","./_descriptors":"node_modules/core-js/modules/_descriptors.js","./_object-dp":"node_modules/core-js/modules/_object-dp.js"}],"node_modules/core-js/modules/es6.object.define-properties.js":[function(require,module,exports) {
var $export = require('./_export');
// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperties: require('./_object-dps') });

},{"./_export":"node_modules/core-js/modules/_export.js","./_descriptors":"node_modules/core-js/modules/_descriptors.js","./_object-dps":"node_modules/core-js/modules/_object-dps.js"}],"node_modules/core-js/modules/_object-sap.js":[function(require,module,exports) {
// most Object methods by ES6 should accept primitives
var $export = require('./_export');
var core = require('./_core');
var fails = require('./_fails');
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};

},{"./_export":"node_modules/core-js/modules/_export.js","./_core":"node_modules/core-js/modules/_core.js","./_fails":"node_modules/core-js/modules/_fails.js"}],"node_modules/core-js/modules/es6.object.get-own-property-descriptor.js":[function(require,module,exports) {
// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
var toIObject = require('./_to-iobject');
var $getOwnPropertyDescriptor = require('./_object-gopd').f;

require('./_object-sap')('getOwnPropertyDescriptor', function () {
  return function getOwnPropertyDescriptor(it, key) {
    return $getOwnPropertyDescriptor(toIObject(it), key);
  };
});

},{"./_to-iobject":"node_modules/core-js/modules/_to-iobject.js","./_object-gopd":"node_modules/core-js/modules/_object-gopd.js","./_object-sap":"node_modules/core-js/modules/_object-sap.js"}],"node_modules/core-js/modules/_object-gpo.js":[function(require,module,exports) {
// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = require('./_has');
var toObject = require('./_to-object');
var IE_PROTO = require('./_shared-key')('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};

},{"./_has":"node_modules/core-js/modules/_has.js","./_to-object":"node_modules/core-js/modules/_to-object.js","./_shared-key":"node_modules/core-js/modules/_shared-key.js"}],"node_modules/core-js/modules/es6.object.get-prototype-of.js":[function(require,module,exports) {
// 19.1.2.9 Object.getPrototypeOf(O)
var toObject = require('./_to-object');
var $getPrototypeOf = require('./_object-gpo');

require('./_object-sap')('getPrototypeOf', function () {
  return function getPrototypeOf(it) {
    return $getPrototypeOf(toObject(it));
  };
});

},{"./_to-object":"node_modules/core-js/modules/_to-object.js","./_object-gpo":"node_modules/core-js/modules/_object-gpo.js","./_object-sap":"node_modules/core-js/modules/_object-sap.js"}],"node_modules/core-js/modules/es6.object.keys.js":[function(require,module,exports) {
// 19.1.2.14 Object.keys(O)
var toObject = require('./_to-object');
var $keys = require('./_object-keys');

require('./_object-sap')('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});

},{"./_to-object":"node_modules/core-js/modules/_to-object.js","./_object-keys":"node_modules/core-js/modules/_object-keys.js","./_object-sap":"node_modules/core-js/modules/_object-sap.js"}],"node_modules/core-js/modules/es6.object.get-own-property-names.js":[function(require,module,exports) {
// 19.1.2.7 Object.getOwnPropertyNames(O)
require('./_object-sap')('getOwnPropertyNames', function () {
  return require('./_object-gopn-ext').f;
});

},{"./_object-sap":"node_modules/core-js/modules/_object-sap.js","./_object-gopn-ext":"node_modules/core-js/modules/_object-gopn-ext.js"}],"node_modules/core-js/modules/es6.object.freeze.js":[function(require,module,exports) {
// 19.1.2.5 Object.freeze(O)
var isObject = require('./_is-object');
var meta = require('./_meta').onFreeze;

require('./_object-sap')('freeze', function ($freeze) {
  return function freeze(it) {
    return $freeze && isObject(it) ? $freeze(meta(it)) : it;
  };
});

},{"./_is-object":"node_modules/core-js/modules/_is-object.js","./_meta":"node_modules/core-js/modules/_meta.js","./_object-sap":"node_modules/core-js/modules/_object-sap.js"}],"node_modules/core-js/modules/es6.object.seal.js":[function(require,module,exports) {
// 19.1.2.17 Object.seal(O)
var isObject = require('./_is-object');
var meta = require('./_meta').onFreeze;

require('./_object-sap')('seal', function ($seal) {
  return function seal(it) {
    return $seal && isObject(it) ? $seal(meta(it)) : it;
  };
});

},{"./_is-object":"node_modules/core-js/modules/_is-object.js","./_meta":"node_modules/core-js/modules/_meta.js","./_object-sap":"node_modules/core-js/modules/_object-sap.js"}],"node_modules/core-js/modules/es6.object.prevent-extensions.js":[function(require,module,exports) {
// 19.1.2.15 Object.preventExtensions(O)
var isObject = require('./_is-object');
var meta = require('./_meta').onFreeze;

require('./_object-sap')('preventExtensions', function ($preventExtensions) {
  return function preventExtensions(it) {
    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
  };
});

},{"./_is-object":"node_modules/core-js/modules/_is-object.js","./_meta":"node_modules/core-js/modules/_meta.js","./_object-sap":"node_modules/core-js/modules/_object-sap.js"}],"node_modules/core-js/modules/es6.object.is-frozen.js":[function(require,module,exports) {
// 19.1.2.12 Object.isFrozen(O)
var isObject = require('./_is-object');

require('./_object-sap')('isFrozen', function ($isFrozen) {
  return function isFrozen(it) {
    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
  };
});

},{"./_is-object":"node_modules/core-js/modules/_is-object.js","./_object-sap":"node_modules/core-js/modules/_object-sap.js"}],"node_modules/core-js/modules/es6.object.is-sealed.js":[function(require,module,exports) {
// 19.1.2.13 Object.isSealed(O)
var isObject = require('./_is-object');

require('./_object-sap')('isSealed', function ($isSealed) {
  return function isSealed(it) {
    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
  };
});

},{"./_is-object":"node_modules/core-js/modules/_is-object.js","./_object-sap":"node_modules/core-js/modules/_object-sap.js"}],"node_modules/core-js/modules/es6.object.is-extensible.js":[function(require,module,exports) {
// 19.1.2.11 Object.isExtensible(O)
var isObject = require('./_is-object');

require('./_object-sap')('isExtensible', function ($isExtensible) {
  return function isExtensible(it) {
    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
  };
});

},{"./_is-object":"node_modules/core-js/modules/_is-object.js","./_object-sap":"node_modules/core-js/modules/_object-sap.js"}],"node_modules/core-js/modules/_object-assign.js":[function(require,module,exports) {
'use strict';
// 19.1.2.1 Object.assign(target, source, ...)
var DESCRIPTORS = require('./_descriptors');
var getKeys = require('./_object-keys');
var gOPS = require('./_object-gops');
var pIE = require('./_object-pie');
var toObject = require('./_to-object');
var IObject = require('./_iobject');
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || require('./_fails')(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;

},{"./_descriptors":"node_modules/core-js/modules/_descriptors.js","./_object-keys":"node_modules/core-js/modules/_object-keys.js","./_object-gops":"node_modules/core-js/modules/_object-gops.js","./_object-pie":"node_modules/core-js/modules/_object-pie.js","./_to-object":"node_modules/core-js/modules/_to-object.js","./_iobject":"node_modules/core-js/modules/_iobject.js","./_fails":"node_modules/core-js/modules/_fails.js"}],"node_modules/core-js/modules/es6.object.assign.js":[function(require,module,exports) {
// 19.1.3.1 Object.assign(target, source)
var $export = require('./_export');

$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });

},{"./_export":"node_modules/core-js/modules/_export.js","./_object-assign":"node_modules/core-js/modules/_object-assign.js"}],"node_modules/core-js/modules/_same-value.js":[function(require,module,exports) {
// 7.2.9 SameValue(x, y)
module.exports = Object.is || function is(x, y) {
  // eslint-disable-next-line no-self-compare
  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
};

},{}],"node_modules/core-js/modules/es6.object.is.js":[function(require,module,exports) {
// 19.1.3.10 Object.is(value1, value2)
var $export = require('./_export');
$export($export.S, 'Object', { is: require('./_same-value') });

},{"./_export":"node_modules/core-js/modules/_export.js","./_same-value":"node_modules/core-js/modules/_same-value.js"}],"node_modules/core-js/modules/_set-proto.js":[function(require,module,exports) {
// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = require('./_is-object');
var anObject = require('./_an-object');
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};

},{"./_is-object":"node_modules/core-js/modules/_is-object.js","./_an-object":"node_modules/core-js/modules/_an-object.js","./_ctx":"node_modules/core-js/modules/_ctx.js","./_object-gopd":"node_modules/core-js/modules/_object-gopd.js"}],"node_modules/core-js/modules/es6.object.set-prototype-of.js":[function(require,module,exports) {
// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = require('./_export');
$export($export.S, 'Object', { setPrototypeOf: require('./_set-proto').set });

},{"./_export":"node_modules/core-js/modules/_export.js","./_set-proto":"node_modules/core-js/modules/_set-proto.js"}],"node_modules/core-js/modules/_classof.js":[function(require,module,exports) {
// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = require('./_cof');
var TAG = require('./_wks')('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};

},{"./_cof":"node_modules/core-js/modules/_cof.js","./_wks":"node_modules/core-js/modules/_wks.js"}],"node_modules/core-js/modules/es6.object.to-string.js":[function(require,module,exports) {
'use strict';
// 19.1.3.6 Object.prototype.toString()
var classof = require('./_classof');
var test = {};
test[require('./_wks')('toStringTag')] = 'z';
if (test + '' != '[object z]') {
  require('./_redefine')(Object.prototype, 'toString', function toString() {
    return '[object ' + classof(this) + ']';
  }, true);
}

},{"./_classof":"node_modules/core-js/modules/_classof.js","./_wks":"node_modules/core-js/modules/_wks.js","./_redefine":"node_modules/core-js/modules/_redefine.js"}],"node_modules/core-js/modules/_invoke.js":[function(require,module,exports) {
// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};

},{}],"node_modules/core-js/modules/_bind.js":[function(require,module,exports) {
'use strict';
var aFunction = require('./_a-function');
var isObject = require('./_is-object');
var invoke = require('./_invoke');
var arraySlice = [].slice;
var factories = {};

var construct = function (F, len, args) {
  if (!(len in factories)) {
    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';
    // eslint-disable-next-line no-new-func
    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
  } return factories[len](F, args);
};

module.exports = Function.bind || function bind(that /* , ...args */) {
  var fn = aFunction(this);
  var partArgs = arraySlice.call(arguments, 1);
  var bound = function (/* args... */) {
    var args = partArgs.concat(arraySlice.call(arguments));
    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
  };
  if (isObject(fn.prototype)) bound.prototype = fn.prototype;
  return bound;
};

},{"./_a-function":"node_modules/core-js/modules/_a-function.js","./_is-object":"node_modules/core-js/modules/_is-object.js","./_invoke":"node_modules/core-js/modules/_invoke.js"}],"node_modules/core-js/modules/es6.function.bind.js":[function(require,module,exports) {
// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
var $export = require('./_export');

$export($export.P, 'Function', { bind: require('./_bind') });

},{"./_export":"node_modules/core-js/modules/_export.js","./_bind":"node_modules/core-js/modules/_bind.js"}],"node_modules/core-js/modules/es6.function.name.js":[function(require,module,exports) {
var dP = require('./_object-dp').f;
var FProto = Function.prototype;
var nameRE = /^\s*function ([^ (]*)/;
var NAME = 'name';

// 19.2.4.2 name
NAME in FProto || require('./_descriptors') && dP(FProto, NAME, {
  configurable: true,
  get: function () {
    try {
      return ('' + this).match(nameRE)[1];
    } catch (e) {
      return '';
    }
  }
});

},{"./_object-dp":"node_modules/core-js/modules/_object-dp.js","./_descriptors":"node_modules/core-js/modules/_descriptors.js"}],"node_modules/core-js/modules/es6.function.has-instance.js":[function(require,module,exports) {
'use strict';
var isObject = require('./_is-object');
var getPrototypeOf = require('./_object-gpo');
var HAS_INSTANCE = require('./_wks')('hasInstance');
var FunctionProto = Function.prototype;
// 19.2.3.6 Function.prototype[@@hasInstance](V)
if (!(HAS_INSTANCE in FunctionProto)) require('./_object-dp').f(FunctionProto, HAS_INSTANCE, { value: function (O) {
  if (typeof this != 'function' || !isObject(O)) return false;
  if (!isObject(this.prototype)) return O instanceof this;
  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
  while (O = getPrototypeOf(O)) if (this.prototype === O) return true;
  return false;
} });

},{"./_is-object":"node_modules/core-js/modules/_is-object.js","./_object-gpo":"node_modules/core-js/modules/_object-gpo.js","./_wks":"node_modules/core-js/modules/_wks.js","./_object-dp":"node_modules/core-js/modules/_object-dp.js"}],"node_modules/core-js/modules/_string-ws.js":[function(require,module,exports) {
module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';

},{}],"node_modules/core-js/modules/_string-trim.js":[function(require,module,exports) {
var $export = require('./_export');
var defined = require('./_defined');
var fails = require('./_fails');
var spaces = require('./_string-ws');
var space = '[' + spaces + ']';
var non = '\u200b\u0085';
var ltrim = RegExp('^' + space + space + '*');
var rtrim = RegExp(space + space + '*$');

var exporter = function (KEY, exec, ALIAS) {
  var exp = {};
  var FORCE = fails(function () {
    return !!spaces[KEY]() || non[KEY]() != non;
  });
  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
  if (ALIAS) exp[ALIAS] = fn;
  $export($export.P + $export.F * FORCE, 'String', exp);
};

// 1 -> String#trimLeft
// 2 -> String#trimRight
// 3 -> String#trim
var trim = exporter.trim = function (string, TYPE) {
  string = String(defined(string));
  if (TYPE & 1) string = string.replace(ltrim, '');
  if (TYPE & 2) string = string.replace(rtrim, '');
  return string;
};

module.exports = exporter;

},{"./_export":"node_modules/core-js/modules/_export.js","./_defined":"node_modules/core-js/modules/_defined.js","./_fails":"node_modules/core-js/modules/_fails.js","./_string-ws":"node_modules/core-js/modules/_string-ws.js"}],"node_modules/core-js/modules/_parse-int.js":[function(require,module,exports) {
var $parseInt = require('./_global').parseInt;
var $trim = require('./_string-trim').trim;
var ws = require('./_string-ws');
var hex = /^[-+]?0[xX]/;

module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {
  var string = $trim(String(str), 3);
  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
} : $parseInt;

},{"./_global":"node_modules/core-js/modules/_global.js","./_string-trim":"node_modules/core-js/modules/_string-trim.js","./_string-ws":"node_modules/core-js/modules/_string-ws.js"}],"node_modules/core-js/modules/es6.parse-int.js":[function(require,module,exports) {
var $export = require('./_export');
var $parseInt = require('./_parse-int');
// 18.2.5 parseInt(string, radix)
$export($export.G + $export.F * (parseInt != $parseInt), { parseInt: $parseInt });

},{"./_export":"node_modules/core-js/modules/_export.js","./_parse-int":"node_modules/core-js/modules/_parse-int.js"}],"node_modules/core-js/modules/_parse-float.js":[function(require,module,exports) {
var $parseFloat = require('./_global').parseFloat;
var $trim = require('./_string-trim').trim;

module.exports = 1 / $parseFloat(require('./_string-ws') + '-0') !== -Infinity ? function parseFloat(str) {
  var string = $trim(String(str), 3);
  var result = $parseFloat(string);
  return result === 0 && string.charAt(0) == '-' ? -0 : result;
} : $parseFloat;

},{"./_global":"node_modules/core-js/modules/_global.js","./_string-trim":"node_modules/core-js/modules/_string-trim.js","./_string-ws":"node_modules/core-js/modules/_string-ws.js"}],"node_modules/core-js/modules/es6.parse-float.js":[function(require,module,exports) {
var $export = require('./_export');
var $parseFloat = require('./_parse-float');
// 18.2.4 parseFloat(string)
$export($export.G + $export.F * (parseFloat != $parseFloat), { parseFloat: $parseFloat });

},{"./_export":"node_modules/core-js/modules/_export.js","./_parse-float":"node_modules/core-js/modules/_parse-float.js"}],"node_modules/core-js/modules/_inherit-if-required.js":[function(require,module,exports) {
var isObject = require('./_is-object');
var setPrototypeOf = require('./_set-proto').set;
module.exports = function (that, target, C) {
  var S = target.constructor;
  var P;
  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {
    setPrototypeOf(that, P);
  } return that;
};

},{"./_is-object":"node_modules/core-js/modules/_is-object.js","./_set-proto":"node_modules/core-js/modules/_set-proto.js"}],"node_modules/core-js/modules/es6.number.constructor.js":[function(require,module,exports) {

'use strict';
var global = require('./_global');
var has = require('./_has');
var cof = require('./_cof');
var inheritIfRequired = require('./_inherit-if-required');
var toPrimitive = require('./_to-primitive');
var fails = require('./_fails');
var gOPN = require('./_object-gopn').f;
var gOPD = require('./_object-gopd').f;
var dP = require('./_object-dp').f;
var $trim = require('./_string-trim').trim;
var NUMBER = 'Number';
var $Number = global[NUMBER];
var Base = $Number;
var proto = $Number.prototype;
// Opera ~12 has broken Object#toString
var BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;
var TRIM = 'trim' in String.prototype;

// 7.1.3 ToNumber(argument)
var toNumber = function (argument) {
  var it = toPrimitive(argument, false);
  if (typeof it == 'string' && it.length > 2) {
    it = TRIM ? it.trim() : $trim(it, 3);
    var first = it.charCodeAt(0);
    var third, radix, maxCode;
    if (first === 43 || first === 45) {
      third = it.charCodeAt(2);
      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if (first === 48) {
      switch (it.charCodeAt(1)) {
        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
        default: return +it;
      }
      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {
        code = digits.charCodeAt(i);
        // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols
        if (code < 48 || code > maxCode) return NaN;
      } return parseInt(digits, radix);
    }
  } return +it;
};

if (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {
  $Number = function Number(value) {
    var it = arguments.length < 1 ? 0 : value;
    var that = this;
    return that instanceof $Number
      // check on 1..constructor(foo) case
      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)
        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
  };
  for (var keys = require('./_descriptors') ? gOPN(Base) : (
    // ES3:
    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
    // ES6 (in case, if modules with ES6 Number statics required before):
    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
  ).split(','), j = 0, key; keys.length > j; j++) {
    if (has(Base, key = keys[j]) && !has($Number, key)) {
      dP($Number, key, gOPD(Base, key));
    }
  }
  $Number.prototype = proto;
  proto.constructor = $Number;
  require('./_redefine')(global, NUMBER, $Number);
}

},{"./_global":"node_modules/core-js/modules/_global.js","./_has":"node_modules/core-js/modules/_has.js","./_cof":"node_modules/core-js/modules/_cof.js","./_inherit-if-required":"node_modules/core-js/modules/_inherit-if-required.js","./_to-primitive":"node_modules/core-js/modules/_to-primitive.js","./_fails":"node_modules/core-js/modules/_fails.js","./_object-gopn":"node_modules/core-js/modules/_object-gopn.js","./_object-gopd":"node_modules/core-js/modules/_object-gopd.js","./_object-dp":"node_modules/core-js/modules/_object-dp.js","./_string-trim":"node_modules/core-js/modules/_string-trim.js","./_object-create":"node_modules/core-js/modules/_object-create.js","./_descriptors":"node_modules/core-js/modules/_descriptors.js","./_redefine":"node_modules/core-js/modules/_redefine.js"}],"node_modules/core-js/modules/_a-number-value.js":[function(require,module,exports) {
var cof = require('./_cof');
module.exports = function (it, msg) {
  if (typeof it != 'number' && cof(it) != 'Number') throw TypeError(msg);
  return +it;
};

},{"./_cof":"node_modules/core-js/modules/_cof.js"}],"node_modules/core-js/modules/_string-repeat.js":[function(require,module,exports) {
'use strict';
var toInteger = require('./_to-integer');
var defined = require('./_defined');

module.exports = function repeat(count) {
  var str = String(defined(this));
  var res = '';
  var n = toInteger(count);
  if (n < 0 || n == Infinity) throw RangeError("Count can't be negative");
  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;
  return res;
};

},{"./_to-integer":"node_modules/core-js/modules/_to-integer.js","./_defined":"node_modules/core-js/modules/_defined.js"}],"node_modules/core-js/modules/es6.number.to-fixed.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var toInteger = require('./_to-integer');
var aNumberValue = require('./_a-number-value');
var repeat = require('./_string-repeat');
var $toFixed = 1.0.toFixed;
var floor = Math.floor;
var data = [0, 0, 0, 0, 0, 0];
var ERROR = 'Number.toFixed: incorrect invocation!';
var ZERO = '0';

var multiply = function (n, c) {
  var i = -1;
  var c2 = c;
  while (++i < 6) {
    c2 += n * data[i];
    data[i] = c2 % 1e7;
    c2 = floor(c2 / 1e7);
  }
};
var divide = function (n) {
  var i = 6;
  var c = 0;
  while (--i >= 0) {
    c += data[i];
    data[i] = floor(c / n);
    c = (c % n) * 1e7;
  }
};
var numToString = function () {
  var i = 6;
  var s = '';
  while (--i >= 0) {
    if (s !== '' || i === 0 || data[i] !== 0) {
      var t = String(data[i]);
      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
    }
  } return s;
};
var pow = function (x, n, acc) {
  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
};
var log = function (x) {
  var n = 0;
  var x2 = x;
  while (x2 >= 4096) {
    n += 12;
    x2 /= 4096;
  }
  while (x2 >= 2) {
    n += 1;
    x2 /= 2;
  } return n;
};

$export($export.P + $export.F * (!!$toFixed && (
  0.00008.toFixed(3) !== '0.000' ||
  0.9.toFixed(0) !== '1' ||
  1.255.toFixed(2) !== '1.25' ||
  1000000000000000128.0.toFixed(0) !== '1000000000000000128'
) || !require('./_fails')(function () {
  // V8 ~ Android 4.3-
  $toFixed.call({});
})), 'Number', {
  toFixed: function toFixed(fractionDigits) {
    var x = aNumberValue(this, ERROR);
    var f = toInteger(fractionDigits);
    var s = '';
    var m = ZERO;
    var e, z, j, k;
    if (f < 0 || f > 20) throw RangeError(ERROR);
    // eslint-disable-next-line no-self-compare
    if (x != x) return 'NaN';
    if (x <= -1e21 || x >= 1e21) return String(x);
    if (x < 0) {
      s = '-';
      x = -x;
    }
    if (x > 1e-21) {
      e = log(x * pow(2, 69, 1)) - 69;
      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
      z *= 0x10000000000000;
      e = 52 - e;
      if (e > 0) {
        multiply(0, z);
        j = f;
        while (j >= 7) {
          multiply(1e7, 0);
          j -= 7;
        }
        multiply(pow(10, j, 1), 0);
        j = e - 1;
        while (j >= 23) {
          divide(1 << 23);
          j -= 23;
        }
        divide(1 << j);
        multiply(1, 1);
        divide(2);
        m = numToString();
      } else {
        multiply(0, z);
        multiply(1 << -e, 0);
        m = numToString() + repeat.call(ZERO, f);
      }
    }
    if (f > 0) {
      k = m.length;
      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));
    } else {
      m = s + m;
    } return m;
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_to-integer":"node_modules/core-js/modules/_to-integer.js","./_a-number-value":"node_modules/core-js/modules/_a-number-value.js","./_string-repeat":"node_modules/core-js/modules/_string-repeat.js","./_fails":"node_modules/core-js/modules/_fails.js"}],"node_modules/core-js/modules/es6.number.to-precision.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var $fails = require('./_fails');
var aNumberValue = require('./_a-number-value');
var $toPrecision = 1.0.toPrecision;

$export($export.P + $export.F * ($fails(function () {
  // IE7-
  return $toPrecision.call(1, undefined) !== '1';
}) || !$fails(function () {
  // V8 ~ Android 4.3-
  $toPrecision.call({});
})), 'Number', {
  toPrecision: function toPrecision(precision) {
    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');
    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_fails":"node_modules/core-js/modules/_fails.js","./_a-number-value":"node_modules/core-js/modules/_a-number-value.js"}],"node_modules/core-js/modules/es6.number.epsilon.js":[function(require,module,exports) {
// 20.1.2.1 Number.EPSILON
var $export = require('./_export');

$export($export.S, 'Number', { EPSILON: Math.pow(2, -52) });

},{"./_export":"node_modules/core-js/modules/_export.js"}],"node_modules/core-js/modules/es6.number.is-finite.js":[function(require,module,exports) {
// 20.1.2.2 Number.isFinite(number)
var $export = require('./_export');
var _isFinite = require('./_global').isFinite;

$export($export.S, 'Number', {
  isFinite: function isFinite(it) {
    return typeof it == 'number' && _isFinite(it);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_global":"node_modules/core-js/modules/_global.js"}],"node_modules/core-js/modules/_is-integer.js":[function(require,module,exports) {
// 20.1.2.3 Number.isInteger(number)
var isObject = require('./_is-object');
var floor = Math.floor;
module.exports = function isInteger(it) {
  return !isObject(it) && isFinite(it) && floor(it) === it;
};

},{"./_is-object":"node_modules/core-js/modules/_is-object.js"}],"node_modules/core-js/modules/es6.number.is-integer.js":[function(require,module,exports) {
// 20.1.2.3 Number.isInteger(number)
var $export = require('./_export');

$export($export.S, 'Number', { isInteger: require('./_is-integer') });

},{"./_export":"node_modules/core-js/modules/_export.js","./_is-integer":"node_modules/core-js/modules/_is-integer.js"}],"node_modules/core-js/modules/es6.number.is-nan.js":[function(require,module,exports) {
// 20.1.2.4 Number.isNaN(number)
var $export = require('./_export');

$export($export.S, 'Number', {
  isNaN: function isNaN(number) {
    // eslint-disable-next-line no-self-compare
    return number != number;
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js"}],"node_modules/core-js/modules/es6.number.is-safe-integer.js":[function(require,module,exports) {
// 20.1.2.5 Number.isSafeInteger(number)
var $export = require('./_export');
var isInteger = require('./_is-integer');
var abs = Math.abs;

$export($export.S, 'Number', {
  isSafeInteger: function isSafeInteger(number) {
    return isInteger(number) && abs(number) <= 0x1fffffffffffff;
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_is-integer":"node_modules/core-js/modules/_is-integer.js"}],"node_modules/core-js/modules/es6.number.max-safe-integer.js":[function(require,module,exports) {
// 20.1.2.6 Number.MAX_SAFE_INTEGER
var $export = require('./_export');

$export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });

},{"./_export":"node_modules/core-js/modules/_export.js"}],"node_modules/core-js/modules/es6.number.min-safe-integer.js":[function(require,module,exports) {
// 20.1.2.10 Number.MIN_SAFE_INTEGER
var $export = require('./_export');

$export($export.S, 'Number', { MIN_SAFE_INTEGER: -0x1fffffffffffff });

},{"./_export":"node_modules/core-js/modules/_export.js"}],"node_modules/core-js/modules/es6.number.parse-float.js":[function(require,module,exports) {
var $export = require('./_export');
var $parseFloat = require('./_parse-float');
// 20.1.2.12 Number.parseFloat(string)
$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', { parseFloat: $parseFloat });

},{"./_export":"node_modules/core-js/modules/_export.js","./_parse-float":"node_modules/core-js/modules/_parse-float.js"}],"node_modules/core-js/modules/es6.number.parse-int.js":[function(require,module,exports) {
var $export = require('./_export');
var $parseInt = require('./_parse-int');
// 20.1.2.13 Number.parseInt(string, radix)
$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', { parseInt: $parseInt });

},{"./_export":"node_modules/core-js/modules/_export.js","./_parse-int":"node_modules/core-js/modules/_parse-int.js"}],"node_modules/core-js/modules/_math-log1p.js":[function(require,module,exports) {
// 20.2.2.20 Math.log1p(x)
module.exports = Math.log1p || function log1p(x) {
  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
};

},{}],"node_modules/core-js/modules/es6.math.acosh.js":[function(require,module,exports) {
// 20.2.2.3 Math.acosh(x)
var $export = require('./_export');
var log1p = require('./_math-log1p');
var sqrt = Math.sqrt;
var $acosh = Math.acosh;

$export($export.S + $export.F * !($acosh
  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
  && Math.floor($acosh(Number.MAX_VALUE)) == 710
  // Tor Browser bug: Math.acosh(Infinity) -> NaN
  && $acosh(Infinity) == Infinity
), 'Math', {
  acosh: function acosh(x) {
    return (x = +x) < 1 ? NaN : x > 94906265.62425156
      ? Math.log(x) + Math.LN2
      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_math-log1p":"node_modules/core-js/modules/_math-log1p.js"}],"node_modules/core-js/modules/es6.math.asinh.js":[function(require,module,exports) {
// 20.2.2.5 Math.asinh(x)
var $export = require('./_export');
var $asinh = Math.asinh;

function asinh(x) {
  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
}

// Tor Browser bug: Math.asinh(0) -> -0
$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', { asinh: asinh });

},{"./_export":"node_modules/core-js/modules/_export.js"}],"node_modules/core-js/modules/es6.math.atanh.js":[function(require,module,exports) {
// 20.2.2.7 Math.atanh(x)
var $export = require('./_export');
var $atanh = Math.atanh;

// Tor Browser bug: Math.atanh(-0) -> 0
$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
  atanh: function atanh(x) {
    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js"}],"node_modules/core-js/modules/_math-sign.js":[function(require,module,exports) {
// 20.2.2.28 Math.sign(x)
module.exports = Math.sign || function sign(x) {
  // eslint-disable-next-line no-self-compare
  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
};

},{}],"node_modules/core-js/modules/es6.math.cbrt.js":[function(require,module,exports) {
// 20.2.2.9 Math.cbrt(x)
var $export = require('./_export');
var sign = require('./_math-sign');

$export($export.S, 'Math', {
  cbrt: function cbrt(x) {
    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_math-sign":"node_modules/core-js/modules/_math-sign.js"}],"node_modules/core-js/modules/es6.math.clz32.js":[function(require,module,exports) {
// 20.2.2.11 Math.clz32(x)
var $export = require('./_export');

$export($export.S, 'Math', {
  clz32: function clz32(x) {
    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js"}],"node_modules/core-js/modules/es6.math.cosh.js":[function(require,module,exports) {
// 20.2.2.12 Math.cosh(x)
var $export = require('./_export');
var exp = Math.exp;

$export($export.S, 'Math', {
  cosh: function cosh(x) {
    return (exp(x = +x) + exp(-x)) / 2;
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js"}],"node_modules/core-js/modules/_math-expm1.js":[function(require,module,exports) {
// 20.2.2.14 Math.expm1(x)
var $expm1 = Math.expm1;
module.exports = (!$expm1
  // Old FF bug
  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
  // Tor Browser bug
  || $expm1(-2e-17) != -2e-17
) ? function expm1(x) {
  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
} : $expm1;

},{}],"node_modules/core-js/modules/es6.math.expm1.js":[function(require,module,exports) {
// 20.2.2.14 Math.expm1(x)
var $export = require('./_export');
var $expm1 = require('./_math-expm1');

$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', { expm1: $expm1 });

},{"./_export":"node_modules/core-js/modules/_export.js","./_math-expm1":"node_modules/core-js/modules/_math-expm1.js"}],"node_modules/core-js/modules/_math-fround.js":[function(require,module,exports) {
// 20.2.2.16 Math.fround(x)
var sign = require('./_math-sign');
var pow = Math.pow;
var EPSILON = pow(2, -52);
var EPSILON32 = pow(2, -23);
var MAX32 = pow(2, 127) * (2 - EPSILON32);
var MIN32 = pow(2, -126);

var roundTiesToEven = function (n) {
  return n + 1 / EPSILON - 1 / EPSILON;
};

module.exports = Math.fround || function fround(x) {
  var $abs = Math.abs(x);
  var $sign = sign(x);
  var a, result;
  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
  a = (1 + EPSILON32 / EPSILON) * $abs;
  result = a - (a - $abs);
  // eslint-disable-next-line no-self-compare
  if (result > MAX32 || result != result) return $sign * Infinity;
  return $sign * result;
};

},{"./_math-sign":"node_modules/core-js/modules/_math-sign.js"}],"node_modules/core-js/modules/es6.math.fround.js":[function(require,module,exports) {
// 20.2.2.16 Math.fround(x)
var $export = require('./_export');

$export($export.S, 'Math', { fround: require('./_math-fround') });

},{"./_export":"node_modules/core-js/modules/_export.js","./_math-fround":"node_modules/core-js/modules/_math-fround.js"}],"node_modules/core-js/modules/es6.math.hypot.js":[function(require,module,exports) {
// 20.2.2.17 Math.hypot([value1[, value2[, â¦ ]]])
var $export = require('./_export');
var abs = Math.abs;

$export($export.S, 'Math', {
  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars
    var sum = 0;
    var i = 0;
    var aLen = arguments.length;
    var larg = 0;
    var arg, div;
    while (i < aLen) {
      arg = abs(arguments[i++]);
      if (larg < arg) {
        div = larg / arg;
        sum = sum * div * div + 1;
        larg = arg;
      } else if (arg > 0) {
        div = arg / larg;
        sum += div * div;
      } else sum += arg;
    }
    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js"}],"node_modules/core-js/modules/es6.math.imul.js":[function(require,module,exports) {
// 20.2.2.18 Math.imul(x, y)
var $export = require('./_export');
var $imul = Math.imul;

// some WebKit versions fails with big numbers, some has wrong arity
$export($export.S + $export.F * require('./_fails')(function () {
  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
}), 'Math', {
  imul: function imul(x, y) {
    var UINT16 = 0xffff;
    var xn = +x;
    var yn = +y;
    var xl = UINT16 & xn;
    var yl = UINT16 & yn;
    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_fails":"node_modules/core-js/modules/_fails.js"}],"node_modules/core-js/modules/es6.math.log10.js":[function(require,module,exports) {
// 20.2.2.21 Math.log10(x)
var $export = require('./_export');

$export($export.S, 'Math', {
  log10: function log10(x) {
    return Math.log(x) * Math.LOG10E;
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js"}],"node_modules/core-js/modules/es6.math.log1p.js":[function(require,module,exports) {
// 20.2.2.20 Math.log1p(x)
var $export = require('./_export');

$export($export.S, 'Math', { log1p: require('./_math-log1p') });

},{"./_export":"node_modules/core-js/modules/_export.js","./_math-log1p":"node_modules/core-js/modules/_math-log1p.js"}],"node_modules/core-js/modules/es6.math.log2.js":[function(require,module,exports) {
// 20.2.2.22 Math.log2(x)
var $export = require('./_export');

$export($export.S, 'Math', {
  log2: function log2(x) {
    return Math.log(x) / Math.LN2;
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js"}],"node_modules/core-js/modules/es6.math.sign.js":[function(require,module,exports) {
// 20.2.2.28 Math.sign(x)
var $export = require('./_export');

$export($export.S, 'Math', { sign: require('./_math-sign') });

},{"./_export":"node_modules/core-js/modules/_export.js","./_math-sign":"node_modules/core-js/modules/_math-sign.js"}],"node_modules/core-js/modules/es6.math.sinh.js":[function(require,module,exports) {
// 20.2.2.30 Math.sinh(x)
var $export = require('./_export');
var expm1 = require('./_math-expm1');
var exp = Math.exp;

// V8 near Chromium 38 has a problem with very small numbers
$export($export.S + $export.F * require('./_fails')(function () {
  return !Math.sinh(-2e-17) != -2e-17;
}), 'Math', {
  sinh: function sinh(x) {
    return Math.abs(x = +x) < 1
      ? (expm1(x) - expm1(-x)) / 2
      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_math-expm1":"node_modules/core-js/modules/_math-expm1.js","./_fails":"node_modules/core-js/modules/_fails.js"}],"node_modules/core-js/modules/es6.math.tanh.js":[function(require,module,exports) {
// 20.2.2.33 Math.tanh(x)
var $export = require('./_export');
var expm1 = require('./_math-expm1');
var exp = Math.exp;

$export($export.S, 'Math', {
  tanh: function tanh(x) {
    var a = expm1(x = +x);
    var b = expm1(-x);
    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_math-expm1":"node_modules/core-js/modules/_math-expm1.js"}],"node_modules/core-js/modules/es6.math.trunc.js":[function(require,module,exports) {
// 20.2.2.34 Math.trunc(x)
var $export = require('./_export');

$export($export.S, 'Math', {
  trunc: function trunc(it) {
    return (it > 0 ? Math.floor : Math.ceil)(it);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js"}],"node_modules/core-js/modules/es6.string.from-code-point.js":[function(require,module,exports) {
var $export = require('./_export');
var toAbsoluteIndex = require('./_to-absolute-index');
var fromCharCode = String.fromCharCode;
var $fromCodePoint = String.fromCodePoint;

// length should be 1, old FF problem
$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
  // 21.1.2.2 String.fromCodePoint(...codePoints)
  fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars
    var res = [];
    var aLen = arguments.length;
    var i = 0;
    var code;
    while (aLen > i) {
      code = +arguments[i++];
      if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');
      res.push(code < 0x10000
        ? fromCharCode(code)
        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)
      );
    } return res.join('');
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_to-absolute-index":"node_modules/core-js/modules/_to-absolute-index.js"}],"node_modules/core-js/modules/es6.string.raw.js":[function(require,module,exports) {
var $export = require('./_export');
var toIObject = require('./_to-iobject');
var toLength = require('./_to-length');

$export($export.S, 'String', {
  // 21.1.2.4 String.raw(callSite, ...substitutions)
  raw: function raw(callSite) {
    var tpl = toIObject(callSite.raw);
    var len = toLength(tpl.length);
    var aLen = arguments.length;
    var res = [];
    var i = 0;
    while (len > i) {
      res.push(String(tpl[i++]));
      if (i < aLen) res.push(String(arguments[i]));
    } return res.join('');
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_to-iobject":"node_modules/core-js/modules/_to-iobject.js","./_to-length":"node_modules/core-js/modules/_to-length.js"}],"node_modules/core-js/modules/es6.string.trim.js":[function(require,module,exports) {
'use strict';
// 21.1.3.25 String.prototype.trim()
require('./_string-trim')('trim', function ($trim) {
  return function trim() {
    return $trim(this, 3);
  };
});

},{"./_string-trim":"node_modules/core-js/modules/_string-trim.js"}],"node_modules/core-js/modules/_string-at.js":[function(require,module,exports) {
var toInteger = require('./_to-integer');
var defined = require('./_defined');
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};

},{"./_to-integer":"node_modules/core-js/modules/_to-integer.js","./_defined":"node_modules/core-js/modules/_defined.js"}],"node_modules/core-js/modules/_iterators.js":[function(require,module,exports) {
module.exports = {};

},{}],"node_modules/core-js/modules/_iter-create.js":[function(require,module,exports) {
'use strict';
var create = require('./_object-create');
var descriptor = require('./_property-desc');
var setToStringTag = require('./_set-to-string-tag');
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
require('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};

},{"./_object-create":"node_modules/core-js/modules/_object-create.js","./_property-desc":"node_modules/core-js/modules/_property-desc.js","./_set-to-string-tag":"node_modules/core-js/modules/_set-to-string-tag.js","./_hide":"node_modules/core-js/modules/_hide.js","./_wks":"node_modules/core-js/modules/_wks.js"}],"node_modules/core-js/modules/_iter-define.js":[function(require,module,exports) {
'use strict';
var LIBRARY = require('./_library');
var $export = require('./_export');
var redefine = require('./_redefine');
var hide = require('./_hide');
var Iterators = require('./_iterators');
var $iterCreate = require('./_iter-create');
var setToStringTag = require('./_set-to-string-tag');
var getPrototypeOf = require('./_object-gpo');
var ITERATOR = require('./_wks')('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};

},{"./_library":"node_modules/core-js/modules/_library.js","./_export":"node_modules/core-js/modules/_export.js","./_redefine":"node_modules/core-js/modules/_redefine.js","./_hide":"node_modules/core-js/modules/_hide.js","./_iterators":"node_modules/core-js/modules/_iterators.js","./_iter-create":"node_modules/core-js/modules/_iter-create.js","./_set-to-string-tag":"node_modules/core-js/modules/_set-to-string-tag.js","./_object-gpo":"node_modules/core-js/modules/_object-gpo.js","./_wks":"node_modules/core-js/modules/_wks.js"}],"node_modules/core-js/modules/es6.string.iterator.js":[function(require,module,exports) {
'use strict';
var $at = require('./_string-at')(true);

// 21.1.3.27 String.prototype[@@iterator]()
require('./_iter-define')(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});

},{"./_string-at":"node_modules/core-js/modules/_string-at.js","./_iter-define":"node_modules/core-js/modules/_iter-define.js"}],"node_modules/core-js/modules/es6.string.code-point-at.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var $at = require('./_string-at')(false);
$export($export.P, 'String', {
  // 21.1.3.3 String.prototype.codePointAt(pos)
  codePointAt: function codePointAt(pos) {
    return $at(this, pos);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_string-at":"node_modules/core-js/modules/_string-at.js"}],"node_modules/core-js/modules/_is-regexp.js":[function(require,module,exports) {
// 7.2.8 IsRegExp(argument)
var isObject = require('./_is-object');
var cof = require('./_cof');
var MATCH = require('./_wks')('match');
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
};

},{"./_is-object":"node_modules/core-js/modules/_is-object.js","./_cof":"node_modules/core-js/modules/_cof.js","./_wks":"node_modules/core-js/modules/_wks.js"}],"node_modules/core-js/modules/_string-context.js":[function(require,module,exports) {
// helper for String#{startsWith, endsWith, includes}
var isRegExp = require('./_is-regexp');
var defined = require('./_defined');

module.exports = function (that, searchString, NAME) {
  if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
  return String(defined(that));
};

},{"./_is-regexp":"node_modules/core-js/modules/_is-regexp.js","./_defined":"node_modules/core-js/modules/_defined.js"}],"node_modules/core-js/modules/_fails-is-regexp.js":[function(require,module,exports) {
var MATCH = require('./_wks')('match');
module.exports = function (KEY) {
  var re = /./;
  try {
    '/./'[KEY](re);
  } catch (e) {
    try {
      re[MATCH] = false;
      return !'/./'[KEY](re);
    } catch (f) { /* empty */ }
  } return true;
};

},{"./_wks":"node_modules/core-js/modules/_wks.js"}],"node_modules/core-js/modules/es6.string.ends-with.js":[function(require,module,exports) {
// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])
'use strict';
var $export = require('./_export');
var toLength = require('./_to-length');
var context = require('./_string-context');
var ENDS_WITH = 'endsWith';
var $endsWith = ''[ENDS_WITH];

$export($export.P + $export.F * require('./_fails-is-regexp')(ENDS_WITH), 'String', {
  endsWith: function endsWith(searchString /* , endPosition = @length */) {
    var that = context(this, searchString, ENDS_WITH);
    var endPosition = arguments.length > 1 ? arguments[1] : undefined;
    var len = toLength(that.length);
    var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);
    var search = String(searchString);
    return $endsWith
      ? $endsWith.call(that, search, end)
      : that.slice(end - search.length, end) === search;
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_to-length":"node_modules/core-js/modules/_to-length.js","./_string-context":"node_modules/core-js/modules/_string-context.js","./_fails-is-regexp":"node_modules/core-js/modules/_fails-is-regexp.js"}],"node_modules/core-js/modules/es6.string.includes.js":[function(require,module,exports) {
// 21.1.3.7 String.prototype.includes(searchString, position = 0)
'use strict';
var $export = require('./_export');
var context = require('./_string-context');
var INCLUDES = 'includes';

$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~context(this, searchString, INCLUDES)
      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_string-context":"node_modules/core-js/modules/_string-context.js","./_fails-is-regexp":"node_modules/core-js/modules/_fails-is-regexp.js"}],"node_modules/core-js/modules/es6.string.repeat.js":[function(require,module,exports) {
var $export = require('./_export');

$export($export.P, 'String', {
  // 21.1.3.13 String.prototype.repeat(count)
  repeat: require('./_string-repeat')
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_string-repeat":"node_modules/core-js/modules/_string-repeat.js"}],"node_modules/core-js/modules/es6.string.starts-with.js":[function(require,module,exports) {
// 21.1.3.18 String.prototype.startsWith(searchString [, position ])
'use strict';
var $export = require('./_export');
var toLength = require('./_to-length');
var context = require('./_string-context');
var STARTS_WITH = 'startsWith';
var $startsWith = ''[STARTS_WITH];

$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {
  startsWith: function startsWith(searchString /* , position = 0 */) {
    var that = context(this, searchString, STARTS_WITH);
    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));
    var search = String(searchString);
    return $startsWith
      ? $startsWith.call(that, search, index)
      : that.slice(index, index + search.length) === search;
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_to-length":"node_modules/core-js/modules/_to-length.js","./_string-context":"node_modules/core-js/modules/_string-context.js","./_fails-is-regexp":"node_modules/core-js/modules/_fails-is-regexp.js"}],"node_modules/core-js/modules/_string-html.js":[function(require,module,exports) {
var $export = require('./_export');
var fails = require('./_fails');
var defined = require('./_defined');
var quot = /"/g;
// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
var createHTML = function (string, tag, attribute, value) {
  var S = String(defined(string));
  var p1 = '<' + tag;
  if (attribute !== '') p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
  return p1 + '>' + S + '</' + tag + '>';
};
module.exports = function (NAME, exec) {
  var O = {};
  O[NAME] = exec(createHTML);
  $export($export.P + $export.F * fails(function () {
    var test = ''[NAME]('"');
    return test !== test.toLowerCase() || test.split('"').length > 3;
  }), 'String', O);
};

},{"./_export":"node_modules/core-js/modules/_export.js","./_fails":"node_modules/core-js/modules/_fails.js","./_defined":"node_modules/core-js/modules/_defined.js"}],"node_modules/core-js/modules/es6.string.anchor.js":[function(require,module,exports) {
'use strict';
// B.2.3.2 String.prototype.anchor(name)
require('./_string-html')('anchor', function (createHTML) {
  return function anchor(name) {
    return createHTML(this, 'a', 'name', name);
  };
});

},{"./_string-html":"node_modules/core-js/modules/_string-html.js"}],"node_modules/core-js/modules/es6.string.big.js":[function(require,module,exports) {
'use strict';
// B.2.3.3 String.prototype.big()
require('./_string-html')('big', function (createHTML) {
  return function big() {
    return createHTML(this, 'big', '', '');
  };
});

},{"./_string-html":"node_modules/core-js/modules/_string-html.js"}],"node_modules/core-js/modules/es6.string.blink.js":[function(require,module,exports) {
'use strict';
// B.2.3.4 String.prototype.blink()
require('./_string-html')('blink', function (createHTML) {
  return function blink() {
    return createHTML(this, 'blink', '', '');
  };
});

},{"./_string-html":"node_modules/core-js/modules/_string-html.js"}],"node_modules/core-js/modules/es6.string.bold.js":[function(require,module,exports) {
'use strict';
// B.2.3.5 String.prototype.bold()
require('./_string-html')('bold', function (createHTML) {
  return function bold() {
    return createHTML(this, 'b', '', '');
  };
});

},{"./_string-html":"node_modules/core-js/modules/_string-html.js"}],"node_modules/core-js/modules/es6.string.fixed.js":[function(require,module,exports) {
'use strict';
// B.2.3.6 String.prototype.fixed()
require('./_string-html')('fixed', function (createHTML) {
  return function fixed() {
    return createHTML(this, 'tt', '', '');
  };
});

},{"./_string-html":"node_modules/core-js/modules/_string-html.js"}],"node_modules/core-js/modules/es6.string.fontcolor.js":[function(require,module,exports) {
'use strict';
// B.2.3.7 String.prototype.fontcolor(color)
require('./_string-html')('fontcolor', function (createHTML) {
  return function fontcolor(color) {
    return createHTML(this, 'font', 'color', color);
  };
});

},{"./_string-html":"node_modules/core-js/modules/_string-html.js"}],"node_modules/core-js/modules/es6.string.fontsize.js":[function(require,module,exports) {
'use strict';
// B.2.3.8 String.prototype.fontsize(size)
require('./_string-html')('fontsize', function (createHTML) {
  return function fontsize(size) {
    return createHTML(this, 'font', 'size', size);
  };
});

},{"./_string-html":"node_modules/core-js/modules/_string-html.js"}],"node_modules/core-js/modules/es6.string.italics.js":[function(require,module,exports) {
'use strict';
// B.2.3.9 String.prototype.italics()
require('./_string-html')('italics', function (createHTML) {
  return function italics() {
    return createHTML(this, 'i', '', '');
  };
});

},{"./_string-html":"node_modules/core-js/modules/_string-html.js"}],"node_modules/core-js/modules/es6.string.link.js":[function(require,module,exports) {
'use strict';
// B.2.3.10 String.prototype.link(url)
require('./_string-html')('link', function (createHTML) {
  return function link(url) {
    return createHTML(this, 'a', 'href', url);
  };
});

},{"./_string-html":"node_modules/core-js/modules/_string-html.js"}],"node_modules/core-js/modules/es6.string.small.js":[function(require,module,exports) {
'use strict';
// B.2.3.11 String.prototype.small()
require('./_string-html')('small', function (createHTML) {
  return function small() {
    return createHTML(this, 'small', '', '');
  };
});

},{"./_string-html":"node_modules/core-js/modules/_string-html.js"}],"node_modules/core-js/modules/es6.string.strike.js":[function(require,module,exports) {
'use strict';
// B.2.3.12 String.prototype.strike()
require('./_string-html')('strike', function (createHTML) {
  return function strike() {
    return createHTML(this, 'strike', '', '');
  };
});

},{"./_string-html":"node_modules/core-js/modules/_string-html.js"}],"node_modules/core-js/modules/es6.string.sub.js":[function(require,module,exports) {
'use strict';
// B.2.3.13 String.prototype.sub()
require('./_string-html')('sub', function (createHTML) {
  return function sub() {
    return createHTML(this, 'sub', '', '');
  };
});

},{"./_string-html":"node_modules/core-js/modules/_string-html.js"}],"node_modules/core-js/modules/es6.string.sup.js":[function(require,module,exports) {
'use strict';
// B.2.3.14 String.prototype.sup()
require('./_string-html')('sup', function (createHTML) {
  return function sup() {
    return createHTML(this, 'sup', '', '');
  };
});

},{"./_string-html":"node_modules/core-js/modules/_string-html.js"}],"node_modules/core-js/modules/es6.date.now.js":[function(require,module,exports) {
// 20.3.3.1 / 15.9.4.4 Date.now()
var $export = require('./_export');

$export($export.S, 'Date', { now: function () { return new Date().getTime(); } });

},{"./_export":"node_modules/core-js/modules/_export.js"}],"node_modules/core-js/modules/es6.date.to-json.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var toObject = require('./_to-object');
var toPrimitive = require('./_to-primitive');

$export($export.P + $export.F * require('./_fails')(function () {
  return new Date(NaN).toJSON() !== null
    || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;
}), 'Date', {
  // eslint-disable-next-line no-unused-vars
  toJSON: function toJSON(key) {
    var O = toObject(this);
    var pv = toPrimitive(O);
    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_to-object":"node_modules/core-js/modules/_to-object.js","./_to-primitive":"node_modules/core-js/modules/_to-primitive.js","./_fails":"node_modules/core-js/modules/_fails.js"}],"node_modules/core-js/modules/_date-to-iso-string.js":[function(require,module,exports) {
'use strict';
// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
var fails = require('./_fails');
var getTime = Date.prototype.getTime;
var $toISOString = Date.prototype.toISOString;

var lz = function (num) {
  return num > 9 ? num : '0' + num;
};

// PhantomJS / old WebKit has a broken implementations
module.exports = (fails(function () {
  return $toISOString.call(new Date(-5e13 - 1)) != '0385-07-25T07:06:39.999Z';
}) || !fails(function () {
  $toISOString.call(new Date(NaN));
})) ? function toISOString() {
  if (!isFinite(getTime.call(this))) throw RangeError('Invalid time value');
  var d = this;
  var y = d.getUTCFullYear();
  var m = d.getUTCMilliseconds();
  var s = y < 0 ? '-' : y > 9999 ? '+' : '';
  return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +
    '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +
    'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +
    ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
} : $toISOString;

},{"./_fails":"node_modules/core-js/modules/_fails.js"}],"node_modules/core-js/modules/es6.date.to-iso-string.js":[function(require,module,exports) {
// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
var $export = require('./_export');
var toISOString = require('./_date-to-iso-string');

// PhantomJS / old WebKit has a broken implementations
$export($export.P + $export.F * (Date.prototype.toISOString !== toISOString), 'Date', {
  toISOString: toISOString
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_date-to-iso-string":"node_modules/core-js/modules/_date-to-iso-string.js"}],"node_modules/core-js/modules/es6.date.to-string.js":[function(require,module,exports) {
var DateProto = Date.prototype;
var INVALID_DATE = 'Invalid Date';
var TO_STRING = 'toString';
var $toString = DateProto[TO_STRING];
var getTime = DateProto.getTime;
if (new Date(NaN) + '' != INVALID_DATE) {
  require('./_redefine')(DateProto, TO_STRING, function toString() {
    var value = getTime.call(this);
    // eslint-disable-next-line no-self-compare
    return value === value ? $toString.call(this) : INVALID_DATE;
  });
}

},{"./_redefine":"node_modules/core-js/modules/_redefine.js"}],"node_modules/core-js/modules/_date-to-primitive.js":[function(require,module,exports) {
'use strict';
var anObject = require('./_an-object');
var toPrimitive = require('./_to-primitive');
var NUMBER = 'number';

module.exports = function (hint) {
  if (hint !== 'string' && hint !== NUMBER && hint !== 'default') throw TypeError('Incorrect hint');
  return toPrimitive(anObject(this), hint != NUMBER);
};

},{"./_an-object":"node_modules/core-js/modules/_an-object.js","./_to-primitive":"node_modules/core-js/modules/_to-primitive.js"}],"node_modules/core-js/modules/es6.date.to-primitive.js":[function(require,module,exports) {
var TO_PRIMITIVE = require('./_wks')('toPrimitive');
var proto = Date.prototype;

if (!(TO_PRIMITIVE in proto)) require('./_hide')(proto, TO_PRIMITIVE, require('./_date-to-primitive'));

},{"./_wks":"node_modules/core-js/modules/_wks.js","./_hide":"node_modules/core-js/modules/_hide.js","./_date-to-primitive":"node_modules/core-js/modules/_date-to-primitive.js"}],"node_modules/core-js/modules/es6.array.is-array.js":[function(require,module,exports) {
// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
var $export = require('./_export');

$export($export.S, 'Array', { isArray: require('./_is-array') });

},{"./_export":"node_modules/core-js/modules/_export.js","./_is-array":"node_modules/core-js/modules/_is-array.js"}],"node_modules/core-js/modules/_iter-call.js":[function(require,module,exports) {
// call something on iterator step with safe closing on error
var anObject = require('./_an-object');
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};

},{"./_an-object":"node_modules/core-js/modules/_an-object.js"}],"node_modules/core-js/modules/_is-array-iter.js":[function(require,module,exports) {
// check on default Array iterator
var Iterators = require('./_iterators');
var ITERATOR = require('./_wks')('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};

},{"./_iterators":"node_modules/core-js/modules/_iterators.js","./_wks":"node_modules/core-js/modules/_wks.js"}],"node_modules/core-js/modules/_create-property.js":[function(require,module,exports) {
'use strict';
var $defineProperty = require('./_object-dp');
var createDesc = require('./_property-desc');

module.exports = function (object, index, value) {
  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
  else object[index] = value;
};

},{"./_object-dp":"node_modules/core-js/modules/_object-dp.js","./_property-desc":"node_modules/core-js/modules/_property-desc.js"}],"node_modules/core-js/modules/core.get-iterator-method.js":[function(require,module,exports) {
var classof = require('./_classof');
var ITERATOR = require('./_wks')('iterator');
var Iterators = require('./_iterators');
module.exports = require('./_core').getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};

},{"./_classof":"node_modules/core-js/modules/_classof.js","./_wks":"node_modules/core-js/modules/_wks.js","./_iterators":"node_modules/core-js/modules/_iterators.js","./_core":"node_modules/core-js/modules/_core.js"}],"node_modules/core-js/modules/_iter-detect.js":[function(require,module,exports) {
var ITERATOR = require('./_wks')('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};

},{"./_wks":"node_modules/core-js/modules/_wks.js"}],"node_modules/core-js/modules/es6.array.from.js":[function(require,module,exports) {
'use strict';
var ctx = require('./_ctx');
var $export = require('./_export');
var toObject = require('./_to-object');
var call = require('./_iter-call');
var isArrayIter = require('./_is-array-iter');
var toLength = require('./_to-length');
var createProperty = require('./_create-property');
var getIterFn = require('./core.get-iterator-method');

$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
    var O = toObject(arrayLike);
    var C = typeof this == 'function' ? this : Array;
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var index = 0;
    var iterFn = getIterFn(O);
    var length, result, step, iterator;
    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = toLength(O.length);
      for (result = new C(length); length > index; index++) {
        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }
    result.length = index;
    return result;
  }
});

},{"./_ctx":"node_modules/core-js/modules/_ctx.js","./_export":"node_modules/core-js/modules/_export.js","./_to-object":"node_modules/core-js/modules/_to-object.js","./_iter-call":"node_modules/core-js/modules/_iter-call.js","./_is-array-iter":"node_modules/core-js/modules/_is-array-iter.js","./_to-length":"node_modules/core-js/modules/_to-length.js","./_create-property":"node_modules/core-js/modules/_create-property.js","./core.get-iterator-method":"node_modules/core-js/modules/core.get-iterator-method.js","./_iter-detect":"node_modules/core-js/modules/_iter-detect.js"}],"node_modules/core-js/modules/es6.array.of.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var createProperty = require('./_create-property');

// WebKit Array.of isn't generic
$export($export.S + $export.F * require('./_fails')(function () {
  function F() { /* empty */ }
  return !(Array.of.call(F) instanceof F);
}), 'Array', {
  // 22.1.2.3 Array.of( ...items)
  of: function of(/* ...args */) {
    var index = 0;
    var aLen = arguments.length;
    var result = new (typeof this == 'function' ? this : Array)(aLen);
    while (aLen > index) createProperty(result, index, arguments[index++]);
    result.length = aLen;
    return result;
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_create-property":"node_modules/core-js/modules/_create-property.js","./_fails":"node_modules/core-js/modules/_fails.js"}],"node_modules/core-js/modules/_strict-method.js":[function(require,module,exports) {
'use strict';
var fails = require('./_fails');

module.exports = function (method, arg) {
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call
    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);
  });
};

},{"./_fails":"node_modules/core-js/modules/_fails.js"}],"node_modules/core-js/modules/es6.array.join.js":[function(require,module,exports) {
'use strict';
// 22.1.3.13 Array.prototype.join(separator)
var $export = require('./_export');
var toIObject = require('./_to-iobject');
var arrayJoin = [].join;

// fallback for not array-like strings
$export($export.P + $export.F * (require('./_iobject') != Object || !require('./_strict-method')(arrayJoin)), 'Array', {
  join: function join(separator) {
    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_to-iobject":"node_modules/core-js/modules/_to-iobject.js","./_iobject":"node_modules/core-js/modules/_iobject.js","./_strict-method":"node_modules/core-js/modules/_strict-method.js"}],"node_modules/core-js/modules/es6.array.slice.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var html = require('./_html');
var cof = require('./_cof');
var toAbsoluteIndex = require('./_to-absolute-index');
var toLength = require('./_to-length');
var arraySlice = [].slice;

// fallback for not array-like ES3 strings and DOM objects
$export($export.P + $export.F * require('./_fails')(function () {
  if (html) arraySlice.call(html);
}), 'Array', {
  slice: function slice(begin, end) {
    var len = toLength(this.length);
    var klass = cof(this);
    end = end === undefined ? len : end;
    if (klass == 'Array') return arraySlice.call(this, begin, end);
    var start = toAbsoluteIndex(begin, len);
    var upTo = toAbsoluteIndex(end, len);
    var size = toLength(upTo - start);
    var cloned = new Array(size);
    var i = 0;
    for (; i < size; i++) cloned[i] = klass == 'String'
      ? this.charAt(start + i)
      : this[start + i];
    return cloned;
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_html":"node_modules/core-js/modules/_html.js","./_cof":"node_modules/core-js/modules/_cof.js","./_to-absolute-index":"node_modules/core-js/modules/_to-absolute-index.js","./_to-length":"node_modules/core-js/modules/_to-length.js","./_fails":"node_modules/core-js/modules/_fails.js"}],"node_modules/core-js/modules/es6.array.sort.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var aFunction = require('./_a-function');
var toObject = require('./_to-object');
var fails = require('./_fails');
var $sort = [].sort;
var test = [1, 2, 3];

$export($export.P + $export.F * (fails(function () {
  // IE8-
  test.sort(undefined);
}) || !fails(function () {
  // V8 bug
  test.sort(null);
  // Old WebKit
}) || !require('./_strict-method')($sort)), 'Array', {
  // 22.1.3.25 Array.prototype.sort(comparefn)
  sort: function sort(comparefn) {
    return comparefn === undefined
      ? $sort.call(toObject(this))
      : $sort.call(toObject(this), aFunction(comparefn));
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_a-function":"node_modules/core-js/modules/_a-function.js","./_to-object":"node_modules/core-js/modules/_to-object.js","./_fails":"node_modules/core-js/modules/_fails.js","./_strict-method":"node_modules/core-js/modules/_strict-method.js"}],"node_modules/core-js/modules/_array-species-constructor.js":[function(require,module,exports) {
var isObject = require('./_is-object');
var isArray = require('./_is-array');
var SPECIES = require('./_wks')('species');

module.exports = function (original) {
  var C;
  if (isArray(original)) {
    C = original.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? Array : C;
};

},{"./_is-object":"node_modules/core-js/modules/_is-object.js","./_is-array":"node_modules/core-js/modules/_is-array.js","./_wks":"node_modules/core-js/modules/_wks.js"}],"node_modules/core-js/modules/_array-species-create.js":[function(require,module,exports) {
// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
var speciesConstructor = require('./_array-species-constructor');

module.exports = function (original, length) {
  return new (speciesConstructor(original))(length);
};

},{"./_array-species-constructor":"node_modules/core-js/modules/_array-species-constructor.js"}],"node_modules/core-js/modules/_array-methods.js":[function(require,module,exports) {
// 0 -> Array#forEach
// 1 -> Array#map
// 2 -> Array#filter
// 3 -> Array#some
// 4 -> Array#every
// 5 -> Array#find
// 6 -> Array#findIndex
var ctx = require('./_ctx');
var IObject = require('./_iobject');
var toObject = require('./_to-object');
var toLength = require('./_to-length');
var asc = require('./_array-species-create');
module.exports = function (TYPE, $create) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  var create = $create || asc;
  return function ($this, callbackfn, that) {
    var O = toObject($this);
    var self = IObject(O);
    var f = ctx(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var val, res;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      val = self[index];
      res = f(val, index, O);
      if (TYPE) {
        if (IS_MAP) result[index] = res;   // map
        else if (res) switch (TYPE) {
          case 3: return true;             // some
          case 5: return val;              // find
          case 6: return index;            // findIndex
          case 2: result.push(val);        // filter
        } else if (IS_EVERY) return false; // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
  };
};

},{"./_ctx":"node_modules/core-js/modules/_ctx.js","./_iobject":"node_modules/core-js/modules/_iobject.js","./_to-object":"node_modules/core-js/modules/_to-object.js","./_to-length":"node_modules/core-js/modules/_to-length.js","./_array-species-create":"node_modules/core-js/modules/_array-species-create.js"}],"node_modules/core-js/modules/es6.array.for-each.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var $forEach = require('./_array-methods')(0);
var STRICT = require('./_strict-method')([].forEach, true);

$export($export.P + $export.F * !STRICT, 'Array', {
  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
  forEach: function forEach(callbackfn /* , thisArg */) {
    return $forEach(this, callbackfn, arguments[1]);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_array-methods":"node_modules/core-js/modules/_array-methods.js","./_strict-method":"node_modules/core-js/modules/_strict-method.js"}],"node_modules/core-js/modules/es6.array.map.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var $map = require('./_array-methods')(1);

$export($export.P + $export.F * !require('./_strict-method')([].map, true), 'Array', {
  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
  map: function map(callbackfn /* , thisArg */) {
    return $map(this, callbackfn, arguments[1]);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_array-methods":"node_modules/core-js/modules/_array-methods.js","./_strict-method":"node_modules/core-js/modules/_strict-method.js"}],"node_modules/core-js/modules/es6.array.filter.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var $filter = require('./_array-methods')(2);

$export($export.P + $export.F * !require('./_strict-method')([].filter, true), 'Array', {
  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
  filter: function filter(callbackfn /* , thisArg */) {
    return $filter(this, callbackfn, arguments[1]);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_array-methods":"node_modules/core-js/modules/_array-methods.js","./_strict-method":"node_modules/core-js/modules/_strict-method.js"}],"node_modules/core-js/modules/es6.array.some.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var $some = require('./_array-methods')(3);

$export($export.P + $export.F * !require('./_strict-method')([].some, true), 'Array', {
  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
  some: function some(callbackfn /* , thisArg */) {
    return $some(this, callbackfn, arguments[1]);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_array-methods":"node_modules/core-js/modules/_array-methods.js","./_strict-method":"node_modules/core-js/modules/_strict-method.js"}],"node_modules/core-js/modules/es6.array.every.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var $every = require('./_array-methods')(4);

$export($export.P + $export.F * !require('./_strict-method')([].every, true), 'Array', {
  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
  every: function every(callbackfn /* , thisArg */) {
    return $every(this, callbackfn, arguments[1]);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_array-methods":"node_modules/core-js/modules/_array-methods.js","./_strict-method":"node_modules/core-js/modules/_strict-method.js"}],"node_modules/core-js/modules/_array-reduce.js":[function(require,module,exports) {
var aFunction = require('./_a-function');
var toObject = require('./_to-object');
var IObject = require('./_iobject');
var toLength = require('./_to-length');

module.exports = function (that, callbackfn, aLen, memo, isRight) {
  aFunction(callbackfn);
  var O = toObject(that);
  var self = IObject(O);
  var length = toLength(O.length);
  var index = isRight ? length - 1 : 0;
  var i = isRight ? -1 : 1;
  if (aLen < 2) for (;;) {
    if (index in self) {
      memo = self[index];
      index += i;
      break;
    }
    index += i;
    if (isRight ? index < 0 : length <= index) {
      throw TypeError('Reduce of empty array with no initial value');
    }
  }
  for (;isRight ? index >= 0 : length > index; index += i) if (index in self) {
    memo = callbackfn(memo, self[index], index, O);
  }
  return memo;
};

},{"./_a-function":"node_modules/core-js/modules/_a-function.js","./_to-object":"node_modules/core-js/modules/_to-object.js","./_iobject":"node_modules/core-js/modules/_iobject.js","./_to-length":"node_modules/core-js/modules/_to-length.js"}],"node_modules/core-js/modules/es6.array.reduce.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var $reduce = require('./_array-reduce');

$export($export.P + $export.F * !require('./_strict-method')([].reduce, true), 'Array', {
  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
  reduce: function reduce(callbackfn /* , initialValue */) {
    return $reduce(this, callbackfn, arguments.length, arguments[1], false);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_array-reduce":"node_modules/core-js/modules/_array-reduce.js","./_strict-method":"node_modules/core-js/modules/_strict-method.js"}],"node_modules/core-js/modules/es6.array.reduce-right.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var $reduce = require('./_array-reduce');

$export($export.P + $export.F * !require('./_strict-method')([].reduceRight, true), 'Array', {
  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
  reduceRight: function reduceRight(callbackfn /* , initialValue */) {
    return $reduce(this, callbackfn, arguments.length, arguments[1], true);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_array-reduce":"node_modules/core-js/modules/_array-reduce.js","./_strict-method":"node_modules/core-js/modules/_strict-method.js"}],"node_modules/core-js/modules/es6.array.index-of.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var $indexOf = require('./_array-includes')(false);
var $native = [].indexOf;
var NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;

$export($export.P + $export.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {
  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
    return NEGATIVE_ZERO
      // convert -0 to +0
      ? $native.apply(this, arguments) || 0
      : $indexOf(this, searchElement, arguments[1]);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_array-includes":"node_modules/core-js/modules/_array-includes.js","./_strict-method":"node_modules/core-js/modules/_strict-method.js"}],"node_modules/core-js/modules/es6.array.last-index-of.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var toIObject = require('./_to-iobject');
var toInteger = require('./_to-integer');
var toLength = require('./_to-length');
var $native = [].lastIndexOf;
var NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;

$export($export.P + $export.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {
  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
  lastIndexOf: function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {
    // convert -0 to +0
    if (NEGATIVE_ZERO) return $native.apply(this, arguments) || 0;
    var O = toIObject(this);
    var length = toLength(O.length);
    var index = length - 1;
    if (arguments.length > 1) index = Math.min(index, toInteger(arguments[1]));
    if (index < 0) index = length + index;
    for (;index >= 0; index--) if (index in O) if (O[index] === searchElement) return index || 0;
    return -1;
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_to-iobject":"node_modules/core-js/modules/_to-iobject.js","./_to-integer":"node_modules/core-js/modules/_to-integer.js","./_to-length":"node_modules/core-js/modules/_to-length.js","./_strict-method":"node_modules/core-js/modules/_strict-method.js"}],"node_modules/core-js/modules/_array-copy-within.js":[function(require,module,exports) {
// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
'use strict';
var toObject = require('./_to-object');
var toAbsoluteIndex = require('./_to-absolute-index');
var toLength = require('./_to-length');

module.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {
  var O = toObject(this);
  var len = toLength(O.length);
  var to = toAbsoluteIndex(target, len);
  var from = toAbsoluteIndex(start, len);
  var end = arguments.length > 2 ? arguments[2] : undefined;
  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);
  var inc = 1;
  if (from < to && to < from + count) {
    inc = -1;
    from += count - 1;
    to += count - 1;
  }
  while (count-- > 0) {
    if (from in O) O[to] = O[from];
    else delete O[to];
    to += inc;
    from += inc;
  } return O;
};

},{"./_to-object":"node_modules/core-js/modules/_to-object.js","./_to-absolute-index":"node_modules/core-js/modules/_to-absolute-index.js","./_to-length":"node_modules/core-js/modules/_to-length.js"}],"node_modules/core-js/modules/_add-to-unscopables.js":[function(require,module,exports) {
// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = require('./_wks')('unscopables');
var ArrayProto = Array.prototype;
if (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});
module.exports = function (key) {
  ArrayProto[UNSCOPABLES][key] = true;
};

},{"./_wks":"node_modules/core-js/modules/_wks.js","./_hide":"node_modules/core-js/modules/_hide.js"}],"node_modules/core-js/modules/es6.array.copy-within.js":[function(require,module,exports) {
// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
var $export = require('./_export');

$export($export.P, 'Array', { copyWithin: require('./_array-copy-within') });

require('./_add-to-unscopables')('copyWithin');

},{"./_export":"node_modules/core-js/modules/_export.js","./_array-copy-within":"node_modules/core-js/modules/_array-copy-within.js","./_add-to-unscopables":"node_modules/core-js/modules/_add-to-unscopables.js"}],"node_modules/core-js/modules/_array-fill.js":[function(require,module,exports) {
// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
'use strict';
var toObject = require('./_to-object');
var toAbsoluteIndex = require('./_to-absolute-index');
var toLength = require('./_to-length');
module.exports = function fill(value /* , start = 0, end = @length */) {
  var O = toObject(this);
  var length = toLength(O.length);
  var aLen = arguments.length;
  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);
  var end = aLen > 2 ? arguments[2] : undefined;
  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
  while (endPos > index) O[index++] = value;
  return O;
};

},{"./_to-object":"node_modules/core-js/modules/_to-object.js","./_to-absolute-index":"node_modules/core-js/modules/_to-absolute-index.js","./_to-length":"node_modules/core-js/modules/_to-length.js"}],"node_modules/core-js/modules/es6.array.fill.js":[function(require,module,exports) {
// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
var $export = require('./_export');

$export($export.P, 'Array', { fill: require('./_array-fill') });

require('./_add-to-unscopables')('fill');

},{"./_export":"node_modules/core-js/modules/_export.js","./_array-fill":"node_modules/core-js/modules/_array-fill.js","./_add-to-unscopables":"node_modules/core-js/modules/_add-to-unscopables.js"}],"node_modules/core-js/modules/es6.array.find.js":[function(require,module,exports) {
'use strict';
// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
var $export = require('./_export');
var $find = require('./_array-methods')(5);
var KEY = 'find';
var forced = true;
// Shouldn't skip holes
if (KEY in []) Array(1)[KEY](function () { forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  find: function find(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
require('./_add-to-unscopables')(KEY);

},{"./_export":"node_modules/core-js/modules/_export.js","./_array-methods":"node_modules/core-js/modules/_array-methods.js","./_add-to-unscopables":"node_modules/core-js/modules/_add-to-unscopables.js"}],"node_modules/core-js/modules/es6.array.find-index.js":[function(require,module,exports) {
'use strict';
// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
var $export = require('./_export');
var $find = require('./_array-methods')(6);
var KEY = 'findIndex';
var forced = true;
// Shouldn't skip holes
if (KEY in []) Array(1)[KEY](function () { forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  findIndex: function findIndex(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
require('./_add-to-unscopables')(KEY);

},{"./_export":"node_modules/core-js/modules/_export.js","./_array-methods":"node_modules/core-js/modules/_array-methods.js","./_add-to-unscopables":"node_modules/core-js/modules/_add-to-unscopables.js"}],"node_modules/core-js/modules/_set-species.js":[function(require,module,exports) {

'use strict';
var global = require('./_global');
var dP = require('./_object-dp');
var DESCRIPTORS = require('./_descriptors');
var SPECIES = require('./_wks')('species');

module.exports = function (KEY) {
  var C = global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};

},{"./_global":"node_modules/core-js/modules/_global.js","./_object-dp":"node_modules/core-js/modules/_object-dp.js","./_descriptors":"node_modules/core-js/modules/_descriptors.js","./_wks":"node_modules/core-js/modules/_wks.js"}],"node_modules/core-js/modules/es6.array.species.js":[function(require,module,exports) {
require('./_set-species')('Array');

},{"./_set-species":"node_modules/core-js/modules/_set-species.js"}],"node_modules/core-js/modules/_iter-step.js":[function(require,module,exports) {
module.exports = function (done, value) {
  return { value: value, done: !!done };
};

},{}],"node_modules/core-js/modules/es6.array.iterator.js":[function(require,module,exports) {
'use strict';
var addToUnscopables = require('./_add-to-unscopables');
var step = require('./_iter-step');
var Iterators = require('./_iterators');
var toIObject = require('./_to-iobject');

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

},{"./_add-to-unscopables":"node_modules/core-js/modules/_add-to-unscopables.js","./_iter-step":"node_modules/core-js/modules/_iter-step.js","./_iterators":"node_modules/core-js/modules/_iterators.js","./_to-iobject":"node_modules/core-js/modules/_to-iobject.js","./_iter-define":"node_modules/core-js/modules/_iter-define.js"}],"node_modules/core-js/modules/_flags.js":[function(require,module,exports) {
'use strict';
// 21.2.5.3 get RegExp.prototype.flags
var anObject = require('./_an-object');
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};

},{"./_an-object":"node_modules/core-js/modules/_an-object.js"}],"node_modules/core-js/modules/es6.regexp.constructor.js":[function(require,module,exports) {

var global = require('./_global');
var inheritIfRequired = require('./_inherit-if-required');
var dP = require('./_object-dp').f;
var gOPN = require('./_object-gopn').f;
var isRegExp = require('./_is-regexp');
var $flags = require('./_flags');
var $RegExp = global.RegExp;
var Base = $RegExp;
var proto = $RegExp.prototype;
var re1 = /a/g;
var re2 = /a/g;
// "new" creates a new object, old webkit buggy here
var CORRECT_NEW = new $RegExp(re1) !== re1;

if (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {
  re2[require('./_wks')('match')] = false;
  // RegExp constructor can alter flags and IsRegExp works correct with @@match
  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
}))) {
  $RegExp = function RegExp(p, f) {
    var tiRE = this instanceof $RegExp;
    var piRE = isRegExp(p);
    var fiU = f === undefined;
    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
      : inheritIfRequired(CORRECT_NEW
        ? new Base(piRE && !fiU ? p.source : p, f)
        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)
      , tiRE ? this : proto, $RegExp);
  };
  var proxy = function (key) {
    key in $RegExp || dP($RegExp, key, {
      configurable: true,
      get: function () { return Base[key]; },
      set: function (it) { Base[key] = it; }
    });
  };
  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);
  proto.constructor = $RegExp;
  $RegExp.prototype = proto;
  require('./_redefine')(global, 'RegExp', $RegExp);
}

require('./_set-species')('RegExp');

},{"./_global":"node_modules/core-js/modules/_global.js","./_inherit-if-required":"node_modules/core-js/modules/_inherit-if-required.js","./_object-dp":"node_modules/core-js/modules/_object-dp.js","./_object-gopn":"node_modules/core-js/modules/_object-gopn.js","./_is-regexp":"node_modules/core-js/modules/_is-regexp.js","./_flags":"node_modules/core-js/modules/_flags.js","./_descriptors":"node_modules/core-js/modules/_descriptors.js","./_fails":"node_modules/core-js/modules/_fails.js","./_wks":"node_modules/core-js/modules/_wks.js","./_redefine":"node_modules/core-js/modules/_redefine.js","./_set-species":"node_modules/core-js/modules/_set-species.js"}],"node_modules/core-js/modules/_regexp-exec.js":[function(require,module,exports) {
'use strict';

var regexpFlags = require('./_flags');

var nativeExec = RegExp.prototype.exec;
// This always refers to the native implementation, because the
// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
// which loads this file before patching the method.
var nativeReplace = String.prototype.replace;

var patchedExec = nativeExec;

var LAST_INDEX = 'lastIndex';

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/,
      re2 = /b*/g;
  nativeExec.call(re1, 'a');
  nativeExec.call(re2, 'a');
  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;
})();

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;

if (PATCH) {
  patchedExec = function exec(str) {
    var re = this;
    var lastIndex, reCopy, match, i;

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + re.source + '$(?!\\s)', regexpFlags.call(re));
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];

    match = nativeExec.call(re, str);

    if (UPDATES_LAST_INDEX_WRONG && match) {
      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
      // eslint-disable-next-line no-loop-func
      nativeReplace.call(match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    return match;
  };
}

module.exports = patchedExec;

},{"./_flags":"node_modules/core-js/modules/_flags.js"}],"node_modules/core-js/modules/es6.regexp.exec.js":[function(require,module,exports) {
'use strict';
var regexpExec = require('./_regexp-exec');
require('./_export')({
  target: 'RegExp',
  proto: true,
  forced: regexpExec !== /./.exec
}, {
  exec: regexpExec
});

},{"./_regexp-exec":"node_modules/core-js/modules/_regexp-exec.js","./_export":"node_modules/core-js/modules/_export.js"}],"node_modules/core-js/modules/es6.regexp.flags.js":[function(require,module,exports) {
// 21.2.5.3 get RegExp.prototype.flags()
if (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {
  configurable: true,
  get: require('./_flags')
});

},{"./_descriptors":"node_modules/core-js/modules/_descriptors.js","./_object-dp":"node_modules/core-js/modules/_object-dp.js","./_flags":"node_modules/core-js/modules/_flags.js"}],"node_modules/core-js/modules/es6.regexp.to-string.js":[function(require,module,exports) {

'use strict';
require('./es6.regexp.flags');
var anObject = require('./_an-object');
var $flags = require('./_flags');
var DESCRIPTORS = require('./_descriptors');
var TO_STRING = 'toString';
var $toString = /./[TO_STRING];

var define = function (fn) {
  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);
};

// 21.2.5.14 RegExp.prototype.toString()
if (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {
  define(function toString() {
    var R = anObject(this);
    return '/'.concat(R.source, '/',
      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
  });
// FF44- RegExp#toString has a wrong name
} else if ($toString.name != TO_STRING) {
  define(function toString() {
    return $toString.call(this);
  });
}

},{"./es6.regexp.flags":"node_modules/core-js/modules/es6.regexp.flags.js","./_an-object":"node_modules/core-js/modules/_an-object.js","./_flags":"node_modules/core-js/modules/_flags.js","./_descriptors":"node_modules/core-js/modules/_descriptors.js","./_redefine":"node_modules/core-js/modules/_redefine.js","./_fails":"node_modules/core-js/modules/_fails.js"}],"node_modules/core-js/modules/_advance-string-index.js":[function(require,module,exports) {
'use strict';
var at = require('./_string-at')(true);

 // `AdvanceStringIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-advancestringindex
module.exports = function (S, index, unicode) {
  return index + (unicode ? at(S, index).length : 1);
};

},{"./_string-at":"node_modules/core-js/modules/_string-at.js"}],"node_modules/core-js/modules/_regexp-exec-abstract.js":[function(require,module,exports) {
'use strict';

var classof = require('./_classof');
var builtinExec = RegExp.prototype.exec;

 // `RegExpExec` abstract operation
// https://tc39.github.io/ecma262/#sec-regexpexec
module.exports = function (R, S) {
  var exec = R.exec;
  if (typeof exec === 'function') {
    var result = exec.call(R, S);
    if (typeof result !== 'object') {
      throw new TypeError('RegExp exec method returned something other than an Object or null');
    }
    return result;
  }
  if (classof(R) !== 'RegExp') {
    throw new TypeError('RegExp#exec called on incompatible receiver');
  }
  return builtinExec.call(R, S);
};

},{"./_classof":"node_modules/core-js/modules/_classof.js"}],"node_modules/core-js/modules/_fix-re-wks.js":[function(require,module,exports) {
'use strict';
require('./es6.regexp.exec');
var redefine = require('./_redefine');
var hide = require('./_hide');
var fails = require('./_fails');
var defined = require('./_defined');
var wks = require('./_wks');
var regexpExec = require('./_regexp-exec');

var SPECIES = wks('species');

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  // #replace needs built-in support for named groups.
  // #match works fine because it just return the exec results, even if it has
  // a "grops" property.
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  return ''.replace(re, '$<a>') !== '7';
});

var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function () {
  // Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
  var re = /(?:)/;
  var originalExec = re.exec;
  re.exec = function () { return originalExec.apply(this, arguments); };
  var result = 'ab'.split(re);
  return result.length === 2 && result[0] === 'a' && result[1] === 'b';
})();

module.exports = function (KEY, length, exec) {
  var SYMBOL = wks(KEY);

  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;
    re.exec = function () { execCalled = true; return null; };
    if (KEY === 'split') {
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES] = function () { return re; };
    }
    re[SYMBOL]('');
    return !execCalled;
  }) : undefined;

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||
    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
  ) {
    var nativeRegExpMethod = /./[SYMBOL];
    var fns = exec(
      defined,
      SYMBOL,
      ''[KEY],
      function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {
        if (regexp.exec === regexpExec) {
          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
            // The native String method already delegates to @@method (this
            // polyfilled function), leasing to infinite recursion.
            // We avoid it by directly calling the native @@method method.
            return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
          }
          return { done: true, value: nativeMethod.call(str, regexp, arg2) };
        }
        return { done: false };
      }
    );
    var strfn = fns[0];
    var rxfn = fns[1];

    redefine(String.prototype, KEY, strfn);
    hide(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function (string, arg) { return rxfn.call(string, this, arg); }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function (string) { return rxfn.call(string, this); }
    );
  }
};

},{"./es6.regexp.exec":"node_modules/core-js/modules/es6.regexp.exec.js","./_redefine":"node_modules/core-js/modules/_redefine.js","./_hide":"node_modules/core-js/modules/_hide.js","./_fails":"node_modules/core-js/modules/_fails.js","./_defined":"node_modules/core-js/modules/_defined.js","./_wks":"node_modules/core-js/modules/_wks.js","./_regexp-exec":"node_modules/core-js/modules/_regexp-exec.js"}],"node_modules/core-js/modules/es6.regexp.match.js":[function(require,module,exports) {
'use strict';

var anObject = require('./_an-object');
var toLength = require('./_to-length');
var advanceStringIndex = require('./_advance-string-index');
var regExpExec = require('./_regexp-exec-abstract');

// @@match logic
require('./_fix-re-wks')('match', 1, function (defined, MATCH, $match, maybeCallNative) {
  return [
    // `String.prototype.match` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.match
    function match(regexp) {
      var O = defined(this);
      var fn = regexp == undefined ? undefined : regexp[MATCH];
      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
    },
    // `RegExp.prototype[@@match]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match
    function (regexp) {
      var res = maybeCallNative($match, regexp, this);
      if (res.done) return res.value;
      var rx = anObject(regexp);
      var S = String(this);
      if (!rx.global) return regExpExec(rx, S);
      var fullUnicode = rx.unicode;
      rx.lastIndex = 0;
      var A = [];
      var n = 0;
      var result;
      while ((result = regExpExec(rx, S)) !== null) {
        var matchStr = String(result[0]);
        A[n] = matchStr;
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
        n++;
      }
      return n === 0 ? null : A;
    }
  ];
});

},{"./_an-object":"node_modules/core-js/modules/_an-object.js","./_to-length":"node_modules/core-js/modules/_to-length.js","./_advance-string-index":"node_modules/core-js/modules/_advance-string-index.js","./_regexp-exec-abstract":"node_modules/core-js/modules/_regexp-exec-abstract.js","./_fix-re-wks":"node_modules/core-js/modules/_fix-re-wks.js"}],"node_modules/core-js/modules/es6.regexp.replace.js":[function(require,module,exports) {
var global = arguments[3];
'use strict';

var anObject = require('./_an-object');
var toObject = require('./_to-object');
var toLength = require('./_to-length');
var toInteger = require('./_to-integer');
var advanceStringIndex = require('./_advance-string-index');
var regExpExec = require('./_regexp-exec-abstract');
var max = Math.max;
var min = Math.min;
var floor = Math.floor;
var SUBSTITUTION_SYMBOLS = /\$([$&`']|\d\d?|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&`']|\d\d?)/g;

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// @@replace logic
require('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {
  return [
    // `String.prototype.replace` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = defined(this);
      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];
      return fn !== undefined
        ? fn.call(searchValue, O, replaceValue)
        : $replace.call(String(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
    function (regexp, replaceValue) {
      var res = maybeCallNative($replace, regexp, this, replaceValue);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var functionalReplace = typeof replaceValue === 'function';
      if (!functionalReplace) replaceValue = String(replaceValue);
      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regExpExec(rx, S);
        if (result === null) break;
        results.push(result);
        if (!global) break;
        var matchStr = String(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
      }
      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];
        var matched = String(result[0]);
        var position = max(min(toInteger(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = [matched].concat(captures, position, S);
          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);
          var replacement = String(replaceValue.apply(undefined, replacerArgs));
        } else {
          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + S.slice(nextSourcePosition);
    }
  ];

    // https://tc39.github.io/ecma262/#sec-getsubstitution
  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {
    var tailPos = position + matched.length;
    var m = captures.length;
    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
    if (namedCaptures !== undefined) {
      namedCaptures = toObject(namedCaptures);
      symbols = SUBSTITUTION_SYMBOLS;
    }
    return $replace.call(replacement, symbols, function (match, ch) {
      var capture;
      switch (ch.charAt(0)) {
        case '$': return '$';
        case '&': return matched;
        case '`': return str.slice(0, position);
        case "'": return str.slice(tailPos);
        case '<':
          capture = namedCaptures[ch.slice(1, -1)];
          break;
        default: // \d\d?
          var n = +ch;
          if (n === 0) return match;
          if (n > m) {
            var f = floor(n / 10);
            if (f === 0) return match;
            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
            return match;
          }
          capture = captures[n - 1];
      }
      return capture === undefined ? '' : capture;
    });
  }
});

},{"./_an-object":"node_modules/core-js/modules/_an-object.js","./_to-object":"node_modules/core-js/modules/_to-object.js","./_to-length":"node_modules/core-js/modules/_to-length.js","./_to-integer":"node_modules/core-js/modules/_to-integer.js","./_advance-string-index":"node_modules/core-js/modules/_advance-string-index.js","./_regexp-exec-abstract":"node_modules/core-js/modules/_regexp-exec-abstract.js","./_fix-re-wks":"node_modules/core-js/modules/_fix-re-wks.js"}],"node_modules/core-js/modules/es6.regexp.search.js":[function(require,module,exports) {
'use strict';

var anObject = require('./_an-object');
var sameValue = require('./_same-value');
var regExpExec = require('./_regexp-exec-abstract');

// @@search logic
require('./_fix-re-wks')('search', 1, function (defined, SEARCH, $search, maybeCallNative) {
  return [
    // `String.prototype.search` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.search
    function search(regexp) {
      var O = defined(this);
      var fn = regexp == undefined ? undefined : regexp[SEARCH];
      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
    },
    // `RegExp.prototype[@@search]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search
    function (regexp) {
      var res = maybeCallNative($search, regexp, this);
      if (res.done) return res.value;
      var rx = anObject(regexp);
      var S = String(this);
      var previousLastIndex = rx.lastIndex;
      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;
      var result = regExpExec(rx, S);
      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;
      return result === null ? -1 : result.index;
    }
  ];
});

},{"./_an-object":"node_modules/core-js/modules/_an-object.js","./_same-value":"node_modules/core-js/modules/_same-value.js","./_regexp-exec-abstract":"node_modules/core-js/modules/_regexp-exec-abstract.js","./_fix-re-wks":"node_modules/core-js/modules/_fix-re-wks.js"}],"node_modules/core-js/modules/_species-constructor.js":[function(require,module,exports) {
// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = require('./_an-object');
var aFunction = require('./_a-function');
var SPECIES = require('./_wks')('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};

},{"./_an-object":"node_modules/core-js/modules/_an-object.js","./_a-function":"node_modules/core-js/modules/_a-function.js","./_wks":"node_modules/core-js/modules/_wks.js"}],"node_modules/core-js/modules/es6.regexp.split.js":[function(require,module,exports) {
'use strict';

var isRegExp = require('./_is-regexp');
var anObject = require('./_an-object');
var speciesConstructor = require('./_species-constructor');
var advanceStringIndex = require('./_advance-string-index');
var toLength = require('./_to-length');
var callRegExpExec = require('./_regexp-exec-abstract');
var regexpExec = require('./_regexp-exec');
var fails = require('./_fails');
var $min = Math.min;
var $push = [].push;
var $SPLIT = 'split';
var LENGTH = 'length';
var LAST_INDEX = 'lastIndex';
var MAX_UINT32 = 0xffffffff;

// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError
var SUPPORTS_Y = !fails(function () { RegExp(MAX_UINT32, 'y'); });

// @@split logic
require('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split, maybeCallNative) {
  var internalSplit;
  if (
    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
    ''[$SPLIT](/.?/)[LENGTH]
  ) {
    // based on es5-shim implementation, need to rework it
    internalSplit = function (separator, limit) {
      var string = String(this);
      if (separator === undefined && limit === 0) return [];
      // If `separator` is not a regex, use native split
      if (!isRegExp(separator)) return $split.call(string, separator, limit);
      var output = [];
      var flags = (separator.ignoreCase ? 'i' : '') +
                  (separator.multiline ? 'm' : '') +
                  (separator.unicode ? 'u' : '') +
                  (separator.sticky ? 'y' : '');
      var lastLastIndex = 0;
      var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0;
      // Make `global` and avoid `lastIndex` issues by working with a copy
      var separatorCopy = new RegExp(separator.source, flags + 'g');
      var match, lastIndex, lastLength;
      while (match = regexpExec.call(separatorCopy, string)) {
        lastIndex = separatorCopy[LAST_INDEX];
        if (lastIndex > lastLastIndex) {
          output.push(string.slice(lastLastIndex, match.index));
          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));
          lastLength = match[0][LENGTH];
          lastLastIndex = lastIndex;
          if (output[LENGTH] >= splitLimit) break;
        }
        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
      }
      if (lastLastIndex === string[LENGTH]) {
        if (lastLength || !separatorCopy.test('')) output.push('');
      } else output.push(string.slice(lastLastIndex));
      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
    };
  // Chakra, V8
  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
    internalSplit = function (separator, limit) {
      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);
    };
  } else {
    internalSplit = $split;
  }

  return [
    // `String.prototype.split` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.split
    function split(separator, limit) {
      var O = defined(this);
      var splitter = separator == undefined ? undefined : separator[SPLIT];
      return splitter !== undefined
        ? splitter.call(separator, O, limit)
        : internalSplit.call(String(O), separator, limit);
    },
    // `RegExp.prototype[@@split]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split
    //
    // NOTE: This cannot be properly polyfilled in engines that don't support
    // the 'y' flag.
    function (regexp, limit) {
      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var C = speciesConstructor(rx, RegExp);

      var unicodeMatching = rx.unicode;
      var flags = (rx.ignoreCase ? 'i' : '') +
                  (rx.multiline ? 'm' : '') +
                  (rx.unicode ? 'u' : '') +
                  (SUPPORTS_Y ? 'y' : 'g');

      // ^(? + rx + ) is needed, in combination with some S slicing, to
      // simulate the 'y' flag.
      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];
      var p = 0;
      var q = 0;
      var A = [];
      while (q < S.length) {
        splitter.lastIndex = SUPPORTS_Y ? q : 0;
        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));
        var e;
        if (
          z === null ||
          (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p
        ) {
          q = advanceStringIndex(S, q, unicodeMatching);
        } else {
          A.push(S.slice(p, q));
          if (A.length === lim) return A;
          for (var i = 1; i <= z.length - 1; i++) {
            A.push(z[i]);
            if (A.length === lim) return A;
          }
          q = p = e;
        }
      }
      A.push(S.slice(p));
      return A;
    }
  ];
});

},{"./_is-regexp":"node_modules/core-js/modules/_is-regexp.js","./_an-object":"node_modules/core-js/modules/_an-object.js","./_species-constructor":"node_modules/core-js/modules/_species-constructor.js","./_advance-string-index":"node_modules/core-js/modules/_advance-string-index.js","./_to-length":"node_modules/core-js/modules/_to-length.js","./_regexp-exec-abstract":"node_modules/core-js/modules/_regexp-exec-abstract.js","./_regexp-exec":"node_modules/core-js/modules/_regexp-exec.js","./_fails":"node_modules/core-js/modules/_fails.js","./_fix-re-wks":"node_modules/core-js/modules/_fix-re-wks.js"}],"node_modules/core-js/modules/_an-instance.js":[function(require,module,exports) {
module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};

},{}],"node_modules/core-js/modules/_for-of.js":[function(require,module,exports) {
var ctx = require('./_ctx');
var call = require('./_iter-call');
var isArrayIter = require('./_is-array-iter');
var anObject = require('./_an-object');
var toLength = require('./_to-length');
var getIterFn = require('./core.get-iterator-method');
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;

},{"./_ctx":"node_modules/core-js/modules/_ctx.js","./_iter-call":"node_modules/core-js/modules/_iter-call.js","./_is-array-iter":"node_modules/core-js/modules/_is-array-iter.js","./_an-object":"node_modules/core-js/modules/_an-object.js","./_to-length":"node_modules/core-js/modules/_to-length.js","./core.get-iterator-method":"node_modules/core-js/modules/core.get-iterator-method.js"}],"node_modules/core-js/modules/_task.js":[function(require,module,exports) {


var ctx = require('./_ctx');
var invoke = require('./_invoke');
var html = require('./_html');
var cel = require('./_dom-create');
var global = require('./_global');
var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function (event) {
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (require('./_cof')(process) == 'process') {
    defer = function (id) {
      process.nextTick(ctx(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function (id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function (id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set: setTask,
  clear: clearTask
};

},{"./_ctx":"node_modules/core-js/modules/_ctx.js","./_invoke":"node_modules/core-js/modules/_invoke.js","./_html":"node_modules/core-js/modules/_html.js","./_dom-create":"node_modules/core-js/modules/_dom-create.js","./_global":"node_modules/core-js/modules/_global.js","./_cof":"node_modules/core-js/modules/_cof.js"}],"node_modules/core-js/modules/_microtask.js":[function(require,module,exports) {


var global = require('./_global');
var macrotask = require('./_task').set;
var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = require('./_cof')(process) == 'process';

module.exports = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    var promise = Promise.resolve(undefined);
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};

},{"./_global":"node_modules/core-js/modules/_global.js","./_task":"node_modules/core-js/modules/_task.js","./_cof":"node_modules/core-js/modules/_cof.js"}],"node_modules/core-js/modules/_new-promise-capability.js":[function(require,module,exports) {
'use strict';
// 25.4.1.5 NewPromiseCapability(C)
var aFunction = require('./_a-function');

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}

module.exports.f = function (C) {
  return new PromiseCapability(C);
};

},{"./_a-function":"node_modules/core-js/modules/_a-function.js"}],"node_modules/core-js/modules/_perform.js":[function(require,module,exports) {
module.exports = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};

},{}],"node_modules/core-js/modules/_user-agent.js":[function(require,module,exports) {

var global = require('./_global');
var navigator = global.navigator;

module.exports = navigator && navigator.userAgent || '';

},{"./_global":"node_modules/core-js/modules/_global.js"}],"node_modules/core-js/modules/_promise-resolve.js":[function(require,module,exports) {
var anObject = require('./_an-object');
var isObject = require('./_is-object');
var newPromiseCapability = require('./_new-promise-capability');

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};

},{"./_an-object":"node_modules/core-js/modules/_an-object.js","./_is-object":"node_modules/core-js/modules/_is-object.js","./_new-promise-capability":"node_modules/core-js/modules/_new-promise-capability.js"}],"node_modules/core-js/modules/_redefine-all.js":[function(require,module,exports) {
var redefine = require('./_redefine');
module.exports = function (target, src, safe) {
  for (var key in src) redefine(target, key, src[key], safe);
  return target;
};

},{"./_redefine":"node_modules/core-js/modules/_redefine.js"}],"node_modules/core-js/modules/es6.promise.js":[function(require,module,exports) {


'use strict';
var LIBRARY = require('./_library');
var global = require('./_global');
var ctx = require('./_ctx');
var classof = require('./_classof');
var $export = require('./_export');
var isObject = require('./_is-object');
var aFunction = require('./_a-function');
var anInstance = require('./_an-instance');
var forOf = require('./_for-of');
var speciesConstructor = require('./_species-constructor');
var task = require('./_task').set;
var microtask = require('./_microtask')();
var newPromiseCapabilityModule = require('./_new-promise-capability');
var perform = require('./_perform');
var userAgent = require('./_user-agent');
var promiseResolve = require('./_promise-resolve');
var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';
var empty = function () { /* empty */ };
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {
      exec(empty, empty);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function')
      && promise.then(empty) instanceof FakePromise
      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
      // we can't detect it synchronously, so just check versions
      && v8.indexOf('6.6') !== 0
      && userAgent.indexOf('Chrome/66') === -1;
  } catch (e) { /* empty */ }
}();

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function (promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function (promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function (promise) {
  task.call(global, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = require('./_redefine-all')($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === $Promise || C === Wrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
require('./_set-to-string-tag')($Promise, PROMISE);
require('./_set-species')(PROMISE);
Wrapper = require('./_core')[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});

},{"./_library":"node_modules/core-js/modules/_library.js","./_global":"node_modules/core-js/modules/_global.js","./_ctx":"node_modules/core-js/modules/_ctx.js","./_classof":"node_modules/core-js/modules/_classof.js","./_export":"node_modules/core-js/modules/_export.js","./_is-object":"node_modules/core-js/modules/_is-object.js","./_a-function":"node_modules/core-js/modules/_a-function.js","./_an-instance":"node_modules/core-js/modules/_an-instance.js","./_for-of":"node_modules/core-js/modules/_for-of.js","./_species-constructor":"node_modules/core-js/modules/_species-constructor.js","./_task":"node_modules/core-js/modules/_task.js","./_microtask":"node_modules/core-js/modules/_microtask.js","./_new-promise-capability":"node_modules/core-js/modules/_new-promise-capability.js","./_perform":"node_modules/core-js/modules/_perform.js","./_user-agent":"node_modules/core-js/modules/_user-agent.js","./_promise-resolve":"node_modules/core-js/modules/_promise-resolve.js","./_wks":"node_modules/core-js/modules/_wks.js","./_redefine-all":"node_modules/core-js/modules/_redefine-all.js","./_set-to-string-tag":"node_modules/core-js/modules/_set-to-string-tag.js","./_set-species":"node_modules/core-js/modules/_set-species.js","./_core":"node_modules/core-js/modules/_core.js","./_iter-detect":"node_modules/core-js/modules/_iter-detect.js"}],"node_modules/core-js/modules/_validate-collection.js":[function(require,module,exports) {
var isObject = require('./_is-object');
module.exports = function (it, TYPE) {
  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
  return it;
};

},{"./_is-object":"node_modules/core-js/modules/_is-object.js"}],"node_modules/core-js/modules/_collection-strong.js":[function(require,module,exports) {
'use strict';
var dP = require('./_object-dp').f;
var create = require('./_object-create');
var redefineAll = require('./_redefine-all');
var ctx = require('./_ctx');
var anInstance = require('./_an-instance');
var forOf = require('./_for-of');
var $iterDefine = require('./_iter-define');
var step = require('./_iter-step');
var setSpecies = require('./_set-species');
var DESCRIPTORS = require('./_descriptors');
var fastKey = require('./_meta').fastKey;
var validate = require('./_validate-collection');
var SIZE = DESCRIPTORS ? '_s' : 'size';

var getEntry = function (that, key) {
  // fast case
  var index = fastKey(key);
  var entry;
  if (index !== 'F') return that._i[index];
  // frozen object case
  for (entry = that._f; entry; entry = entry.n) {
    if (entry.k == key) return entry;
  }
};

module.exports = {
  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME;         // collection type
      that._i = create(null); // index
      that._f = undefined;    // first entry
      that._l = undefined;    // last entry
      that[SIZE] = 0;         // size
      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.1.3.1 Map.prototype.clear()
      // 23.2.3.2 Set.prototype.clear()
      clear: function clear() {
        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {
          entry.r = true;
          if (entry.p) entry.p = entry.p.n = undefined;
          delete data[entry.i];
        }
        that._f = that._l = undefined;
        that[SIZE] = 0;
      },
      // 23.1.3.3 Map.prototype.delete(key)
      // 23.2.3.4 Set.prototype.delete(value)
      'delete': function (key) {
        var that = validate(this, NAME);
        var entry = getEntry(that, key);
        if (entry) {
          var next = entry.n;
          var prev = entry.p;
          delete that._i[entry.i];
          entry.r = true;
          if (prev) prev.n = next;
          if (next) next.p = prev;
          if (that._f == entry) that._f = next;
          if (that._l == entry) that._l = prev;
          that[SIZE]--;
        } return !!entry;
      },
      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
      forEach: function forEach(callbackfn /* , that = undefined */) {
        validate(this, NAME);
        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
        var entry;
        while (entry = entry ? entry.n : this._f) {
          f(entry.v, entry.k, this);
          // revert to the last existing entry
          while (entry && entry.r) entry = entry.p;
        }
      },
      // 23.1.3.7 Map.prototype.has(key)
      // 23.2.3.7 Set.prototype.has(value)
      has: function has(key) {
        return !!getEntry(validate(this, NAME), key);
      }
    });
    if (DESCRIPTORS) dP(C.prototype, 'size', {
      get: function () {
        return validate(this, NAME)[SIZE];
      }
    });
    return C;
  },
  def: function (that, key, value) {
    var entry = getEntry(that, key);
    var prev, index;
    // change existing entry
    if (entry) {
      entry.v = value;
    // create new entry
    } else {
      that._l = entry = {
        i: index = fastKey(key, true), // <- index
        k: key,                        // <- key
        v: value,                      // <- value
        p: prev = that._l,             // <- previous entry
        n: undefined,                  // <- next entry
        r: false                       // <- removed
      };
      if (!that._f) that._f = entry;
      if (prev) prev.n = entry;
      that[SIZE]++;
      // add to index
      if (index !== 'F') that._i[index] = entry;
    } return that;
  },
  getEntry: getEntry,
  setStrong: function (C, NAME, IS_MAP) {
    // add .keys, .values, .entries, [@@iterator]
    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
    $iterDefine(C, NAME, function (iterated, kind) {
      this._t = validate(iterated, NAME); // target
      this._k = kind;                     // kind
      this._l = undefined;                // previous
    }, function () {
      var that = this;
      var kind = that._k;
      var entry = that._l;
      // revert to the last existing entry
      while (entry && entry.r) entry = entry.p;
      // get next entry
      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
        // or finish the iteration
        that._t = undefined;
        return step(1);
      }
      // return step by kind
      if (kind == 'keys') return step(0, entry.k);
      if (kind == 'values') return step(0, entry.v);
      return step(0, [entry.k, entry.v]);
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

    // add [@@species], 23.1.2.2, 23.2.2.2
    setSpecies(NAME);
  }
};

},{"./_object-dp":"node_modules/core-js/modules/_object-dp.js","./_object-create":"node_modules/core-js/modules/_object-create.js","./_redefine-all":"node_modules/core-js/modules/_redefine-all.js","./_ctx":"node_modules/core-js/modules/_ctx.js","./_an-instance":"node_modules/core-js/modules/_an-instance.js","./_for-of":"node_modules/core-js/modules/_for-of.js","./_iter-define":"node_modules/core-js/modules/_iter-define.js","./_iter-step":"node_modules/core-js/modules/_iter-step.js","./_set-species":"node_modules/core-js/modules/_set-species.js","./_descriptors":"node_modules/core-js/modules/_descriptors.js","./_meta":"node_modules/core-js/modules/_meta.js","./_validate-collection":"node_modules/core-js/modules/_validate-collection.js"}],"node_modules/core-js/modules/_collection.js":[function(require,module,exports) {

'use strict';
var global = require('./_global');
var $export = require('./_export');
var redefine = require('./_redefine');
var redefineAll = require('./_redefine-all');
var meta = require('./_meta');
var forOf = require('./_for-of');
var anInstance = require('./_an-instance');
var isObject = require('./_is-object');
var fails = require('./_fails');
var $iterDetect = require('./_iter-detect');
var setToStringTag = require('./_set-to-string-tag');
var inheritIfRequired = require('./_inherit-if-required');

module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
  var Base = global[NAME];
  var C = Base;
  var ADDER = IS_MAP ? 'set' : 'add';
  var proto = C && C.prototype;
  var O = {};
  var fixMethod = function (KEY) {
    var fn = proto[KEY];
    redefine(proto, KEY,
      KEY == 'delete' ? function (a) {
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'has' ? function has(a) {
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'get' ? function get(a) {
        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'add' ? function add(a) { fn.call(this, a === 0 ? 0 : a); return this; }
        : function set(a, b) { fn.call(this, a === 0 ? 0 : a, b); return this; }
    );
  };
  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
    new C().entries().next();
  }))) {
    // create collection constructor
    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
    redefineAll(C.prototype, methods);
    meta.NEED = true;
  } else {
    var instance = new C();
    // early implementations not supports chaining
    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
    // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });
    // most early implementations doesn't supports iterables, most modern - not close it correctly
    var ACCEPT_ITERABLES = $iterDetect(function (iter) { new C(iter); }); // eslint-disable-line no-new
    // for early implementations -0 and +0 not the same
    var BUGGY_ZERO = !IS_WEAK && fails(function () {
      // V8 ~ Chromium 42- fails only with 5+ elements
      var $instance = new C();
      var index = 5;
      while (index--) $instance[ADDER](index, index);
      return !$instance.has(-0);
    });
    if (!ACCEPT_ITERABLES) {
      C = wrapper(function (target, iterable) {
        anInstance(target, C, NAME);
        var that = inheritIfRequired(new Base(), target, C);
        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
        return that;
      });
      C.prototype = proto;
      proto.constructor = C;
    }
    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }
    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
    // weak collections should not contains .clear method
    if (IS_WEAK && proto.clear) delete proto.clear;
  }

  setToStringTag(C, NAME);

  O[NAME] = C;
  $export($export.G + $export.W + $export.F * (C != Base), O);

  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

  return C;
};

},{"./_global":"node_modules/core-js/modules/_global.js","./_export":"node_modules/core-js/modules/_export.js","./_redefine":"node_modules/core-js/modules/_redefine.js","./_redefine-all":"node_modules/core-js/modules/_redefine-all.js","./_meta":"node_modules/core-js/modules/_meta.js","./_for-of":"node_modules/core-js/modules/_for-of.js","./_an-instance":"node_modules/core-js/modules/_an-instance.js","./_is-object":"node_modules/core-js/modules/_is-object.js","./_fails":"node_modules/core-js/modules/_fails.js","./_iter-detect":"node_modules/core-js/modules/_iter-detect.js","./_set-to-string-tag":"node_modules/core-js/modules/_set-to-string-tag.js","./_inherit-if-required":"node_modules/core-js/modules/_inherit-if-required.js"}],"node_modules/core-js/modules/es6.map.js":[function(require,module,exports) {
'use strict';
var strong = require('./_collection-strong');
var validate = require('./_validate-collection');
var MAP = 'Map';

// 23.1 Map Objects
module.exports = require('./_collection')(MAP, function (get) {
  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.1.3.6 Map.prototype.get(key)
  get: function get(key) {
    var entry = strong.getEntry(validate(this, MAP), key);
    return entry && entry.v;
  },
  // 23.1.3.9 Map.prototype.set(key, value)
  set: function set(key, value) {
    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);
  }
}, strong, true);

},{"./_collection-strong":"node_modules/core-js/modules/_collection-strong.js","./_validate-collection":"node_modules/core-js/modules/_validate-collection.js","./_collection":"node_modules/core-js/modules/_collection.js"}],"node_modules/core-js/modules/es6.set.js":[function(require,module,exports) {
'use strict';
var strong = require('./_collection-strong');
var validate = require('./_validate-collection');
var SET = 'Set';

// 23.2 Set Objects
module.exports = require('./_collection')(SET, function (get) {
  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.2.3.1 Set.prototype.add(value)
  add: function add(value) {
    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);
  }
}, strong);

},{"./_collection-strong":"node_modules/core-js/modules/_collection-strong.js","./_validate-collection":"node_modules/core-js/modules/_validate-collection.js","./_collection":"node_modules/core-js/modules/_collection.js"}],"node_modules/core-js/modules/_collection-weak.js":[function(require,module,exports) {
'use strict';
var redefineAll = require('./_redefine-all');
var getWeak = require('./_meta').getWeak;
var anObject = require('./_an-object');
var isObject = require('./_is-object');
var anInstance = require('./_an-instance');
var forOf = require('./_for-of');
var createArrayMethod = require('./_array-methods');
var $has = require('./_has');
var validate = require('./_validate-collection');
var arrayFind = createArrayMethod(5);
var arrayFindIndex = createArrayMethod(6);
var id = 0;

// fallback for uncaught frozen keys
var uncaughtFrozenStore = function (that) {
  return that._l || (that._l = new UncaughtFrozenStore());
};
var UncaughtFrozenStore = function () {
  this.a = [];
};
var findUncaughtFrozen = function (store, key) {
  return arrayFind(store.a, function (it) {
    return it[0] === key;
  });
};
UncaughtFrozenStore.prototype = {
  get: function (key) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) return entry[1];
  },
  has: function (key) {
    return !!findUncaughtFrozen(this, key);
  },
  set: function (key, value) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) entry[1] = value;
    else this.a.push([key, value]);
  },
  'delete': function (key) {
    var index = arrayFindIndex(this.a, function (it) {
      return it[0] === key;
    });
    if (~index) this.a.splice(index, 1);
    return !!~index;
  }
};

module.exports = {
  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME;      // collection type
      that._i = id++;      // collection id
      that._l = undefined; // leak store for uncaught frozen objects
      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.3.3.2 WeakMap.prototype.delete(key)
      // 23.4.3.3 WeakSet.prototype.delete(value)
      'delete': function (key) {
        if (!isObject(key)) return false;
        var data = getWeak(key);
        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);
        return data && $has(data, this._i) && delete data[this._i];
      },
      // 23.3.3.4 WeakMap.prototype.has(key)
      // 23.4.3.4 WeakSet.prototype.has(value)
      has: function has(key) {
        if (!isObject(key)) return false;
        var data = getWeak(key);
        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);
        return data && $has(data, this._i);
      }
    });
    return C;
  },
  def: function (that, key, value) {
    var data = getWeak(anObject(key), true);
    if (data === true) uncaughtFrozenStore(that).set(key, value);
    else data[that._i] = value;
    return that;
  },
  ufstore: uncaughtFrozenStore
};

},{"./_redefine-all":"node_modules/core-js/modules/_redefine-all.js","./_meta":"node_modules/core-js/modules/_meta.js","./_an-object":"node_modules/core-js/modules/_an-object.js","./_is-object":"node_modules/core-js/modules/_is-object.js","./_an-instance":"node_modules/core-js/modules/_an-instance.js","./_for-of":"node_modules/core-js/modules/_for-of.js","./_array-methods":"node_modules/core-js/modules/_array-methods.js","./_has":"node_modules/core-js/modules/_has.js","./_validate-collection":"node_modules/core-js/modules/_validate-collection.js"}],"node_modules/core-js/modules/es6.weak-map.js":[function(require,module,exports) {

'use strict';
var global = require('./_global');
var each = require('./_array-methods')(0);
var redefine = require('./_redefine');
var meta = require('./_meta');
var assign = require('./_object-assign');
var weak = require('./_collection-weak');
var isObject = require('./_is-object');
var validate = require('./_validate-collection');
var NATIVE_WEAK_MAP = require('./_validate-collection');
var IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;
var WEAK_MAP = 'WeakMap';
var getWeak = meta.getWeak;
var isExtensible = Object.isExtensible;
var uncaughtFrozenStore = weak.ufstore;
var InternalMap;

var wrapper = function (get) {
  return function WeakMap() {
    return get(this, arguments.length > 0 ? arguments[0] : undefined);
  };
};

var methods = {
  // 23.3.3.3 WeakMap.prototype.get(key)
  get: function get(key) {
    if (isObject(key)) {
      var data = getWeak(key);
      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);
      return data ? data[this._i] : undefined;
    }
  },
  // 23.3.3.5 WeakMap.prototype.set(key, value)
  set: function set(key, value) {
    return weak.def(validate(this, WEAK_MAP), key, value);
  }
};

// 23.3 WeakMap Objects
var $WeakMap = module.exports = require('./_collection')(WEAK_MAP, wrapper, methods, weak, true, true);

// IE11 WeakMap frozen keys fix
if (NATIVE_WEAK_MAP && IS_IE11) {
  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);
  assign(InternalMap.prototype, methods);
  meta.NEED = true;
  each(['delete', 'has', 'get', 'set'], function (key) {
    var proto = $WeakMap.prototype;
    var method = proto[key];
    redefine(proto, key, function (a, b) {
      // store frozen objects on internal weakmap shim
      if (isObject(a) && !isExtensible(a)) {
        if (!this._f) this._f = new InternalMap();
        var result = this._f[key](a, b);
        return key == 'set' ? this : result;
      // store all the rest on native weakmap
      } return method.call(this, a, b);
    });
  });
}

},{"./_global":"node_modules/core-js/modules/_global.js","./_array-methods":"node_modules/core-js/modules/_array-methods.js","./_redefine":"node_modules/core-js/modules/_redefine.js","./_meta":"node_modules/core-js/modules/_meta.js","./_object-assign":"node_modules/core-js/modules/_object-assign.js","./_collection-weak":"node_modules/core-js/modules/_collection-weak.js","./_is-object":"node_modules/core-js/modules/_is-object.js","./_validate-collection":"node_modules/core-js/modules/_validate-collection.js","./_collection":"node_modules/core-js/modules/_collection.js"}],"node_modules/core-js/modules/es6.weak-set.js":[function(require,module,exports) {
'use strict';
var weak = require('./_collection-weak');
var validate = require('./_validate-collection');
var WEAK_SET = 'WeakSet';

// 23.4 WeakSet Objects
require('./_collection')(WEAK_SET, function (get) {
  return function WeakSet() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.4.3.1 WeakSet.prototype.add(value)
  add: function add(value) {
    return weak.def(validate(this, WEAK_SET), value, true);
  }
}, weak, false, true);

},{"./_collection-weak":"node_modules/core-js/modules/_collection-weak.js","./_validate-collection":"node_modules/core-js/modules/_validate-collection.js","./_collection":"node_modules/core-js/modules/_collection.js"}],"node_modules/core-js/modules/_typed.js":[function(require,module,exports) {

var global = require('./_global');
var hide = require('./_hide');
var uid = require('./_uid');
var TYPED = uid('typed_array');
var VIEW = uid('view');
var ABV = !!(global.ArrayBuffer && global.DataView);
var CONSTR = ABV;
var i = 0;
var l = 9;
var Typed;

var TypedArrayConstructors = (
  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
).split(',');

while (i < l) {
  if (Typed = global[TypedArrayConstructors[i++]]) {
    hide(Typed.prototype, TYPED, true);
    hide(Typed.prototype, VIEW, true);
  } else CONSTR = false;
}

module.exports = {
  ABV: ABV,
  CONSTR: CONSTR,
  TYPED: TYPED,
  VIEW: VIEW
};

},{"./_global":"node_modules/core-js/modules/_global.js","./_hide":"node_modules/core-js/modules/_hide.js","./_uid":"node_modules/core-js/modules/_uid.js"}],"node_modules/core-js/modules/_to-index.js":[function(require,module,exports) {
// https://tc39.github.io/ecma262/#sec-toindex
var toInteger = require('./_to-integer');
var toLength = require('./_to-length');
module.exports = function (it) {
  if (it === undefined) return 0;
  var number = toInteger(it);
  var length = toLength(number);
  if (number !== length) throw RangeError('Wrong length!');
  return length;
};

},{"./_to-integer":"node_modules/core-js/modules/_to-integer.js","./_to-length":"node_modules/core-js/modules/_to-length.js"}],"node_modules/core-js/modules/_typed-buffer.js":[function(require,module,exports) {

'use strict';
var global = require('./_global');
var DESCRIPTORS = require('./_descriptors');
var LIBRARY = require('./_library');
var $typed = require('./_typed');
var hide = require('./_hide');
var redefineAll = require('./_redefine-all');
var fails = require('./_fails');
var anInstance = require('./_an-instance');
var toInteger = require('./_to-integer');
var toLength = require('./_to-length');
var toIndex = require('./_to-index');
var gOPN = require('./_object-gopn').f;
var dP = require('./_object-dp').f;
var arrayFill = require('./_array-fill');
var setToStringTag = require('./_set-to-string-tag');
var ARRAY_BUFFER = 'ArrayBuffer';
var DATA_VIEW = 'DataView';
var PROTOTYPE = 'prototype';
var WRONG_LENGTH = 'Wrong length!';
var WRONG_INDEX = 'Wrong index!';
var $ArrayBuffer = global[ARRAY_BUFFER];
var $DataView = global[DATA_VIEW];
var Math = global.Math;
var RangeError = global.RangeError;
// eslint-disable-next-line no-shadow-restricted-names
var Infinity = global.Infinity;
var BaseBuffer = $ArrayBuffer;
var abs = Math.abs;
var pow = Math.pow;
var floor = Math.floor;
var log = Math.log;
var LN2 = Math.LN2;
var BUFFER = 'buffer';
var BYTE_LENGTH = 'byteLength';
var BYTE_OFFSET = 'byteOffset';
var $BUFFER = DESCRIPTORS ? '_b' : BUFFER;
var $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;
var $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;

// IEEE754 conversions based on https://github.com/feross/ieee754
function packIEEE754(value, mLen, nBytes) {
  var buffer = new Array(nBytes);
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;
  var i = 0;
  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
  var e, m, c;
  value = abs(value);
  // eslint-disable-next-line no-self-compare
  if (value != value || value === Infinity) {
    // eslint-disable-next-line no-self-compare
    m = value != value ? 1 : 0;
    e = eMax;
  } else {
    e = floor(log(value) / LN2);
    if (value * (c = pow(2, -e)) < 1) {
      e--;
      c *= 2;
    }
    if (e + eBias >= 1) {
      value += rt / c;
    } else {
      value += rt * pow(2, 1 - eBias);
    }
    if (value * c >= 2) {
      e++;
      c /= 2;
    }
    if (e + eBias >= eMax) {
      m = 0;
      e = eMax;
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * pow(2, mLen);
      e = e + eBias;
    } else {
      m = value * pow(2, eBias - 1) * pow(2, mLen);
      e = 0;
    }
  }
  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
  e = e << mLen | m;
  eLen += mLen;
  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
  buffer[--i] |= s * 128;
  return buffer;
}
function unpackIEEE754(buffer, mLen, nBytes) {
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var nBits = eLen - 7;
  var i = nBytes - 1;
  var s = buffer[i--];
  var e = s & 127;
  var m;
  s >>= 7;
  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
  m = e & (1 << -nBits) - 1;
  e >>= -nBits;
  nBits += mLen;
  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
  if (e === 0) {
    e = 1 - eBias;
  } else if (e === eMax) {
    return m ? NaN : s ? -Infinity : Infinity;
  } else {
    m = m + pow(2, mLen);
    e = e - eBias;
  } return (s ? -1 : 1) * m * pow(2, e - mLen);
}

function unpackI32(bytes) {
  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
}
function packI8(it) {
  return [it & 0xff];
}
function packI16(it) {
  return [it & 0xff, it >> 8 & 0xff];
}
function packI32(it) {
  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
}
function packF64(it) {
  return packIEEE754(it, 52, 8);
}
function packF32(it) {
  return packIEEE754(it, 23, 4);
}

function addGetter(C, key, internal) {
  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });
}

function get(view, bytes, index, isLittleEndian) {
  var numIndex = +index;
  var intIndex = toIndex(numIndex);
  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
  var store = view[$BUFFER]._b;
  var start = intIndex + view[$OFFSET];
  var pack = store.slice(start, start + bytes);
  return isLittleEndian ? pack : pack.reverse();
}
function set(view, bytes, index, conversion, value, isLittleEndian) {
  var numIndex = +index;
  var intIndex = toIndex(numIndex);
  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
  var store = view[$BUFFER]._b;
  var start = intIndex + view[$OFFSET];
  var pack = conversion(+value);
  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
}

if (!$typed.ABV) {
  $ArrayBuffer = function ArrayBuffer(length) {
    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);
    var byteLength = toIndex(length);
    this._b = arrayFill.call(new Array(byteLength), 0);
    this[$LENGTH] = byteLength;
  };

  $DataView = function DataView(buffer, byteOffset, byteLength) {
    anInstance(this, $DataView, DATA_VIEW);
    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
    var bufferLength = buffer[$LENGTH];
    var offset = toInteger(byteOffset);
    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');
    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
    this[$BUFFER] = buffer;
    this[$OFFSET] = offset;
    this[$LENGTH] = byteLength;
  };

  if (DESCRIPTORS) {
    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
    addGetter($DataView, BUFFER, '_b');
    addGetter($DataView, BYTE_LENGTH, '_l');
    addGetter($DataView, BYTE_OFFSET, '_o');
  }

  redefineAll($DataView[PROTOTYPE], {
    getInt8: function getInt8(byteOffset) {
      return get(this, 1, byteOffset)[0] << 24 >> 24;
    },
    getUint8: function getUint8(byteOffset) {
      return get(this, 1, byteOffset)[0];
    },
    getInt16: function getInt16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
    },
    getUint16: function getUint16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return bytes[1] << 8 | bytes[0];
    },
    getInt32: function getInt32(byteOffset /* , littleEndian */) {
      return unpackI32(get(this, 4, byteOffset, arguments[1]));
    },
    getUint32: function getUint32(byteOffset /* , littleEndian */) {
      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
    },
    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
    },
    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
    },
    setInt8: function setInt8(byteOffset, value) {
      set(this, 1, byteOffset, packI8, value);
    },
    setUint8: function setUint8(byteOffset, value) {
      set(this, 1, byteOffset, packI8, value);
    },
    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packI16, value, arguments[2]);
    },
    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packI16, value, arguments[2]);
    },
    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packI32, value, arguments[2]);
    },
    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packI32, value, arguments[2]);
    },
    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packF32, value, arguments[2]);
    },
    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {
      set(this, 8, byteOffset, packF64, value, arguments[2]);
    }
  });
} else {
  if (!fails(function () {
    $ArrayBuffer(1);
  }) || !fails(function () {
    new $ArrayBuffer(-1); // eslint-disable-line no-new
  }) || fails(function () {
    new $ArrayBuffer(); // eslint-disable-line no-new
    new $ArrayBuffer(1.5); // eslint-disable-line no-new
    new $ArrayBuffer(NaN); // eslint-disable-line no-new
    return $ArrayBuffer.name != ARRAY_BUFFER;
  })) {
    $ArrayBuffer = function ArrayBuffer(length) {
      anInstance(this, $ArrayBuffer);
      return new BaseBuffer(toIndex(length));
    };
    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {
      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);
    }
    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;
  }
  // iOS Safari 7.x bug
  var view = new $DataView(new $ArrayBuffer(2));
  var $setInt8 = $DataView[PROTOTYPE].setInt8;
  view.setInt8(0, 2147483648);
  view.setInt8(1, 2147483649);
  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {
    setInt8: function setInt8(byteOffset, value) {
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    },
    setUint8: function setUint8(byteOffset, value) {
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    }
  }, true);
}
setToStringTag($ArrayBuffer, ARRAY_BUFFER);
setToStringTag($DataView, DATA_VIEW);
hide($DataView[PROTOTYPE], $typed.VIEW, true);
exports[ARRAY_BUFFER] = $ArrayBuffer;
exports[DATA_VIEW] = $DataView;

},{"./_global":"node_modules/core-js/modules/_global.js","./_descriptors":"node_modules/core-js/modules/_descriptors.js","./_library":"node_modules/core-js/modules/_library.js","./_typed":"node_modules/core-js/modules/_typed.js","./_hide":"node_modules/core-js/modules/_hide.js","./_redefine-all":"node_modules/core-js/modules/_redefine-all.js","./_fails":"node_modules/core-js/modules/_fails.js","./_an-instance":"node_modules/core-js/modules/_an-instance.js","./_to-integer":"node_modules/core-js/modules/_to-integer.js","./_to-length":"node_modules/core-js/modules/_to-length.js","./_to-index":"node_modules/core-js/modules/_to-index.js","./_object-gopn":"node_modules/core-js/modules/_object-gopn.js","./_object-dp":"node_modules/core-js/modules/_object-dp.js","./_array-fill":"node_modules/core-js/modules/_array-fill.js","./_set-to-string-tag":"node_modules/core-js/modules/_set-to-string-tag.js"}],"node_modules/core-js/modules/es6.typed.array-buffer.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var $typed = require('./_typed');
var buffer = require('./_typed-buffer');
var anObject = require('./_an-object');
var toAbsoluteIndex = require('./_to-absolute-index');
var toLength = require('./_to-length');
var isObject = require('./_is-object');
var ArrayBuffer = require('./_global').ArrayBuffer;
var speciesConstructor = require('./_species-constructor');
var $ArrayBuffer = buffer.ArrayBuffer;
var $DataView = buffer.DataView;
var $isView = $typed.ABV && ArrayBuffer.isView;
var $slice = $ArrayBuffer.prototype.slice;
var VIEW = $typed.VIEW;
var ARRAY_BUFFER = 'ArrayBuffer';

$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), { ArrayBuffer: $ArrayBuffer });

$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
  // 24.1.3.1 ArrayBuffer.isView(arg)
  isView: function isView(it) {
    return $isView && $isView(it) || isObject(it) && VIEW in it;
  }
});

$export($export.P + $export.U + $export.F * require('./_fails')(function () {
  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
}), ARRAY_BUFFER, {
  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
  slice: function slice(start, end) {
    if ($slice !== undefined && end === undefined) return $slice.call(anObject(this), start); // FF fix
    var len = anObject(this).byteLength;
    var first = toAbsoluteIndex(start, len);
    var fin = toAbsoluteIndex(end === undefined ? len : end, len);
    var result = new (speciesConstructor(this, $ArrayBuffer))(toLength(fin - first));
    var viewS = new $DataView(this);
    var viewT = new $DataView(result);
    var index = 0;
    while (first < fin) {
      viewT.setUint8(index++, viewS.getUint8(first++));
    } return result;
  }
});

require('./_set-species')(ARRAY_BUFFER);

},{"./_export":"node_modules/core-js/modules/_export.js","./_typed":"node_modules/core-js/modules/_typed.js","./_typed-buffer":"node_modules/core-js/modules/_typed-buffer.js","./_an-object":"node_modules/core-js/modules/_an-object.js","./_to-absolute-index":"node_modules/core-js/modules/_to-absolute-index.js","./_to-length":"node_modules/core-js/modules/_to-length.js","./_is-object":"node_modules/core-js/modules/_is-object.js","./_global":"node_modules/core-js/modules/_global.js","./_species-constructor":"node_modules/core-js/modules/_species-constructor.js","./_fails":"node_modules/core-js/modules/_fails.js","./_set-species":"node_modules/core-js/modules/_set-species.js"}],"node_modules/core-js/modules/es6.typed.data-view.js":[function(require,module,exports) {
var $export = require('./_export');
$export($export.G + $export.W + $export.F * !require('./_typed').ABV, {
  DataView: require('./_typed-buffer').DataView
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_typed":"node_modules/core-js/modules/_typed.js","./_typed-buffer":"node_modules/core-js/modules/_typed-buffer.js"}],"node_modules/core-js/modules/_typed-array.js":[function(require,module,exports) {
var global = arguments[3];
'use strict';
if (require('./_descriptors')) {
  var LIBRARY = require('./_library');
  var global = require('./_global');
  var fails = require('./_fails');
  var $export = require('./_export');
  var $typed = require('./_typed');
  var $buffer = require('./_typed-buffer');
  var ctx = require('./_ctx');
  var anInstance = require('./_an-instance');
  var propertyDesc = require('./_property-desc');
  var hide = require('./_hide');
  var redefineAll = require('./_redefine-all');
  var toInteger = require('./_to-integer');
  var toLength = require('./_to-length');
  var toIndex = require('./_to-index');
  var toAbsoluteIndex = require('./_to-absolute-index');
  var toPrimitive = require('./_to-primitive');
  var has = require('./_has');
  var classof = require('./_classof');
  var isObject = require('./_is-object');
  var toObject = require('./_to-object');
  var isArrayIter = require('./_is-array-iter');
  var create = require('./_object-create');
  var getPrototypeOf = require('./_object-gpo');
  var gOPN = require('./_object-gopn').f;
  var getIterFn = require('./core.get-iterator-method');
  var uid = require('./_uid');
  var wks = require('./_wks');
  var createArrayMethod = require('./_array-methods');
  var createArrayIncludes = require('./_array-includes');
  var speciesConstructor = require('./_species-constructor');
  var ArrayIterators = require('./es6.array.iterator');
  var Iterators = require('./_iterators');
  var $iterDetect = require('./_iter-detect');
  var setSpecies = require('./_set-species');
  var arrayFill = require('./_array-fill');
  var arrayCopyWithin = require('./_array-copy-within');
  var $DP = require('./_object-dp');
  var $GOPD = require('./_object-gopd');
  var dP = $DP.f;
  var gOPD = $GOPD.f;
  var RangeError = global.RangeError;
  var TypeError = global.TypeError;
  var Uint8Array = global.Uint8Array;
  var ARRAY_BUFFER = 'ArrayBuffer';
  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;
  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
  var PROTOTYPE = 'prototype';
  var ArrayProto = Array[PROTOTYPE];
  var $ArrayBuffer = $buffer.ArrayBuffer;
  var $DataView = $buffer.DataView;
  var arrayForEach = createArrayMethod(0);
  var arrayFilter = createArrayMethod(2);
  var arraySome = createArrayMethod(3);
  var arrayEvery = createArrayMethod(4);
  var arrayFind = createArrayMethod(5);
  var arrayFindIndex = createArrayMethod(6);
  var arrayIncludes = createArrayIncludes(true);
  var arrayIndexOf = createArrayIncludes(false);
  var arrayValues = ArrayIterators.values;
  var arrayKeys = ArrayIterators.keys;
  var arrayEntries = ArrayIterators.entries;
  var arrayLastIndexOf = ArrayProto.lastIndexOf;
  var arrayReduce = ArrayProto.reduce;
  var arrayReduceRight = ArrayProto.reduceRight;
  var arrayJoin = ArrayProto.join;
  var arraySort = ArrayProto.sort;
  var arraySlice = ArrayProto.slice;
  var arrayToString = ArrayProto.toString;
  var arrayToLocaleString = ArrayProto.toLocaleString;
  var ITERATOR = wks('iterator');
  var TAG = wks('toStringTag');
  var TYPED_CONSTRUCTOR = uid('typed_constructor');
  var DEF_CONSTRUCTOR = uid('def_constructor');
  var ALL_CONSTRUCTORS = $typed.CONSTR;
  var TYPED_ARRAY = $typed.TYPED;
  var VIEW = $typed.VIEW;
  var WRONG_LENGTH = 'Wrong length!';

  var $map = createArrayMethod(1, function (O, length) {
    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
  });

  var LITTLE_ENDIAN = fails(function () {
    // eslint-disable-next-line no-undef
    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
  });

  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {
    new Uint8Array(1).set({});
  });

  var toOffset = function (it, BYTES) {
    var offset = toInteger(it);
    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');
    return offset;
  };

  var validate = function (it) {
    if (isObject(it) && TYPED_ARRAY in it) return it;
    throw TypeError(it + ' is not a typed array!');
  };

  var allocate = function (C, length) {
    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {
      throw TypeError('It is not a typed array constructor!');
    } return new C(length);
  };

  var speciesFromList = function (O, list) {
    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
  };

  var fromList = function (C, list) {
    var index = 0;
    var length = list.length;
    var result = allocate(C, length);
    while (length > index) result[index] = list[index++];
    return result;
  };

  var addGetter = function (it, key, internal) {
    dP(it, key, { get: function () { return this._d[internal]; } });
  };

  var $from = function from(source /* , mapfn, thisArg */) {
    var O = toObject(source);
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var iterFn = getIterFn(O);
    var i, length, values, result, step, iterator;
    if (iterFn != undefined && !isArrayIter(iterFn)) {
      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {
        values.push(step.value);
      } O = values;
    }
    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);
    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {
      result[i] = mapping ? mapfn(O[i], i) : O[i];
    }
    return result;
  };

  var $of = function of(/* ...items */) {
    var index = 0;
    var length = arguments.length;
    var result = allocate(this, length);
    while (length > index) result[index] = arguments[index++];
    return result;
  };

  // iOS Safari 6.x fails here
  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });

  var $toLocaleString = function toLocaleString() {
    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
  };

  var proto = {
    copyWithin: function copyWithin(target, start /* , end */) {
      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
    },
    every: function every(callbackfn /* , thisArg */) {
      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars
      return arrayFill.apply(validate(this), arguments);
    },
    filter: function filter(callbackfn /* , thisArg */) {
      return speciesFromList(this, arrayFilter(validate(this), callbackfn,
        arguments.length > 1 ? arguments[1] : undefined));
    },
    find: function find(predicate /* , thisArg */) {
      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
    },
    findIndex: function findIndex(predicate /* , thisArg */) {
      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
    },
    forEach: function forEach(callbackfn /* , thisArg */) {
      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    indexOf: function indexOf(searchElement /* , fromIndex */) {
      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
    },
    includes: function includes(searchElement /* , fromIndex */) {
      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
    },
    join: function join(separator) { // eslint-disable-line no-unused-vars
      return arrayJoin.apply(validate(this), arguments);
    },
    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars
      return arrayLastIndexOf.apply(validate(this), arguments);
    },
    map: function map(mapfn /* , thisArg */) {
      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
      return arrayReduce.apply(validate(this), arguments);
    },
    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
      return arrayReduceRight.apply(validate(this), arguments);
    },
    reverse: function reverse() {
      var that = this;
      var length = validate(that).length;
      var middle = Math.floor(length / 2);
      var index = 0;
      var value;
      while (index < middle) {
        value = that[index];
        that[index++] = that[--length];
        that[length] = value;
      } return that;
    },
    some: function some(callbackfn /* , thisArg */) {
      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    sort: function sort(comparefn) {
      return arraySort.call(validate(this), comparefn);
    },
    subarray: function subarray(begin, end) {
      var O = validate(this);
      var length = O.length;
      var $begin = toAbsoluteIndex(begin, length);
      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
        O.buffer,
        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)
      );
    }
  };

  var $slice = function slice(start, end) {
    return speciesFromList(this, arraySlice.call(validate(this), start, end));
  };

  var $set = function set(arrayLike /* , offset */) {
    validate(this);
    var offset = toOffset(arguments[1], 1);
    var length = this.length;
    var src = toObject(arrayLike);
    var len = toLength(src.length);
    var index = 0;
    if (len + offset > length) throw RangeError(WRONG_LENGTH);
    while (index < len) this[offset + index] = src[index++];
  };

  var $iterators = {
    entries: function entries() {
      return arrayEntries.call(validate(this));
    },
    keys: function keys() {
      return arrayKeys.call(validate(this));
    },
    values: function values() {
      return arrayValues.call(validate(this));
    }
  };

  var isTAIndex = function (target, key) {
    return isObject(target)
      && target[TYPED_ARRAY]
      && typeof key != 'symbol'
      && key in target
      && String(+key) == String(key);
  };
  var $getDesc = function getOwnPropertyDescriptor(target, key) {
    return isTAIndex(target, key = toPrimitive(key, true))
      ? propertyDesc(2, target[key])
      : gOPD(target, key);
  };
  var $setDesc = function defineProperty(target, key, desc) {
    if (isTAIndex(target, key = toPrimitive(key, true))
      && isObject(desc)
      && has(desc, 'value')
      && !has(desc, 'get')
      && !has(desc, 'set')
      // TODO: add validation descriptor w/o calling accessors
      && !desc.configurable
      && (!has(desc, 'writable') || desc.writable)
      && (!has(desc, 'enumerable') || desc.enumerable)
    ) {
      target[key] = desc.value;
      return target;
    } return dP(target, key, desc);
  };

  if (!ALL_CONSTRUCTORS) {
    $GOPD.f = $getDesc;
    $DP.f = $setDesc;
  }

  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
    getOwnPropertyDescriptor: $getDesc,
    defineProperty: $setDesc
  });

  if (fails(function () { arrayToString.call({}); })) {
    arrayToString = arrayToLocaleString = function toString() {
      return arrayJoin.call(this);
    };
  }

  var $TypedArrayPrototype$ = redefineAll({}, proto);
  redefineAll($TypedArrayPrototype$, $iterators);
  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
  redefineAll($TypedArrayPrototype$, {
    slice: $slice,
    set: $set,
    constructor: function () { /* noop */ },
    toString: arrayToString,
    toLocaleString: $toLocaleString
  });
  addGetter($TypedArrayPrototype$, 'buffer', 'b');
  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
  addGetter($TypedArrayPrototype$, 'byteLength', 'l');
  addGetter($TypedArrayPrototype$, 'length', 'e');
  dP($TypedArrayPrototype$, TAG, {
    get: function () { return this[TYPED_ARRAY]; }
  });

  // eslint-disable-next-line max-statements
  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {
    CLAMPED = !!CLAMPED;
    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';
    var GETTER = 'get' + KEY;
    var SETTER = 'set' + KEY;
    var TypedArray = global[NAME];
    var Base = TypedArray || {};
    var TAC = TypedArray && getPrototypeOf(TypedArray);
    var FORCED = !TypedArray || !$typed.ABV;
    var O = {};
    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
    var getter = function (that, index) {
      var data = that._d;
      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
    };
    var setter = function (that, index, value) {
      var data = that._d;
      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
    };
    var addElement = function (that, index) {
      dP(that, index, {
        get: function () {
          return getter(this, index);
        },
        set: function (value) {
          return setter(this, index, value);
        },
        enumerable: true
      });
    };
    if (FORCED) {
      TypedArray = wrapper(function (that, data, $offset, $length) {
        anInstance(that, TypedArray, NAME, '_d');
        var index = 0;
        var offset = 0;
        var buffer, byteLength, length, klass;
        if (!isObject(data)) {
          length = toIndex(data);
          byteLength = length * BYTES;
          buffer = new $ArrayBuffer(byteLength);
        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
          buffer = data;
          offset = toOffset($offset, BYTES);
          var $len = data.byteLength;
          if ($length === undefined) {
            if ($len % BYTES) throw RangeError(WRONG_LENGTH);
            byteLength = $len - offset;
            if (byteLength < 0) throw RangeError(WRONG_LENGTH);
          } else {
            byteLength = toLength($length) * BYTES;
            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);
          }
          length = byteLength / BYTES;
        } else if (TYPED_ARRAY in data) {
          return fromList(TypedArray, data);
        } else {
          return $from.call(TypedArray, data);
        }
        hide(that, '_d', {
          b: buffer,
          o: offset,
          l: byteLength,
          e: length,
          v: new $DataView(buffer)
        });
        while (index < length) addElement(that, index++);
      });
      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
      hide(TypedArrayPrototype, 'constructor', TypedArray);
    } else if (!fails(function () {
      TypedArray(1);
    }) || !fails(function () {
      new TypedArray(-1); // eslint-disable-line no-new
    }) || !$iterDetect(function (iter) {
      new TypedArray(); // eslint-disable-line no-new
      new TypedArray(null); // eslint-disable-line no-new
      new TypedArray(1.5); // eslint-disable-line no-new
      new TypedArray(iter); // eslint-disable-line no-new
    }, true)) {
      TypedArray = wrapper(function (that, data, $offset, $length) {
        anInstance(that, TypedArray, NAME);
        var klass;
        // `ws` module bug, temporarily remove validation length for Uint8Array
        // https://github.com/websockets/ws/pull/645
        if (!isObject(data)) return new Base(toIndex(data));
        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
          return $length !== undefined
            ? new Base(data, toOffset($offset, BYTES), $length)
            : $offset !== undefined
              ? new Base(data, toOffset($offset, BYTES))
              : new Base(data);
        }
        if (TYPED_ARRAY in data) return fromList(TypedArray, data);
        return $from.call(TypedArray, data);
      });
      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {
        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);
      });
      TypedArray[PROTOTYPE] = TypedArrayPrototype;
      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;
    }
    var $nativeIterator = TypedArrayPrototype[ITERATOR];
    var CORRECT_ITER_NAME = !!$nativeIterator
      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);
    var $iterator = $iterators.values;
    hide(TypedArray, TYPED_CONSTRUCTOR, true);
    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
    hide(TypedArrayPrototype, VIEW, true);
    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {
      dP(TypedArrayPrototype, TAG, {
        get: function () { return NAME; }
      });
    }

    O[NAME] = TypedArray;

    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);

    $export($export.S, NAME, {
      BYTES_PER_ELEMENT: BYTES
    });

    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {
      from: $from,
      of: $of
    });

    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);

    $export($export.P, NAME, proto);

    setSpecies(NAME);

    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });

    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);

    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;

    $export($export.P + $export.F * fails(function () {
      new TypedArray(1).slice();
    }), NAME, { slice: $slice });

    $export($export.P + $export.F * (fails(function () {
      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();
    }) || !fails(function () {
      TypedArrayPrototype.toLocaleString.call([1, 2]);
    })), NAME, { toLocaleString: $toLocaleString });

    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);
  };
} else module.exports = function () { /* empty */ };

},{"./_descriptors":"node_modules/core-js/modules/_descriptors.js","./_library":"node_modules/core-js/modules/_library.js","./_global":"node_modules/core-js/modules/_global.js","./_fails":"node_modules/core-js/modules/_fails.js","./_export":"node_modules/core-js/modules/_export.js","./_typed":"node_modules/core-js/modules/_typed.js","./_typed-buffer":"node_modules/core-js/modules/_typed-buffer.js","./_ctx":"node_modules/core-js/modules/_ctx.js","./_an-instance":"node_modules/core-js/modules/_an-instance.js","./_property-desc":"node_modules/core-js/modules/_property-desc.js","./_hide":"node_modules/core-js/modules/_hide.js","./_redefine-all":"node_modules/core-js/modules/_redefine-all.js","./_to-integer":"node_modules/core-js/modules/_to-integer.js","./_to-length":"node_modules/core-js/modules/_to-length.js","./_to-index":"node_modules/core-js/modules/_to-index.js","./_to-absolute-index":"node_modules/core-js/modules/_to-absolute-index.js","./_to-primitive":"node_modules/core-js/modules/_to-primitive.js","./_has":"node_modules/core-js/modules/_has.js","./_classof":"node_modules/core-js/modules/_classof.js","./_is-object":"node_modules/core-js/modules/_is-object.js","./_to-object":"node_modules/core-js/modules/_to-object.js","./_is-array-iter":"node_modules/core-js/modules/_is-array-iter.js","./_object-create":"node_modules/core-js/modules/_object-create.js","./_object-gpo":"node_modules/core-js/modules/_object-gpo.js","./_object-gopn":"node_modules/core-js/modules/_object-gopn.js","./core.get-iterator-method":"node_modules/core-js/modules/core.get-iterator-method.js","./_uid":"node_modules/core-js/modules/_uid.js","./_wks":"node_modules/core-js/modules/_wks.js","./_array-methods":"node_modules/core-js/modules/_array-methods.js","./_array-includes":"node_modules/core-js/modules/_array-includes.js","./_species-constructor":"node_modules/core-js/modules/_species-constructor.js","./es6.array.iterator":"node_modules/core-js/modules/es6.array.iterator.js","./_iterators":"node_modules/core-js/modules/_iterators.js","./_iter-detect":"node_modules/core-js/modules/_iter-detect.js","./_set-species":"node_modules/core-js/modules/_set-species.js","./_array-fill":"node_modules/core-js/modules/_array-fill.js","./_array-copy-within":"node_modules/core-js/modules/_array-copy-within.js","./_object-dp":"node_modules/core-js/modules/_object-dp.js","./_object-gopd":"node_modules/core-js/modules/_object-gopd.js"}],"node_modules/core-js/modules/es6.typed.int8-array.js":[function(require,module,exports) {
require('./_typed-array')('Int8', 1, function (init) {
  return function Int8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":"node_modules/core-js/modules/_typed-array.js"}],"node_modules/core-js/modules/es6.typed.uint8-array.js":[function(require,module,exports) {
require('./_typed-array')('Uint8', 1, function (init) {
  return function Uint8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":"node_modules/core-js/modules/_typed-array.js"}],"node_modules/core-js/modules/es6.typed.uint8-clamped-array.js":[function(require,module,exports) {
require('./_typed-array')('Uint8', 1, function (init) {
  return function Uint8ClampedArray(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
}, true);

},{"./_typed-array":"node_modules/core-js/modules/_typed-array.js"}],"node_modules/core-js/modules/es6.typed.int16-array.js":[function(require,module,exports) {
require('./_typed-array')('Int16', 2, function (init) {
  return function Int16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":"node_modules/core-js/modules/_typed-array.js"}],"node_modules/core-js/modules/es6.typed.uint16-array.js":[function(require,module,exports) {
require('./_typed-array')('Uint16', 2, function (init) {
  return function Uint16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":"node_modules/core-js/modules/_typed-array.js"}],"node_modules/core-js/modules/es6.typed.int32-array.js":[function(require,module,exports) {
require('./_typed-array')('Int32', 4, function (init) {
  return function Int32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":"node_modules/core-js/modules/_typed-array.js"}],"node_modules/core-js/modules/es6.typed.uint32-array.js":[function(require,module,exports) {
require('./_typed-array')('Uint32', 4, function (init) {
  return function Uint32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":"node_modules/core-js/modules/_typed-array.js"}],"node_modules/core-js/modules/es6.typed.float32-array.js":[function(require,module,exports) {
require('./_typed-array')('Float32', 4, function (init) {
  return function Float32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":"node_modules/core-js/modules/_typed-array.js"}],"node_modules/core-js/modules/es6.typed.float64-array.js":[function(require,module,exports) {
require('./_typed-array')('Float64', 8, function (init) {
  return function Float64Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":"node_modules/core-js/modules/_typed-array.js"}],"node_modules/core-js/modules/es6.reflect.apply.js":[function(require,module,exports) {
// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
var $export = require('./_export');
var aFunction = require('./_a-function');
var anObject = require('./_an-object');
var rApply = (require('./_global').Reflect || {}).apply;
var fApply = Function.apply;
// MS Edge argumentsList argument is optional
$export($export.S + $export.F * !require('./_fails')(function () {
  rApply(function () { /* empty */ });
}), 'Reflect', {
  apply: function apply(target, thisArgument, argumentsList) {
    var T = aFunction(target);
    var L = anObject(argumentsList);
    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_a-function":"node_modules/core-js/modules/_a-function.js","./_an-object":"node_modules/core-js/modules/_an-object.js","./_global":"node_modules/core-js/modules/_global.js","./_fails":"node_modules/core-js/modules/_fails.js"}],"node_modules/core-js/modules/es6.reflect.construct.js":[function(require,module,exports) {
// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
var $export = require('./_export');
var create = require('./_object-create');
var aFunction = require('./_a-function');
var anObject = require('./_an-object');
var isObject = require('./_is-object');
var fails = require('./_fails');
var bind = require('./_bind');
var rConstruct = (require('./_global').Reflect || {}).construct;

// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it
var NEW_TARGET_BUG = fails(function () {
  function F() { /* empty */ }
  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);
});
var ARGS_BUG = !fails(function () {
  rConstruct(function () { /* empty */ });
});

$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
  construct: function construct(Target, args /* , newTarget */) {
    aFunction(Target);
    anObject(args);
    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);
    if (Target == newTarget) {
      // w/o altered newTarget, optimization for 0-4 arguments
      switch (args.length) {
        case 0: return new Target();
        case 1: return new Target(args[0]);
        case 2: return new Target(args[0], args[1]);
        case 3: return new Target(args[0], args[1], args[2]);
        case 4: return new Target(args[0], args[1], args[2], args[3]);
      }
      // w/o altered newTarget, lot of arguments case
      var $args = [null];
      $args.push.apply($args, args);
      return new (bind.apply(Target, $args))();
    }
    // with altered newTarget, not support built-in constructors
    var proto = newTarget.prototype;
    var instance = create(isObject(proto) ? proto : Object.prototype);
    var result = Function.apply.call(Target, instance, args);
    return isObject(result) ? result : instance;
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_object-create":"node_modules/core-js/modules/_object-create.js","./_a-function":"node_modules/core-js/modules/_a-function.js","./_an-object":"node_modules/core-js/modules/_an-object.js","./_is-object":"node_modules/core-js/modules/_is-object.js","./_fails":"node_modules/core-js/modules/_fails.js","./_bind":"node_modules/core-js/modules/_bind.js","./_global":"node_modules/core-js/modules/_global.js"}],"node_modules/core-js/modules/es6.reflect.define-property.js":[function(require,module,exports) {
// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
var dP = require('./_object-dp');
var $export = require('./_export');
var anObject = require('./_an-object');
var toPrimitive = require('./_to-primitive');

// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
$export($export.S + $export.F * require('./_fails')(function () {
  // eslint-disable-next-line no-undef
  Reflect.defineProperty(dP.f({}, 1, { value: 1 }), 1, { value: 2 });
}), 'Reflect', {
  defineProperty: function defineProperty(target, propertyKey, attributes) {
    anObject(target);
    propertyKey = toPrimitive(propertyKey, true);
    anObject(attributes);
    try {
      dP.f(target, propertyKey, attributes);
      return true;
    } catch (e) {
      return false;
    }
  }
});

},{"./_object-dp":"node_modules/core-js/modules/_object-dp.js","./_export":"node_modules/core-js/modules/_export.js","./_an-object":"node_modules/core-js/modules/_an-object.js","./_to-primitive":"node_modules/core-js/modules/_to-primitive.js","./_fails":"node_modules/core-js/modules/_fails.js"}],"node_modules/core-js/modules/es6.reflect.delete-property.js":[function(require,module,exports) {
// 26.1.4 Reflect.deleteProperty(target, propertyKey)
var $export = require('./_export');
var gOPD = require('./_object-gopd').f;
var anObject = require('./_an-object');

$export($export.S, 'Reflect', {
  deleteProperty: function deleteProperty(target, propertyKey) {
    var desc = gOPD(anObject(target), propertyKey);
    return desc && !desc.configurable ? false : delete target[propertyKey];
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_object-gopd":"node_modules/core-js/modules/_object-gopd.js","./_an-object":"node_modules/core-js/modules/_an-object.js"}],"node_modules/core-js/modules/es6.reflect.enumerate.js":[function(require,module,exports) {
'use strict';
// 26.1.5 Reflect.enumerate(target)
var $export = require('./_export');
var anObject = require('./_an-object');
var Enumerate = function (iterated) {
  this._t = anObject(iterated); // target
  this._i = 0;                  // next index
  var keys = this._k = [];      // keys
  var key;
  for (key in iterated) keys.push(key);
};
require('./_iter-create')(Enumerate, 'Object', function () {
  var that = this;
  var keys = that._k;
  var key;
  do {
    if (that._i >= keys.length) return { value: undefined, done: true };
  } while (!((key = keys[that._i++]) in that._t));
  return { value: key, done: false };
});

$export($export.S, 'Reflect', {
  enumerate: function enumerate(target) {
    return new Enumerate(target);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_an-object":"node_modules/core-js/modules/_an-object.js","./_iter-create":"node_modules/core-js/modules/_iter-create.js"}],"node_modules/core-js/modules/es6.reflect.get.js":[function(require,module,exports) {
// 26.1.6 Reflect.get(target, propertyKey [, receiver])
var gOPD = require('./_object-gopd');
var getPrototypeOf = require('./_object-gpo');
var has = require('./_has');
var $export = require('./_export');
var isObject = require('./_is-object');
var anObject = require('./_an-object');

function get(target, propertyKey /* , receiver */) {
  var receiver = arguments.length < 3 ? target : arguments[2];
  var desc, proto;
  if (anObject(target) === receiver) return target[propertyKey];
  if (desc = gOPD.f(target, propertyKey)) return has(desc, 'value')
    ? desc.value
    : desc.get !== undefined
      ? desc.get.call(receiver)
      : undefined;
  if (isObject(proto = getPrototypeOf(target))) return get(proto, propertyKey, receiver);
}

$export($export.S, 'Reflect', { get: get });

},{"./_object-gopd":"node_modules/core-js/modules/_object-gopd.js","./_object-gpo":"node_modules/core-js/modules/_object-gpo.js","./_has":"node_modules/core-js/modules/_has.js","./_export":"node_modules/core-js/modules/_export.js","./_is-object":"node_modules/core-js/modules/_is-object.js","./_an-object":"node_modules/core-js/modules/_an-object.js"}],"node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js":[function(require,module,exports) {
// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
var gOPD = require('./_object-gopd');
var $export = require('./_export');
var anObject = require('./_an-object');

$export($export.S, 'Reflect', {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
    return gOPD.f(anObject(target), propertyKey);
  }
});

},{"./_object-gopd":"node_modules/core-js/modules/_object-gopd.js","./_export":"node_modules/core-js/modules/_export.js","./_an-object":"node_modules/core-js/modules/_an-object.js"}],"node_modules/core-js/modules/es6.reflect.get-prototype-of.js":[function(require,module,exports) {
// 26.1.8 Reflect.getPrototypeOf(target)
var $export = require('./_export');
var getProto = require('./_object-gpo');
var anObject = require('./_an-object');

$export($export.S, 'Reflect', {
  getPrototypeOf: function getPrototypeOf(target) {
    return getProto(anObject(target));
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_object-gpo":"node_modules/core-js/modules/_object-gpo.js","./_an-object":"node_modules/core-js/modules/_an-object.js"}],"node_modules/core-js/modules/es6.reflect.has.js":[function(require,module,exports) {
// 26.1.9 Reflect.has(target, propertyKey)
var $export = require('./_export');

$export($export.S, 'Reflect', {
  has: function has(target, propertyKey) {
    return propertyKey in target;
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js"}],"node_modules/core-js/modules/es6.reflect.is-extensible.js":[function(require,module,exports) {
// 26.1.10 Reflect.isExtensible(target)
var $export = require('./_export');
var anObject = require('./_an-object');
var $isExtensible = Object.isExtensible;

$export($export.S, 'Reflect', {
  isExtensible: function isExtensible(target) {
    anObject(target);
    return $isExtensible ? $isExtensible(target) : true;
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_an-object":"node_modules/core-js/modules/_an-object.js"}],"node_modules/core-js/modules/_own-keys.js":[function(require,module,exports) {
// all object keys, includes non-enumerable and symbols
var gOPN = require('./_object-gopn');
var gOPS = require('./_object-gops');
var anObject = require('./_an-object');
var Reflect = require('./_global').Reflect;
module.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {
  var keys = gOPN.f(anObject(it));
  var getSymbols = gOPS.f;
  return getSymbols ? keys.concat(getSymbols(it)) : keys;
};

},{"./_object-gopn":"node_modules/core-js/modules/_object-gopn.js","./_object-gops":"node_modules/core-js/modules/_object-gops.js","./_an-object":"node_modules/core-js/modules/_an-object.js","./_global":"node_modules/core-js/modules/_global.js"}],"node_modules/core-js/modules/es6.reflect.own-keys.js":[function(require,module,exports) {
// 26.1.11 Reflect.ownKeys(target)
var $export = require('./_export');

$export($export.S, 'Reflect', { ownKeys: require('./_own-keys') });

},{"./_export":"node_modules/core-js/modules/_export.js","./_own-keys":"node_modules/core-js/modules/_own-keys.js"}],"node_modules/core-js/modules/es6.reflect.prevent-extensions.js":[function(require,module,exports) {
// 26.1.12 Reflect.preventExtensions(target)
var $export = require('./_export');
var anObject = require('./_an-object');
var $preventExtensions = Object.preventExtensions;

$export($export.S, 'Reflect', {
  preventExtensions: function preventExtensions(target) {
    anObject(target);
    try {
      if ($preventExtensions) $preventExtensions(target);
      return true;
    } catch (e) {
      return false;
    }
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_an-object":"node_modules/core-js/modules/_an-object.js"}],"node_modules/core-js/modules/es6.reflect.set.js":[function(require,module,exports) {
// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
var dP = require('./_object-dp');
var gOPD = require('./_object-gopd');
var getPrototypeOf = require('./_object-gpo');
var has = require('./_has');
var $export = require('./_export');
var createDesc = require('./_property-desc');
var anObject = require('./_an-object');
var isObject = require('./_is-object');

function set(target, propertyKey, V /* , receiver */) {
  var receiver = arguments.length < 4 ? target : arguments[3];
  var ownDesc = gOPD.f(anObject(target), propertyKey);
  var existingDescriptor, proto;
  if (!ownDesc) {
    if (isObject(proto = getPrototypeOf(target))) {
      return set(proto, propertyKey, V, receiver);
    }
    ownDesc = createDesc(0);
  }
  if (has(ownDesc, 'value')) {
    if (ownDesc.writable === false || !isObject(receiver)) return false;
    if (existingDescriptor = gOPD.f(receiver, propertyKey)) {
      if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;
      existingDescriptor.value = V;
      dP.f(receiver, propertyKey, existingDescriptor);
    } else dP.f(receiver, propertyKey, createDesc(0, V));
    return true;
  }
  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
}

$export($export.S, 'Reflect', { set: set });

},{"./_object-dp":"node_modules/core-js/modules/_object-dp.js","./_object-gopd":"node_modules/core-js/modules/_object-gopd.js","./_object-gpo":"node_modules/core-js/modules/_object-gpo.js","./_has":"node_modules/core-js/modules/_has.js","./_export":"node_modules/core-js/modules/_export.js","./_property-desc":"node_modules/core-js/modules/_property-desc.js","./_an-object":"node_modules/core-js/modules/_an-object.js","./_is-object":"node_modules/core-js/modules/_is-object.js"}],"node_modules/core-js/modules/es6.reflect.set-prototype-of.js":[function(require,module,exports) {
// 26.1.14 Reflect.setPrototypeOf(target, proto)
var $export = require('./_export');
var setProto = require('./_set-proto');

if (setProto) $export($export.S, 'Reflect', {
  setPrototypeOf: function setPrototypeOf(target, proto) {
    setProto.check(target, proto);
    try {
      setProto.set(target, proto);
      return true;
    } catch (e) {
      return false;
    }
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_set-proto":"node_modules/core-js/modules/_set-proto.js"}],"node_modules/core-js/modules/es7.array.includes.js":[function(require,module,exports) {
'use strict';
// https://github.com/tc39/Array.prototype.includes
var $export = require('./_export');
var $includes = require('./_array-includes')(true);

$export($export.P, 'Array', {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

require('./_add-to-unscopables')('includes');

},{"./_export":"node_modules/core-js/modules/_export.js","./_array-includes":"node_modules/core-js/modules/_array-includes.js","./_add-to-unscopables":"node_modules/core-js/modules/_add-to-unscopables.js"}],"node_modules/core-js/modules/_flatten-into-array.js":[function(require,module,exports) {
'use strict';
// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray
var isArray = require('./_is-array');
var isObject = require('./_is-object');
var toLength = require('./_to-length');
var ctx = require('./_ctx');
var IS_CONCAT_SPREADABLE = require('./_wks')('isConcatSpreadable');

function flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {
  var targetIndex = start;
  var sourceIndex = 0;
  var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;
  var element, spreadable;

  while (sourceIndex < sourceLen) {
    if (sourceIndex in source) {
      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];

      spreadable = false;
      if (isObject(element)) {
        spreadable = element[IS_CONCAT_SPREADABLE];
        spreadable = spreadable !== undefined ? !!spreadable : isArray(element);
      }

      if (spreadable && depth > 0) {
        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;
      } else {
        if (targetIndex >= 0x1fffffffffffff) throw TypeError();
        target[targetIndex] = element;
      }

      targetIndex++;
    }
    sourceIndex++;
  }
  return targetIndex;
}

module.exports = flattenIntoArray;

},{"./_is-array":"node_modules/core-js/modules/_is-array.js","./_is-object":"node_modules/core-js/modules/_is-object.js","./_to-length":"node_modules/core-js/modules/_to-length.js","./_ctx":"node_modules/core-js/modules/_ctx.js","./_wks":"node_modules/core-js/modules/_wks.js"}],"node_modules/core-js/modules/es7.array.flat-map.js":[function(require,module,exports) {
'use strict';
// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatMap
var $export = require('./_export');
var flattenIntoArray = require('./_flatten-into-array');
var toObject = require('./_to-object');
var toLength = require('./_to-length');
var aFunction = require('./_a-function');
var arraySpeciesCreate = require('./_array-species-create');

$export($export.P, 'Array', {
  flatMap: function flatMap(callbackfn /* , thisArg */) {
    var O = toObject(this);
    var sourceLen, A;
    aFunction(callbackfn);
    sourceLen = toLength(O.length);
    A = arraySpeciesCreate(O, 0);
    flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);
    return A;
  }
});

require('./_add-to-unscopables')('flatMap');

},{"./_export":"node_modules/core-js/modules/_export.js","./_flatten-into-array":"node_modules/core-js/modules/_flatten-into-array.js","./_to-object":"node_modules/core-js/modules/_to-object.js","./_to-length":"node_modules/core-js/modules/_to-length.js","./_a-function":"node_modules/core-js/modules/_a-function.js","./_array-species-create":"node_modules/core-js/modules/_array-species-create.js","./_add-to-unscopables":"node_modules/core-js/modules/_add-to-unscopables.js"}],"node_modules/core-js/modules/es7.array.flatten.js":[function(require,module,exports) {
'use strict';
// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatten
var $export = require('./_export');
var flattenIntoArray = require('./_flatten-into-array');
var toObject = require('./_to-object');
var toLength = require('./_to-length');
var toInteger = require('./_to-integer');
var arraySpeciesCreate = require('./_array-species-create');

$export($export.P, 'Array', {
  flatten: function flatten(/* depthArg = 1 */) {
    var depthArg = arguments[0];
    var O = toObject(this);
    var sourceLen = toLength(O.length);
    var A = arraySpeciesCreate(O, 0);
    flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));
    return A;
  }
});

require('./_add-to-unscopables')('flatten');

},{"./_export":"node_modules/core-js/modules/_export.js","./_flatten-into-array":"node_modules/core-js/modules/_flatten-into-array.js","./_to-object":"node_modules/core-js/modules/_to-object.js","./_to-length":"node_modules/core-js/modules/_to-length.js","./_to-integer":"node_modules/core-js/modules/_to-integer.js","./_array-species-create":"node_modules/core-js/modules/_array-species-create.js","./_add-to-unscopables":"node_modules/core-js/modules/_add-to-unscopables.js"}],"node_modules/core-js/modules/es7.string.at.js":[function(require,module,exports) {
'use strict';
// https://github.com/mathiasbynens/String.prototype.at
var $export = require('./_export');
var $at = require('./_string-at')(true);
var $fails = require('./_fails');

var FORCED = $fails(function () {
  return 'ð ®·'.at(0) !== 'ð ®·';
});

$export($export.P + $export.F * FORCED, 'String', {
  at: function at(pos) {
    return $at(this, pos);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_string-at":"node_modules/core-js/modules/_string-at.js","./_fails":"node_modules/core-js/modules/_fails.js"}],"node_modules/core-js/modules/_string-pad.js":[function(require,module,exports) {
// https://github.com/tc39/proposal-string-pad-start-end
var toLength = require('./_to-length');
var repeat = require('./_string-repeat');
var defined = require('./_defined');

module.exports = function (that, maxLength, fillString, left) {
  var S = String(defined(that));
  var stringLength = S.length;
  var fillStr = fillString === undefined ? ' ' : String(fillString);
  var intMaxLength = toLength(maxLength);
  if (intMaxLength <= stringLength || fillStr == '') return S;
  var fillLen = intMaxLength - stringLength;
  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);
  return left ? stringFiller + S : S + stringFiller;
};

},{"./_to-length":"node_modules/core-js/modules/_to-length.js","./_string-repeat":"node_modules/core-js/modules/_string-repeat.js","./_defined":"node_modules/core-js/modules/_defined.js"}],"node_modules/core-js/modules/es7.string.pad-start.js":[function(require,module,exports) {
'use strict';
// https://github.com/tc39/proposal-string-pad-start-end
var $export = require('./_export');
var $pad = require('./_string-pad');
var userAgent = require('./_user-agent');

// https://github.com/zloirock/core-js/issues/280
var WEBKIT_BUG = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(userAgent);

$export($export.P + $export.F * WEBKIT_BUG, 'String', {
  padStart: function padStart(maxLength /* , fillString = ' ' */) {
    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_string-pad":"node_modules/core-js/modules/_string-pad.js","./_user-agent":"node_modules/core-js/modules/_user-agent.js"}],"node_modules/core-js/modules/es7.string.pad-end.js":[function(require,module,exports) {
'use strict';
// https://github.com/tc39/proposal-string-pad-start-end
var $export = require('./_export');
var $pad = require('./_string-pad');
var userAgent = require('./_user-agent');

// https://github.com/zloirock/core-js/issues/280
var WEBKIT_BUG = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(userAgent);

$export($export.P + $export.F * WEBKIT_BUG, 'String', {
  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {
    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_string-pad":"node_modules/core-js/modules/_string-pad.js","./_user-agent":"node_modules/core-js/modules/_user-agent.js"}],"node_modules/core-js/modules/es7.string.trim-left.js":[function(require,module,exports) {
'use strict';
// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
require('./_string-trim')('trimLeft', function ($trim) {
  return function trimLeft() {
    return $trim(this, 1);
  };
}, 'trimStart');

},{"./_string-trim":"node_modules/core-js/modules/_string-trim.js"}],"node_modules/core-js/modules/es7.string.trim-right.js":[function(require,module,exports) {
'use strict';
// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
require('./_string-trim')('trimRight', function ($trim) {
  return function trimRight() {
    return $trim(this, 2);
  };
}, 'trimEnd');

},{"./_string-trim":"node_modules/core-js/modules/_string-trim.js"}],"node_modules/core-js/modules/es7.string.match-all.js":[function(require,module,exports) {
'use strict';
// https://tc39.github.io/String.prototype.matchAll/
var $export = require('./_export');
var defined = require('./_defined');
var toLength = require('./_to-length');
var isRegExp = require('./_is-regexp');
var getFlags = require('./_flags');
var RegExpProto = RegExp.prototype;

var $RegExpStringIterator = function (regexp, string) {
  this._r = regexp;
  this._s = string;
};

require('./_iter-create')($RegExpStringIterator, 'RegExp String', function next() {
  var match = this._r.exec(this._s);
  return { value: match, done: match === null };
});

$export($export.P, 'String', {
  matchAll: function matchAll(regexp) {
    defined(this);
    if (!isRegExp(regexp)) throw TypeError(regexp + ' is not a regexp!');
    var S = String(this);
    var flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp);
    var rx = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);
    rx.lastIndex = toLength(regexp.lastIndex);
    return new $RegExpStringIterator(rx, S);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_defined":"node_modules/core-js/modules/_defined.js","./_to-length":"node_modules/core-js/modules/_to-length.js","./_is-regexp":"node_modules/core-js/modules/_is-regexp.js","./_flags":"node_modules/core-js/modules/_flags.js","./_iter-create":"node_modules/core-js/modules/_iter-create.js"}],"node_modules/core-js/modules/es7.symbol.async-iterator.js":[function(require,module,exports) {
require('./_wks-define')('asyncIterator');

},{"./_wks-define":"node_modules/core-js/modules/_wks-define.js"}],"node_modules/core-js/modules/es7.symbol.observable.js":[function(require,module,exports) {
require('./_wks-define')('observable');

},{"./_wks-define":"node_modules/core-js/modules/_wks-define.js"}],"node_modules/core-js/modules/es7.object.get-own-property-descriptors.js":[function(require,module,exports) {
// https://github.com/tc39/proposal-object-getownpropertydescriptors
var $export = require('./_export');
var ownKeys = require('./_own-keys');
var toIObject = require('./_to-iobject');
var gOPD = require('./_object-gopd');
var createProperty = require('./_create-property');

$export($export.S, 'Object', {
  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
    var O = toIObject(object);
    var getDesc = gOPD.f;
    var keys = ownKeys(O);
    var result = {};
    var i = 0;
    var key, desc;
    while (keys.length > i) {
      desc = getDesc(O, key = keys[i++]);
      if (desc !== undefined) createProperty(result, key, desc);
    }
    return result;
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_own-keys":"node_modules/core-js/modules/_own-keys.js","./_to-iobject":"node_modules/core-js/modules/_to-iobject.js","./_object-gopd":"node_modules/core-js/modules/_object-gopd.js","./_create-property":"node_modules/core-js/modules/_create-property.js"}],"node_modules/core-js/modules/_object-to-array.js":[function(require,module,exports) {
var DESCRIPTORS = require('./_descriptors');
var getKeys = require('./_object-keys');
var toIObject = require('./_to-iobject');
var isEnum = require('./_object-pie').f;
module.exports = function (isEntries) {
  return function (it) {
    var O = toIObject(it);
    var keys = getKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;
    while (length > i) {
      key = keys[i++];
      if (!DESCRIPTORS || isEnum.call(O, key)) {
        result.push(isEntries ? [key, O[key]] : O[key]);
      }
    }
    return result;
  };
};

},{"./_descriptors":"node_modules/core-js/modules/_descriptors.js","./_object-keys":"node_modules/core-js/modules/_object-keys.js","./_to-iobject":"node_modules/core-js/modules/_to-iobject.js","./_object-pie":"node_modules/core-js/modules/_object-pie.js"}],"node_modules/core-js/modules/es7.object.values.js":[function(require,module,exports) {
// https://github.com/tc39/proposal-object-values-entries
var $export = require('./_export');
var $values = require('./_object-to-array')(false);

$export($export.S, 'Object', {
  values: function values(it) {
    return $values(it);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_object-to-array":"node_modules/core-js/modules/_object-to-array.js"}],"node_modules/core-js/modules/es7.object.entries.js":[function(require,module,exports) {
// https://github.com/tc39/proposal-object-values-entries
var $export = require('./_export');
var $entries = require('./_object-to-array')(true);

$export($export.S, 'Object', {
  entries: function entries(it) {
    return $entries(it);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_object-to-array":"node_modules/core-js/modules/_object-to-array.js"}],"node_modules/core-js/modules/_object-forced-pam.js":[function(require,module,exports) {
'use strict';
// Forced replacement prototype accessors methods
module.exports = require('./_library') || !require('./_fails')(function () {
  var K = Math.random();
  // In FF throws only define methods
  // eslint-disable-next-line no-undef, no-useless-call
  __defineSetter__.call(null, K, function () { /* empty */ });
  delete require('./_global')[K];
});

},{"./_library":"node_modules/core-js/modules/_library.js","./_fails":"node_modules/core-js/modules/_fails.js","./_global":"node_modules/core-js/modules/_global.js"}],"node_modules/core-js/modules/es7.object.define-getter.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var toObject = require('./_to-object');
var aFunction = require('./_a-function');
var $defineProperty = require('./_object-dp');

// B.2.2.2 Object.prototype.__defineGetter__(P, getter)
require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
  __defineGetter__: function __defineGetter__(P, getter) {
    $defineProperty.f(toObject(this), P, { get: aFunction(getter), enumerable: true, configurable: true });
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_to-object":"node_modules/core-js/modules/_to-object.js","./_a-function":"node_modules/core-js/modules/_a-function.js","./_object-dp":"node_modules/core-js/modules/_object-dp.js","./_descriptors":"node_modules/core-js/modules/_descriptors.js","./_object-forced-pam":"node_modules/core-js/modules/_object-forced-pam.js"}],"node_modules/core-js/modules/es7.object.define-setter.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var toObject = require('./_to-object');
var aFunction = require('./_a-function');
var $defineProperty = require('./_object-dp');

// B.2.2.3 Object.prototype.__defineSetter__(P, setter)
require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
  __defineSetter__: function __defineSetter__(P, setter) {
    $defineProperty.f(toObject(this), P, { set: aFunction(setter), enumerable: true, configurable: true });
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_to-object":"node_modules/core-js/modules/_to-object.js","./_a-function":"node_modules/core-js/modules/_a-function.js","./_object-dp":"node_modules/core-js/modules/_object-dp.js","./_descriptors":"node_modules/core-js/modules/_descriptors.js","./_object-forced-pam":"node_modules/core-js/modules/_object-forced-pam.js"}],"node_modules/core-js/modules/es7.object.lookup-getter.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var toObject = require('./_to-object');
var toPrimitive = require('./_to-primitive');
var getPrototypeOf = require('./_object-gpo');
var getOwnPropertyDescriptor = require('./_object-gopd').f;

// B.2.2.4 Object.prototype.__lookupGetter__(P)
require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
  __lookupGetter__: function __lookupGetter__(P) {
    var O = toObject(this);
    var K = toPrimitive(P, true);
    var D;
    do {
      if (D = getOwnPropertyDescriptor(O, K)) return D.get;
    } while (O = getPrototypeOf(O));
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_to-object":"node_modules/core-js/modules/_to-object.js","./_to-primitive":"node_modules/core-js/modules/_to-primitive.js","./_object-gpo":"node_modules/core-js/modules/_object-gpo.js","./_object-gopd":"node_modules/core-js/modules/_object-gopd.js","./_descriptors":"node_modules/core-js/modules/_descriptors.js","./_object-forced-pam":"node_modules/core-js/modules/_object-forced-pam.js"}],"node_modules/core-js/modules/es7.object.lookup-setter.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var toObject = require('./_to-object');
var toPrimitive = require('./_to-primitive');
var getPrototypeOf = require('./_object-gpo');
var getOwnPropertyDescriptor = require('./_object-gopd').f;

// B.2.2.5 Object.prototype.__lookupSetter__(P)
require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
  __lookupSetter__: function __lookupSetter__(P) {
    var O = toObject(this);
    var K = toPrimitive(P, true);
    var D;
    do {
      if (D = getOwnPropertyDescriptor(O, K)) return D.set;
    } while (O = getPrototypeOf(O));
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_to-object":"node_modules/core-js/modules/_to-object.js","./_to-primitive":"node_modules/core-js/modules/_to-primitive.js","./_object-gpo":"node_modules/core-js/modules/_object-gpo.js","./_object-gopd":"node_modules/core-js/modules/_object-gopd.js","./_descriptors":"node_modules/core-js/modules/_descriptors.js","./_object-forced-pam":"node_modules/core-js/modules/_object-forced-pam.js"}],"node_modules/core-js/modules/_array-from-iterable.js":[function(require,module,exports) {
var forOf = require('./_for-of');

module.exports = function (iter, ITERATOR) {
  var result = [];
  forOf(iter, false, result.push, result, ITERATOR);
  return result;
};

},{"./_for-of":"node_modules/core-js/modules/_for-of.js"}],"node_modules/core-js/modules/_collection-to-json.js":[function(require,module,exports) {
// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var classof = require('./_classof');
var from = require('./_array-from-iterable');
module.exports = function (NAME) {
  return function toJSON() {
    if (classof(this) != NAME) throw TypeError(NAME + "#toJSON isn't generic");
    return from(this);
  };
};

},{"./_classof":"node_modules/core-js/modules/_classof.js","./_array-from-iterable":"node_modules/core-js/modules/_array-from-iterable.js"}],"node_modules/core-js/modules/es7.map.to-json.js":[function(require,module,exports) {
// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var $export = require('./_export');

$export($export.P + $export.R, 'Map', { toJSON: require('./_collection-to-json')('Map') });

},{"./_export":"node_modules/core-js/modules/_export.js","./_collection-to-json":"node_modules/core-js/modules/_collection-to-json.js"}],"node_modules/core-js/modules/es7.set.to-json.js":[function(require,module,exports) {
// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var $export = require('./_export');

$export($export.P + $export.R, 'Set', { toJSON: require('./_collection-to-json')('Set') });

},{"./_export":"node_modules/core-js/modules/_export.js","./_collection-to-json":"node_modules/core-js/modules/_collection-to-json.js"}],"node_modules/core-js/modules/_set-collection-of.js":[function(require,module,exports) {
'use strict';
// https://tc39.github.io/proposal-setmap-offrom/
var $export = require('./_export');

module.exports = function (COLLECTION) {
  $export($export.S, COLLECTION, { of: function of() {
    var length = arguments.length;
    var A = new Array(length);
    while (length--) A[length] = arguments[length];
    return new this(A);
  } });
};

},{"./_export":"node_modules/core-js/modules/_export.js"}],"node_modules/core-js/modules/es7.map.of.js":[function(require,module,exports) {
// https://tc39.github.io/proposal-setmap-offrom/#sec-map.of
require('./_set-collection-of')('Map');

},{"./_set-collection-of":"node_modules/core-js/modules/_set-collection-of.js"}],"node_modules/core-js/modules/es7.set.of.js":[function(require,module,exports) {
// https://tc39.github.io/proposal-setmap-offrom/#sec-set.of
require('./_set-collection-of')('Set');

},{"./_set-collection-of":"node_modules/core-js/modules/_set-collection-of.js"}],"node_modules/core-js/modules/es7.weak-map.of.js":[function(require,module,exports) {
// https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.of
require('./_set-collection-of')('WeakMap');

},{"./_set-collection-of":"node_modules/core-js/modules/_set-collection-of.js"}],"node_modules/core-js/modules/es7.weak-set.of.js":[function(require,module,exports) {
// https://tc39.github.io/proposal-setmap-offrom/#sec-weakset.of
require('./_set-collection-of')('WeakSet');

},{"./_set-collection-of":"node_modules/core-js/modules/_set-collection-of.js"}],"node_modules/core-js/modules/_set-collection-from.js":[function(require,module,exports) {
'use strict';
// https://tc39.github.io/proposal-setmap-offrom/
var $export = require('./_export');
var aFunction = require('./_a-function');
var ctx = require('./_ctx');
var forOf = require('./_for-of');

module.exports = function (COLLECTION) {
  $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {
    var mapFn = arguments[1];
    var mapping, A, n, cb;
    aFunction(this);
    mapping = mapFn !== undefined;
    if (mapping) aFunction(mapFn);
    if (source == undefined) return new this();
    A = [];
    if (mapping) {
      n = 0;
      cb = ctx(mapFn, arguments[2], 2);
      forOf(source, false, function (nextItem) {
        A.push(cb(nextItem, n++));
      });
    } else {
      forOf(source, false, A.push, A);
    }
    return new this(A);
  } });
};

},{"./_export":"node_modules/core-js/modules/_export.js","./_a-function":"node_modules/core-js/modules/_a-function.js","./_ctx":"node_modules/core-js/modules/_ctx.js","./_for-of":"node_modules/core-js/modules/_for-of.js"}],"node_modules/core-js/modules/es7.map.from.js":[function(require,module,exports) {
// https://tc39.github.io/proposal-setmap-offrom/#sec-map.from
require('./_set-collection-from')('Map');

},{"./_set-collection-from":"node_modules/core-js/modules/_set-collection-from.js"}],"node_modules/core-js/modules/es7.set.from.js":[function(require,module,exports) {
// https://tc39.github.io/proposal-setmap-offrom/#sec-set.from
require('./_set-collection-from')('Set');

},{"./_set-collection-from":"node_modules/core-js/modules/_set-collection-from.js"}],"node_modules/core-js/modules/es7.weak-map.from.js":[function(require,module,exports) {
// https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.from
require('./_set-collection-from')('WeakMap');

},{"./_set-collection-from":"node_modules/core-js/modules/_set-collection-from.js"}],"node_modules/core-js/modules/es7.weak-set.from.js":[function(require,module,exports) {
// https://tc39.github.io/proposal-setmap-offrom/#sec-weakset.from
require('./_set-collection-from')('WeakSet');

},{"./_set-collection-from":"node_modules/core-js/modules/_set-collection-from.js"}],"node_modules/core-js/modules/es7.global.js":[function(require,module,exports) {
// https://github.com/tc39/proposal-global
var $export = require('./_export');

$export($export.G, { global: require('./_global') });

},{"./_export":"node_modules/core-js/modules/_export.js","./_global":"node_modules/core-js/modules/_global.js"}],"node_modules/core-js/modules/es7.system.global.js":[function(require,module,exports) {
// https://github.com/tc39/proposal-global
var $export = require('./_export');

$export($export.S, 'System', { global: require('./_global') });

},{"./_export":"node_modules/core-js/modules/_export.js","./_global":"node_modules/core-js/modules/_global.js"}],"node_modules/core-js/modules/es7.error.is-error.js":[function(require,module,exports) {
// https://github.com/ljharb/proposal-is-error
var $export = require('./_export');
var cof = require('./_cof');

$export($export.S, 'Error', {
  isError: function isError(it) {
    return cof(it) === 'Error';
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_cof":"node_modules/core-js/modules/_cof.js"}],"node_modules/core-js/modules/es7.math.clamp.js":[function(require,module,exports) {
// https://rwaldron.github.io/proposal-math-extensions/
var $export = require('./_export');

$export($export.S, 'Math', {
  clamp: function clamp(x, lower, upper) {
    return Math.min(upper, Math.max(lower, x));
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js"}],"node_modules/core-js/modules/es7.math.deg-per-rad.js":[function(require,module,exports) {
// https://rwaldron.github.io/proposal-math-extensions/
var $export = require('./_export');

$export($export.S, 'Math', { DEG_PER_RAD: Math.PI / 180 });

},{"./_export":"node_modules/core-js/modules/_export.js"}],"node_modules/core-js/modules/es7.math.degrees.js":[function(require,module,exports) {
// https://rwaldron.github.io/proposal-math-extensions/
var $export = require('./_export');
var RAD_PER_DEG = 180 / Math.PI;

$export($export.S, 'Math', {
  degrees: function degrees(radians) {
    return radians * RAD_PER_DEG;
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js"}],"node_modules/core-js/modules/_math-scale.js":[function(require,module,exports) {
// https://rwaldron.github.io/proposal-math-extensions/
module.exports = Math.scale || function scale(x, inLow, inHigh, outLow, outHigh) {
  if (
    arguments.length === 0
      // eslint-disable-next-line no-self-compare
      || x != x
      // eslint-disable-next-line no-self-compare
      || inLow != inLow
      // eslint-disable-next-line no-self-compare
      || inHigh != inHigh
      // eslint-disable-next-line no-self-compare
      || outLow != outLow
      // eslint-disable-next-line no-self-compare
      || outHigh != outHigh
  ) return NaN;
  if (x === Infinity || x === -Infinity) return x;
  return (x - inLow) * (outHigh - outLow) / (inHigh - inLow) + outLow;
};

},{}],"node_modules/core-js/modules/es7.math.fscale.js":[function(require,module,exports) {
// https://rwaldron.github.io/proposal-math-extensions/
var $export = require('./_export');
var scale = require('./_math-scale');
var fround = require('./_math-fround');

$export($export.S, 'Math', {
  fscale: function fscale(x, inLow, inHigh, outLow, outHigh) {
    return fround(scale(x, inLow, inHigh, outLow, outHigh));
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_math-scale":"node_modules/core-js/modules/_math-scale.js","./_math-fround":"node_modules/core-js/modules/_math-fround.js"}],"node_modules/core-js/modules/es7.math.iaddh.js":[function(require,module,exports) {
// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
var $export = require('./_export');

$export($export.S, 'Math', {
  iaddh: function iaddh(x0, x1, y0, y1) {
    var $x0 = x0 >>> 0;
    var $x1 = x1 >>> 0;
    var $y0 = y0 >>> 0;
    return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js"}],"node_modules/core-js/modules/es7.math.isubh.js":[function(require,module,exports) {
// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
var $export = require('./_export');

$export($export.S, 'Math', {
  isubh: function isubh(x0, x1, y0, y1) {
    var $x0 = x0 >>> 0;
    var $x1 = x1 >>> 0;
    var $y0 = y0 >>> 0;
    return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js"}],"node_modules/core-js/modules/es7.math.imulh.js":[function(require,module,exports) {
// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
var $export = require('./_export');

$export($export.S, 'Math', {
  imulh: function imulh(u, v) {
    var UINT16 = 0xffff;
    var $u = +u;
    var $v = +v;
    var u0 = $u & UINT16;
    var v0 = $v & UINT16;
    var u1 = $u >> 16;
    var v1 = $v >> 16;
    var t = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
    return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js"}],"node_modules/core-js/modules/es7.math.rad-per-deg.js":[function(require,module,exports) {
// https://rwaldron.github.io/proposal-math-extensions/
var $export = require('./_export');

$export($export.S, 'Math', { RAD_PER_DEG: 180 / Math.PI });

},{"./_export":"node_modules/core-js/modules/_export.js"}],"node_modules/core-js/modules/es7.math.radians.js":[function(require,module,exports) {
// https://rwaldron.github.io/proposal-math-extensions/
var $export = require('./_export');
var DEG_PER_RAD = Math.PI / 180;

$export($export.S, 'Math', {
  radians: function radians(degrees) {
    return degrees * DEG_PER_RAD;
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js"}],"node_modules/core-js/modules/es7.math.scale.js":[function(require,module,exports) {
// https://rwaldron.github.io/proposal-math-extensions/
var $export = require('./_export');

$export($export.S, 'Math', { scale: require('./_math-scale') });

},{"./_export":"node_modules/core-js/modules/_export.js","./_math-scale":"node_modules/core-js/modules/_math-scale.js"}],"node_modules/core-js/modules/es7.math.umulh.js":[function(require,module,exports) {
// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
var $export = require('./_export');

$export($export.S, 'Math', {
  umulh: function umulh(u, v) {
    var UINT16 = 0xffff;
    var $u = +u;
    var $v = +v;
    var u0 = $u & UINT16;
    var v0 = $v & UINT16;
    var u1 = $u >>> 16;
    var v1 = $v >>> 16;
    var t = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
    return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js"}],"node_modules/core-js/modules/es7.math.signbit.js":[function(require,module,exports) {
// http://jfbastien.github.io/papers/Math.signbit.html
var $export = require('./_export');

$export($export.S, 'Math', { signbit: function signbit(x) {
  // eslint-disable-next-line no-self-compare
  return (x = +x) != x ? x : x == 0 ? 1 / x == Infinity : x > 0;
} });

},{"./_export":"node_modules/core-js/modules/_export.js"}],"node_modules/core-js/modules/es7.promise.finally.js":[function(require,module,exports) {

// https://github.com/tc39/proposal-promise-finally
'use strict';
var $export = require('./_export');
var core = require('./_core');
var global = require('./_global');
var speciesConstructor = require('./_species-constructor');
var promiseResolve = require('./_promise-resolve');

$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
  var C = speciesConstructor(this, core.Promise || global.Promise);
  var isFunction = typeof onFinally == 'function';
  return this.then(
    isFunction ? function (x) {
      return promiseResolve(C, onFinally()).then(function () { return x; });
    } : onFinally,
    isFunction ? function (e) {
      return promiseResolve(C, onFinally()).then(function () { throw e; });
    } : onFinally
  );
} });

},{"./_export":"node_modules/core-js/modules/_export.js","./_core":"node_modules/core-js/modules/_core.js","./_global":"node_modules/core-js/modules/_global.js","./_species-constructor":"node_modules/core-js/modules/_species-constructor.js","./_promise-resolve":"node_modules/core-js/modules/_promise-resolve.js"}],"node_modules/core-js/modules/es7.promise.try.js":[function(require,module,exports) {
'use strict';
// https://github.com/tc39/proposal-promise-try
var $export = require('./_export');
var newPromiseCapability = require('./_new-promise-capability');
var perform = require('./_perform');

$export($export.S, 'Promise', { 'try': function (callbackfn) {
  var promiseCapability = newPromiseCapability.f(this);
  var result = perform(callbackfn);
  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
  return promiseCapability.promise;
} });

},{"./_export":"node_modules/core-js/modules/_export.js","./_new-promise-capability":"node_modules/core-js/modules/_new-promise-capability.js","./_perform":"node_modules/core-js/modules/_perform.js"}],"node_modules/core-js/modules/_metadata.js":[function(require,module,exports) {
var Map = require('./es6.map');
var $export = require('./_export');
var shared = require('./_shared')('metadata');
var store = shared.store || (shared.store = new (require('./es6.weak-map'))());

var getOrCreateMetadataMap = function (target, targetKey, create) {
  var targetMetadata = store.get(target);
  if (!targetMetadata) {
    if (!create) return undefined;
    store.set(target, targetMetadata = new Map());
  }
  var keyMetadata = targetMetadata.get(targetKey);
  if (!keyMetadata) {
    if (!create) return undefined;
    targetMetadata.set(targetKey, keyMetadata = new Map());
  } return keyMetadata;
};
var ordinaryHasOwnMetadata = function (MetadataKey, O, P) {
  var metadataMap = getOrCreateMetadataMap(O, P, false);
  return metadataMap === undefined ? false : metadataMap.has(MetadataKey);
};
var ordinaryGetOwnMetadata = function (MetadataKey, O, P) {
  var metadataMap = getOrCreateMetadataMap(O, P, false);
  return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);
};
var ordinaryDefineOwnMetadata = function (MetadataKey, MetadataValue, O, P) {
  getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);
};
var ordinaryOwnMetadataKeys = function (target, targetKey) {
  var metadataMap = getOrCreateMetadataMap(target, targetKey, false);
  var keys = [];
  if (metadataMap) metadataMap.forEach(function (_, key) { keys.push(key); });
  return keys;
};
var toMetaKey = function (it) {
  return it === undefined || typeof it == 'symbol' ? it : String(it);
};
var exp = function (O) {
  $export($export.S, 'Reflect', O);
};

module.exports = {
  store: store,
  map: getOrCreateMetadataMap,
  has: ordinaryHasOwnMetadata,
  get: ordinaryGetOwnMetadata,
  set: ordinaryDefineOwnMetadata,
  keys: ordinaryOwnMetadataKeys,
  key: toMetaKey,
  exp: exp
};

},{"./es6.map":"node_modules/core-js/modules/es6.map.js","./_export":"node_modules/core-js/modules/_export.js","./_shared":"node_modules/core-js/modules/_shared.js","./es6.weak-map":"node_modules/core-js/modules/es6.weak-map.js"}],"node_modules/core-js/modules/es7.reflect.define-metadata.js":[function(require,module,exports) {
var metadata = require('./_metadata');
var anObject = require('./_an-object');
var toMetaKey = metadata.key;
var ordinaryDefineOwnMetadata = metadata.set;

metadata.exp({ defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey) {
  ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));
} });

},{"./_metadata":"node_modules/core-js/modules/_metadata.js","./_an-object":"node_modules/core-js/modules/_an-object.js"}],"node_modules/core-js/modules/es7.reflect.delete-metadata.js":[function(require,module,exports) {
var metadata = require('./_metadata');
var anObject = require('./_an-object');
var toMetaKey = metadata.key;
var getOrCreateMetadataMap = metadata.map;
var store = metadata.store;

metadata.exp({ deleteMetadata: function deleteMetadata(metadataKey, target /* , targetKey */) {
  var targetKey = arguments.length < 3 ? undefined : toMetaKey(arguments[2]);
  var metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);
  if (metadataMap === undefined || !metadataMap['delete'](metadataKey)) return false;
  if (metadataMap.size) return true;
  var targetMetadata = store.get(target);
  targetMetadata['delete'](targetKey);
  return !!targetMetadata.size || store['delete'](target);
} });

},{"./_metadata":"node_modules/core-js/modules/_metadata.js","./_an-object":"node_modules/core-js/modules/_an-object.js"}],"node_modules/core-js/modules/es7.reflect.get-metadata.js":[function(require,module,exports) {
var metadata = require('./_metadata');
var anObject = require('./_an-object');
var getPrototypeOf = require('./_object-gpo');
var ordinaryHasOwnMetadata = metadata.has;
var ordinaryGetOwnMetadata = metadata.get;
var toMetaKey = metadata.key;

var ordinaryGetMetadata = function (MetadataKey, O, P) {
  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
  if (hasOwn) return ordinaryGetOwnMetadata(MetadataKey, O, P);
  var parent = getPrototypeOf(O);
  return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;
};

metadata.exp({ getMetadata: function getMetadata(metadataKey, target /* , targetKey */) {
  return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
} });

},{"./_metadata":"node_modules/core-js/modules/_metadata.js","./_an-object":"node_modules/core-js/modules/_an-object.js","./_object-gpo":"node_modules/core-js/modules/_object-gpo.js"}],"node_modules/core-js/modules/es7.reflect.get-metadata-keys.js":[function(require,module,exports) {
var Set = require('./es6.set');
var from = require('./_array-from-iterable');
var metadata = require('./_metadata');
var anObject = require('./_an-object');
var getPrototypeOf = require('./_object-gpo');
var ordinaryOwnMetadataKeys = metadata.keys;
var toMetaKey = metadata.key;

var ordinaryMetadataKeys = function (O, P) {
  var oKeys = ordinaryOwnMetadataKeys(O, P);
  var parent = getPrototypeOf(O);
  if (parent === null) return oKeys;
  var pKeys = ordinaryMetadataKeys(parent, P);
  return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;
};

metadata.exp({ getMetadataKeys: function getMetadataKeys(target /* , targetKey */) {
  return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
} });

},{"./es6.set":"node_modules/core-js/modules/es6.set.js","./_array-from-iterable":"node_modules/core-js/modules/_array-from-iterable.js","./_metadata":"node_modules/core-js/modules/_metadata.js","./_an-object":"node_modules/core-js/modules/_an-object.js","./_object-gpo":"node_modules/core-js/modules/_object-gpo.js"}],"node_modules/core-js/modules/es7.reflect.get-own-metadata.js":[function(require,module,exports) {
var metadata = require('./_metadata');
var anObject = require('./_an-object');
var ordinaryGetOwnMetadata = metadata.get;
var toMetaKey = metadata.key;

metadata.exp({ getOwnMetadata: function getOwnMetadata(metadataKey, target /* , targetKey */) {
  return ordinaryGetOwnMetadata(metadataKey, anObject(target)
    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
} });

},{"./_metadata":"node_modules/core-js/modules/_metadata.js","./_an-object":"node_modules/core-js/modules/_an-object.js"}],"node_modules/core-js/modules/es7.reflect.get-own-metadata-keys.js":[function(require,module,exports) {
var metadata = require('./_metadata');
var anObject = require('./_an-object');
var ordinaryOwnMetadataKeys = metadata.keys;
var toMetaKey = metadata.key;

metadata.exp({ getOwnMetadataKeys: function getOwnMetadataKeys(target /* , targetKey */) {
  return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
} });

},{"./_metadata":"node_modules/core-js/modules/_metadata.js","./_an-object":"node_modules/core-js/modules/_an-object.js"}],"node_modules/core-js/modules/es7.reflect.has-metadata.js":[function(require,module,exports) {
var metadata = require('./_metadata');
var anObject = require('./_an-object');
var getPrototypeOf = require('./_object-gpo');
var ordinaryHasOwnMetadata = metadata.has;
var toMetaKey = metadata.key;

var ordinaryHasMetadata = function (MetadataKey, O, P) {
  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
  if (hasOwn) return true;
  var parent = getPrototypeOf(O);
  return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;
};

metadata.exp({ hasMetadata: function hasMetadata(metadataKey, target /* , targetKey */) {
  return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
} });

},{"./_metadata":"node_modules/core-js/modules/_metadata.js","./_an-object":"node_modules/core-js/modules/_an-object.js","./_object-gpo":"node_modules/core-js/modules/_object-gpo.js"}],"node_modules/core-js/modules/es7.reflect.has-own-metadata.js":[function(require,module,exports) {
var metadata = require('./_metadata');
var anObject = require('./_an-object');
var ordinaryHasOwnMetadata = metadata.has;
var toMetaKey = metadata.key;

metadata.exp({ hasOwnMetadata: function hasOwnMetadata(metadataKey, target /* , targetKey */) {
  return ordinaryHasOwnMetadata(metadataKey, anObject(target)
    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
} });

},{"./_metadata":"node_modules/core-js/modules/_metadata.js","./_an-object":"node_modules/core-js/modules/_an-object.js"}],"node_modules/core-js/modules/es7.reflect.metadata.js":[function(require,module,exports) {
var $metadata = require('./_metadata');
var anObject = require('./_an-object');
var aFunction = require('./_a-function');
var toMetaKey = $metadata.key;
var ordinaryDefineOwnMetadata = $metadata.set;

$metadata.exp({ metadata: function metadata(metadataKey, metadataValue) {
  return function decorator(target, targetKey) {
    ordinaryDefineOwnMetadata(
      metadataKey, metadataValue,
      (targetKey !== undefined ? anObject : aFunction)(target),
      toMetaKey(targetKey)
    );
  };
} });

},{"./_metadata":"node_modules/core-js/modules/_metadata.js","./_an-object":"node_modules/core-js/modules/_an-object.js","./_a-function":"node_modules/core-js/modules/_a-function.js"}],"node_modules/core-js/modules/es7.asap.js":[function(require,module,exports) {

// https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask
var $export = require('./_export');
var microtask = require('./_microtask')();
var process = require('./_global').process;
var isNode = require('./_cof')(process) == 'process';

$export($export.G, {
  asap: function asap(fn) {
    var domain = isNode && process.domain;
    microtask(domain ? domain.bind(fn) : fn);
  }
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_microtask":"node_modules/core-js/modules/_microtask.js","./_global":"node_modules/core-js/modules/_global.js","./_cof":"node_modules/core-js/modules/_cof.js"}],"node_modules/core-js/modules/es7.observable.js":[function(require,module,exports) {

'use strict';
// https://github.com/zenparsing/es-observable
var $export = require('./_export');
var global = require('./_global');
var core = require('./_core');
var microtask = require('./_microtask')();
var OBSERVABLE = require('./_wks')('observable');
var aFunction = require('./_a-function');
var anObject = require('./_an-object');
var anInstance = require('./_an-instance');
var redefineAll = require('./_redefine-all');
var hide = require('./_hide');
var forOf = require('./_for-of');
var RETURN = forOf.RETURN;

var getMethod = function (fn) {
  return fn == null ? undefined : aFunction(fn);
};

var cleanupSubscription = function (subscription) {
  var cleanup = subscription._c;
  if (cleanup) {
    subscription._c = undefined;
    cleanup();
  }
};

var subscriptionClosed = function (subscription) {
  return subscription._o === undefined;
};

var closeSubscription = function (subscription) {
  if (!subscriptionClosed(subscription)) {
    subscription._o = undefined;
    cleanupSubscription(subscription);
  }
};

var Subscription = function (observer, subscriber) {
  anObject(observer);
  this._c = undefined;
  this._o = observer;
  observer = new SubscriptionObserver(this);
  try {
    var cleanup = subscriber(observer);
    var subscription = cleanup;
    if (cleanup != null) {
      if (typeof cleanup.unsubscribe === 'function') cleanup = function () { subscription.unsubscribe(); };
      else aFunction(cleanup);
      this._c = cleanup;
    }
  } catch (e) {
    observer.error(e);
    return;
  } if (subscriptionClosed(this)) cleanupSubscription(this);
};

Subscription.prototype = redefineAll({}, {
  unsubscribe: function unsubscribe() { closeSubscription(this); }
});

var SubscriptionObserver = function (subscription) {
  this._s = subscription;
};

SubscriptionObserver.prototype = redefineAll({}, {
  next: function next(value) {
    var subscription = this._s;
    if (!subscriptionClosed(subscription)) {
      var observer = subscription._o;
      try {
        var m = getMethod(observer.next);
        if (m) return m.call(observer, value);
      } catch (e) {
        try {
          closeSubscription(subscription);
        } finally {
          throw e;
        }
      }
    }
  },
  error: function error(value) {
    var subscription = this._s;
    if (subscriptionClosed(subscription)) throw value;
    var observer = subscription._o;
    subscription._o = undefined;
    try {
      var m = getMethod(observer.error);
      if (!m) throw value;
      value = m.call(observer, value);
    } catch (e) {
      try {
        cleanupSubscription(subscription);
      } finally {
        throw e;
      }
    } cleanupSubscription(subscription);
    return value;
  },
  complete: function complete(value) {
    var subscription = this._s;
    if (!subscriptionClosed(subscription)) {
      var observer = subscription._o;
      subscription._o = undefined;
      try {
        var m = getMethod(observer.complete);
        value = m ? m.call(observer, value) : undefined;
      } catch (e) {
        try {
          cleanupSubscription(subscription);
        } finally {
          throw e;
        }
      } cleanupSubscription(subscription);
      return value;
    }
  }
});

var $Observable = function Observable(subscriber) {
  anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);
};

redefineAll($Observable.prototype, {
  subscribe: function subscribe(observer) {
    return new Subscription(observer, this._f);
  },
  forEach: function forEach(fn) {
    var that = this;
    return new (core.Promise || global.Promise)(function (resolve, reject) {
      aFunction(fn);
      var subscription = that.subscribe({
        next: function (value) {
          try {
            return fn(value);
          } catch (e) {
            reject(e);
            subscription.unsubscribe();
          }
        },
        error: reject,
        complete: resolve
      });
    });
  }
});

redefineAll($Observable, {
  from: function from(x) {
    var C = typeof this === 'function' ? this : $Observable;
    var method = getMethod(anObject(x)[OBSERVABLE]);
    if (method) {
      var observable = anObject(method.call(x));
      return observable.constructor === C ? observable : new C(function (observer) {
        return observable.subscribe(observer);
      });
    }
    return new C(function (observer) {
      var done = false;
      microtask(function () {
        if (!done) {
          try {
            if (forOf(x, false, function (it) {
              observer.next(it);
              if (done) return RETURN;
            }) === RETURN) return;
          } catch (e) {
            if (done) throw e;
            observer.error(e);
            return;
          } observer.complete();
        }
      });
      return function () { done = true; };
    });
  },
  of: function of() {
    for (var i = 0, l = arguments.length, items = new Array(l); i < l;) items[i] = arguments[i++];
    return new (typeof this === 'function' ? this : $Observable)(function (observer) {
      var done = false;
      microtask(function () {
        if (!done) {
          for (var j = 0; j < items.length; ++j) {
            observer.next(items[j]);
            if (done) return;
          } observer.complete();
        }
      });
      return function () { done = true; };
    });
  }
});

hide($Observable.prototype, OBSERVABLE, function () { return this; });

$export($export.G, { Observable: $Observable });

require('./_set-species')('Observable');

},{"./_export":"node_modules/core-js/modules/_export.js","./_global":"node_modules/core-js/modules/_global.js","./_core":"node_modules/core-js/modules/_core.js","./_microtask":"node_modules/core-js/modules/_microtask.js","./_wks":"node_modules/core-js/modules/_wks.js","./_a-function":"node_modules/core-js/modules/_a-function.js","./_an-object":"node_modules/core-js/modules/_an-object.js","./_an-instance":"node_modules/core-js/modules/_an-instance.js","./_redefine-all":"node_modules/core-js/modules/_redefine-all.js","./_hide":"node_modules/core-js/modules/_hide.js","./_for-of":"node_modules/core-js/modules/_for-of.js","./_set-species":"node_modules/core-js/modules/_set-species.js"}],"node_modules/core-js/modules/web.timers.js":[function(require,module,exports) {

// ie9- setTimeout & setInterval additional parameters fix
var global = require('./_global');
var $export = require('./_export');
var userAgent = require('./_user-agent');
var slice = [].slice;
var MSIE = /MSIE .\./.test(userAgent); // <- dirty ie9- check
var wrap = function (set) {
  return function (fn, time /* , ...args */) {
    var boundArgs = arguments.length > 2;
    var args = boundArgs ? slice.call(arguments, 2) : false;
    return set(boundArgs ? function () {
      // eslint-disable-next-line no-new-func
      (typeof fn == 'function' ? fn : Function(fn)).apply(this, args);
    } : fn, time);
  };
};
$export($export.G + $export.B + $export.F * MSIE, {
  setTimeout: wrap(global.setTimeout),
  setInterval: wrap(global.setInterval)
});

},{"./_global":"node_modules/core-js/modules/_global.js","./_export":"node_modules/core-js/modules/_export.js","./_user-agent":"node_modules/core-js/modules/_user-agent.js"}],"node_modules/core-js/modules/web.immediate.js":[function(require,module,exports) {
var $export = require('./_export');
var $task = require('./_task');
$export($export.G + $export.B, {
  setImmediate: $task.set,
  clearImmediate: $task.clear
});

},{"./_export":"node_modules/core-js/modules/_export.js","./_task":"node_modules/core-js/modules/_task.js"}],"node_modules/core-js/modules/web.dom.iterable.js":[function(require,module,exports) {

var $iterators = require('./es6.array.iterator');
var getKeys = require('./_object-keys');
var redefine = require('./_redefine');
var global = require('./_global');
var hide = require('./_hide');
var Iterators = require('./_iterators');
var wks = require('./_wks');
var ITERATOR = wks('iterator');
var TO_STRING_TAG = wks('toStringTag');
var ArrayValues = Iterators.Array;

var DOMIterables = {
  CSSRuleList: true, // TODO: Not spec compliant, should be false.
  CSSStyleDeclaration: false,
  CSSValueList: false,
  ClientRectList: false,
  DOMRectList: false,
  DOMStringList: false,
  DOMTokenList: true,
  DataTransferItemList: false,
  FileList: false,
  HTMLAllCollection: false,
  HTMLCollection: false,
  HTMLFormElement: false,
  HTMLSelectElement: false,
  MediaList: true, // TODO: Not spec compliant, should be false.
  MimeTypeArray: false,
  NamedNodeMap: false,
  NodeList: true,
  PaintRequestList: false,
  Plugin: false,
  PluginArray: false,
  SVGLengthList: false,
  SVGNumberList: false,
  SVGPathSegList: false,
  SVGPointList: false,
  SVGStringList: false,
  SVGTransformList: false,
  SourceBufferList: false,
  StyleSheetList: true, // TODO: Not spec compliant, should be false.
  TextTrackCueList: false,
  TextTrackList: false,
  TouchList: false
};

for (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {
  var NAME = collections[i];
  var explicit = DOMIterables[NAME];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  var key;
  if (proto) {
    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = ArrayValues;
    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);
  }
}

},{"./es6.array.iterator":"node_modules/core-js/modules/es6.array.iterator.js","./_object-keys":"node_modules/core-js/modules/_object-keys.js","./_redefine":"node_modules/core-js/modules/_redefine.js","./_global":"node_modules/core-js/modules/_global.js","./_hide":"node_modules/core-js/modules/_hide.js","./_iterators":"node_modules/core-js/modules/_iterators.js","./_wks":"node_modules/core-js/modules/_wks.js"}],"node_modules/core-js/shim.js":[function(require,module,exports) {
require('./modules/es6.symbol');
require('./modules/es6.object.create');
require('./modules/es6.object.define-property');
require('./modules/es6.object.define-properties');
require('./modules/es6.object.get-own-property-descriptor');
require('./modules/es6.object.get-prototype-of');
require('./modules/es6.object.keys');
require('./modules/es6.object.get-own-property-names');
require('./modules/es6.object.freeze');
require('./modules/es6.object.seal');
require('./modules/es6.object.prevent-extensions');
require('./modules/es6.object.is-frozen');
require('./modules/es6.object.is-sealed');
require('./modules/es6.object.is-extensible');
require('./modules/es6.object.assign');
require('./modules/es6.object.is');
require('./modules/es6.object.set-prototype-of');
require('./modules/es6.object.to-string');
require('./modules/es6.function.bind');
require('./modules/es6.function.name');
require('./modules/es6.function.has-instance');
require('./modules/es6.parse-int');
require('./modules/es6.parse-float');
require('./modules/es6.number.constructor');
require('./modules/es6.number.to-fixed');
require('./modules/es6.number.to-precision');
require('./modules/es6.number.epsilon');
require('./modules/es6.number.is-finite');
require('./modules/es6.number.is-integer');
require('./modules/es6.number.is-nan');
require('./modules/es6.number.is-safe-integer');
require('./modules/es6.number.max-safe-integer');
require('./modules/es6.number.min-safe-integer');
require('./modules/es6.number.parse-float');
require('./modules/es6.number.parse-int');
require('./modules/es6.math.acosh');
require('./modules/es6.math.asinh');
require('./modules/es6.math.atanh');
require('./modules/es6.math.cbrt');
require('./modules/es6.math.clz32');
require('./modules/es6.math.cosh');
require('./modules/es6.math.expm1');
require('./modules/es6.math.fround');
require('./modules/es6.math.hypot');
require('./modules/es6.math.imul');
require('./modules/es6.math.log10');
require('./modules/es6.math.log1p');
require('./modules/es6.math.log2');
require('./modules/es6.math.sign');
require('./modules/es6.math.sinh');
require('./modules/es6.math.tanh');
require('./modules/es6.math.trunc');
require('./modules/es6.string.from-code-point');
require('./modules/es6.string.raw');
require('./modules/es6.string.trim');
require('./modules/es6.string.iterator');
require('./modules/es6.string.code-point-at');
require('./modules/es6.string.ends-with');
require('./modules/es6.string.includes');
require('./modules/es6.string.repeat');
require('./modules/es6.string.starts-with');
require('./modules/es6.string.anchor');
require('./modules/es6.string.big');
require('./modules/es6.string.blink');
require('./modules/es6.string.bold');
require('./modules/es6.string.fixed');
require('./modules/es6.string.fontcolor');
require('./modules/es6.string.fontsize');
require('./modules/es6.string.italics');
require('./modules/es6.string.link');
require('./modules/es6.string.small');
require('./modules/es6.string.strike');
require('./modules/es6.string.sub');
require('./modules/es6.string.sup');
require('./modules/es6.date.now');
require('./modules/es6.date.to-json');
require('./modules/es6.date.to-iso-string');
require('./modules/es6.date.to-string');
require('./modules/es6.date.to-primitive');
require('./modules/es6.array.is-array');
require('./modules/es6.array.from');
require('./modules/es6.array.of');
require('./modules/es6.array.join');
require('./modules/es6.array.slice');
require('./modules/es6.array.sort');
require('./modules/es6.array.for-each');
require('./modules/es6.array.map');
require('./modules/es6.array.filter');
require('./modules/es6.array.some');
require('./modules/es6.array.every');
require('./modules/es6.array.reduce');
require('./modules/es6.array.reduce-right');
require('./modules/es6.array.index-of');
require('./modules/es6.array.last-index-of');
require('./modules/es6.array.copy-within');
require('./modules/es6.array.fill');
require('./modules/es6.array.find');
require('./modules/es6.array.find-index');
require('./modules/es6.array.species');
require('./modules/es6.array.iterator');
require('./modules/es6.regexp.constructor');
require('./modules/es6.regexp.exec');
require('./modules/es6.regexp.to-string');
require('./modules/es6.regexp.flags');
require('./modules/es6.regexp.match');
require('./modules/es6.regexp.replace');
require('./modules/es6.regexp.search');
require('./modules/es6.regexp.split');
require('./modules/es6.promise');
require('./modules/es6.map');
require('./modules/es6.set');
require('./modules/es6.weak-map');
require('./modules/es6.weak-set');
require('./modules/es6.typed.array-buffer');
require('./modules/es6.typed.data-view');
require('./modules/es6.typed.int8-array');
require('./modules/es6.typed.uint8-array');
require('./modules/es6.typed.uint8-clamped-array');
require('./modules/es6.typed.int16-array');
require('./modules/es6.typed.uint16-array');
require('./modules/es6.typed.int32-array');
require('./modules/es6.typed.uint32-array');
require('./modules/es6.typed.float32-array');
require('./modules/es6.typed.float64-array');
require('./modules/es6.reflect.apply');
require('./modules/es6.reflect.construct');
require('./modules/es6.reflect.define-property');
require('./modules/es6.reflect.delete-property');
require('./modules/es6.reflect.enumerate');
require('./modules/es6.reflect.get');
require('./modules/es6.reflect.get-own-property-descriptor');
require('./modules/es6.reflect.get-prototype-of');
require('./modules/es6.reflect.has');
require('./modules/es6.reflect.is-extensible');
require('./modules/es6.reflect.own-keys');
require('./modules/es6.reflect.prevent-extensions');
require('./modules/es6.reflect.set');
require('./modules/es6.reflect.set-prototype-of');
require('./modules/es7.array.includes');
require('./modules/es7.array.flat-map');
require('./modules/es7.array.flatten');
require('./modules/es7.string.at');
require('./modules/es7.string.pad-start');
require('./modules/es7.string.pad-end');
require('./modules/es7.string.trim-left');
require('./modules/es7.string.trim-right');
require('./modules/es7.string.match-all');
require('./modules/es7.symbol.async-iterator');
require('./modules/es7.symbol.observable');
require('./modules/es7.object.get-own-property-descriptors');
require('./modules/es7.object.values');
require('./modules/es7.object.entries');
require('./modules/es7.object.define-getter');
require('./modules/es7.object.define-setter');
require('./modules/es7.object.lookup-getter');
require('./modules/es7.object.lookup-setter');
require('./modules/es7.map.to-json');
require('./modules/es7.set.to-json');
require('./modules/es7.map.of');
require('./modules/es7.set.of');
require('./modules/es7.weak-map.of');
require('./modules/es7.weak-set.of');
require('./modules/es7.map.from');
require('./modules/es7.set.from');
require('./modules/es7.weak-map.from');
require('./modules/es7.weak-set.from');
require('./modules/es7.global');
require('./modules/es7.system.global');
require('./modules/es7.error.is-error');
require('./modules/es7.math.clamp');
require('./modules/es7.math.deg-per-rad');
require('./modules/es7.math.degrees');
require('./modules/es7.math.fscale');
require('./modules/es7.math.iaddh');
require('./modules/es7.math.isubh');
require('./modules/es7.math.imulh');
require('./modules/es7.math.rad-per-deg');
require('./modules/es7.math.radians');
require('./modules/es7.math.scale');
require('./modules/es7.math.umulh');
require('./modules/es7.math.signbit');
require('./modules/es7.promise.finally');
require('./modules/es7.promise.try');
require('./modules/es7.reflect.define-metadata');
require('./modules/es7.reflect.delete-metadata');
require('./modules/es7.reflect.get-metadata');
require('./modules/es7.reflect.get-metadata-keys');
require('./modules/es7.reflect.get-own-metadata');
require('./modules/es7.reflect.get-own-metadata-keys');
require('./modules/es7.reflect.has-metadata');
require('./modules/es7.reflect.has-own-metadata');
require('./modules/es7.reflect.metadata');
require('./modules/es7.asap');
require('./modules/es7.observable');
require('./modules/web.timers');
require('./modules/web.immediate');
require('./modules/web.dom.iterable');
module.exports = require('./modules/_core');

},{"./modules/es6.symbol":"node_modules/core-js/modules/es6.symbol.js","./modules/es6.object.create":"node_modules/core-js/modules/es6.object.create.js","./modules/es6.object.define-property":"node_modules/core-js/modules/es6.object.define-property.js","./modules/es6.object.define-properties":"node_modules/core-js/modules/es6.object.define-properties.js","./modules/es6.object.get-own-property-descriptor":"node_modules/core-js/modules/es6.object.get-own-property-descriptor.js","./modules/es6.object.get-prototype-of":"node_modules/core-js/modules/es6.object.get-prototype-of.js","./modules/es6.object.keys":"node_modules/core-js/modules/es6.object.keys.js","./modules/es6.object.get-own-property-names":"node_modules/core-js/modules/es6.object.get-own-property-names.js","./modules/es6.object.freeze":"node_modules/core-js/modules/es6.object.freeze.js","./modules/es6.object.seal":"node_modules/core-js/modules/es6.object.seal.js","./modules/es6.object.prevent-extensions":"node_modules/core-js/modules/es6.object.prevent-extensions.js","./modules/es6.object.is-frozen":"node_modules/core-js/modules/es6.object.is-frozen.js","./modules/es6.object.is-sealed":"node_modules/core-js/modules/es6.object.is-sealed.js","./modules/es6.object.is-extensible":"node_modules/core-js/modules/es6.object.is-extensible.js","./modules/es6.object.assign":"node_modules/core-js/modules/es6.object.assign.js","./modules/es6.object.is":"node_modules/core-js/modules/es6.object.is.js","./modules/es6.object.set-prototype-of":"node_modules/core-js/modules/es6.object.set-prototype-of.js","./modules/es6.object.to-string":"node_modules/core-js/modules/es6.object.to-string.js","./modules/es6.function.bind":"node_modules/core-js/modules/es6.function.bind.js","./modules/es6.function.name":"node_modules/core-js/modules/es6.function.name.js","./modules/es6.function.has-instance":"node_modules/core-js/modules/es6.function.has-instance.js","./modules/es6.parse-int":"node_modules/core-js/modules/es6.parse-int.js","./modules/es6.parse-float":"node_modules/core-js/modules/es6.parse-float.js","./modules/es6.number.constructor":"node_modules/core-js/modules/es6.number.constructor.js","./modules/es6.number.to-fixed":"node_modules/core-js/modules/es6.number.to-fixed.js","./modules/es6.number.to-precision":"node_modules/core-js/modules/es6.number.to-precision.js","./modules/es6.number.epsilon":"node_modules/core-js/modules/es6.number.epsilon.js","./modules/es6.number.is-finite":"node_modules/core-js/modules/es6.number.is-finite.js","./modules/es6.number.is-integer":"node_modules/core-js/modules/es6.number.is-integer.js","./modules/es6.number.is-nan":"node_modules/core-js/modules/es6.number.is-nan.js","./modules/es6.number.is-safe-integer":"node_modules/core-js/modules/es6.number.is-safe-integer.js","./modules/es6.number.max-safe-integer":"node_modules/core-js/modules/es6.number.max-safe-integer.js","./modules/es6.number.min-safe-integer":"node_modules/core-js/modules/es6.number.min-safe-integer.js","./modules/es6.number.parse-float":"node_modules/core-js/modules/es6.number.parse-float.js","./modules/es6.number.parse-int":"node_modules/core-js/modules/es6.number.parse-int.js","./modules/es6.math.acosh":"node_modules/core-js/modules/es6.math.acosh.js","./modules/es6.math.asinh":"node_modules/core-js/modules/es6.math.asinh.js","./modules/es6.math.atanh":"node_modules/core-js/modules/es6.math.atanh.js","./modules/es6.math.cbrt":"node_modules/core-js/modules/es6.math.cbrt.js","./modules/es6.math.clz32":"node_modules/core-js/modules/es6.math.clz32.js","./modules/es6.math.cosh":"node_modules/core-js/modules/es6.math.cosh.js","./modules/es6.math.expm1":"node_modules/core-js/modules/es6.math.expm1.js","./modules/es6.math.fround":"node_modules/core-js/modules/es6.math.fround.js","./modules/es6.math.hypot":"node_modules/core-js/modules/es6.math.hypot.js","./modules/es6.math.imul":"node_modules/core-js/modules/es6.math.imul.js","./modules/es6.math.log10":"node_modules/core-js/modules/es6.math.log10.js","./modules/es6.math.log1p":"node_modules/core-js/modules/es6.math.log1p.js","./modules/es6.math.log2":"node_modules/core-js/modules/es6.math.log2.js","./modules/es6.math.sign":"node_modules/core-js/modules/es6.math.sign.js","./modules/es6.math.sinh":"node_modules/core-js/modules/es6.math.sinh.js","./modules/es6.math.tanh":"node_modules/core-js/modules/es6.math.tanh.js","./modules/es6.math.trunc":"node_modules/core-js/modules/es6.math.trunc.js","./modules/es6.string.from-code-point":"node_modules/core-js/modules/es6.string.from-code-point.js","./modules/es6.string.raw":"node_modules/core-js/modules/es6.string.raw.js","./modules/es6.string.trim":"node_modules/core-js/modules/es6.string.trim.js","./modules/es6.string.iterator":"node_modules/core-js/modules/es6.string.iterator.js","./modules/es6.string.code-point-at":"node_modules/core-js/modules/es6.string.code-point-at.js","./modules/es6.string.ends-with":"node_modules/core-js/modules/es6.string.ends-with.js","./modules/es6.string.includes":"node_modules/core-js/modules/es6.string.includes.js","./modules/es6.string.repeat":"node_modules/core-js/modules/es6.string.repeat.js","./modules/es6.string.starts-with":"node_modules/core-js/modules/es6.string.starts-with.js","./modules/es6.string.anchor":"node_modules/core-js/modules/es6.string.anchor.js","./modules/es6.string.big":"node_modules/core-js/modules/es6.string.big.js","./modules/es6.string.blink":"node_modules/core-js/modules/es6.string.blink.js","./modules/es6.string.bold":"node_modules/core-js/modules/es6.string.bold.js","./modules/es6.string.fixed":"node_modules/core-js/modules/es6.string.fixed.js","./modules/es6.string.fontcolor":"node_modules/core-js/modules/es6.string.fontcolor.js","./modules/es6.string.fontsize":"node_modules/core-js/modules/es6.string.fontsize.js","./modules/es6.string.italics":"node_modules/core-js/modules/es6.string.italics.js","./modules/es6.string.link":"node_modules/core-js/modules/es6.string.link.js","./modules/es6.string.small":"node_modules/core-js/modules/es6.string.small.js","./modules/es6.string.strike":"node_modules/core-js/modules/es6.string.strike.js","./modules/es6.string.sub":"node_modules/core-js/modules/es6.string.sub.js","./modules/es6.string.sup":"node_modules/core-js/modules/es6.string.sup.js","./modules/es6.date.now":"node_modules/core-js/modules/es6.date.now.js","./modules/es6.date.to-json":"node_modules/core-js/modules/es6.date.to-json.js","./modules/es6.date.to-iso-string":"node_modules/core-js/modules/es6.date.to-iso-string.js","./modules/es6.date.to-string":"node_modules/core-js/modules/es6.date.to-string.js","./modules/es6.date.to-primitive":"node_modules/core-js/modules/es6.date.to-primitive.js","./modules/es6.array.is-array":"node_modules/core-js/modules/es6.array.is-array.js","./modules/es6.array.from":"node_modules/core-js/modules/es6.array.from.js","./modules/es6.array.of":"node_modules/core-js/modules/es6.array.of.js","./modules/es6.array.join":"node_modules/core-js/modules/es6.array.join.js","./modules/es6.array.slice":"node_modules/core-js/modules/es6.array.slice.js","./modules/es6.array.sort":"node_modules/core-js/modules/es6.array.sort.js","./modules/es6.array.for-each":"node_modules/core-js/modules/es6.array.for-each.js","./modules/es6.array.map":"node_modules/core-js/modules/es6.array.map.js","./modules/es6.array.filter":"node_modules/core-js/modules/es6.array.filter.js","./modules/es6.array.some":"node_modules/core-js/modules/es6.array.some.js","./modules/es6.array.every":"node_modules/core-js/modules/es6.array.every.js","./modules/es6.array.reduce":"node_modules/core-js/modules/es6.array.reduce.js","./modules/es6.array.reduce-right":"node_modules/core-js/modules/es6.array.reduce-right.js","./modules/es6.array.index-of":"node_modules/core-js/modules/es6.array.index-of.js","./modules/es6.array.last-index-of":"node_modules/core-js/modules/es6.array.last-index-of.js","./modules/es6.array.copy-within":"node_modules/core-js/modules/es6.array.copy-within.js","./modules/es6.array.fill":"node_modules/core-js/modules/es6.array.fill.js","./modules/es6.array.find":"node_modules/core-js/modules/es6.array.find.js","./modules/es6.array.find-index":"node_modules/core-js/modules/es6.array.find-index.js","./modules/es6.array.species":"node_modules/core-js/modules/es6.array.species.js","./modules/es6.array.iterator":"node_modules/core-js/modules/es6.array.iterator.js","./modules/es6.regexp.constructor":"node_modules/core-js/modules/es6.regexp.constructor.js","./modules/es6.regexp.exec":"node_modules/core-js/modules/es6.regexp.exec.js","./modules/es6.regexp.to-string":"node_modules/core-js/modules/es6.regexp.to-string.js","./modules/es6.regexp.flags":"node_modules/core-js/modules/es6.regexp.flags.js","./modules/es6.regexp.match":"node_modules/core-js/modules/es6.regexp.match.js","./modules/es6.regexp.replace":"node_modules/core-js/modules/es6.regexp.replace.js","./modules/es6.regexp.search":"node_modules/core-js/modules/es6.regexp.search.js","./modules/es6.regexp.split":"node_modules/core-js/modules/es6.regexp.split.js","./modules/es6.promise":"node_modules/core-js/modules/es6.promise.js","./modules/es6.map":"node_modules/core-js/modules/es6.map.js","./modules/es6.set":"node_modules/core-js/modules/es6.set.js","./modules/es6.weak-map":"node_modules/core-js/modules/es6.weak-map.js","./modules/es6.weak-set":"node_modules/core-js/modules/es6.weak-set.js","./modules/es6.typed.array-buffer":"node_modules/core-js/modules/es6.typed.array-buffer.js","./modules/es6.typed.data-view":"node_modules/core-js/modules/es6.typed.data-view.js","./modules/es6.typed.int8-array":"node_modules/core-js/modules/es6.typed.int8-array.js","./modules/es6.typed.uint8-array":"node_modules/core-js/modules/es6.typed.uint8-array.js","./modules/es6.typed.uint8-clamped-array":"node_modules/core-js/modules/es6.typed.uint8-clamped-array.js","./modules/es6.typed.int16-array":"node_modules/core-js/modules/es6.typed.int16-array.js","./modules/es6.typed.uint16-array":"node_modules/core-js/modules/es6.typed.uint16-array.js","./modules/es6.typed.int32-array":"node_modules/core-js/modules/es6.typed.int32-array.js","./modules/es6.typed.uint32-array":"node_modules/core-js/modules/es6.typed.uint32-array.js","./modules/es6.typed.float32-array":"node_modules/core-js/modules/es6.typed.float32-array.js","./modules/es6.typed.float64-array":"node_modules/core-js/modules/es6.typed.float64-array.js","./modules/es6.reflect.apply":"node_modules/core-js/modules/es6.reflect.apply.js","./modules/es6.reflect.construct":"node_modules/core-js/modules/es6.reflect.construct.js","./modules/es6.reflect.define-property":"node_modules/core-js/modules/es6.reflect.define-property.js","./modules/es6.reflect.delete-property":"node_modules/core-js/modules/es6.reflect.delete-property.js","./modules/es6.reflect.enumerate":"node_modules/core-js/modules/es6.reflect.enumerate.js","./modules/es6.reflect.get":"node_modules/core-js/modules/es6.reflect.get.js","./modules/es6.reflect.get-own-property-descriptor":"node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js","./modules/es6.reflect.get-prototype-of":"node_modules/core-js/modules/es6.reflect.get-prototype-of.js","./modules/es6.reflect.has":"node_modules/core-js/modules/es6.reflect.has.js","./modules/es6.reflect.is-extensible":"node_modules/core-js/modules/es6.reflect.is-extensible.js","./modules/es6.reflect.own-keys":"node_modules/core-js/modules/es6.reflect.own-keys.js","./modules/es6.reflect.prevent-extensions":"node_modules/core-js/modules/es6.reflect.prevent-extensions.js","./modules/es6.reflect.set":"node_modules/core-js/modules/es6.reflect.set.js","./modules/es6.reflect.set-prototype-of":"node_modules/core-js/modules/es6.reflect.set-prototype-of.js","./modules/es7.array.includes":"node_modules/core-js/modules/es7.array.includes.js","./modules/es7.array.flat-map":"node_modules/core-js/modules/es7.array.flat-map.js","./modules/es7.array.flatten":"node_modules/core-js/modules/es7.array.flatten.js","./modules/es7.string.at":"node_modules/core-js/modules/es7.string.at.js","./modules/es7.string.pad-start":"node_modules/core-js/modules/es7.string.pad-start.js","./modules/es7.string.pad-end":"node_modules/core-js/modules/es7.string.pad-end.js","./modules/es7.string.trim-left":"node_modules/core-js/modules/es7.string.trim-left.js","./modules/es7.string.trim-right":"node_modules/core-js/modules/es7.string.trim-right.js","./modules/es7.string.match-all":"node_modules/core-js/modules/es7.string.match-all.js","./modules/es7.symbol.async-iterator":"node_modules/core-js/modules/es7.symbol.async-iterator.js","./modules/es7.symbol.observable":"node_modules/core-js/modules/es7.symbol.observable.js","./modules/es7.object.get-own-property-descriptors":"node_modules/core-js/modules/es7.object.get-own-property-descriptors.js","./modules/es7.object.values":"node_modules/core-js/modules/es7.object.values.js","./modules/es7.object.entries":"node_modules/core-js/modules/es7.object.entries.js","./modules/es7.object.define-getter":"node_modules/core-js/modules/es7.object.define-getter.js","./modules/es7.object.define-setter":"node_modules/core-js/modules/es7.object.define-setter.js","./modules/es7.object.lookup-getter":"node_modules/core-js/modules/es7.object.lookup-getter.js","./modules/es7.object.lookup-setter":"node_modules/core-js/modules/es7.object.lookup-setter.js","./modules/es7.map.to-json":"node_modules/core-js/modules/es7.map.to-json.js","./modules/es7.set.to-json":"node_modules/core-js/modules/es7.set.to-json.js","./modules/es7.map.of":"node_modules/core-js/modules/es7.map.of.js","./modules/es7.set.of":"node_modules/core-js/modules/es7.set.of.js","./modules/es7.weak-map.of":"node_modules/core-js/modules/es7.weak-map.of.js","./modules/es7.weak-set.of":"node_modules/core-js/modules/es7.weak-set.of.js","./modules/es7.map.from":"node_modules/core-js/modules/es7.map.from.js","./modules/es7.set.from":"node_modules/core-js/modules/es7.set.from.js","./modules/es7.weak-map.from":"node_modules/core-js/modules/es7.weak-map.from.js","./modules/es7.weak-set.from":"node_modules/core-js/modules/es7.weak-set.from.js","./modules/es7.global":"node_modules/core-js/modules/es7.global.js","./modules/es7.system.global":"node_modules/core-js/modules/es7.system.global.js","./modules/es7.error.is-error":"node_modules/core-js/modules/es7.error.is-error.js","./modules/es7.math.clamp":"node_modules/core-js/modules/es7.math.clamp.js","./modules/es7.math.deg-per-rad":"node_modules/core-js/modules/es7.math.deg-per-rad.js","./modules/es7.math.degrees":"node_modules/core-js/modules/es7.math.degrees.js","./modules/es7.math.fscale":"node_modules/core-js/modules/es7.math.fscale.js","./modules/es7.math.iaddh":"node_modules/core-js/modules/es7.math.iaddh.js","./modules/es7.math.isubh":"node_modules/core-js/modules/es7.math.isubh.js","./modules/es7.math.imulh":"node_modules/core-js/modules/es7.math.imulh.js","./modules/es7.math.rad-per-deg":"node_modules/core-js/modules/es7.math.rad-per-deg.js","./modules/es7.math.radians":"node_modules/core-js/modules/es7.math.radians.js","./modules/es7.math.scale":"node_modules/core-js/modules/es7.math.scale.js","./modules/es7.math.umulh":"node_modules/core-js/modules/es7.math.umulh.js","./modules/es7.math.signbit":"node_modules/core-js/modules/es7.math.signbit.js","./modules/es7.promise.finally":"node_modules/core-js/modules/es7.promise.finally.js","./modules/es7.promise.try":"node_modules/core-js/modules/es7.promise.try.js","./modules/es7.reflect.define-metadata":"node_modules/core-js/modules/es7.reflect.define-metadata.js","./modules/es7.reflect.delete-metadata":"node_modules/core-js/modules/es7.reflect.delete-metadata.js","./modules/es7.reflect.get-metadata":"node_modules/core-js/modules/es7.reflect.get-metadata.js","./modules/es7.reflect.get-metadata-keys":"node_modules/core-js/modules/es7.reflect.get-metadata-keys.js","./modules/es7.reflect.get-own-metadata":"node_modules/core-js/modules/es7.reflect.get-own-metadata.js","./modules/es7.reflect.get-own-metadata-keys":"node_modules/core-js/modules/es7.reflect.get-own-metadata-keys.js","./modules/es7.reflect.has-metadata":"node_modules/core-js/modules/es7.reflect.has-metadata.js","./modules/es7.reflect.has-own-metadata":"node_modules/core-js/modules/es7.reflect.has-own-metadata.js","./modules/es7.reflect.metadata":"node_modules/core-js/modules/es7.reflect.metadata.js","./modules/es7.asap":"node_modules/core-js/modules/es7.asap.js","./modules/es7.observable":"node_modules/core-js/modules/es7.observable.js","./modules/web.timers":"node_modules/core-js/modules/web.timers.js","./modules/web.immediate":"node_modules/core-js/modules/web.immediate.js","./modules/web.dom.iterable":"node_modules/core-js/modules/web.dom.iterable.js","./modules/_core":"node_modules/core-js/modules/_core.js"}],"node_modules/babel-polyfill/node_modules/regenerator-runtime/runtime.js":[function(require,module,exports) {
var global = arguments[3];
/**
 * Copyright (c) 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
 * additional grant of patent rights can be found in the PATENTS file in
 * the same directory.
 */

!(function(global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      // If regeneratorRuntime is defined globally and we're in a module,
      // make the exports object identical to regeneratorRuntime.
      module.exports = runtime;
    }
    // Don't bother evaluating the rest of this file if the runtime was
    // already defined globally.
    return;
  }

  // Define the runtime globally (as expected by generated code) as either
  // module.exports (if we're in a module) or a new, empty object.
  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  runtime.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  runtime.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration. If the Promise is rejected, however, the
          // result for this iteration will be rejected with the same
          // reason. Note that rejections of yielded Promises are not
          // thrown back into the generator function, as is the case
          // when an awaited Promise is rejected. This difference in
          // behavior between yield and await is important, because it
          // allows the consumer to decide what to do with the yielded
          // rejection (swallow it and continue, manually .throw it back
          // into the generator, abandon iteration, whatever). With
          // await, by contrast, there is no opportunity to examine the
          // rejection reason outside the generator function, so the
          // only option is to throw it from the await expression, and
          // let the generator function handle the exception.
          result.value = unwrapped;
          resolve(result);
        }, reject);
      }
    }

    if (typeof global.process === "object" && global.process.domain) {
      invoke = global.process.domain.bind(invoke);
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  runtime.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList)
    );

    return runtime.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        if (delegate.iterator.return) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };
})(
  // Among the various tricks for obtaining a reference to the global
  // object, this seems to be the most reliable technique that does not
  // use indirect eval (which violates Content Security Policy).
  typeof global === "object" ? global :
  typeof window === "object" ? window :
  typeof self === "object" ? self : this
);

},{}],"node_modules/core-js/modules/_replacer.js":[function(require,module,exports) {
module.exports = function (regExp, replace) {
  var replacer = replace === Object(replace) ? function (part) {
    return replace[part];
  } : replace;
  return function (it) {
    return String(it).replace(regExp, replacer);
  };
};

},{}],"node_modules/core-js/modules/core.regexp.escape.js":[function(require,module,exports) {
// https://github.com/benjamingr/RexExp.escape
var $export = require('./_export');
var $re = require('./_replacer')(/[\\^$*+?.()|[\]{}]/g, '\\$&');

$export($export.S, 'RegExp', { escape: function escape(it) { return $re(it); } });

},{"./_export":"node_modules/core-js/modules/_export.js","./_replacer":"node_modules/core-js/modules/_replacer.js"}],"node_modules/core-js/fn/regexp/escape.js":[function(require,module,exports) {
require('../../modules/core.regexp.escape');
module.exports = require('../../modules/_core').RegExp.escape;

},{"../../modules/core.regexp.escape":"node_modules/core-js/modules/core.regexp.escape.js","../../modules/_core":"node_modules/core-js/modules/_core.js"}],"node_modules/babel-polyfill/lib/index.js":[function(require,module,exports) {
var global = arguments[3];

"use strict";

require("core-js/shim");

require("regenerator-runtime/runtime");

require("core-js/fn/regexp/escape");

if (global._babelPolyfill) {
  throw new Error("only one instance of babel-polyfill is allowed");
}
global._babelPolyfill = true;

var DEFINE_PROPERTY = "defineProperty";
function define(O, key, value) {
  O[key] || Object[DEFINE_PROPERTY](O, key, {
    writable: true,
    configurable: true,
    value: value
  });
}

define(String.prototype, "padLeft", "".padStart);
define(String.prototype, "padRight", "".padEnd);

"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach(function (key) {
  [][key] && define(Array, key, Function.call.bind([][key]));
});
},{"core-js/shim":"node_modules/core-js/shim.js","regenerator-runtime/runtime":"node_modules/babel-polyfill/node_modules/regenerator-runtime/runtime.js","core-js/fn/regexp/escape":"node_modules/core-js/fn/regexp/escape.js"}],"node_modules/@polkadot/x-global/packageInfo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packageInfo = void 0;
// Copyright 2017-2022 @polkadot/x-global authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
var packageInfo = {
  name: '@polkadot/x-global',
  path: import.meta && import.meta.url ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto',
  type: 'esm',
  version: '9.7.2'
};
exports.packageInfo = packageInfo;
},{}],"node_modules/@polkadot/x-global/index.js":[function(require,module,exports) {
var global = arguments[3];
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.exposeGlobal = exposeGlobal;
exports.extractGlobal = extractGlobal;
Object.defineProperty(exports, "packageInfo", {
  enumerable: true,
  get: function () {
    return _packageInfo.packageInfo;
  }
});
exports.xglobal = void 0;

var _packageInfo = require("./packageInfo.js");

// Copyright 2017-2022 @polkadot/x-global authors & contributors
// SPDX-License-Identifier: Apache-2.0
function evaluateThis(fn) {
  return fn('return this');
}

var xglobal = typeof globalThis !== 'undefined' ? globalThis : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : evaluateThis(Function);
exports.xglobal = xglobal;

function extractGlobal(name, fallback) {
  // Not quite sure why this is here - snuck in with TS 4.7.2 with no real idea
  // (as of now) as to why this looks like an "any" when we do cast it to a T
  //
  // eslint-disable-next-line @typescript-eslint/no-unsafe-return
  return typeof xglobal[name] === 'undefined' ? fallback : xglobal[name];
}

function exposeGlobal(name, fallback) {
  if (typeof xglobal[name] === 'undefined') {
    xglobal[name] = fallback;
  }
}
},{"./packageInfo.js":"node_modules/@polkadot/x-global/packageInfo.js"}],"node_modules/@polkadot/x-textdecoder/cjs/fallback.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TextDecoder = void 0;

// Copyright 2017-2022 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
// This is very limited, only handling Ascii values
class TextDecoder {
  // eslint-disable-next-line @typescript-eslint/no-unused-vars,no-useless-constructor
  constructor(_) {// nothing
  }

  decode(value) {
    let result = '';

    for (let i = 0; i < value.length; i++) {
      result += String.fromCharCode(value[i]);
    }

    return result;
  }

}

exports.TextDecoder = TextDecoder;
},{}],"node_modules/@polkadot/x-textdecoder/cjs/packageInfo.js":[function(require,module,exports) {
var __dirname = "C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\x-textdecoder\\cjs";
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packageInfo = void 0;
// Copyright 2017-2022 @polkadot/x-textdecoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
const packageInfo = {
  name: '@polkadot/x-textdecoder',
  path: typeof __dirname === 'string' ? __dirname : 'auto',
  type: 'cjs',
  version: '9.7.2'
};
exports.packageInfo = packageInfo;
},{}],"node_modules/@polkadot/x-textdecoder/cjs/browser.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TextDecoder = void 0;
Object.defineProperty(exports, "packageInfo", {
  enumerable: true,
  get: function () {
    return _packageInfo.packageInfo;
  }
});

var _xGlobal = require("@polkadot/x-global");

var _fallback = require("./fallback");

var _packageInfo = require("./packageInfo");

// Copyright 2017-2022 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
const TextDecoder = (0, _xGlobal.extractGlobal)('TextDecoder', _fallback.TextDecoder);
exports.TextDecoder = TextDecoder;
},{"@polkadot/x-global":"node_modules/@polkadot/x-global/index.js","./fallback":"node_modules/@polkadot/x-textdecoder/cjs/fallback.js","./packageInfo":"node_modules/@polkadot/x-textdecoder/cjs/packageInfo.js"}],"node_modules/@polkadot/x-textencoder/cjs/fallback.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TextEncoder = void 0;

// Copyright 2017-2022 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
// This is very limited, only handling Ascii values
class TextEncoder {
  encode(value) {
    const u8a = new Uint8Array(value.length);

    for (let i = 0; i < value.length; i++) {
      u8a[i] = value.charCodeAt(i);
    }

    return u8a;
  }

}

exports.TextEncoder = TextEncoder;
},{}],"node_modules/@polkadot/x-textencoder/cjs/packageInfo.js":[function(require,module,exports) {
var __dirname = "C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\x-textencoder\\cjs";
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packageInfo = void 0;
// Copyright 2017-2022 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
const packageInfo = {
  name: '@polkadot/x-textencoder',
  path: typeof __dirname === 'string' ? __dirname : 'auto',
  type: 'cjs',
  version: '9.7.2'
};
exports.packageInfo = packageInfo;
},{}],"node_modules/@polkadot/x-textencoder/cjs/browser.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TextEncoder = void 0;
Object.defineProperty(exports, "packageInfo", {
  enumerable: true,
  get: function () {
    return _packageInfo.packageInfo;
  }
});

var _xGlobal = require("@polkadot/x-global");

var _fallback = require("./fallback");

var _packageInfo = require("./packageInfo");

// Copyright 2017-2022 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
const TextEncoder = (0, _xGlobal.extractGlobal)('TextEncoder', _fallback.TextEncoder);
exports.TextEncoder = TextEncoder;
},{"@polkadot/x-global":"node_modules/@polkadot/x-global/index.js","./fallback":"node_modules/@polkadot/x-textencoder/cjs/fallback.js","./packageInfo":"node_modules/@polkadot/x-textencoder/cjs/packageInfo.js"}],"node_modules/@polkadot/util/detectOther.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _xTextdecoder = require("@polkadot/x-textdecoder");

var _xTextencoder = require("@polkadot/x-textencoder");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
var _default = [_xTextdecoder.packageInfo, _xTextencoder.packageInfo];
exports.default = _default;
},{"@polkadot/x-textdecoder":"node_modules/@polkadot/x-textdecoder/cjs/browser.js","@polkadot/x-textencoder":"node_modules/@polkadot/x-textencoder/cjs/browser.js"}],"node_modules/@polkadot/util/packageInfo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packageInfo = void 0;
// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
var packageInfo = {
  name: '@polkadot/util',
  path: import.meta && import.meta.url ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto',
  type: 'esm',
  version: '9.7.2'
};
exports.packageInfo = packageInfo;
},{}],"node_modules/@polkadot/util/is/function.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isFunction = isFunction;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
// eslint-disable-next-line @typescript-eslint/ban-types

/**
 * @name isFunction
 * @summary Tests for a `function`.
 * @description
 * Checks to see if the input value is a JavaScript function.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isFunction } from '@polkadot/util';
 *
 * isFunction(() => false); // => true
 * ```
 */
function isFunction(value) {
  return typeof value === 'function';
}
},{}],"node_modules/@polkadot/util/versionDetect.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.detectPackage = detectPackage;

var _xGlobal = require("@polkadot/x-global");

var _function = require("./is/function.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
var DEDUPE = 'Either remove and explicitly install matching versions or dedupe using your package manager.\nThe following conflicting packages were found:';
/** @internal */

function getEntry(name) {
  var _global = _xGlobal.xglobal;

  if (!_global.__polkadotjs) {
    _global.__polkadotjs = {};
  }

  if (!_global.__polkadotjs[name]) {
    _global.__polkadotjs[name] = [];
  }

  return _global.__polkadotjs[name];
}
/** @internal */


function formatDisplay(all, fmt) {
  var max = 0;

  for (var i = 0; i < all.length; i++) {
    max = Math.max(max, all[i].version.length);
  }

  return all.map(function (d) {
    return "\t".concat(fmt(d.version.padEnd(max), d).join('\t'));
  }).join('\n');
}
/** @internal */


function formatInfo(version, _ref) {
  var name = _ref.name;
  return [version, name];
}
/** @internal */


function formatVersion(version, _ref2) {
  var path = _ref2.path,
      type = _ref2.type;
  var extracted;

  if (path && path.length >= 5) {
    var nmIndex = path.indexOf('node_modules');
    extracted = nmIndex === -1 ? path : path.substring(nmIndex);
  } else {
    extracted = '<unknown>';
  }

  return ["".concat("".concat(type || '').padStart(3), " ").concat(version), extracted];
}
/** @internal */


function getPath(infoPath, pathOrFn) {
  if (infoPath) {
    return infoPath;
  } else if ((0, _function.isFunction)(pathOrFn)) {
    try {
      return pathOrFn() || '';
    } catch (error) {
      return '';
    }
  }

  return pathOrFn || '';
}
/** @internal */


function warn(pre, all, fmt) {
  console.warn("".concat(pre, "\n").concat(DEDUPE, "\n").concat(formatDisplay(all, fmt)));
}
/**
 * @name detectPackage
 * @summary Checks that a specific package is only imported once
 * @description A `@polkadot/*` version detection utility, checking for one occurence of a package in addition to checking for ddependency versions.
 */


function detectPackage(_ref3, pathOrFn) {
  var name = _ref3.name,
      path = _ref3.path,
      type = _ref3.type,
      version = _ref3.version;
  var deps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

  if (!name.startsWith('@polkadot')) {
    throw new Error("Invalid package descriptor ".concat(name));
  }

  var entry = getEntry(name);
  entry.push({
    path: getPath(path, pathOrFn),
    type: type,
    version: version
  });

  if (entry.length !== 1) {
    warn("".concat(name, " has multiple versions, ensure that there is only one installed."), entry, formatVersion);
  } else {
    var mismatches = deps.filter(function (d) {
      return d && d.version !== version;
    });

    if (mismatches.length) {
      warn("".concat(name, " requires direct dependencies exactly matching version ").concat(version, "."), mismatches, formatInfo);
    }
  }
}
},{"@polkadot/x-global":"node_modules/@polkadot/x-global/index.js","./is/function.js":"node_modules/@polkadot/util/is/function.js"}],"node_modules/@polkadot/util/detectPackage.js":[function(require,module,exports) {
"use strict";

var _detectOther = _interopRequireDefault(require("./detectOther.js"));

var _packageInfo = require("./packageInfo.js");

var _versionDetect = require("./versionDetect.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
(0, _versionDetect.detectPackage)(_packageInfo.packageInfo, null, _detectOther.default);
},{"./detectOther.js":"node_modules/@polkadot/util/detectOther.js","./packageInfo.js":"node_modules/@polkadot/util/packageInfo.js","./versionDetect.js":"node_modules/@polkadot/util/versionDetect.js"}],"node_modules/@polkadot/util/array/chunk.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.arrayChunk = arrayChunk;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name arrayChunk
 * @summary Split T[] into T[][] based on the defind size
 * @description
 * Returns a set ao arrays based on the chunksize
 * @example
 * <BR>
 *
 * ```javascript
 * import { arrayChunk } from '@polkadot/util';
 *
 * arrayChunk([1, 2, 3, 4, 5]); // [[1, 2], [3, 4], [5]]
 * ```
 */
function arrayChunk(array, chunkSize) {
  var outputSize = Math.ceil(array.length / chunkSize); // noop for the single-split case

  if (outputSize === 1) {
    return [array];
  }

  var output = Array(outputSize);

  for (var i = 0; i < outputSize; i++) {
    var offset = i * chunkSize;
    output[i] = array.slice(offset, offset + chunkSize);
  }

  return output;
}
},{}],"node_modules/@polkadot/util/array/filter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.arrayFilter = arrayFilter;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name arrayFilter
 * @summary Filters undefined and (optionally) null values from an array
 * @description
 * Returns a new array with all `undefined` values removed. Optionally, when `allowNulls = false`, it removes the `null` values as well
 * @example
 * <BR>
 *
 * ```javascript
 * import { arrayFilter } from '@polkadot/util';
 *
 * arrayFilter([0, void 0, true, null, false, '']); // [0, true, null, false, '']
 * arrayFilter([0, void 0, true, null, false, ''], false); // [0, true, false, '']
 * ```
 */
function arrayFilter(array) {
  var allowNulls = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  return array.filter(function (v) {
    return v !== undefined && (allowNulls || v !== null);
  });
}
},{}],"node_modules/@polkadot/util/array/flatten.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.arrayFlatten = arrayFlatten;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
// This is supposed to be a faster concat...
// https://dev.to/uilicious/javascript-array-push-is-945x-faster-than-array-concat-1oki

/**
 * @name arrayFlatten
 * @summary Merge T[][] into T[]
 * @description
 * Returns a new array with all arrays merged into one
 * @example
 * <BR>
 *
 * ```javascript
 * import { arrayFlatten } from '@polkadot/util';
 *
 * arrayFlatten([[1, 2], [3, 4], [5]]); // [1, 2, 3, 4, 5]
 * ```
 */
function arrayFlatten(arrays) {
  // noop for the single-entry case
  if (arrays.length === 1) {
    return arrays[0];
  } // pre-allocate based on the combined size


  var size = 0;

  for (var _i = 0; _i < arrays.length; _i++) {
    size += arrays[_i].length;
  }

  var output = new Array(size);
  var i = -1;

  for (var j = 0; j < arrays.length; j++) {
    var a = arrays[j]; // instead of pushing, we just set the entries

    for (var e = 0; e < a.length; e++) {
      output[++i] = a[e];
    }
  }

  return output;
}
},{}],"node_modules/@polkadot/util/array/range.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.arrayRange = arrayRange;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name arrayRange
 * @summary Returns a range of numbers ith the size and the specified offset
 * @description
 * Returns a new array of numbers with the specific size. Optionally, when `startAt`, is provided, it generates the range to start at a specific value.
 * @example
 * <BR>
 *
 * ```javascript
 * import { arrayRange } from '@polkadot/util';
 *
 * arrayRange(5); // [0, 1, 2, 3, 4]
 * arrayRange(3, 5); // [5, 6, 7]
 * ```
 */
function arrayRange(size) {
  var startAt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

  if (size <= 0) {
    throw new Error('Expected non-zero, positive number as a range size');
  }

  var result = new Array(size);

  for (var i = 0; i < size; i++) {
    result[i] = i + startAt;
  }

  return result;
}
},{}],"node_modules/@polkadot/util/array/shuffle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.arrayShuffle = arrayShuffle;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name arrayShuffle
 * @description Shuffles the input array (unlike sort, this is not done in-place)
 */
function arrayShuffle(input) {
  var result = input.slice();
  var curr = result.length; // noop for the single entry

  if (curr === 1) {
    return result;
  }

  while (curr !== 0) {
    // ~~ is more performant than Math.floor
    var rand = ~~(Math.random() * curr);
    curr--;
    var _ref = [result[rand], result[curr]];
    result[curr] = _ref[0];
    result[rand] = _ref[1];
  }

  return result;
}
},{}],"node_modules/@polkadot/util/array/zip.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.arrayZip = arrayZip;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name arrayZip
 * @description Combines 2 distinct key/value arrays into a single [K, V] array
 */
function arrayZip(keys, values) {
  var result = new Array(keys.length);

  for (var i = 0; i < keys.length; i++) {
    result[i] = [keys[i], values[i]];
  }

  return result;
}
},{}],"node_modules/@polkadot/util/array/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "arrayChunk", {
  enumerable: true,
  get: function () {
    return _chunk.arrayChunk;
  }
});
Object.defineProperty(exports, "arrayFilter", {
  enumerable: true,
  get: function () {
    return _filter.arrayFilter;
  }
});
Object.defineProperty(exports, "arrayFlatten", {
  enumerable: true,
  get: function () {
    return _flatten.arrayFlatten;
  }
});
Object.defineProperty(exports, "arrayRange", {
  enumerable: true,
  get: function () {
    return _range.arrayRange;
  }
});
Object.defineProperty(exports, "arrayShuffle", {
  enumerable: true,
  get: function () {
    return _shuffle.arrayShuffle;
  }
});
Object.defineProperty(exports, "arrayZip", {
  enumerable: true,
  get: function () {
    return _zip.arrayZip;
  }
});

var _chunk = require("./chunk.js");

var _filter = require("./filter.js");

var _flatten = require("./flatten.js");

var _range = require("./range.js");

var _shuffle = require("./shuffle.js");

var _zip = require("./zip.js");
},{"./chunk.js":"node_modules/@polkadot/util/array/chunk.js","./filter.js":"node_modules/@polkadot/util/array/filter.js","./flatten.js":"node_modules/@polkadot/util/array/flatten.js","./range.js":"node_modules/@polkadot/util/array/range.js","./shuffle.js":"node_modules/@polkadot/util/array/shuffle.js","./zip.js":"node_modules/@polkadot/util/array/zip.js"}],"node_modules/@polkadot/util/assert.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.assert = assert;
exports.assertReturn = assertReturn;
exports.assertUnreachable = assertUnreachable;

var _function = require("./is/function.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name assert
 * @summary Checks for a valid test, if not Error is thrown.
 * @description
 * Checks that `test` is a truthy value. If value is falsy (`null`, `undefined`, `false`, ...), it throws an Error with the supplied `message`. When `test` passes, `true` is returned.
 * @example
 * <BR>
 *
 * ```javascript
 * const { assert } from '@polkadot/util';
 *
 * assert(true, 'True should be true'); // passes
 * assert(false, 'False should not be true'); // Error thrown
 * assert(false, () => 'message'); // Error with 'message'
 * ```
 */
function assert(condition, message) {
  if (!condition) {
    throw new Error((0, _function.isFunction)(message) ? message() : message);
  }
}
/**
 * @name assertReturn
 * @description Returns when the value is not undefined/null, otherwise throws assertion error
 */


function assertReturn(value, message) {
  assert(value !== undefined && value !== null, message);
  return value;
}
/**
 * @name assertUnreachable
 * @description An assertion helper that ensures all codepaths are followed
 */


function assertUnreachable(x) {
  throw new Error("This codepath should be unreachable. Unhandled input: ".concat(x));
}
},{"./is/function.js":"node_modules/@polkadot/util/is/function.js"}],"node_modules/@polkadot/x-bigint/packageInfo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packageInfo = void 0;
// Copyright 2017-2022 @polkadot/x-bigint authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
var packageInfo = {
  name: '@polkadot/x-bigint',
  path: import.meta && import.meta.url ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto',
  type: 'esm',
  version: '9.7.2'
};
exports.packageInfo = packageInfo;
},{}],"node_modules/@polkadot/x-bigint/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BigInt = void 0;
Object.defineProperty(exports, "packageInfo", {
  enumerable: true,
  get: function () {
    return _packageInfo.packageInfo;
  }
});

var _xGlobal = require("@polkadot/x-global");

var _packageInfo = require("./packageInfo.js");

// Copyright 2017-2022 @polkadot/x-bigint authors & contributors
// SPDX-License-Identifier: Apache-2.0
var BigInt = typeof _xGlobal.xglobal.BigInt === 'function' && typeof _xGlobal.xglobal.BigInt.asIntN === 'function' ? _xGlobal.xglobal.BigInt : function () {
  return Number.NaN;
};
exports.BigInt = BigInt;
},{"@polkadot/x-global":"node_modules/@polkadot/x-global/index.js","./packageInfo.js":"node_modules/@polkadot/x-bigint/packageInfo.js"}],"node_modules/@polkadot/util/bi/consts.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._2pow53n = exports._1n = exports._1Qn = exports._1Mn = exports._1Bn = exports._0n = void 0;

var _xBigint = require("@polkadot/x-bigint");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name _0n
 * @summary BigInt constant for 0.
 */
var _0n = (0, _xBigint.BigInt)(0);
/**
 * @name _1n
 * @summary BigInt constant for 1.
 */


exports._0n = _0n;

var _1n = (0, _xBigint.BigInt)(1);
/**
 * @name _1Mn
 * @summary BigInt constant for 1,000,000.
 */


exports._1n = _1n;

var _1Mn = (0, _xBigint.BigInt)(1000000);
/**
* @name _1Bn
* @summary BigInt constant for 1,000,000,000.
*/


exports._1Mn = _1Mn;

var _1Bn = (0, _xBigint.BigInt)(1000000000);
/**
* @name _1Qn
* @summary BigInt constant for 1,000,000,000,000,000,000.
*/


exports._1Bn = _1Bn;

var _1Qn = _1Bn * _1Bn;
/**
* @name _2pow53n
* @summary BigInt constant for MAX_SAFE_INTEGER
*/


exports._1Qn = _1Qn;

var _2pow53n = (0, _xBigint.BigInt)(Number.MAX_SAFE_INTEGER);

exports._2pow53n = _2pow53n;
},{"@polkadot/x-bigint":"node_modules/@polkadot/x-bigint/index.js"}],"node_modules/@polkadot/util/object/spread.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.objectSpread = objectSpread;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name objectSpread
 * @summary Concats all sources into the destination
 */
function objectSpread(dest) {
  for (var i = 0; i < (arguments.length <= 1 ? 0 : arguments.length - 1); i++) {
    var src = i + 1 < 1 || arguments.length <= i + 1 ? undefined : arguments[i + 1];

    if (src) {
      Object.assign(dest, src);
    }
  }

  return dest;
}
},{}],"node_modules/@polkadot/util/u8a/toBigInt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.u8aToBigInt = u8aToBigInt;

var _xBigint = require("@polkadot/x-bigint");

var _consts = require("../bi/consts.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
var U8_MAX = (0, _xBigint.BigInt)(256);
var U16_MAX = (0, _xBigint.BigInt)(256 * 256);
/**
 * @name u8aToBigInt
 * @summary Creates a BigInt from a Uint8Array object.
 */

function u8aToBigInt(value) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref$isLe = _ref.isLe,
      isLe = _ref$isLe === void 0 ? true : _ref$isLe,
      _ref$isNegative = _ref.isNegative,
      isNegative = _ref$isNegative === void 0 ? false : _ref$isNegative;

  if (!value || !value.length) {
    return (0, _xBigint.BigInt)(0);
  }

  var u8a = isLe ? value : value.reverse();
  var dvI = new DataView(u8a.buffer, u8a.byteOffset);
  var mod = u8a.length % 2;
  var result = (0, _xBigint.BigInt)(0); // This is mostly written for readability (with the single isNegative shortcut),
  // as opposed to performance, e.g. `u8aToBn` does loop unrolling, etc.

  if (isNegative) {
    for (var i = u8a.length - 2; i >= mod; i -= 2) {
      result = result * U16_MAX + (0, _xBigint.BigInt)(dvI.getUint16(i, true) ^ 0xffff);
    }

    if (mod) {
      result = result * U8_MAX + (0, _xBigint.BigInt)(dvI.getUint8(0) ^ 0xff);
    }
  } else {
    for (var _i = u8a.length - 2; _i >= mod; _i -= 2) {
      result = result * U16_MAX + (0, _xBigint.BigInt)(dvI.getUint16(_i, true));
    }

    if (mod) {
      result = result * U8_MAX + (0, _xBigint.BigInt)(dvI.getUint8(0));
    }
  }

  return isNegative ? result * -_consts._1n - _consts._1n : result;
}
},{"@polkadot/x-bigint":"node_modules/@polkadot/x-bigint/index.js","../bi/consts.js":"node_modules/@polkadot/util/bi/consts.js"}],"node_modules/@polkadot/util/is/hex.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.REGEX_HEX_PREFIXED = exports.REGEX_HEX_NOPREFIX = void 0;
exports.isHex = isHex;
// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
var REGEX_HEX_PREFIXED = /^0x[\da-fA-F]+$/;
exports.REGEX_HEX_PREFIXED = REGEX_HEX_PREFIXED;
var REGEX_HEX_NOPREFIX = /^[\da-fA-F]+$/;
/**
 * @name isHex
 * @summary Tests for a hex string.
 * @description
 * Checks to see if the input value is a `0x` prefixed hex string. Optionally (`bitLength` !== -1) checks to see if the bitLength is correct.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isHex } from '@polkadot/util';
 *
 * isHex('0x1234'); // => true
 * isHex('0x1234', 8); // => false
 * ```
 */

exports.REGEX_HEX_NOPREFIX = REGEX_HEX_NOPREFIX;

function isHex(value) {
  var bitLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;
  var ignoreLength = arguments.length > 2 ? arguments[2] : undefined;
  return typeof value === 'string' && (value === '0x' || REGEX_HEX_PREFIXED.test(value)) && (bitLength === -1 ? ignoreLength || value.length % 2 === 0 : value.length === 2 + Math.ceil(bitLength / 4));
}
},{}],"node_modules/@polkadot/util/hex/toU8a.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hexToU8a = hexToU8a;

var _hex = require("../is/hex.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
var CHARS = '0123456789abcdef';
var UNHEX = new Array(256);

for (var i = 0; i < CHARS.length; i++) {
  UNHEX[CHARS[i].charCodeAt(0)] = i;

  if (i > 9) {
    UNHEX[CHARS[i].toUpperCase().charCodeAt(0)] = i;
  }
}
/**
 * @name hexToU8a
 * @summary Creates a Uint8Array object from a hex string.
 * @description
 * `null` inputs returns an empty `Uint8Array` result. Hex input values return the actual bytes value converted to a Uint8Array. Anything that is not a hex string (including the `0x` prefix) throws an error.
 * @example
 * <BR>
 *
 * ```javascript
 * import { hexToU8a } from '@polkadot/util';
 *
 * hexToU8a('0x80001f'); // Uint8Array([0x80, 0x00, 0x1f])
 * hexToU8a('0x80001f', 32); // Uint8Array([0x00, 0x80, 0x00, 0x1f])
 * ```
 */


function hexToU8a(value) {
  var bitLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;

  if (!value || value === '0x') {
    return new Uint8Array();
  }

  var s = 0; // we don't use hexStringPrefix here - that has substring which adds
  // additional overhead. Instead we duplicate the logic, just incrementing
  // the sactual string pointer, ignoring the prefix as required

  if (_hex.REGEX_HEX_PREFIXED.test(value)) {
    s = 2;
  } else if (!_hex.REGEX_HEX_NOPREFIX.test(value)) {
    throw new Error("Expected hex value to convert, found '".concat(value, "'"));
  }

  var strLength = (value.length - s) / 2;
  var endLength = Math.ceil(bitLength === -1 ? strLength : bitLength / 8);
  var result = new Uint8Array(endLength);
  var offset = endLength > strLength ? endLength - strLength : 0;

  for (var _i = offset; _i < endLength; _i++, s += 2) {
    // The big factor here is actually the string lookups. If we do
    // HEX_TO_U16[value.substring()] we get an 10x slowdown. In the
    // same vein using charCodeAt (as opposed to value[s] or value.charAt(s)) is
    // also the faster operation by at least 2x with the character map above
    result[_i] = (UNHEX[value.charCodeAt(s)] << 4) + UNHEX[value.charCodeAt(s + 1)];
  }

  return result;
}
},{"../is/hex.js":"node_modules/@polkadot/util/is/hex.js"}],"node_modules/@polkadot/util/hex/toBigInt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hexToBigInt = hexToBigInt;

var _xBigint = require("@polkadot/x-bigint");

var _spread = require("../object/spread.js");

var _toBigInt = require("../u8a/toBigInt.js");

var _toU8a = require("./toU8a.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name hexToBigInt
 * @summary Creates a BigInt instance object from a hex string.
 */
function hexToBigInt(value) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return !value || value === '0x' ? (0, _xBigint.BigInt)(0) : (0, _toBigInt.u8aToBigInt)((0, _toU8a.hexToU8a)(value), (0, _spread.objectSpread)({
    isLe: false,
    isNegative: false
  }, options));
}
},{"@polkadot/x-bigint":"node_modules/@polkadot/x-bigint/index.js","../object/spread.js":"node_modules/@polkadot/util/object/spread.js","../u8a/toBigInt.js":"node_modules/@polkadot/util/u8a/toBigInt.js","./toU8a.js":"node_modules/@polkadot/util/hex/toU8a.js"}],"node_modules/parcel-bundler/src/builtins/_empty.js":[function(require,module,exports) {

},{}],"node_modules/bn.js/lib/bn.js":[function(require,module,exports) {
var Buffer = require("buffer").Buffer;
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {
      Buffer = window.Buffer;
    } else {
      Buffer = require('buffer').Buffer;
    }
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
      this.negative = 1;
    }

    if (start < number.length) {
      if (base === 16) {
        this._parseHex(number, start, endian);
      } else {
        this._parseBase(number, base, start);
        if (endian === 'le') {
          this._initArray(this.toArray(), base, endian);
        }
      }
    }
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [number & 0x3ffffff];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [0];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this._strip();
  };

  function parseHex4Bits (string, index) {
    var c = string.charCodeAt(index);
    // '0' - '9'
    if (c >= 48 && c <= 57) {
      return c - 48;
    // 'A' - 'F'
    } else if (c >= 65 && c <= 70) {
      return c - 55;
    // 'a' - 'f'
    } else if (c >= 97 && c <= 102) {
      return c - 87;
    } else {
      assert(false, 'Invalid character in ' + string);
    }
  }

  function parseHexByte (string, lowerBound, index) {
    var r = parseHex4Bits(string, index);
    if (index - 1 >= lowerBound) {
      r |= parseHex4Bits(string, index - 1) << 4;
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start, endian) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    // 24-bits chunks
    var off = 0;
    var j = 0;

    var w;
    if (endian === 'be') {
      for (i = number.length - 1; i >= start; i -= 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    } else {
      var parseLength = number.length - start;
      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    }

    this._strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var b = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        b = c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        b = c - 17 + 0xa;

      // '0' - '9'
      } else {
        b = c;
      }
      assert(c >= 0 && b < mul, 'Invalid character');
      r += b;
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [0];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    this._strip();
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  function move (dest, src) {
    dest.words = src.words;
    dest.length = src.length;
    dest.negative = src.negative;
    dest.red = src.red;
  }

  BN.prototype._move = function _move (dest) {
    move(dest, this);
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype._strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  // Check Symbol.for because not everywhere where Symbol defined
  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility
  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {
    try {
      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;
    } catch (e) {
      BN.prototype.inspect = inspect;
    }
  } else {
    BN.prototype.inspect = inspect;
  }

  function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  }

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modrn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16, 2);
  };

  if (Buffer) {
    BN.prototype.toBuffer = function toBuffer (endian, length) {
      return this.toArrayLike(Buffer, endian, length);
    };
  }

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  var allocate = function allocate (ArrayType, size) {
    if (ArrayType.allocUnsafe) {
      return ArrayType.allocUnsafe(size);
    }
    return new ArrayType(size);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    this._strip();

    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    var res = allocate(ArrayType, reqLength);
    var postfix = endian === 'le' ? 'LE' : 'BE';
    this['_toArrayLike' + postfix](res, byteLength);
    return res;
  };

  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {
    var position = 0;
    var carry = 0;

    for (var i = 0, shift = 0; i < this.length; i++) {
      var word = (this.words[i] << shift) | carry;

      res[position++] = word & 0xff;
      if (position < res.length) {
        res[position++] = (word >> 8) & 0xff;
      }
      if (position < res.length) {
        res[position++] = (word >> 16) & 0xff;
      }

      if (shift === 6) {
        if (position < res.length) {
          res[position++] = (word >> 24) & 0xff;
        }
        carry = 0;
        shift = 0;
      } else {
        carry = word >>> 24;
        shift += 2;
      }
    }

    if (position < res.length) {
      res[position++] = carry;

      while (position < res.length) {
        res[position++] = 0;
      }
    }
  };

  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {
    var position = res.length - 1;
    var carry = 0;

    for (var i = 0, shift = 0; i < this.length; i++) {
      var word = (this.words[i] << shift) | carry;

      res[position--] = word & 0xff;
      if (position >= 0) {
        res[position--] = (word >> 8) & 0xff;
      }
      if (position >= 0) {
        res[position--] = (word >> 16) & 0xff;
      }

      if (shift === 6) {
        if (position >= 0) {
          res[position--] = (word >> 24) & 0xff;
        }
        carry = 0;
        shift = 0;
      } else {
        carry = word >>> 24;
        shift += 2;
      }
    }

    if (position >= 0) {
      res[position--] = carry;

      while (position >= 0) {
        res[position--] = 0;
      }
    }
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] >>> wbit) & 0x01;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this._strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this._strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this._strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this._strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this._strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this._strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out._strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out._strip();
  }

  function jumboMulTo (self, num, out) {
    // Temporary disable, see https://github.com/indutny/bn.js/issues/211
    // var fftm = new FFTM();
    // return fftm.mulp(self, num, out);
    return bigMulTo(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out._strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    var isNegNum = num < 0;
    if (isNegNum) num = -num;

    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return isNegNum ? this.ineg() : this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this._strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this._strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this._strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) <= num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this._strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this._strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this._strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q._strip();
    }
    a._strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modrn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modrn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modrn = function modrn (num) {
    var isNegNum = num < 0;
    if (isNegNum) num = -num;

    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return isNegNum ? -acc : acc;
  };

  // WARNING: DEPRECATED
  BN.prototype.modn = function modn (num) {
    return this.modrn(num);
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    var isNegNum = num < 0;
    if (isNegNum) num = -num;

    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    this._strip();
    return isNegNum ? this.ineg() : this;
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this._strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      if (r.strip !== undefined) {
        // r is a BN v4 instance
        r.strip();
      } else {
        // r is a BN v5 instance
        r._strip();
      }
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);

    move(a, a.umod(this.m)._forceRed(this));
    return a;
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})(typeof module === 'undefined' || module, this);

},{"buffer":"node_modules/parcel-bundler/src/builtins/_empty.js"}],"node_modules/@polkadot/util/bn/bn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BN", {
  enumerable: true,
  get: function () {
    return _bn.default;
  }
});

var _bn = _interopRequireDefault(require("bn.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"bn.js":"node_modules/bn.js/lib/bn.js"}],"node_modules/@polkadot/util/is/bn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isBn = isBn;

var _bn = require("../bn/bn.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isBn
 * @summary Tests for a `BN` object instance.
 * @description
 * Checks to see if the input object is an instance of `BN` (bn.js).
 * @example
 * <BR>
 *
 * ```javascript
 * import BN from 'bn.js';
 * import { isBn } from '@polkadot/util';
 *
 * console.log('isBn', isBn(new BN(1))); // => true
 * ```
 */
function isBn(value) {
  return _bn.BN.isBN(value);
}
},{"../bn/bn.js":"node_modules/@polkadot/util/bn/bn.js"}],"node_modules/@polkadot/util/is/object.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isObject = isObject;

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isObject
 * @summary Tests for an `object`.
 * @description
 * Checks to see if the input value is a JavaScript object.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isObject } from '@polkadot/util';
 *
 * isObject({}); // => true
 * isObject('something'); // => false
 * ```
 */
function isObject(value) {
  return !!value && _typeof(value) === 'object';
}
},{}],"node_modules/@polkadot/util/is/helpers.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isOn = isOn;
exports.isOnObject = isOnObject;

var _function = require("./function.js");

var _object = require("./object.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
function isOn() {
  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {
    fns[_key] = arguments[_key];
  }

  return function (value) {
    return ((0, _object.isObject)(value) || (0, _function.isFunction)(value)) && fns.every(function (f) {
      return (0, _function.isFunction)(value[f]);
    });
  };
}

function isOnObject() {
  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    fns[_key2] = arguments[_key2];
  }

  return function (value) {
    return (0, _object.isObject)(value) && fns.every(function (f) {
      return (0, _function.isFunction)(value[f]);
    });
  };
}
},{"./function.js":"node_modules/@polkadot/util/is/function.js","./object.js":"node_modules/@polkadot/util/is/object.js"}],"node_modules/@polkadot/util/is/toBigInt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isToBigInt = void 0;

var _helpers = require("./helpers.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
var isToBigInt = (0, _helpers.isOn)('toBigInt');
exports.isToBigInt = isToBigInt;
},{"./helpers.js":"node_modules/@polkadot/util/is/helpers.js"}],"node_modules/@polkadot/util/is/toBn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isToBn = void 0;

var _helpers = require("./helpers.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
var isToBn = (0, _helpers.isOn)('toBn');
exports.isToBn = isToBn;
},{"./helpers.js":"node_modules/@polkadot/util/is/helpers.js"}],"node_modules/@polkadot/util/bi/toBigInt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.nToBigInt = nToBigInt;

var _xBigint = require("@polkadot/x-bigint");

var _toBigInt = require("../hex/toBigInt.js");

var _bn = require("../is/bn.js");

var _hex = require("../is/hex.js");

var _toBigInt2 = require("../is/toBigInt.js");

var _toBn = require("../is/toBn.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name nToBigInt
 * @summary Creates a bigInt value from a BN, bigint, string (base 10 or hex) or number input.
 */
function nToBigInt(value) {
  return typeof value === 'bigint' ? value : !value ? (0, _xBigint.BigInt)(0) : (0, _hex.isHex)(value) ? (0, _toBigInt.hexToBigInt)(value.toString()) : (0, _bn.isBn)(value) ? (0, _xBigint.BigInt)(value.toString()) : (0, _toBigInt2.isToBigInt)(value) ? value.toBigInt() : (0, _toBn.isToBn)(value) ? (0, _xBigint.BigInt)(value.toBn().toString()) : (0, _xBigint.BigInt)(value);
}
},{"@polkadot/x-bigint":"node_modules/@polkadot/x-bigint/index.js","../hex/toBigInt.js":"node_modules/@polkadot/util/hex/toBigInt.js","../is/bn.js":"node_modules/@polkadot/util/is/bn.js","../is/hex.js":"node_modules/@polkadot/util/is/hex.js","../is/toBigInt.js":"node_modules/@polkadot/util/is/toBigInt.js","../is/toBn.js":"node_modules/@polkadot/util/is/toBn.js"}],"node_modules/@polkadot/util/bi/sqrt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SQRT_MAX_SAFE_INTEGER = void 0;
exports.nSqrt = nSqrt;

var _xBigint = require("@polkadot/x-bigint");

var _consts = require("./consts.js");

var _toBigInt = require("./toBigInt.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/** @internal */
var SQRT_MAX_SAFE_INTEGER = (0, _xBigint.BigInt)(94906265);
/**
 * @name nSqrt
 * @summary Calculates the integer square root of a bigint
 */

exports.SQRT_MAX_SAFE_INTEGER = SQRT_MAX_SAFE_INTEGER;

function nSqrt(value) {
  var n = (0, _toBigInt.nToBigInt)(value);

  if (n < _consts._0n) {
    throw new Error('square root of negative numbers is not supported');
  } // https://stackoverflow.com/questions/53683995/javascript-big-integer-square-root/
  // shortcut <= 2^53 - 1 to use the JS utils


  if (n <= _consts._2pow53n) {
    // ~~ is more performant that Math.floor
    return (0, _xBigint.BigInt)(~~Math.sqrt(Number(n)));
  } // Use sqrt(MAX_SAFE_INTEGER) as starting point. since we already know the
  // output will be larger than this, we expect this to be a safe start


  var x0 = SQRT_MAX_SAFE_INTEGER;

  while (true) {
    var x1 = n / x0 + x0 >> _consts._1n;

    if (x0 === x1 || x0 === x1 - _consts._1n) {
      return x0;
    }

    x0 = x1;
  }
}
},{"@polkadot/x-bigint":"node_modules/@polkadot/x-bigint/index.js","./consts.js":"node_modules/@polkadot/util/bi/consts.js","./toBigInt.js":"node_modules/@polkadot/util/bi/toBigInt.js"}],"node_modules/@polkadot/util/bi/helpers.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createCmp = createCmp;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/** @internal */
function createCmp(cmp) {
  return function () {
    for (var _len = arguments.length, items = new Array(_len), _key = 0; _key < _len; _key++) {
      items[_key] = arguments[_key];
    }

    if (items.length === 0) {
      throw new Error('Must provide one or more arguments');
    }

    var result = items[0];

    for (var i = 1; i < items.length; i++) {
      if (cmp(items[i], result)) {
        result = items[i];
      }
    }

    return result;
  };
}
},{}],"node_modules/@polkadot/util/bi/min.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.nMin = exports.nMax = void 0;

var _helpers = require("./helpers.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name nMax
 * @summary Finds and returns the highest value in an array of bigint.
 */
var nMax = (0, _helpers.createCmp)(function (a, b) {
  return a > b;
});
/**
 * @name nMin
 * @summary Finds and returns the lowest value in an array of bigint.
 */

exports.nMax = nMax;
var nMin = (0, _helpers.createCmp)(function (a, b) {
  return a < b;
});
exports.nMin = nMin;
},{"./helpers.js":"node_modules/@polkadot/util/bi/helpers.js"}],"node_modules/base64-js/index.js":[function(require,module,exports) {
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}

},{}],"node_modules/ieee754/index.js":[function(require,module,exports) {
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],"node_modules/isarray/index.js":[function(require,module,exports) {
var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

},{}],"node_modules/node-libs-browser/node_modules/buffer/index.js":[function(require,module,exports) {

var global = arguments[3];
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')
var isArray = require('isarray')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

},{"base64-js":"node_modules/base64-js/index.js","ieee754":"node_modules/ieee754/index.js","isarray":"node_modules/isarray/index.js","buffer":"node_modules/node-libs-browser/node_modules/buffer/index.js"}],"node_modules/process/browser.js":[function(require,module,exports) {

// shim for using process in browser
var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
  throw new Error('setTimeout has not been defined');
}

function defaultClearTimeout() {
  throw new Error('clearTimeout has not been defined');
}

(function () {
  try {
    if (typeof setTimeout === 'function') {
      cachedSetTimeout = setTimeout;
    } else {
      cachedSetTimeout = defaultSetTimout;
    }
  } catch (e) {
    cachedSetTimeout = defaultSetTimout;
  }

  try {
    if (typeof clearTimeout === 'function') {
      cachedClearTimeout = clearTimeout;
    } else {
      cachedClearTimeout = defaultClearTimeout;
    }
  } catch (e) {
    cachedClearTimeout = defaultClearTimeout;
  }
})();

function runTimeout(fun) {
  if (cachedSetTimeout === setTimeout) {
    //normal enviroments in sane situations
    return setTimeout(fun, 0);
  } // if setTimeout wasn't available but was latter defined


  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
    cachedSetTimeout = setTimeout;
    return setTimeout(fun, 0);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedSetTimeout(fun, 0);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
      return cachedSetTimeout.call(null, fun, 0);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
      return cachedSetTimeout.call(this, fun, 0);
    }
  }
}

function runClearTimeout(marker) {
  if (cachedClearTimeout === clearTimeout) {
    //normal enviroments in sane situations
    return clearTimeout(marker);
  } // if clearTimeout wasn't available but was latter defined


  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
    cachedClearTimeout = clearTimeout;
    return clearTimeout(marker);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedClearTimeout(marker);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
      return cachedClearTimeout.call(null, marker);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
      // Some versions of I.E. have different rules for clearTimeout vs setTimeout
      return cachedClearTimeout.call(this, marker);
    }
  }
}

var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
  if (!draining || !currentQueue) {
    return;
  }

  draining = false;

  if (currentQueue.length) {
    queue = currentQueue.concat(queue);
  } else {
    queueIndex = -1;
  }

  if (queue.length) {
    drainQueue();
  }
}

function drainQueue() {
  if (draining) {
    return;
  }

  var timeout = runTimeout(cleanUpNextTick);
  draining = true;
  var len = queue.length;

  while (len) {
    currentQueue = queue;
    queue = [];

    while (++queueIndex < len) {
      if (currentQueue) {
        currentQueue[queueIndex].run();
      }
    }

    queueIndex = -1;
    len = queue.length;
  }

  currentQueue = null;
  draining = false;
  runClearTimeout(timeout);
}

process.nextTick = function (fun) {
  var args = new Array(arguments.length - 1);

  if (arguments.length > 1) {
    for (var i = 1; i < arguments.length; i++) {
      args[i - 1] = arguments[i];
    }
  }

  queue.push(new Item(fun, args));

  if (queue.length === 1 && !draining) {
    runTimeout(drainQueue);
  }
}; // v8 likes predictible objects


function Item(fun, array) {
  this.fun = fun;
  this.array = array;
}

Item.prototype.run = function () {
  this.fun.apply(null, this.array);
};

process.title = 'browser';
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues

process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) {
  return [];
};

process.binding = function (name) {
  throw new Error('process.binding is not supported');
};

process.cwd = function () {
  return '/';
};

process.chdir = function (dir) {
  throw new Error('process.chdir is not supported');
};

process.umask = function () {
  return 0;
};
},{}],"node_modules/@polkadot/util/has.js":[function(require,module,exports) {
var Buffer = require("buffer").Buffer;
var __dirname = "C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util";
var process = require("process");
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hasWasm = exports.hasProcess = exports.hasEsm = exports.hasDirname = exports.hasCjs = exports.hasBuffer = exports.hasBigInt = void 0;

var _xBigint = require("@polkadot/x-bigint");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

/** true if the environment has proper BigInt support */
var hasBigInt = typeof _xBigint.BigInt === 'function' && typeof _xBigint.BigInt.asIntN === 'function';
/** true if the environment has support for Buffer */

exports.hasBigInt = hasBigInt;
var hasBuffer = typeof Buffer !== 'undefined';
/** true if the environment is CJS */

exports.hasBuffer = hasBuffer;
var hasCjs = typeof require === 'function' && typeof module !== 'undefined';
/** true if the environment has __dirname available */

exports.hasCjs = hasCjs;
var hasDirname = typeof __dirname !== 'undefined';
/** true if the environment is ESM */

exports.hasDirname = hasDirname;
var hasEsm = !hasCjs;
/** true if the environment has process available (typically Node.js) */

exports.hasEsm = hasEsm;
var hasProcess = (typeof process === "undefined" ? "undefined" : _typeof(process)) === 'object';
/** true if the environment has WebAssembly available */

exports.hasProcess = hasProcess;
var hasWasm = typeof WebAssembly !== 'undefined';
exports.hasWasm = hasWasm;
},{"@polkadot/x-bigint":"node_modules/@polkadot/x-bigint/index.js","buffer":"node_modules/node-libs-browser/node_modules/buffer/index.js","process":"node_modules/process/browser.js"}],"node_modules/@polkadot/util/is/buffer.js":[function(require,module,exports) {
var Buffer = require("buffer").Buffer;
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isBuffer = isBuffer;

var _has = require("../has.js");

var _function = require("./function.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isBuffer
 * @summary Tests for a `Buffer` object instance.
 * @description
 * Checks to see if the input object is an instance of `Buffer`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isBuffer } from '@polkadot/util';
 *
 * console.log('isBuffer', isBuffer(Buffer.from([]))); // => true
 * ```
 */
function isBuffer(value) {
  // we do check a function first, since it is slightly faster than isBuffer itself
  return _has.hasBuffer && (0, _function.isFunction)(value && value.readDoubleLE) && Buffer.isBuffer(value);
}
},{"../has.js":"node_modules/@polkadot/util/has.js","./function.js":"node_modules/@polkadot/util/is/function.js","buffer":"node_modules/node-libs-browser/node_modules/buffer/index.js"}],"node_modules/@polkadot/util/is/u8a.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isU8a = isU8a;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isU8a
 * @summary Tests for a `Uint8Array` object instance.
 * @description
 * Checks to see if the input object is an instance of `Uint8Array`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isUint8Array } from '@polkadot/util';
 *
 * console.log('isU8a', isU8a([])); // => false
 * ```
 */
function isU8a(value) {
  // here we defer the instanceof check which is actually slightly
  // slower than just checking the constrctor (direct instances)
  return (value && value.constructor) === Uint8Array || value instanceof Uint8Array;
}
},{}],"node_modules/@polkadot/util/string/toU8a.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.stringToU8a = stringToU8a;

var _xTextencoder = require("@polkadot/x-textencoder");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
var encoder = new _xTextencoder.TextEncoder();
/**
 * @name stringToU8a
 * @summary Creates a Uint8Array object from a utf-8 string.
 * @description
 * String input values return the actual encoded `UInt8Array`. `null` or `undefined` values returns an empty encoded array.
 * @example
 * <BR>
 *
 * ```javascript
 * import { stringToU8a } from '@polkadot/util';
 *
 * stringToU8a('hello'); // [0x68, 0x65, 0x6c, 0x6c, 0x6f]
 * ```
 */

function stringToU8a(value) {
  return value ? encoder.encode(value.toString()) : new Uint8Array();
}
},{"@polkadot/x-textencoder":"node_modules/@polkadot/x-textencoder/cjs/browser.js"}],"node_modules/@polkadot/util/u8a/toU8a.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.u8aToU8a = u8aToU8a;

var _toU8a = require("../hex/toU8a.js");

var _buffer = require("../is/buffer.js");

var _hex = require("../is/hex.js");

var _u8a = require("../is/u8a.js");

var _toU8a2 = require("../string/toU8a.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name u8aToU8a
 * @summary Creates a Uint8Array value from a Uint8Array, Buffer, string or hex input.
 * @description
 * `null` or `undefined` inputs returns a `[]` result, Uint8Array values returns the value, hex strings returns a Uint8Array representation.
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aToU8a } from '@polkadot/util';
 *
 * u8aToU8a(new Uint8Array([0x12, 0x34]); // => Uint8Array([0x12, 0x34])
 * u8aToU8a(0x1234); // => Uint8Array([0x12, 0x34])
 * ```
 */
function u8aToU8a(value) {
  return (0, _u8a.isU8a)(value) ? value : (0, _hex.isHex)(value) ? (0, _toU8a.hexToU8a)(value) : (0, _buffer.isBuffer)(value) || Array.isArray(value) ? new Uint8Array(value) : (0, _toU8a2.stringToU8a)(value);
}
},{"../hex/toU8a.js":"node_modules/@polkadot/util/hex/toU8a.js","../is/buffer.js":"node_modules/@polkadot/util/is/buffer.js","../is/hex.js":"node_modules/@polkadot/util/is/hex.js","../is/u8a.js":"node_modules/@polkadot/util/is/u8a.js","../string/toU8a.js":"node_modules/@polkadot/util/string/toU8a.js"}],"node_modules/@polkadot/util/u8a/cmp.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.u8aCmp = u8aCmp;

var _toU8a = require("./toU8a.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name u8aCmp
 * @summary Compares two Uint8Arrays for sorting.
 * @description
 * For `UInt8Array` (or hex string) input values returning -1, 0 or +1
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aCmp } from '@polkadot/util';
 *
 * u8aCmp(new Uint8Array([0x67, 0x65]), new Uint8Array([0x68, 0x65])); // -1
 * u8aCmp(new Uint8Array([0x68, 0x65]), new Uint8Array([0x68, 0x65])); // 0
 * u8aCmp(new Uint8Array([0x69, 0x65]), new Uint8Array([0x68, 0x65])); // +1
 * ```
 */
function u8aCmp(a, b) {
  var u8aa = (0, _toU8a.u8aToU8a)(a);
  var u8ab = (0, _toU8a.u8aToU8a)(b);
  var i = 0;

  while (true) {
    var overA = i >= u8aa.length;
    var overB = i >= u8ab.length;

    if (overA && overB) {
      // both ends reached
      return 0;
    } else if (overA) {
      // a has no more data, b has data
      return -1;
    } else if (overB) {
      // b has no more data, a has data
      return 1;
    } else if (u8aa[i] !== u8ab[i]) {
      // the number in this index doesn't match
      // (we don't use u8aa[i] - u8ab[i] since that doesn't match with localeCompare)
      return u8aa[i] > u8ab[i] ? 1 : -1;
    }

    i++;
  }
}
},{"./toU8a.js":"node_modules/@polkadot/util/u8a/toU8a.js"}],"node_modules/@polkadot/util/u8a/concat.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.u8aConcat = u8aConcat;
exports.u8aConcatStrict = u8aConcatStrict;

var _toU8a = require("./toU8a.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name u8aConcat
 * @summary Creates a concatenated Uint8Array from the inputs.
 * @description
 * Concatenates the input arrays into a single `UInt8Array`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { { u8aConcat } from '@polkadot/util';
 *
 * u8aConcat(
 *   new Uint8Array([1, 2, 3]),
 *   new Uint8Array([4, 5, 6])
 * ); // [1, 2, 3, 4, 5, 6]
 * ```
 */
function u8aConcat() {
  var u8as = new Array(arguments.length);
  var length = 0;

  for (var i = 0; i < arguments.length; i++) {
    u8as[i] = (0, _toU8a.u8aToU8a)(i < 0 || arguments.length <= i ? undefined : arguments[i]);
    length += u8as[i].length;
  }

  return u8aConcatStrict(u8as, length);
}
/**
 * @name u8aConcatStrict
 * @description A strict version of [[u8aConcat]], accepting only Uint8Array inputs
 */


function u8aConcatStrict(u8as) {
  var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var offset = 0;

  if (!length) {
    for (var i = 0; i < u8as.length; i++) {
      length += u8as[i].length;
    }
  }

  var result = new Uint8Array(length);

  for (var _i = 0; _i < u8as.length; _i++) {
    result.set(u8as[_i], offset);
    offset += u8as[_i].length;
  }

  return result;
}
},{"./toU8a.js":"node_modules/@polkadot/util/u8a/toU8a.js"}],"node_modules/@polkadot/util/u8a/empty.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.u8aEmpty = u8aEmpty;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name u8aEmpty
 * @summary Tests for a `Uint8Array` for emptyness
 * @description
 * Checks to see if the input `Uint8Array` has zero length or contains all 0 values.
 */
function u8aEmpty(value) {
  var len = value.length; // on smaller sizes, the byte-by-byte compare is faster than allocating
  // another object for DataView (on very large arrays the DataView is faster)

  for (var i = 0; i < len; i++) {
    if (value[i]) {
      return false;
    }
  }

  return true;
}
},{}],"node_modules/@polkadot/util/u8a/eq.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.u8aEq = u8aEq;

var _toU8a = require("./toU8a.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name u8aEq
 * @summary Compares two Uint8Arrays for equality.
 * @description
 * For `UInt8Array` (or hex string) input values true if there is a match.
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aEq } from '@polkadot/util';
 *
 * u8aEq(new Uint8Array([0x68, 0x65]), new Uint8Array([0x68, 0x65])); // true
 * ```
 */
function u8aEq(a, b) {
  var u8aa = (0, _toU8a.u8aToU8a)(a);
  var u8ab = (0, _toU8a.u8aToU8a)(b);

  if (u8aa.length === u8ab.length) {
    var dvA = new DataView(u8aa.buffer, u8aa.byteOffset);
    var dvB = new DataView(u8ab.buffer, u8ab.byteOffset);
    var mod = u8aa.length % 4;
    var length = u8aa.length - mod;

    for (var i = 0; i < length; i += 4) {
      if (dvA.getUint32(i) !== dvB.getUint32(i)) {
        return false;
      }
    }

    for (var _i = length; _i < u8aa.length; _i++) {
      if (u8aa[_i] !== u8ab[_i]) {
        return false;
      }
    }

    return true;
  }

  return false;
}
},{"./toU8a.js":"node_modules/@polkadot/util/u8a/toU8a.js"}],"node_modules/@polkadot/util/u8a/fixLength.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.u8aFixLength = u8aFixLength;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name u8aFixLength
 * @summary Shifts a Uint8Array to a specific bitLength
 * @description
 * Returns a uint8Array with the specified number of bits contained in the return value. (If bitLength is -1, length checking is not done). Values with more bits are trimmed to the specified length.
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aFixLength } from '@polkadot/util';
 *
 * u8aFixLength('0x12') // => 0x12
 * u8aFixLength('0x12', 16) // => 0x0012
 * u8aFixLength('0x1234', 8) // => 0x12
 * ```
 */
function u8aFixLength(value) {
  var bitLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;
  var atStart = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var byteLength = Math.ceil(bitLength / 8);

  if (bitLength === -1 || value.length === byteLength) {
    return value;
  } else if (value.length > byteLength) {
    return value.subarray(0, byteLength);
  }

  var result = new Uint8Array(byteLength);
  result.set(value, atStart ? 0 : byteLength - value.length);
  return result;
}
},{}],"node_modules/@polkadot/util/u8a/toFloat.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.u8aToFloat = u8aToFloat;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name u8aToFloat
 * @description Converts a Uint8Array value into the float (either 32 or 64-bit)
 * representation.
 */
function u8aToFloat(value) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref$bitLength = _ref.bitLength,
      bitLength = _ref$bitLength === void 0 ? 32 : _ref$bitLength,
      _ref$isLe = _ref.isLe,
      isLe = _ref$isLe === void 0 ? true : _ref$isLe;

  if (bitLength !== 32 && bitLength !== 64) {
    throw new Error('Invalid bitLength provided, expected 32 or 64');
  } else if (value.length < bitLength / 8) {
    throw new Error("Invalid input buffer provided, expected at least ".concat(bitLength / 8, " bytes, found ").concat(value.length));
  }

  var dv = new DataView(value.buffer, value.byteOffset);
  return bitLength === 32 ? dv.getFloat32(0, isLe) : dv.getFloat64(0, isLe);
}
},{}],"node_modules/@polkadot/util/u8a/sorted.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.u8aSorted = u8aSorted;

var _cmp = require("./cmp.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name u8aSorted
 * @summary Sorts an array of Uint8Arrays
 * @description
 * For input `UInt8Array[]` return the sorted result
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aSorted} from '@polkadot/util';
 *
 * u8aSorted([new Uint8Array([0x69]), new Uint8Array([0x68])]); // [0x68, 0x69]
 * ```
 */
function u8aSorted(u8as) {
  return u8as.sort(_cmp.u8aCmp);
}
},{"./cmp.js":"node_modules/@polkadot/util/u8a/cmp.js"}],"node_modules/@polkadot/util/is/boolean.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isBoolean = isBoolean;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isBoolean
 * @summary Tests for a boolean value.
 * @description
 * Checks to see if the input value is a JavaScript boolean.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isBoolean } from '@polkadot/util';
 *
 * isBoolean(false); // => true
 * ```
 */
function isBoolean(value) {
  return typeof value === 'boolean';
}
},{}],"node_modules/@polkadot/util/u8a/toBn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.u8aToBn = u8aToBn;

var _bn = require("../bn/bn.js");

var _boolean = require("../is/boolean.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name u8aToBn
 * @summary Creates a BN from a Uint8Array object.
 * @description
 * `UInt8Array` input values return the actual BN. `null` or `undefined` values returns an `0x0` value.
 * @param value The value to convert
 * @param options Options to pass while converting
 * @param options.isLe Convert using Little Endian (default)
 * @param options.isNegative Convert using two's complement
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aToBn } from '@polkadot/util';
 *
 * u8aToHex(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0xf])); // 0x68656c0f
 * ```
 */

/** @deprecated Use u8aToBn (value?: string | null, options?: ToBnOptions) */
function u8aToBn(value) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  // NOTE: This is the same process as followed in the hexToBn conversion
  // For Uint8Array, default to LE
  var _ref = (0, _boolean.isBoolean)(options) ? {
    isLe: options
  } : options,
      _ref$isLe = _ref.isLe,
      isLe = _ref$isLe === void 0 ? true : _ref$isLe,
      _ref$isNegative = _ref.isNegative,
      isNegative = _ref$isNegative === void 0 ? false : _ref$isNegative;

  var count = value.length; // shortcut for <= u48 values - in this case the manual conversion
  // here seems to be more efficient than passing the full array

  if (count <= 6) {
    if (isNegative) {
      var result = 0;

      if (isLe) {
        // Most common case i{8, 16, 32} default LE SCALE-encoded
        // For <= 32, we also optimize the xor to a single op
        // (see the comments around unrolling in the next section)
        switch (count) {
          case 0:
            return new _bn.BN(0);

          case 1:
            result = value[0] ^ 0x000000ff;
            break;

          case 2:
            result = value[0] + (value[1] << 8) ^ 0x0000ffff;
            break;

          case 3:
            result = value[0] + (value[1] << 8) + (value[2] << 16) ^ 0x00ffffff;
            break;

          case 4:
            // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to
            // 32-bit, in the case where the top-most bit is set this yields a negative value
            result = value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000 ^ 0xffffffff;
            break;

          case 5:
            result = (value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000 ^ 0xffffffff) + (value[4] ^ 0xff) * 0x100000000;
            break;

          default:
            // 6
            result = (value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000 ^ 0xffffffff) + (value[4] + (value[5] << 8) ^ 0x0000ffff) * 0x100000000;
            break;
        }
      } else {
        for (var i = 0; i < count; i++) {
          result = result * 0x100 + (value[i] ^ 0xff);
        }
      }

      return count ? new _bn.BN(result * -1 - 1) : new _bn.BN(0);
    } else if (isLe) {
      // Most common case - u{8, 16, 32} default LE SCALE-encoded
      //
      // There are some slight benefits in unrolling this specific loop,
      // however it comes with diminishing returns since here the actual
      // `new BN` does seem to take up the bulk of the time
      switch (count) {
        case 0:
          return new _bn.BN(0);

        case 1:
          return new _bn.BN(value[0]);

        case 2:
          return new _bn.BN(value[0] + (value[1] << 8));

        case 3:
          return new _bn.BN(value[0] + (value[1] << 8) + (value[2] << 16));

        case 4:
          // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to
          // 32-bit, in the case where the top-most bit is set this yields a negative value
          return new _bn.BN(value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000);

        case 5:
          return new _bn.BN(value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] + (value[4] << 8)) * 0x1000000);

        default:
          // 6
          return new _bn.BN(value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] + (value[4] << 8) + (value[5] << 16)) * 0x1000000);
      }
    } else {
      var _result = 0;

      for (var _i = 0; _i < count; _i++) {
        _result = _result * 0x100 + value[_i];
      }

      return new _bn.BN(_result);
    }
  }

  return isNegative ? new _bn.BN(value, isLe ? 'le' : 'be').fromTwos(value.length * 8) : new _bn.BN(value, isLe ? 'le' : 'be');
}
},{"../bn/bn.js":"node_modules/@polkadot/util/bn/bn.js","../is/boolean.js":"node_modules/@polkadot/util/is/boolean.js"}],"node_modules/@polkadot/util/u8a/toBuffer.js":[function(require,module,exports) {
var Buffer = require("buffer").Buffer;
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.u8aToBuffer = u8aToBuffer;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name u8aToBuffer
 * @summary Creates a Buffer object from a hex string.
 * @description
 * `null` inputs returns an empty `Buffer` result. `UInt8Array` input values return the actual bytes value converted to a `Buffer`. Anything that is not a `UInt8Array` throws an error.
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aToBuffer } from '@polkadot/util';
 *
 * console.log('Buffer', u8aToBuffer('0x123480001f'));
 * ```
 */
function u8aToBuffer(value) {
  return Buffer.from(value || []);
}
},{"buffer":"node_modules/node-libs-browser/node_modules/buffer/index.js"}],"node_modules/@polkadot/util/u8a/toHex.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.u8aToHex = u8aToHex;
// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
var U8 = new Array(256);
var U16 = new Array(256 * 256);

for (var n = 0; n < 256; n++) {
  U8[n] = n.toString(16).padStart(2, '0');
}

for (var i = 0; i < 256; i++) {
  var s = i << 8;

  for (var j = 0; j < 256; j++) {
    U16[s | j] = U8[i] + U8[j];
  }
}
/** @internal */


function hex(value) {
  var mod = value.length % 2;
  var length = value.length - mod;
  var dv = new DataView(value.buffer, value.byteOffset);
  var result = '';

  for (var _i = 0; _i < length; _i += 2) {
    // we only use getUint16 here instead of getUint32 - at least in our
    // tests this is faster to execute (both long & short strings tested)
    result += U16[dv.getUint16(_i)];
  }

  if (mod) {
    result += U8[dv.getUint8(length)];
  }

  return result;
}
/**
 * @name u8aToHex
 * @summary Creates a hex string from a Uint8Array object.
 * @description
 * `UInt8Array` input values return the actual hex string. `null` or `undefined` values returns an `0x` string.
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aToHex } from '@polkadot/util';
 *
 * u8aToHex(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0xf])); // 0x68656c0f
 * ```
 */


function u8aToHex(value) {
  var bitLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;
  var isPrefixed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  var length = Math.ceil(bitLength / 8);
  return "".concat(isPrefixed ? '0x' : '').concat(!value || !value.length ? '' : bitLength > 0 && value.length > length ? "".concat(hex(value.subarray(0, length / 2)), "\u2026").concat(hex(value.subarray(value.length - length / 2))) : hex(value));
}
},{}],"node_modules/@polkadot/util/u8a/toNumber.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.u8aToNumber = u8aToNumber;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name u8aToNumber
 * @summary Creates a number from a Uint8Array object.
 */
function u8aToNumber(value) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref$isNegative = _ref.isNegative,
      isNegative = _ref$isNegative === void 0 ? false : _ref$isNegative;

  var count = value.length;

  if (isNegative) {
    var result = 0;

    switch (count) {
      case 0:
        return 0;

      case 1:
        result = value[0] ^ 0x000000ff;
        break;

      case 2:
        result = value[0] + (value[1] << 8) ^ 0x0000ffff;
        break;

      case 3:
        result = value[0] + (value[1] << 8) + (value[2] << 16) ^ 0x00ffffff;
        break;

      case 4:
        // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to
        // 32-bit, in the case where the top-most bit is set this yields a negative value
        result = value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000 ^ 0xffffffff;
        break;

      case 5:
        result = (value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000 ^ 0xffffffff) + (value[4] ^ 0xff) * 0x100000000;
        break;

      case 6:
        result = (value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000 ^ 0xffffffff) + (value[4] + (value[5] << 8) ^ 0x0000ffff) * 0x100000000;
        break;

      default:
        throw new Error('Value more than 48-bits cannot be reliably converted');
    }

    return result * -1 - 1;
  }

  switch (count) {
    case 0:
      return 0;

    case 1:
      return value[0];

    case 2:
      return value[0] + (value[1] << 8);

    case 3:
      return value[0] + (value[1] << 8) + (value[2] << 16);

    case 4:
      // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to
      // 32-bit, in the case where the top-most bit is set this yields a negative value
      return value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000;

    case 5:
      return value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] + (value[4] << 8)) * 0x1000000;

    case 6:
      return value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] + (value[4] << 8) + (value[5] << 16)) * 0x1000000;

    default:
      throw new Error('Value more than 48-bits cannot be reliably converted');
  }
}
},{}],"node_modules/@polkadot/util/u8a/toString.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.u8aToString = u8aToString;

var _xTextdecoder = require("@polkadot/x-textdecoder");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
var decoder = new _xTextdecoder.TextDecoder('utf-8');
/**
 * @name u8aToString
 * @summary Creates a utf-8 string from a Uint8Array object.
 * @description
 * `UInt8Array` input values return the actual decoded utf-8 string. `null` or `undefined` values returns an empty string.
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aToString } from '@polkadot/util';
 *
 * u8aToString(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0x6f])); // hello
 * ```
 */

function u8aToString(value) {
  return value ? decoder.decode(value) : '';
}
},{"@polkadot/x-textdecoder":"node_modules/@polkadot/x-textdecoder/cjs/browser.js"}],"node_modules/@polkadot/util/u8a/wrap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.U8A_WRAP_PREFIX = exports.U8A_WRAP_POSTFIX = exports.U8A_WRAP_ETHEREUM = void 0;
exports.u8aIsWrapped = u8aIsWrapped;
exports.u8aUnwrapBytes = u8aUnwrapBytes;
exports.u8aWrapBytes = u8aWrapBytes;

var _concat = require("./concat.js");

var _eq = require("./eq.js");

var _toU8a = require("./toU8a.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Originally from https://github.com/polkadot-js/extension/pull/743

/** @internal */
var U8A_WRAP_ETHEREUM = (0, _toU8a.u8aToU8a)('\x19Ethereum Signed Message:\n');
/** @internal */

exports.U8A_WRAP_ETHEREUM = U8A_WRAP_ETHEREUM;
var U8A_WRAP_PREFIX = (0, _toU8a.u8aToU8a)('<Bytes>');
/** @internal */

exports.U8A_WRAP_PREFIX = U8A_WRAP_PREFIX;
var U8A_WRAP_POSTFIX = (0, _toU8a.u8aToU8a)('</Bytes>');
exports.U8A_WRAP_POSTFIX = U8A_WRAP_POSTFIX;
var WRAP_LEN = U8A_WRAP_PREFIX.length + U8A_WRAP_POSTFIX.length;
/** @internal */

function u8aIsWrapped(u8a, withEthereum) {
  return u8a.length >= WRAP_LEN && (0, _eq.u8aEq)(u8a.subarray(0, U8A_WRAP_PREFIX.length), U8A_WRAP_PREFIX) && (0, _eq.u8aEq)(u8a.slice(-U8A_WRAP_POSTFIX.length), U8A_WRAP_POSTFIX) || withEthereum && u8a.length >= U8A_WRAP_ETHEREUM.length && (0, _eq.u8aEq)(u8a.subarray(0, U8A_WRAP_ETHEREUM.length), U8A_WRAP_ETHEREUM);
}
/**
 * @name u8aUnwrapBytes
 * @description Removes all <Bytes>...</Bytes> wrappers from the supplied value
 */


function u8aUnwrapBytes(bytes) {
  var u8a = (0, _toU8a.u8aToU8a)(bytes); // we don't want to unwrap Ethereum-style wraps

  return u8aIsWrapped(u8a, false) ? u8a.subarray(U8A_WRAP_PREFIX.length, u8a.length - U8A_WRAP_POSTFIX.length) : u8a;
}
/**
 * @name u8aWrapBytes
 * @description Adds a <Bytes>...</Bytes> wrapper to the supplied value (if not already existing)
 */


function u8aWrapBytes(bytes) {
  var u8a = (0, _toU8a.u8aToU8a)(bytes); // if Ethereum-wrapping, we don't add our wrapping bytes

  return u8aIsWrapped(u8a, true) ? u8a : (0, _concat.u8aConcatStrict)([U8A_WRAP_PREFIX, u8a, U8A_WRAP_POSTFIX]);
}
},{"./concat.js":"node_modules/@polkadot/util/u8a/concat.js","./eq.js":"node_modules/@polkadot/util/u8a/eq.js","./toU8a.js":"node_modules/@polkadot/util/u8a/toU8a.js"}],"node_modules/@polkadot/util/u8a/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "U8A_WRAP_ETHEREUM", {
  enumerable: true,
  get: function () {
    return _wrap.U8A_WRAP_ETHEREUM;
  }
});
Object.defineProperty(exports, "U8A_WRAP_POSTFIX", {
  enumerable: true,
  get: function () {
    return _wrap.U8A_WRAP_POSTFIX;
  }
});
Object.defineProperty(exports, "U8A_WRAP_PREFIX", {
  enumerable: true,
  get: function () {
    return _wrap.U8A_WRAP_PREFIX;
  }
});
Object.defineProperty(exports, "u8aCmp", {
  enumerable: true,
  get: function () {
    return _cmp.u8aCmp;
  }
});
Object.defineProperty(exports, "u8aConcat", {
  enumerable: true,
  get: function () {
    return _concat.u8aConcat;
  }
});
Object.defineProperty(exports, "u8aConcatStrict", {
  enumerable: true,
  get: function () {
    return _concat.u8aConcatStrict;
  }
});
Object.defineProperty(exports, "u8aEmpty", {
  enumerable: true,
  get: function () {
    return _empty.u8aEmpty;
  }
});
Object.defineProperty(exports, "u8aEq", {
  enumerable: true,
  get: function () {
    return _eq.u8aEq;
  }
});
Object.defineProperty(exports, "u8aFixLength", {
  enumerable: true,
  get: function () {
    return _fixLength.u8aFixLength;
  }
});
Object.defineProperty(exports, "u8aIsWrapped", {
  enumerable: true,
  get: function () {
    return _wrap.u8aIsWrapped;
  }
});
Object.defineProperty(exports, "u8aSorted", {
  enumerable: true,
  get: function () {
    return _sorted.u8aSorted;
  }
});
Object.defineProperty(exports, "u8aToBigInt", {
  enumerable: true,
  get: function () {
    return _toBigInt.u8aToBigInt;
  }
});
Object.defineProperty(exports, "u8aToBn", {
  enumerable: true,
  get: function () {
    return _toBn.u8aToBn;
  }
});
Object.defineProperty(exports, "u8aToBuffer", {
  enumerable: true,
  get: function () {
    return _toBuffer.u8aToBuffer;
  }
});
Object.defineProperty(exports, "u8aToFloat", {
  enumerable: true,
  get: function () {
    return _toFloat.u8aToFloat;
  }
});
Object.defineProperty(exports, "u8aToHex", {
  enumerable: true,
  get: function () {
    return _toHex.u8aToHex;
  }
});
Object.defineProperty(exports, "u8aToNumber", {
  enumerable: true,
  get: function () {
    return _toNumber.u8aToNumber;
  }
});
Object.defineProperty(exports, "u8aToString", {
  enumerable: true,
  get: function () {
    return _toString.u8aToString;
  }
});
Object.defineProperty(exports, "u8aToU8a", {
  enumerable: true,
  get: function () {
    return _toU8a.u8aToU8a;
  }
});
Object.defineProperty(exports, "u8aUnwrapBytes", {
  enumerable: true,
  get: function () {
    return _wrap.u8aUnwrapBytes;
  }
});
Object.defineProperty(exports, "u8aWrapBytes", {
  enumerable: true,
  get: function () {
    return _wrap.u8aWrapBytes;
  }
});

var _cmp = require("./cmp.js");

var _concat = require("./concat.js");

var _empty = require("./empty.js");

var _eq = require("./eq.js");

var _fixLength = require("./fixLength.js");

var _toFloat = require("./toFloat.js");

var _sorted = require("./sorted.js");

var _toBigInt = require("./toBigInt.js");

var _toBn = require("./toBn.js");

var _toBuffer = require("./toBuffer.js");

var _toHex = require("./toHex.js");

var _toNumber = require("./toNumber.js");

var _toString = require("./toString.js");

var _toU8a = require("./toU8a.js");

var _wrap = require("./wrap.js");
},{"./cmp.js":"node_modules/@polkadot/util/u8a/cmp.js","./concat.js":"node_modules/@polkadot/util/u8a/concat.js","./empty.js":"node_modules/@polkadot/util/u8a/empty.js","./eq.js":"node_modules/@polkadot/util/u8a/eq.js","./fixLength.js":"node_modules/@polkadot/util/u8a/fixLength.js","./toFloat.js":"node_modules/@polkadot/util/u8a/toFloat.js","./sorted.js":"node_modules/@polkadot/util/u8a/sorted.js","./toBigInt.js":"node_modules/@polkadot/util/u8a/toBigInt.js","./toBn.js":"node_modules/@polkadot/util/u8a/toBn.js","./toBuffer.js":"node_modules/@polkadot/util/u8a/toBuffer.js","./toHex.js":"node_modules/@polkadot/util/u8a/toHex.js","./toNumber.js":"node_modules/@polkadot/util/u8a/toNumber.js","./toString.js":"node_modules/@polkadot/util/u8a/toString.js","./toU8a.js":"node_modules/@polkadot/util/u8a/toU8a.js","./wrap.js":"node_modules/@polkadot/util/u8a/wrap.js"}],"node_modules/@polkadot/util/bi/toU8a.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.nToU8a = nToU8a;

var _xBigint = require("@polkadot/x-bigint");

var _spread = require("../object/spread.js");

var _consts = require("./consts.js");

var _toBigInt = require("./toBigInt.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
var DIV = (0, _xBigint.BigInt)(256);
var NEG_MASK = (0, _xBigint.BigInt)(0xff);

function toU8a(value, _ref) {
  var isLe = _ref.isLe,
      isNegative = _ref.isNegative;
  var arr = [];

  if (isNegative) {
    value = (value + _consts._1n) * -_consts._1n;
  }

  while (value !== _consts._0n) {
    var mod = value % DIV;
    var val = Number(isNegative ? mod ^ NEG_MASK : mod);

    if (isLe) {
      arr.push(val);
    } else {
      arr.unshift(val);
    }

    value = (value - mod) / DIV;
  }

  return Uint8Array.from(arr);
}
/**
 * @name nToU8a
 * @summary Creates a Uint8Array object from a bigint.
 */


function nToU8a(value, options) {
  var opts = (0, _spread.objectSpread)({
    bitLength: -1,
    isLe: true,
    isNegative: false
  }, options);
  var valueBi = (0, _toBigInt.nToBigInt)(value);

  if (valueBi === _consts._0n) {
    return opts.bitLength === -1 ? new Uint8Array() : new Uint8Array(Math.ceil((opts.bitLength || 0) / 8));
  }

  var u8a = toU8a(valueBi, opts);

  if (opts.bitLength === -1) {
    return u8a;
  }

  var byteLength = Math.ceil((opts.bitLength || 0) / 8);
  var output = new Uint8Array(byteLength);

  if (opts.isNegative) {
    output.fill(0xff);
  }

  output.set(u8a, opts.isLe ? 0 : byteLength - u8a.length);
  return output;
}
},{"@polkadot/x-bigint":"node_modules/@polkadot/x-bigint/index.js","../object/spread.js":"node_modules/@polkadot/util/object/spread.js","./consts.js":"node_modules/@polkadot/util/bi/consts.js","./toBigInt.js":"node_modules/@polkadot/util/bi/toBigInt.js"}],"node_modules/@polkadot/util/bi/toHex.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.nToHex = nToHex;

var _spread = require("../object/spread.js");

var _index = require("../u8a/index.js");

var _toU8a = require("./toU8a.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/** @internal */
var ZERO_STR = '0x00';
/**
 * @name nToHex
 * @summary Creates a hex value from a bigint object.
 */

function nToHex(value, options) {
  return !value ? ZERO_STR : (0, _index.u8aToHex)((0, _toU8a.nToU8a)(value, (0, _spread.objectSpread)( // We spread here, the default for hex values is BE (JSONRPC via substrate)
  {
    isLe: false,
    isNegative: false
  }, options)));
}
},{"../object/spread.js":"node_modules/@polkadot/util/object/spread.js","../u8a/index.js":"node_modules/@polkadot/util/u8a/index.js","./toU8a.js":"node_modules/@polkadot/util/bi/toU8a.js"}],"node_modules/@polkadot/util/bi/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  nSqrt: true,
  nToBigInt: true,
  nMax: true,
  nMin: true,
  nToHex: true,
  nToU8a: true
};
Object.defineProperty(exports, "nMax", {
  enumerable: true,
  get: function () {
    return _min.nMax;
  }
});
Object.defineProperty(exports, "nMin", {
  enumerable: true,
  get: function () {
    return _min.nMin;
  }
});
Object.defineProperty(exports, "nSqrt", {
  enumerable: true,
  get: function () {
    return _sqrt.nSqrt;
  }
});
Object.defineProperty(exports, "nToBigInt", {
  enumerable: true,
  get: function () {
    return _toBigInt.nToBigInt;
  }
});
Object.defineProperty(exports, "nToHex", {
  enumerable: true,
  get: function () {
    return _toHex.nToHex;
  }
});
Object.defineProperty(exports, "nToU8a", {
  enumerable: true,
  get: function () {
    return _toU8a.nToU8a;
  }
});

var _consts = require("./consts.js");

Object.keys(_consts).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _consts[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _consts[key];
    }
  });
});

var _sqrt = require("./sqrt.js");

var _toBigInt = require("./toBigInt.js");

var _min = require("./min.js");

var _toHex = require("./toHex.js");

var _toU8a = require("./toU8a.js");
},{"./consts.js":"node_modules/@polkadot/util/bi/consts.js","./sqrt.js":"node_modules/@polkadot/util/bi/sqrt.js","./toBigInt.js":"node_modules/@polkadot/util/bi/toBigInt.js","./min.js":"node_modules/@polkadot/util/bi/min.js","./toHex.js":"node_modules/@polkadot/util/bi/toHex.js","./toU8a.js":"node_modules/@polkadot/util/bi/toU8a.js"}],"node_modules/@polkadot/util/bn/consts.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BN_ZERO = exports.BN_TWO = exports.BN_THREE = exports.BN_THOUSAND = exports.BN_TEN = exports.BN_SIX = exports.BN_SEVEN = exports.BN_QUINTILL = exports.BN_ONE = exports.BN_NINE = exports.BN_MILLION = exports.BN_MAX_INTEGER = exports.BN_HUNDRED = exports.BN_FOUR = exports.BN_FIVE = exports.BN_EIGHT = exports.BN_BILLION = void 0;

var _bn = require("./bn.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name BN_ZERO
 * @summary BN constant for 0.
 */
var BN_ZERO = new _bn.BN(0);
/**
 * @name BN_ONE
 * @summary BN constant for 1.
 */

exports.BN_ZERO = BN_ZERO;
var BN_ONE = new _bn.BN(1);
/**
 * @name BN_TWO
 * @summary BN constant for 2.
 */

exports.BN_ONE = BN_ONE;
var BN_TWO = new _bn.BN(2);
/**
 * @name BN_THREE
 * @summary BN constant for 3.
 */

exports.BN_TWO = BN_TWO;
var BN_THREE = new _bn.BN(3);
/**
 * @name BN_FOUR
 * @summary BN constant for 4.
 */

exports.BN_THREE = BN_THREE;
var BN_FOUR = new _bn.BN(4);
/**
 * @name BN_FIVE
 * @summary BN constant for 5.
 */

exports.BN_FOUR = BN_FOUR;
var BN_FIVE = new _bn.BN(5);
/**
 * @name BN_SIX
 * @summary BN constant for 6.
 */

exports.BN_FIVE = BN_FIVE;
var BN_SIX = new _bn.BN(6);
/**
 * @name BN_SEVEN
 * @summary BN constant for 7.
 */

exports.BN_SIX = BN_SIX;
var BN_SEVEN = new _bn.BN(7);
/**
 * @name BN_EIGHT
 * @summary BN constant for 8.
 */

exports.BN_SEVEN = BN_SEVEN;
var BN_EIGHT = new _bn.BN(8);
/**
 * @name BN_NINE
 * @summary BN constant for 9.
 */

exports.BN_EIGHT = BN_EIGHT;
var BN_NINE = new _bn.BN(9);
/**
 * @name BN_TEN
 * @summary BN constant for 10.
 */

exports.BN_NINE = BN_NINE;
var BN_TEN = new _bn.BN(10);
/**
 * @name BN_HUNDRED
 * @summary BN constant for 100.
 */

exports.BN_TEN = BN_TEN;
var BN_HUNDRED = new _bn.BN(100);
/**
 * @name BN_THOUSAND
 * @summary BN constant for 1,000.
 */

exports.BN_HUNDRED = BN_HUNDRED;
var BN_THOUSAND = new _bn.BN(1000);
/**
 * @name BN_MILLION
 * @summary BN constant for 1,000,000.
 */

exports.BN_THOUSAND = BN_THOUSAND;
var BN_MILLION = new _bn.BN(1000000);
/**
 * @name BN_BILLION
 * @summary BN constant for 1,000,000,000.
 */

exports.BN_MILLION = BN_MILLION;
var BN_BILLION = new _bn.BN(1000000000);
/**
 * @name BN_QUINTILL
 * @summary BN constant for 1,000,000,000,000,000,000.
 */

exports.BN_BILLION = BN_BILLION;
var BN_QUINTILL = BN_BILLION.mul(BN_BILLION);
/**
 * @name BN_MAX_INTEGER
 * @summary BN constant for MAX_SAFE_INTEGER
 */

exports.BN_QUINTILL = BN_QUINTILL;
var BN_MAX_INTEGER = new _bn.BN(Number.MAX_SAFE_INTEGER);
exports.BN_MAX_INTEGER = BN_MAX_INTEGER;
},{"./bn.js":"node_modules/@polkadot/util/bn/bn.js"}],"node_modules/@polkadot/util/hex/stripPrefix.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hexStripPrefix = hexStripPrefix;

var _hex = require("../is/hex.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name hexStripPrefix
 * @summary Strips any leading `0x` prefix.
 * @description
 * Tests for the existence of a `0x` prefix, and returns the value without the prefix. Un-prefixed values are returned as-is.
 * @example
 * <BR>
 *
 * ```javascript
 * import { hexStripPrefix } from '@polkadot/util';
 *
 * console.log('stripped', hexStripPrefix('0x1234')); // => 1234
 * ```
 */
function hexStripPrefix(value) {
  if (!value || value === '0x') {
    return '';
  } else if (_hex.REGEX_HEX_PREFIXED.test(value)) {
    return value.substring(2);
  } else if (_hex.REGEX_HEX_NOPREFIX.test(value)) {
    return value;
  }

  throw new Error("Expected hex value to convert, found '".concat(value, "'"));
}
},{"../is/hex.js":"node_modules/@polkadot/util/is/hex.js"}],"node_modules/@polkadot/util/hex/toBn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hexToBn = hexToBn;

var _bn = require("../bn/bn.js");

var _boolean = require("../is/boolean.js");

var _stripPrefix = require("./stripPrefix.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name hexToBn
 * @summary Creates a BN.js object from a hex string.
 * @description
 * `null` inputs returns a `BN(0)` result. Hex input values return the actual value converted to a BN. Anything that is not a hex string (including the `0x` prefix) throws an error.
 * @param _value The value to convert
 * @param _options Options to pass while converting
 * @param _options.isLe Convert using Little Endian
 * @param _options.isNegative Convert using two's complement
 * @example
 * <BR>
 *
 * ```javascript
 * import { hexToBn } from '@polkadot/util';
 *
 * hexToBn('0x123480001f'); // => BN(0x123480001f)
 * ```
 */

/** @deprecated Use hexToBn (value?: string | null, options?: ToBnOptions) */
function hexToBn(value) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (!value || value === '0x') {
    return new _bn.BN(0);
  } // For hex, default to BE


  var _ref = (0, _boolean.isBoolean)(options) ? {
    isLe: options
  } : options,
      _ref$isLe = _ref.isLe,
      isLe = _ref$isLe === void 0 ? false : _ref$isLe,
      _ref$isNegative = _ref.isNegative,
      isNegative = _ref$isNegative === void 0 ? false : _ref$isNegative;

  var stripped = (0, _stripPrefix.hexStripPrefix)(value);
  var bn = new _bn.BN(stripped, 16, isLe ? 'le' : 'be'); // fromTwos takes as parameter the number of bits, which is the hex length
  // multiplied by 4 (2 bytes being 8 bits)

  return isNegative ? bn.fromTwos(stripped.length * 4) : bn;
}
},{"../bn/bn.js":"node_modules/@polkadot/util/bn/bn.js","../is/boolean.js":"node_modules/@polkadot/util/is/boolean.js","./stripPrefix.js":"node_modules/@polkadot/util/hex/stripPrefix.js"}],"node_modules/@polkadot/util/bn/fromHex.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "bnFromHex", {
  enumerable: true,
  get: function () {
    return _toBn.hexToBn;
  }
});

var _toBn = require("../hex/toBn.js");
},{"../hex/toBn.js":"node_modules/@polkadot/util/hex/toBn.js"}],"node_modules/@polkadot/util/bn/min.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bnMin = exports.bnMax = void 0;

var _helpers = require("../bi/helpers.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name bnMax
 * @summary Finds and returns the highest value in an array of BNs.
 * @example
 * <BR>
 *
 * ```javascript
 * import BN from 'bn.js';
 * import { bnMax } from '@polkadot/util';
 *
 * bnMax([new BN(1), new BN(3), new BN(2)]).toString(); // => '3'
 * ```
 */
var bnMax = (0, _helpers.createCmp)(function (a, b) {
  return a.gt(b);
});
/**
 * @name bnMin
 * @summary Finds and returns the smallest value in an array of BNs.
 * @example
 * <BR>
 *
 * ```javascript
 * import BN from 'bn.js';
 * import { bnMin } from '@polkadot/util';
 *
 * bnMin([new BN(1), new BN(3), new BN(2)]).toString(); // => '1'
 * ```
 */

exports.bnMax = bnMax;
var bnMin = (0, _helpers.createCmp)(function (a, b) {
  return a.lt(b);
});
exports.bnMin = bnMin;
},{"../bi/helpers.js":"node_modules/@polkadot/util/bi/helpers.js"}],"node_modules/@polkadot/util/is/bigInt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isBigInt = isBigInt;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isBigInt
 * @summary Tests for a `BigInt` object instance.
 * @description
 * Checks to see if the input object is an instance of `BigInt`
 * @example
 * <BR>
 *
 * ```javascript
 * import { isBigInt } from '@polkadot/util';
 *
 * console.log('isBigInt', isBigInt(123_456n)); // => true
 * ```
 */
function isBigInt(value) {
  return typeof value === 'bigint';
}
},{}],"node_modules/@polkadot/util/bn/toBn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bnToBn = bnToBn;

var _toBn = require("../hex/toBn.js");

var _bigInt = require("../is/bigInt.js");

var _hex = require("../is/hex.js");

var _toBigInt = require("../is/toBigInt.js");

var _toBn2 = require("../is/toBn.js");

var _bn = require("./bn.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name bnToBn
 * @summary Creates a BN value from a BN, bigint, string (base 10 or hex) or number input.
 * @description
 * `null` inputs returns a `0x0` result, BN values returns the value, numbers returns a BN representation.
 * @example
 * <BR>
 *
 * ```javascript
 * import BN from 'bn.js';
 * import { bnToBn } from '@polkadot/util';
 *
 * bnToBn(0x1234); // => BN(0x1234)
 * bnToBn(new BN(0x1234)); // => BN(0x1234)
 * ```
 */
function bnToBn(value) {
  return value ? _bn.BN.isBN(value) ? value : (0, _hex.isHex)(value) ? (0, _toBn.hexToBn)(value.toString()) : (0, _bigInt.isBigInt)(value) ? new _bn.BN(value.toString()) : (0, _toBn2.isToBn)(value) ? value.toBn() : (0, _toBigInt.isToBigInt)(value) ? new _bn.BN(value.toBigInt().toString()) : new _bn.BN(value) : new _bn.BN(0);
}
},{"../hex/toBn.js":"node_modules/@polkadot/util/hex/toBn.js","../is/bigInt.js":"node_modules/@polkadot/util/is/bigInt.js","../is/hex.js":"node_modules/@polkadot/util/is/hex.js","../is/toBigInt.js":"node_modules/@polkadot/util/is/toBigInt.js","../is/toBn.js":"node_modules/@polkadot/util/is/toBn.js","./bn.js":"node_modules/@polkadot/util/bn/bn.js"}],"node_modules/@polkadot/util/bn/sqrt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SQRT_MAX_SAFE_INTEGER = void 0;
exports.bnSqrt = bnSqrt;

var _bn = require("./bn.js");

var _consts = require("./consts.js");

var _toBn = require("./toBn.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/** @internal */
var SQRT_MAX_SAFE_INTEGER = new _bn.BN(94906265);
/**
 * @name bnSqrt
 * @summary Calculates the integer square root of a BN
 * @example
 * <BR>
 *
 * ```javascript
 * import BN from 'bn.js';
 * import { bnSqrt } from '@polkadot/util';
 *
 * bnSqrt(new BN(16)).toString(); // => '4'
 * ```
 */

exports.SQRT_MAX_SAFE_INTEGER = SQRT_MAX_SAFE_INTEGER;

function bnSqrt(value) {
  var n = (0, _toBn.bnToBn)(value);

  if (n.isNeg()) {
    throw new Error('square root of negative numbers is not supported');
  } // https://stackoverflow.com/questions/53683995/javascript-big-integer-square-root/
  // shortcut <= 2^53 - 1 to use the JS utils


  if (n.lte(_consts.BN_MAX_INTEGER)) {
    // ~~ More performant version of Math.floor
    return new _bn.BN(~~Math.sqrt(n.toNumber()));
  } // Use sqrt(MAX_SAFE_INTEGER) as starting point. since we already know the
  // output will be larger than this, we expect this to be a safe start


  var x0 = SQRT_MAX_SAFE_INTEGER.clone();

  while (true) {
    var x1 = n.div(x0).iadd(x0).ishrn(1);

    if (x0.eq(x1) || x0.eq(x1.sub(_consts.BN_ONE))) {
      return x0;
    }

    x0 = x1;
  }
}
},{"./bn.js":"node_modules/@polkadot/util/bn/bn.js","./consts.js":"node_modules/@polkadot/util/bn/consts.js","./toBn.js":"node_modules/@polkadot/util/bn/toBn.js"}],"node_modules/@polkadot/util/is/number.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isNumber = isNumber;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isNumber
 * @summary Tests for a JavaScript number.
 * @description
 * Checks to see if the input value is a valid number.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isNumber } from '@polkadot/util';
 *
 * console.log('isNumber', isNumber(1234)); // => true
 * ```
 */
function isNumber(value) {
  return typeof value === 'number';
}
},{}],"node_modules/@polkadot/util/bn/toU8a.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bnToU8a = bnToU8a;

var _number = require("../is/number.js");

var _toBn = require("./toBn.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
var DEFAULT_OPTS = {
  bitLength: -1,
  isLe: true,
  isNegative: false
};
/**
 * @name bnToU8a
 * @summary Creates a Uint8Array object from a BN.
 * @description
 * `null`/`undefined`/`NaN` inputs returns an empty `Uint8Array` result. `BN` input values return the actual bytes value converted to a `Uint8Array`. Optionally convert using little-endian format if `isLE` is set.
 * @example
 * <BR>
 *
 * ```javascript
 * import { bnToU8a } from '@polkadot/util';
 *
 * bnToU8a(new BN(0x1234)); // => [0x12, 0x34]
 * ```
 */

/** @deprecated Use bnToU8a(value?: ExtToBn | BN | bigint | number | null, options?: NumberOptions) */

function bnToU8a(value) {
  var arg1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTS;
  var arg2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

  var _ref = (0, _number.isNumber)(arg1) ? {
    bitLength: arg1,
    isLe: arg2
  } : arg1,
      _ref$bitLength = _ref.bitLength,
      bitLength = _ref$bitLength === void 0 ? -1 : _ref$bitLength,
      _ref$isLe = _ref.isLe,
      isLe = _ref$isLe === void 0 ? true : _ref$isLe,
      _ref$isNegative = _ref.isNegative,
      isNegative = _ref$isNegative === void 0 ? false : _ref$isNegative;

  var valueBn = (0, _toBn.bnToBn)(value);
  var byteLength = bitLength === -1 ? Math.ceil(valueBn.bitLength() / 8) : Math.ceil((bitLength || 0) / 8);

  if (!value) {
    return bitLength === -1 ? new Uint8Array() : new Uint8Array(byteLength);
  }

  var output = new Uint8Array(byteLength);
  var bn = isNegative ? valueBn.toTwos(byteLength * 8) : valueBn;
  output.set(bn.toArray(isLe ? 'le' : 'be', byteLength), 0);
  return output;
}
},{"../is/number.js":"node_modules/@polkadot/util/is/number.js","./toBn.js":"node_modules/@polkadot/util/bn/toBn.js"}],"node_modules/@polkadot/util/bn/toHex.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bnToHex = bnToHex;

var _number = require("../is/number.js");

var _spread = require("../object/spread.js");

var _index = require("../u8a/index.js");

var _toU8a = require("./toU8a.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
var ZERO_STR = '0x00';
var DEFAULT_OPTS = {
  bitLength: -1,
  isLe: false,
  isNegative: false
};
/**
 * @name bnToHex
 * @summary Creates a hex value from a BN.js bignumber object.
 * @description
 * `null` inputs returns a `0x` result, BN values return the actual value as a `0x` prefixed hex value. Anything that is not a BN object throws an error. With `bitLength` set, it fixes the number to the specified length.
 * @example
 * <BR>
 *
 * ```javascript
 * import BN from 'bn.js';
 * import { bnToHex } from '@polkadot/util';
 *
 * bnToHex(new BN(0x123456)); // => '0x123456'
 * ```
 */

/** @deprecated Use bnToHex (value?: ExtToBn | BN | bigint | number | null, options?: NumberOptions) */

function bnToHex(value) {
  var arg1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTS;
  var arg2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  return !value ? ZERO_STR : (0, _index.u8aToHex)((0, _toU8a.bnToU8a)(value, (0, _spread.objectSpread)( // We spread here, the default for hex values is BE (JSONRPC via substrate)
  {
    isLe: false,
    isNegative: false
  }, (0, _number.isNumber)(arg1) ? {
    bitLength: arg1,
    isLe: arg2
  } : arg1)));
}
},{"../is/number.js":"node_modules/@polkadot/util/is/number.js","../object/spread.js":"node_modules/@polkadot/util/object/spread.js","../u8a/index.js":"node_modules/@polkadot/util/u8a/index.js","./toU8a.js":"node_modules/@polkadot/util/bn/toU8a.js"}],"node_modules/@polkadot/util/bn/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  BN: true,
  bnFromHex: true,
  bnMax: true,
  bnMin: true,
  bnSqrt: true,
  bnToBn: true,
  bnToHex: true,
  bnToU8a: true
};
Object.defineProperty(exports, "BN", {
  enumerable: true,
  get: function () {
    return _bn.BN;
  }
});
Object.defineProperty(exports, "bnFromHex", {
  enumerable: true,
  get: function () {
    return _fromHex.bnFromHex;
  }
});
Object.defineProperty(exports, "bnMax", {
  enumerable: true,
  get: function () {
    return _min.bnMax;
  }
});
Object.defineProperty(exports, "bnMin", {
  enumerable: true,
  get: function () {
    return _min.bnMin;
  }
});
Object.defineProperty(exports, "bnSqrt", {
  enumerable: true,
  get: function () {
    return _sqrt.bnSqrt;
  }
});
Object.defineProperty(exports, "bnToBn", {
  enumerable: true,
  get: function () {
    return _toBn.bnToBn;
  }
});
Object.defineProperty(exports, "bnToHex", {
  enumerable: true,
  get: function () {
    return _toHex.bnToHex;
  }
});
Object.defineProperty(exports, "bnToU8a", {
  enumerable: true,
  get: function () {
    return _toU8a.bnToU8a;
  }
});

var _consts = require("./consts.js");

Object.keys(_consts).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _consts[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _consts[key];
    }
  });
});

var _bn = require("./bn.js");

var _fromHex = require("./fromHex.js");

var _min = require("./min.js");

var _sqrt = require("./sqrt.js");

var _toBn = require("./toBn.js");

var _toHex = require("./toHex.js");

var _toU8a = require("./toU8a.js");
},{"./consts.js":"node_modules/@polkadot/util/bn/consts.js","./bn.js":"node_modules/@polkadot/util/bn/bn.js","./fromHex.js":"node_modules/@polkadot/util/bn/fromHex.js","./min.js":"node_modules/@polkadot/util/bn/min.js","./sqrt.js":"node_modules/@polkadot/util/bn/sqrt.js","./toBn.js":"node_modules/@polkadot/util/bn/toBn.js","./toHex.js":"node_modules/@polkadot/util/bn/toHex.js","./toU8a.js":"node_modules/@polkadot/util/bn/toU8a.js"}],"node_modules/@polkadot/util/buffer/toU8a.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bufferToU8a = bufferToU8a;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name bufferToU8a
 * @summary Creates a Uint8Array value from a Buffer object.
 * @description
 * `null` inputs returns an empty result, `Buffer` values return the actual value as a `Uint8Array`. Anything that is not a `Buffer` object throws an error.
 * @example
 * <BR>
 *
 * ```javascript
 * import { bufferToU8a } from '@polkadot/util';
 *
 * bufferToU8a(Buffer.from([1, 2, 3]));
 * ```
 */
function bufferToU8a(buffer) {
  return new Uint8Array(buffer || []);
}
},{}],"node_modules/@polkadot/util/buffer/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "bufferToU8a", {
  enumerable: true,
  get: function () {
    return _toU8a.bufferToU8a;
  }
});

var _toU8a = require("./toU8a.js");
},{"./toU8a.js":"node_modules/@polkadot/util/buffer/toU8a.js"}],"node_modules/@polkadot/util/compact/toU8a.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.compactToU8a = compactToU8a;

var _index = require("../bn/index.js");

var _index2 = require("../u8a/index.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
var MAX_U8 = _index.BN_TWO.pow(new _index.BN(8 - 2)).isub(_index.BN_ONE);

var MAX_U16 = _index.BN_TWO.pow(new _index.BN(16 - 2)).isub(_index.BN_ONE);

var MAX_U32 = _index.BN_TWO.pow(new _index.BN(32 - 2)).isub(_index.BN_ONE);

var BL_16 = {
  bitLength: 16
};
var BL_32 = {
  bitLength: 32
};
/**
 * @name compactToU8a
 * @description Encodes a number into a compact representation
 * @example
 * <BR>
 *
 * ```javascript
 * import { compactToU8a } from '@polkadot/util';
 *
 * console.log(compactToU8a(511, 32)); // Uint8Array([0b11111101, 0b00000111])
 * ```
 */

function compactToU8a(value) {
  var bn = (0, _index.bnToBn)(value);

  if (bn.lte(MAX_U8)) {
    return new Uint8Array([bn.toNumber() << 2]);
  } else if (bn.lte(MAX_U16)) {
    return (0, _index.bnToU8a)(bn.shln(2).iadd(_index.BN_ONE), BL_16);
  } else if (bn.lte(MAX_U32)) {
    return (0, _index.bnToU8a)(bn.shln(2).iadd(_index.BN_TWO), BL_32);
  }

  var u8a = (0, _index.bnToU8a)(bn);
  var length = u8a.length; // adjust to the minimum number of bytes

  while (u8a[length - 1] === 0) {
    length--;
  }

  if (length < 4) {
    throw new Error('Invalid length, previous checks match anything less than 2^30');
  }

  return (0, _index2.u8aConcatStrict)([// subtract 4 as minimum (also catered for in decoding)
  new Uint8Array([(length - 4 << 2) + 3]), u8a.subarray(0, length)]);
}
},{"../bn/index.js":"node_modules/@polkadot/util/bn/index.js","../u8a/index.js":"node_modules/@polkadot/util/u8a/index.js"}],"node_modules/@polkadot/util/compact/addLength.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.compactAddLength = compactAddLength;

var _index = require("../u8a/index.js");

var _toU8a = require("./toU8a.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name compactAddLength
 * @description Adds a length prefix to the input value
 * @example
 * <BR>
 *
 * ```javascript
 * import { compactAddLength } from '@polkadot/util';
 *
 * console.log(compactAddLength(new Uint8Array([0xde, 0xad, 0xbe, 0xef]))); // Uint8Array([4 << 2, 0xde, 0xad, 0xbe, 0xef])
 * ```
 */
function compactAddLength(input) {
  return (0, _index.u8aConcatStrict)([(0, _toU8a.compactToU8a)(input.length), input]);
}
},{"../u8a/index.js":"node_modules/@polkadot/util/u8a/index.js","./toU8a.js":"node_modules/@polkadot/util/compact/toU8a.js"}],"node_modules/@polkadot/util/compact/fromU8a.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.compactFromU8a = compactFromU8a;
exports.compactFromU8aLim = compactFromU8aLim;

var _index = require("../bn/index.js");

var _index2 = require("../u8a/index.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name compactFromU8a
 * @description Retrives the offset and encoded length from a compact-prefixed value
 * @example
 * <BR>
 *
 * ```javascript
 * import { compactFromU8a } from '@polkadot/util';
 *
 * const [offset, length] = compactFromU8a(new Uint8Array([254, 255, 3, 0]));
 *
 * console.log('value offset=', offset, 'length=', length); // 4, 0xffff
 * ```
 */
function compactFromU8a(input) {
  var u8a = (0, _index2.u8aToU8a)(input); // The u8a is manually converted here for 1, 2 & 4 lengths, it is 2x faster
  // than doing an additional call to u8aToBn (as with variable length)

  switch (u8a[0] & 3) {
    case 0:
      return [1, new _index.BN(u8a[0] >>> 2)];

    case 1:
      return [2, new _index.BN(u8a[0] + (u8a[1] << 8) >>> 2)];

    case 2:
      // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to
      // 32-bit, in the case where the top-most bit is set this yields a negative value
      return [4, new _index.BN(u8a[0] + (u8a[1] << 8) + (u8a[2] << 16) + u8a[3] * 0x1000000 >>> 2)];
    // 0b11

    default:
      {
        // add 5 to shifted (4 for base length, 1 for this byte)
        var offset = (u8a[0] >>> 2) + 5; // we unroll the loop

        switch (offset) {
          // there still could be 4 bytes data, similar to 0b10 above (with offsets)
          case 5:
            // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to
            // 32-bit, in the case where the top-most bit is set this yields a negative value
            return [5, new _index.BN(u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + u8a[4] * 0x1000000)];

          case 6:
            return [6, new _index.BN(u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + (u8a[4] + (u8a[5] << 8)) * 0x1000000)];
          // 6 bytes data is the maximum, 48 bits (56 would overflow)

          case 7:
            return [7, new _index.BN(u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + (u8a[4] + (u8a[5] << 8) + (u8a[6] << 16)) * 0x1000000)];
          // for anything else, use the non-unrolled version

          default:
            return [offset, (0, _index2.u8aToBn)(u8a.subarray(1, offset))];
        }
      }
  }
}
/**
 * @name compactFromU8aLim
 * @description A limited version of [[compactFromU8a]], accepting only Uint8Array inputs for values <= 48 bits
 */


function compactFromU8aLim(u8a) {
  // The u8a is manually converted here for 1, 2 & 4 lengths, it is 2x faster
  // than doing an additional call to u8aToBn (as with variable length)
  switch (u8a[0] & 3) {
    case 0:
      return [1, u8a[0] >>> 2];

    case 1:
      return [2, u8a[0] + (u8a[1] << 8) >>> 2];

    case 2:
      // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to
      // 32-bit, in the case where the top-most bit is set this yields a negative value
      return [4, u8a[0] + (u8a[1] << 8) + (u8a[2] << 16) + u8a[3] * 0x1000000 >>> 2];
    // 0b11

    default:
      {
        // add 5 to shifted (4 for base length, 1 for this byte)
        // we unroll the loop
        switch ((u8a[0] >>> 2) + 5) {
          // there still could be 4 bytes data, similar to 0b10 above (with offsets)
          case 5:
            return [5, u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + u8a[4] * 0x1000000];

          case 6:
            return [6, u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + (u8a[4] + (u8a[5] << 8)) * 0x1000000];
          // 6 bytes data is the maximum, 48 bits (56 would overflow)

          case 7:
            return [7, u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + (u8a[4] + (u8a[5] << 8) + (u8a[6] << 16)) * 0x1000000];
          // for anything else, we are above the actual MAX_SAFE_INTEGER - bail out

          default:
            throw new Error('Compact input is > Number.MAX_SAFE_INTEGER');
        }
      }
  }
}
},{"../bn/index.js":"node_modules/@polkadot/util/bn/index.js","../u8a/index.js":"node_modules/@polkadot/util/u8a/index.js"}],"node_modules/@polkadot/util/compact/stripLength.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.compactStripLength = compactStripLength;

var _fromU8a = require("./fromU8a.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

/**
 * @name compactStripLength
 * @description Removes the length prefix, returning both the total length (including the value + compact encoding) and the decoded value with the correct length
 * @example
 * <BR>
 *
 * ```javascript
 * import { compactStripLength } from '@polkadot/util';
 *
 * console.log(compactStripLength(new Uint8Array([2 << 2, 0xde, 0xad]))); // [2, Uint8Array[0xde, 0xad]]
 * ```
 */
function compactStripLength(input) {
  var _compactFromU8a = (0, _fromU8a.compactFromU8a)(input),
      _compactFromU8a2 = _slicedToArray(_compactFromU8a, 2),
      offset = _compactFromU8a2[0],
      length = _compactFromU8a2[1];

  var total = offset + length.toNumber();
  return [total, input.subarray(offset, total)];
}
},{"./fromU8a.js":"node_modules/@polkadot/util/compact/fromU8a.js"}],"node_modules/@polkadot/util/compact/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "compactAddLength", {
  enumerable: true,
  get: function () {
    return _addLength.compactAddLength;
  }
});
Object.defineProperty(exports, "compactFromU8a", {
  enumerable: true,
  get: function () {
    return _fromU8a.compactFromU8a;
  }
});
Object.defineProperty(exports, "compactFromU8aLim", {
  enumerable: true,
  get: function () {
    return _fromU8a.compactFromU8aLim;
  }
});
Object.defineProperty(exports, "compactStripLength", {
  enumerable: true,
  get: function () {
    return _stripLength.compactStripLength;
  }
});
Object.defineProperty(exports, "compactToU8a", {
  enumerable: true,
  get: function () {
    return _toU8a.compactToU8a;
  }
});

var _addLength = require("./addLength.js");

var _stripLength = require("./stripLength.js");

var _fromU8a = require("./fromU8a.js");

var _toU8a = require("./toU8a.js");
},{"./addLength.js":"node_modules/@polkadot/util/compact/addLength.js","./stripLength.js":"node_modules/@polkadot/util/compact/stripLength.js","./fromU8a.js":"node_modules/@polkadot/util/compact/fromU8a.js","./toU8a.js":"node_modules/@polkadot/util/compact/toU8a.js"}],"node_modules/@polkadot/util/extractTime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extractTime = extractTime;
// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
var MIN_MS = 60 * 1000;
var HR_MS = MIN_MS * 60;
var DAY_MS = HR_MS * 24;
var ZERO = {
  days: 0,
  hours: 0,
  milliseconds: 0,
  minutes: 0,
  seconds: 0
};
/** @internal */

function add(a, b) {
  return {
    days: (a.days || 0) + b.days,
    hours: (a.hours || 0) + b.hours,
    milliseconds: (a.milliseconds || 0) + b.milliseconds,
    minutes: (a.minutes || 0) + b.minutes,
    seconds: (a.seconds || 0) + b.seconds
  };
}
/** @internal */


function extractSecs(ms) {
  var s = ms / 1000;

  if (s < 60) {
    var seconds = ~~s;
    return add({
      seconds: seconds
    }, extractTime(ms - seconds * 1000));
  }

  var m = s / 60;

  if (m < 60) {
    var minutes = ~~m;
    return add({
      minutes: minutes
    }, extractTime(ms - minutes * MIN_MS));
  }

  var h = m / 60;

  if (h < 24) {
    var hours = ~~h;
    return add({
      hours: hours
    }, extractTime(ms - hours * HR_MS));
  }

  var days = ~~(h / 24);
  return add({
    days: days
  }, extractTime(ms - days * DAY_MS));
}
/**
 * @name extractTime
 * @summary Convert a quantity of seconds to Time array representing accumulated {days, minutes, hours, seconds, milliseconds}
 * @example
 * <BR>
 *
 * ```javascript
 * import { extractTime } from '@polkadot/util';
 *
 * const { days, minutes, hours, seconds, milliseconds } = extractTime(6000); // 0, 0, 10, 0, 0
 * ```
 */


function extractTime(milliseconds) {
  return !milliseconds ? ZERO : milliseconds < 1000 ? add({
    milliseconds: milliseconds
  }, ZERO) : extractSecs(milliseconds);
}
},{}],"node_modules/@polkadot/util/float/toU8a.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.floatToU8a = floatToU8a;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
// eslint-disable-next-line @typescript-eslint/ban-types

/**
 * @name floatToU8a
 * @description Converts a float into a U8a representation (While we don't use BE in SCALE
 * we still allow for either representation, although, as elsewhere, isLe is default)
 */
function floatToU8a() {
  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.0;

  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref$bitLength = _ref.bitLength,
      bitLength = _ref$bitLength === void 0 ? 32 : _ref$bitLength,
      _ref$isLe = _ref.isLe,
      isLe = _ref$isLe === void 0 ? true : _ref$isLe;

  if (bitLength !== 32 && bitLength !== 64) {
    throw new Error('Invalid bitLength provided, expected 32 or 64');
  }

  var result = new Uint8Array(bitLength / 8);
  var dv = new DataView(result.buffer, result.byteOffset);

  if (bitLength === 32) {
    dv.setFloat32(0, Number(value), isLe);
  } else {
    dv.setFloat64(0, Number(value), isLe);
  }

  return result;
}
},{}],"node_modules/@polkadot/util/float/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "floatToU8a", {
  enumerable: true,
  get: function () {
    return _toU8a.floatToU8a;
  }
});

var _toU8a = require("./toU8a.js");
},{"./toU8a.js":"node_modules/@polkadot/util/float/toU8a.js"}],"node_modules/@polkadot/util/format/formatDecimal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.formatDecimal = formatDecimal;
// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
// eslint-disable-next-line prefer-regex-literals
var NUMBER_REGEX = new RegExp('(\\d+?)(?=(\\d{3})+(?!\\d)|$)', 'g');
/**
 * @name formatDecimal
 * @description Formats a number into string format with thousand seperators
 */

function formatDecimal(value) {
  // We can do this by adjusting the regx, however for the sake of clarity
  // we rather strip and re-add the negative sign in the output
  var isNegative = value[0].startsWith('-');
  var matched = isNegative ? value.substring(1).match(NUMBER_REGEX) : value.match(NUMBER_REGEX);
  return matched ? "".concat(isNegative ? '-' : '').concat(matched.join(',')) : value;
}
},{}],"node_modules/@polkadot/util/format/si.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SI_MID = exports.SI = void 0;
exports.calcSi = calcSi;
exports.findSi = findSi;
// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/** @internal */
var SI_MID = 8;
/** @internal */

exports.SI_MID = SI_MID;
var SI = [{
  power: -24,
  text: 'yocto',
  value: 'y'
}, {
  power: -21,
  text: 'zepto',
  value: 'z'
}, {
  power: -18,
  text: 'atto',
  value: 'a'
}, {
  power: -15,
  text: 'femto',
  value: 'f'
}, {
  power: -12,
  text: 'pico',
  value: 'p'
}, {
  power: -9,
  text: 'nano',
  value: 'n'
}, {
  power: -6,
  text: 'micro',
  value: 'Âµ'
}, {
  power: -3,
  text: 'milli',
  value: 'm'
}, {
  power: 0,
  text: 'Unit',
  value: '-'
}, // position 8
{
  power: 3,
  text: 'Kilo',
  value: 'k'
}, {
  power: 6,
  text: 'Mill',
  value: 'M'
}, // Mega, M
{
  power: 9,
  text: 'Bill',
  value: 'B'
}, // Giga, G
{
  power: 12,
  text: 'Tril',
  value: 'T'
}, // Tera, T
{
  power: 15,
  text: 'Peta',
  value: 'P'
}, {
  power: 18,
  text: 'Exa',
  value: 'E'
}, {
  power: 21,
  text: 'Zeta',
  value: 'Z'
}, {
  power: 24,
  text: 'Yotta',
  value: 'Y'
}]; // Given a SI type (e.g. k, m, Y) find the SI definition

/** @internal */

exports.SI = SI;

function findSi(type) {
  // use a loop here, better RN support (which doesn't have [].find)
  for (var i = 0; i < SI.length; i++) {
    if (SI[i].value === type) {
      return SI[i];
    }
  }

  return SI[SI_MID];
}
/** @internal */


function calcSi(text, decimals, forceUnit) {
  if (forceUnit) {
    return findSi(forceUnit);
  }

  var siDefIndex = SI_MID - 1 + Math.ceil((text.length - decimals) / 3);
  return SI[siDefIndex] || SI[siDefIndex < 0 ? 0 : SI.length - 1];
}
},{}],"node_modules/@polkadot/util/format/formatBalance.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.formatBalance = void 0;

var _toBn = require("../bn/toBn.js");

var _boolean = require("../is/boolean.js");

var _formatDecimal = require("./formatDecimal.js");

var _si = require("./si.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var DEFAULT_DECIMALS = 0;
var DEFAULT_UNIT = _si.SI[_si.SI_MID].text;
var defaultDecimals = DEFAULT_DECIMALS;
var defaultUnit = DEFAULT_UNIT;

function getUnits(si, withSi, withSiFull, withUnit) {
  var unit = (0, _boolean.isBoolean)(withUnit) ? _si.SI[_si.SI_MID].text : withUnit;
  return withSi || withSiFull ? si.value === '-' ? withUnit ? " ".concat(unit) : '' : " ".concat(withSiFull ? "".concat(si.text).concat(withUnit ? ' ' : '') : si.value).concat(withUnit ? unit : '') : '';
}

function getPrePost(text, decimals, forceUnit) {
  // NOTE We start at midpoint (8) minus 1 - this means that values display as
  // 123.456 instead of 0.123k (so always 6 relevant). Additionally we use ceil
  // so there are at most 3 decimal before the decimal separator
  var si = (0, _si.calcSi)(text, decimals, forceUnit);
  var mid = text.length - (decimals + si.power);
  var prefix = text.substring(0, mid);
  var padding = mid < 0 ? 0 - mid : 0;
  var postfix = "".concat("".concat(new Array(padding + 1).join('0')).concat(text).substring(mid < 0 ? 0 : mid), "0000").substring(0, 4);
  return [si, prefix || '0', postfix];
} // Formats a string/number with <prefix>.<postfix><type> notation


function _formatBalance(input) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  var optDecimals = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultDecimals;
  var text = (0, _toBn.bnToBn)(input).toString();

  if (text.length === 0 || text === '0') {
    return '0';
  } // extract options - the boolean case is for backwards-compat


  var _ref = (0, _boolean.isBoolean)(options) ? {
    withSi: options
  } : options,
      _ref$decimals = _ref.decimals,
      decimals = _ref$decimals === void 0 ? optDecimals : _ref$decimals,
      _ref$forceUnit = _ref.forceUnit,
      forceUnit = _ref$forceUnit === void 0 ? undefined : _ref$forceUnit,
      _ref$withSi = _ref.withSi,
      withSi = _ref$withSi === void 0 ? true : _ref$withSi,
      _ref$withSiFull = _ref.withSiFull,
      withSiFull = _ref$withSiFull === void 0 ? false : _ref$withSiFull,
      _ref$withUnit = _ref.withUnit,
      withUnit = _ref$withUnit === void 0 ? true : _ref$withUnit; // strip the negative sign so we can work with clean groupings, re-add this in the
  // end when we return the result (from here on we work with positive numbers)


  var sign = '';

  if (text[0].startsWith('-')) {
    sign = '-';
    text = text.substring(1);
  }

  var _getPrePost = getPrePost(text, decimals, forceUnit),
      _getPrePost2 = _slicedToArray(_getPrePost, 3),
      si = _getPrePost2[0],
      prefix = _getPrePost2[1],
      postfix = _getPrePost2[2];

  var units = getUnits(si, withSi, withSiFull, withUnit);
  return "".concat(sign).concat((0, _formatDecimal.formatDecimal)(prefix), ".").concat(postfix).concat(units);
}

var formatBalance = _formatBalance; // eslint-disable-next-line @typescript-eslint/unbound-method

exports.formatBalance = formatBalance;

formatBalance.calcSi = function (text) {
  var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultDecimals;
  return (0, _si.calcSi)(text, decimals);
}; // eslint-disable-next-line @typescript-eslint/unbound-method


formatBalance.findSi = _si.findSi; // eslint-disable-next-line @typescript-eslint/unbound-method

formatBalance.getDefaults = function () {
  return {
    decimals: defaultDecimals,
    unit: defaultUnit
  };
}; // get allowable options to display in a dropdown
// eslint-disable-next-line @typescript-eslint/unbound-method


formatBalance.getOptions = function () {
  var decimals = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultDecimals;
  return _si.SI.filter(function (_ref2) {
    var power = _ref2.power;
    return power < 0 ? decimals + power >= 0 : true;
  });
}; // Sets the default decimals to use for formatting (ui-wide)
// eslint-disable-next-line @typescript-eslint/unbound-method


formatBalance.setDefaults = function (_ref3) {
  var decimals = _ref3.decimals,
      unit = _ref3.unit;
  defaultDecimals = decimals === undefined ? defaultDecimals : Array.isArray(decimals) ? decimals[0] : decimals;
  defaultUnit = unit === undefined ? defaultUnit : Array.isArray(unit) ? unit[0] : unit;
  _si.SI[_si.SI_MID].text = defaultUnit;
};
},{"../bn/toBn.js":"node_modules/@polkadot/util/bn/toBn.js","../is/boolean.js":"node_modules/@polkadot/util/is/boolean.js","./formatDecimal.js":"node_modules/@polkadot/util/format/formatDecimal.js","./si.js":"node_modules/@polkadot/util/format/si.js"}],"node_modules/@polkadot/util/format/formatDate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.formatDate = formatDate;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/** @internal */
function zeroPad(value) {
  return value.toString().padStart(2, '0');
}
/**
 * @name formatDate
 * @description Formats a date in CCYY-MM-DD HH:MM:SS format
 */


function formatDate(date) {
  var year = date.getFullYear().toString();
  var month = zeroPad(date.getMonth() + 1);
  var day = zeroPad(date.getDate());
  var hour = zeroPad(date.getHours());
  var minute = zeroPad(date.getMinutes());
  var second = zeroPad(date.getSeconds());
  return "".concat(year, "-").concat(month, "-").concat(day, " ").concat(hour, ":").concat(minute, ":").concat(second);
}
},{}],"node_modules/@polkadot/util/format/formatElapsed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.formatElapsed = formatElapsed;

var _toBn = require("../bn/toBn.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/** @internal */
function formatValue(elapsed) {
  if (elapsed < 15) {
    return "".concat(elapsed.toFixed(1), "s");
  } else if (elapsed < 60) {
    return "".concat(elapsed | 0, "s");
  } else if (elapsed < 3600) {
    return "".concat(elapsed / 60 | 0, "m");
  }

  return "".concat(elapsed / 3600 | 0, "h");
}
/**
 * @name formatElapsed
 * @description Formats an elapsed value into s, m, h or day segments
 */


function formatElapsed(now, value) {
  var tsNow = now && now.getTime() || 0;
  var tsValue = value instanceof Date ? value.getTime() : (0, _toBn.bnToBn)(value).toNumber();
  return tsNow && tsValue ? formatValue(Math.max(Math.abs(tsNow - tsValue), 0) / 1000) : '0.0s';
}
},{"../bn/toBn.js":"node_modules/@polkadot/util/bn/toBn.js"}],"node_modules/@polkadot/util/format/formatNumber.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.formatNumber = formatNumber;

var _toBn = require("../bn/toBn.js");

var _formatDecimal = require("./formatDecimal.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name formatNumber
 * @description Formats a number into string format with thousand seperators
 */
function formatNumber(value) {
  return (0, _formatDecimal.formatDecimal)((0, _toBn.bnToBn)(value).toString());
}
},{"../bn/toBn.js":"node_modules/@polkadot/util/bn/toBn.js","./formatDecimal.js":"node_modules/@polkadot/util/format/formatDecimal.js"}],"node_modules/@polkadot/util/format/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "calcSi", {
  enumerable: true,
  get: function () {
    return _si.calcSi;
  }
});
Object.defineProperty(exports, "findSi", {
  enumerable: true,
  get: function () {
    return _si.findSi;
  }
});
Object.defineProperty(exports, "formatBalance", {
  enumerable: true,
  get: function () {
    return _formatBalance.formatBalance;
  }
});
Object.defineProperty(exports, "formatDate", {
  enumerable: true,
  get: function () {
    return _formatDate.formatDate;
  }
});
Object.defineProperty(exports, "formatDecimal", {
  enumerable: true,
  get: function () {
    return _formatDecimal.formatDecimal;
  }
});
Object.defineProperty(exports, "formatElapsed", {
  enumerable: true,
  get: function () {
    return _formatElapsed.formatElapsed;
  }
});
Object.defineProperty(exports, "formatNumber", {
  enumerable: true,
  get: function () {
    return _formatNumber.formatNumber;
  }
});

var _formatBalance = require("./formatBalance.js");

var _formatDate = require("./formatDate.js");

var _formatDecimal = require("./formatDecimal.js");

var _formatElapsed = require("./formatElapsed.js");

var _formatNumber = require("./formatNumber.js");

var _si = require("./si.js");
},{"./formatBalance.js":"node_modules/@polkadot/util/format/formatBalance.js","./formatDate.js":"node_modules/@polkadot/util/format/formatDate.js","./formatDecimal.js":"node_modules/@polkadot/util/format/formatDecimal.js","./formatElapsed.js":"node_modules/@polkadot/util/format/formatElapsed.js","./formatNumber.js":"node_modules/@polkadot/util/format/formatNumber.js","./si.js":"node_modules/@polkadot/util/format/si.js"}],"node_modules/@polkadot/util/hex/hasPrefix.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hexHasPrefix = hexHasPrefix;

var _hex = require("../is/hex.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name hexHasPrefix
 * @summary Tests for the existence of a `0x` prefix.
 * @description
 * Checks for a valid hex input value and if the start matched `0x`
 * @example
 * <BR>
 *
 * ```javascript
 * import { hexHasPrefix } from '@polkadot/util';
 *
 * console.log('has prefix', hexHasPrefix('0x1234')); // => true
 * ```
 */
function hexHasPrefix(value) {
  return !!value && (0, _hex.isHex)(value, -1);
}
},{"../is/hex.js":"node_modules/@polkadot/util/is/hex.js"}],"node_modules/@polkadot/util/hex/addPrefix.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hexAddPrefix = hexAddPrefix;

var _hasPrefix = require("./hasPrefix.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name hexAddPrefix
 * @summary Adds the `0x` prefix to string values.
 * @description
 * Returns a `0x` prefixed string from the input value. If the input is already prefixed, it is returned unchanged.
 * @example
 * <BR>
 *
 * ```javascript
 * import { hexAddPrefix } from '@polkadot/util';
 *
 * console.log('With prefix', hexAddPrefix('0a0b12')); // => 0x0a0b12
 * ```
 */
function hexAddPrefix(value) {
  return value && (0, _hasPrefix.hexHasPrefix)(value) ? value : "0x".concat(value && value.length % 2 === 1 ? '0' : '').concat(value || '');
}
},{"./hasPrefix.js":"node_modules/@polkadot/util/hex/hasPrefix.js"}],"node_modules/@polkadot/util/hex/fixLength.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hexFixLength = hexFixLength;

var _addPrefix = require("./addPrefix.js");

var _stripPrefix = require("./stripPrefix.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name hexFixLength
 * @summary Shifts a hex string to a specific bitLength
 * @description
 * Returns a `0x` prefixed string with the specified number of bits contained in the return value. (If bitLength is -1, length checking is not done). Values with more bits are trimmed to the specified length. Input values with less bits are returned as-is by default. When `withPadding` is set, shorter values are padded with `0`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { hexFixLength } from '@polkadot/util';
 *
 * console.log('fixed', hexFixLength('0x12', 16)); // => 0x12
 * console.log('fixed', hexFixLength('0x12', 16, true)); // => 0x0012
 * console.log('fixed', hexFixLength('0x0012', 8)); // => 0x12
 * ```
 */
function hexFixLength(value) {
  var bitLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;
  var withPadding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var strLength = Math.ceil(bitLength / 4);
  var hexLength = strLength + 2;
  return (0, _addPrefix.hexAddPrefix)(bitLength === -1 || value.length === hexLength || !withPadding && value.length < hexLength ? (0, _stripPrefix.hexStripPrefix)(value) : value.length > hexLength ? (0, _stripPrefix.hexStripPrefix)(value).slice(-1 * strLength) : "".concat('0'.repeat(strLength)).concat((0, _stripPrefix.hexStripPrefix)(value)).slice(-1 * strLength));
}
},{"./addPrefix.js":"node_modules/@polkadot/util/hex/addPrefix.js","./stripPrefix.js":"node_modules/@polkadot/util/hex/stripPrefix.js"}],"node_modules/@polkadot/util/hex/toNumber.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hexToNumber = hexToNumber;

var _toBn = require("./toBn.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name hexToNumber
 * @summary Creates a Number value from a Buffer object.
 * @description
 * `null` inputs returns an NaN result, `hex` values return the actual value as a `Number`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { hexToNumber } from '@polkadot/util';
 *
 * hexToNumber('0x1234'); // => 0x1234
 * ```
 */
function hexToNumber(value) {
  return value ? (0, _toBn.hexToBn)(value).toNumber() : NaN;
}
},{"./toBn.js":"node_modules/@polkadot/util/hex/toBn.js"}],"node_modules/@polkadot/util/hex/toString.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hexToString = hexToString;

var _toString = require("../u8a/toString.js");

var _toU8a = require("./toU8a.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name hexToU8a
 * @summary Creates a Uint8Array object from a hex string.
 * @description
 * Hex input values return the actual bytes value converted to a string. Anything that is not a hex string (including the `0x` prefix) throws an error.
 * @example
 * <BR>
 *
 * ```javascript
 * import { hexToString } from '@polkadot/util';
 *
 * hexToU8a('0x68656c6c6f'); // hello
 * ```
 */
function hexToString(_value) {
  return (0, _toString.u8aToString)((0, _toU8a.hexToU8a)(_value));
}
},{"../u8a/toString.js":"node_modules/@polkadot/util/u8a/toString.js","./toU8a.js":"node_modules/@polkadot/util/hex/toU8a.js"}],"node_modules/@polkadot/util/hex/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "hexAddPrefix", {
  enumerable: true,
  get: function () {
    return _addPrefix.hexAddPrefix;
  }
});
Object.defineProperty(exports, "hexFixLength", {
  enumerable: true,
  get: function () {
    return _fixLength.hexFixLength;
  }
});
Object.defineProperty(exports, "hexHasPrefix", {
  enumerable: true,
  get: function () {
    return _hasPrefix.hexHasPrefix;
  }
});
Object.defineProperty(exports, "hexStripPrefix", {
  enumerable: true,
  get: function () {
    return _stripPrefix.hexStripPrefix;
  }
});
Object.defineProperty(exports, "hexToBigInt", {
  enumerable: true,
  get: function () {
    return _toBigInt.hexToBigInt;
  }
});
Object.defineProperty(exports, "hexToBn", {
  enumerable: true,
  get: function () {
    return _toBn.hexToBn;
  }
});
Object.defineProperty(exports, "hexToNumber", {
  enumerable: true,
  get: function () {
    return _toNumber.hexToNumber;
  }
});
Object.defineProperty(exports, "hexToString", {
  enumerable: true,
  get: function () {
    return _toString.hexToString;
  }
});
Object.defineProperty(exports, "hexToU8a", {
  enumerable: true,
  get: function () {
    return _toU8a.hexToU8a;
  }
});

var _addPrefix = require("./addPrefix.js");

var _fixLength = require("./fixLength.js");

var _hasPrefix = require("./hasPrefix.js");

var _stripPrefix = require("./stripPrefix.js");

var _toBigInt = require("./toBigInt.js");

var _toBn = require("./toBn.js");

var _toNumber = require("./toNumber.js");

var _toString = require("./toString.js");

var _toU8a = require("./toU8a.js");
},{"./addPrefix.js":"node_modules/@polkadot/util/hex/addPrefix.js","./fixLength.js":"node_modules/@polkadot/util/hex/fixLength.js","./hasPrefix.js":"node_modules/@polkadot/util/hex/hasPrefix.js","./stripPrefix.js":"node_modules/@polkadot/util/hex/stripPrefix.js","./toBigInt.js":"node_modules/@polkadot/util/hex/toBigInt.js","./toBn.js":"node_modules/@polkadot/util/hex/toBn.js","./toNumber.js":"node_modules/@polkadot/util/hex/toNumber.js","./toString.js":"node_modules/@polkadot/util/hex/toString.js","./toU8a.js":"node_modules/@polkadot/util/hex/toU8a.js"}],"node_modules/@polkadot/util/is/array.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isArray = isArray;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isArray
 * @summary Tests for a Array instance.
 */
function isArray(value) {
  return Array.isArray(value);
}
},{}],"node_modules/@polkadot/util/is/string.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isString = isString;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isString
 * @summary Tests for a string.
 * @description
 * Checks to see if the input value is a JavaScript string.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isString } from '@polkadot/util';
 *
 * console.log('isString', isString('test')); // => true
 * ```
 */
function isString(value) {
  return typeof value === 'string' || value instanceof String;
}
},{}],"node_modules/@polkadot/util/is/ascii.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isAscii = isAscii;

var _toU8a = require("../u8a/toU8a.js");

var _hex = require("./hex.js");

var _string = require("./string.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/** @internal */
function isAsciiStr(str) {
  var count = str.length;

  for (var i = 0; i < count; i++) {
    var b = str.charCodeAt(i); // check is inlined here, it is faster than making a call

    if (!(b < 127 && (b >= 32 || b === 10 || b === 9 || b === 13))) {
      return false;
    }
  }

  return true;
}
/** @internal */


function isAsciiBytes(u8a) {
  var count = u8a.length;

  for (var i = 0; i < count; i++) {
    var b = u8a[i]; // check is inlined here, it is faster than making a call

    if (!(b < 127 && (b >= 32 || b === 10 || b === 9 || b === 13))) {
      return false;
    }
  }

  return true;
}
/**
 * @name isAscii
 * @summary Tests if the input is printable ASCII
 * @description
 * Checks to see if the input string or Uint8Array is printable ASCII, 32-127 + formatters
 */


function isAscii(value) {
  return (0, _string.isString)(value) ? (0, _hex.isHex)(value) ? isAsciiBytes((0, _toU8a.u8aToU8a)(value)) : isAsciiStr(value) : value ? isAsciiBytes(value) : false;
}
},{"../u8a/toU8a.js":"node_modules/@polkadot/util/u8a/toU8a.js","./hex.js":"node_modules/@polkadot/util/is/hex.js","./string.js":"node_modules/@polkadot/util/is/string.js"}],"node_modules/@polkadot/util/is/childClass.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isChildClass = isChildClass;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isChildClass
 * @summary Tests if the child extends the parent Class
 * @description
 * Checks to see if the child Class extends the parent Class
 * @example
 * <BR>
 *
 * ```javascript
 * import { isChildClass } from '@polkadot/util';
 *
 * console.log('isChildClass', isChildClass(BN, BN); // => true
 * console.log('isChildClass', isChildClass(BN, Uint8Array); // => false
 * ```
 */
function isChildClass(Parent, Child) {
  // https://stackoverflow.com/questions/30993434/check-if-a-constructor-inherits-another-in-es6/30993664
  return Child // eslint-disable-next-line no-prototype-builtins
  ? Parent === Child || Parent.isPrototypeOf(Child) : false;
}
},{}],"node_modules/@polkadot/util/is/codec.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isCodec = isCodec;

var _helpers = require("./helpers.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
var checkCodec = (0, _helpers.isOnObject)('toHex', 'toU8a');
var checkRegistry = (0, _helpers.isOnObject)('get');

function isCodec(value) {
  return checkCodec(value) && checkRegistry(value.registry);
}
},{"./helpers.js":"node_modules/@polkadot/util/is/helpers.js"}],"node_modules/@polkadot/util/is/compact.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isCompact = void 0;

var _helpers = require("./helpers.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isCompact
 * @summary Tests for SCALE-Compact-like object instance.
 */
var isCompact = (0, _helpers.isOnObject)('toBigInt', 'toBn', 'toNumber', 'unwrap');
exports.isCompact = isCompact;
},{"./helpers.js":"node_modules/@polkadot/util/is/helpers.js"}],"node_modules/@polkadot/util/is/error.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isError = isError;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isError
 * @summary Tests for a `Error` object instance.
 * @description
 * Checks to see if the input object is an instance of `Error`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isError } from '@polkadot/util';
 *
 * console.log('isError', isError(new Error('message'))); // => true
 * ```
 */
function isError(value) {
  return (value && value.constructor) === Error || value instanceof Error;
}
},{}],"node_modules/@polkadot/util/is/instanceOf.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isInstanceOf = isInstanceOf;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isInstanceOf
 * @summary Tests for a instance of a class.
 * @description
 * Checks to see if the input value is an instance of the test class.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isInstanceOf } from '@polkadot/util';
 *
 * console.log('isInstanceOf', isInstanceOf(new Array(0), Array)); // => true
 * ```
 */
// eslint-disable-next-line @typescript-eslint/ban-types
function isInstanceOf(value, Clazz) {
  return (value && value.constructor) === Clazz || value instanceof Clazz;
}
},{}],"node_modules/ip-regex/index.js":[function(require,module,exports) {
'use strict';

var word = '[a-fA-F\\d:]';

var b = function b(options) {
  return options && options.includeBoundaries ? "(?:(?<=\\s|^)(?=".concat(word, ")|(?<=").concat(word, ")(?=\\s|$))") : '';
};

var v4 = '(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}';
var v6seg = '[a-fA-F\\d]{1,4}';
var v6 = "\n(?:\n(?:".concat(v6seg, ":){7}(?:").concat(v6seg, "|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:").concat(v6seg, ":){6}(?:").concat(v4, "|:").concat(v6seg, "|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:").concat(v6seg, ":){5}(?::").concat(v4, "|(?::").concat(v6seg, "){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:").concat(v6seg, ":){4}(?:(?::").concat(v6seg, "){0,1}:").concat(v4, "|(?::").concat(v6seg, "){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:").concat(v6seg, ":){3}(?:(?::").concat(v6seg, "){0,2}:").concat(v4, "|(?::").concat(v6seg, "){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:").concat(v6seg, ":){2}(?:(?::").concat(v6seg, "){0,3}:").concat(v4, "|(?::").concat(v6seg, "){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:").concat(v6seg, ":){1}(?:(?::").concat(v6seg, "){0,4}:").concat(v4, "|(?::").concat(v6seg, "){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::(?:(?::").concat(v6seg, "){0,5}:").concat(v4, "|(?::").concat(v6seg, "){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1\n").replace(/\s*\/\/.*$/gm, '').replace(/\n/g, '').trim(); // Pre-compile only the exact regexes because adding a global flag make regexes stateful

var v46Exact = new RegExp("(?:^".concat(v4, "$)|(?:^").concat(v6, "$)"));
var v4exact = new RegExp("^".concat(v4, "$"));
var v6exact = new RegExp("^".concat(v6, "$"));

var ip = function ip(options) {
  return options && options.exact ? v46Exact : new RegExp("(?:".concat(b(options)).concat(v4).concat(b(options), ")|(?:").concat(b(options)).concat(v6).concat(b(options), ")"), 'g');
};

ip.v4 = function (options) {
  return options && options.exact ? v4exact : new RegExp("".concat(b(options)).concat(v4).concat(b(options)), 'g');
};

ip.v6 = function (options) {
  return options && options.exact ? v6exact : new RegExp("".concat(b(options)).concat(v6).concat(b(options)), 'g');
};

module.exports = ip;
},{}],"node_modules/@polkadot/util/is/ip.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isIp = isIp;

var _ipRegex = _interopRequireDefault(require("ip-regex"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isIp
 * @summary Tests if the value is a valid IP address
 * @description
 * Checks to see if the value is a valid IP address. Optionally check for either v4/v6
 * @example
 * <BR>
 *
 * ```javascript
 * import { isIp } from '@polkadot/util';
 *
 * isIp('192.168.0.1')); // => true
 * isIp('1:2:3:4:5:6:7:8'); // => true
 * isIp('192.168.0.1', 'v6')); // => false
 * isIp('1:2:3:4:5:6:7:8', 'v4'); // => false
 * ```
 */
function isIp(value, type) {
  if (type === 'v4') {
    return _ipRegex.default.v4({
      exact: true
    }).test(value);
  } else if (type === 'v6') {
    return _ipRegex.default.v6({
      exact: true
    }).test(value);
  }

  return (0, _ipRegex.default)({
    exact: true
  }).test(value);
}
},{"ip-regex":"node_modules/ip-regex/index.js"}],"node_modules/@polkadot/util/stringify.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.stringify = stringify;

var _bigInt = require("./is/bigInt.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/** @internal */
function replacer(_, v) {
  return (0, _bigInt.isBigInt)(v) ? v.toString() : v;
}
/**
 * @name stringify
 * @summary Performs a JSON.stringify, with BigInt handling
 * @description A wrapper for JSON.stringify that handles BigInt values transparently, converting them to string. No differences from the native JSON.stringify function otherwise.
 */


function stringify(value, space) {
  return JSON.stringify(value, replacer, space);
}
},{"./is/bigInt.js":"node_modules/@polkadot/util/is/bigInt.js"}],"node_modules/@polkadot/util/is/jsonObject.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isJsonObject = isJsonObject;

var _stringify = require("../stringify.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

/**
 * @name isJsonObject
 * @summary Tests for a valid JSON `object`.
 * @description
 * Checks to see if the input value is a valid JSON object.
 * It returns false if the input is JSON parsable, but not an Javascript object.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isJsonObject } from '@polkadot/util';
 *
 * isJsonObject({}); // => true
 * isJsonObject({
 *  "Test": "1234",
 *  "NestedTest": {
 *   "Test": "5678"
 *  }
 * }); // => true
 * isJsonObject(1234); // JSON parsable, but not an object =>  false
 * isJsonObject(null); // JSON parsable, but not an object => false
 * isJsonObject('not an object'); // => false
 * ```
 */
function isJsonObject(value) {
  var str = typeof value !== 'string' ? (0, _stringify.stringify)(value) : value;

  try {
    var obj = JSON.parse(str);
    return _typeof(obj) === 'object' && obj !== null;
  } catch (e) {
    return false;
  }
}
},{"../stringify.js":"node_modules/@polkadot/util/stringify.js"}],"node_modules/@polkadot/util/is/null.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isNull = isNull;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isNull
 * @summary Tests for a `null` values.
 * @description
 * Checks to see if the input value is `null`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isNull } from '@polkadot/util';
 *
 * console.log('isNull', isNull(null)); // => true
 * ```
 */
function isNull(value) {
  return value === null;
}
},{}],"node_modules/@polkadot/util/is/observable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isObservable = void 0;

var _helpers = require("./helpers.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isBObservable
 * @summary Tests for a `Observable` object instance.
 * @description
 * Checks to see if the input object is an instance of `BN` (bn.js).
 * @example
 * <BR>
 *
 * ```javascript
 * import { isObservable } from '@polkadot/util';
 *
 * console.log('isObservable', isObservable(...));
 * ```
 */
var isObservable = (0, _helpers.isOn)('next');
exports.isObservable = isObservable;
},{"./helpers.js":"node_modules/@polkadot/util/is/helpers.js"}],"node_modules/@polkadot/util/is/promise.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isPromise = void 0;

var _helpers = require("./helpers.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
var isPromise = (0, _helpers.isOnObject)('catch', 'then');
exports.isPromise = isPromise;
},{"./helpers.js":"node_modules/@polkadot/util/is/helpers.js"}],"node_modules/@polkadot/util/is/testChain.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isTestChain = isTestChain;
// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
var REGEX_DEV = /(Development|Local Testnet)$/;

function isTestChain(chain) {
  if (!chain) {
    return false;
  }

  return !!REGEX_DEV.test(chain.toString());
}
},{}],"node_modules/@polkadot/util/is/undefined.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isUndefined = isUndefined;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isUndefined
 * @summary Tests for a `undefined` values.
 * @description
 * Checks to see if the input value is `undefined`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isUndefined } from '@polkadot/util';
 *
 * console.log('isUndefined', isUndefined(void(0))); // => true
 * ```
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function isUndefined(value) {
  return value === undefined;
}
},{}],"node_modules/@polkadot/util/is/utf8.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isUtf8 = isUtf8;

var _toU8a = require("../u8a/toU8a.js");

var _string = require("./string.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Adapted from https://github.com/JulienPalard/is_utf8/blob/master/is_utf8.c

/**
 * @name isUtf8
 * @summary Tests if the input is valid Utf8
 * @description
 * Checks to see if the input string or Uint8Array is valid Utf8
 */
function isUtf8(value) {
  if (!value) {
    return (0, _string.isString)(value);
  }

  var u8a = (0, _toU8a.u8aToU8a)(value);
  var len = u8a.length;
  var i = 0;

  while (i < len) {
    if (u8a[i] <= 0x7F)
      /* 00..7F */
      {
        i += 1;
      } else if (u8a[i] >= 0xC2 && u8a[i] <= 0xDF)
      /* C2..DF 80..BF */
      {
        if (i + 1 < len)
          /* Expect a 2nd byte */
          {
            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {
              // *message = "After a first byte between C2 and DF, expecting a 2nd byte between 80 and BF";
              // *faulty_bytes = 2;
              return false;
            }
          } else {
          // *message = "After a first byte between C2 and DF, expecting a 2nd byte.";
          // *faulty_bytes = 1;
          return false;
        }

        i += 2;
      } else if (u8a[i] === 0xE0)
      /* E0 A0..BF 80..BF */
      {
        if (i + 2 < len)
          /* Expect a 2nd and 3rd byte */
          {
            if (u8a[i + 1] < 0xA0 || u8a[i + 1] > 0xBF) {
              // *message = "After a first byte of E0, expecting a 2nd byte between A0 and BF.";
              // *faulty_bytes = 2;
              return false;
            }

            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {
              // *message = "After a first byte of E0, expecting a 3nd byte between 80 and BF.";
              // *faulty_bytes = 3;
              return false;
            }
          } else {
          // *message = "After a first byte of E0, expecting two following bytes.";
          // *faulty_bytes = 1;
          return false;
        }

        i += 3;
      } else if (u8a[i] >= 0xE1 && u8a[i] <= 0xEC)
      /* E1..EC 80..BF 80..BF */
      {
        if (i + 2 < len)
          /* Expect a 2nd and 3rd byte */
          {
            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {
              // *message = "After a first byte between E1 and EC, expecting the 2nd byte between 80 and BF.";
              // *faulty_bytes = 2;
              return false;
            }

            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {
              // *message = "After a first byte between E1 and EC, expecting the 3rd byte between 80 and BF.";
              // *faulty_bytes = 3;
              return false;
            }
          } else {
          // *message = "After a first byte between E1 and EC, expecting two following bytes.";
          // *faulty_bytes = 1;
          return false;
        }

        i += 3;
      } else if (u8a[i] === 0xED)
      /* ED 80..9F 80..BF */
      {
        if (i + 2 < len)
          /* Expect a 2nd and 3rd byte */
          {
            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0x9F) {
              // *message = "After a first byte of ED, expecting 2nd byte between 80 and 9F.";
              // *faulty_bytes = 2;
              return false;
            }

            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {
              // *message = "After a first byte of ED, expecting 3rd byte between 80 and BF.";
              // *faulty_bytes = 3;
              return false;
            }
          } else {
          // *message = "After a first byte of ED, expecting two following bytes.";
          // *faulty_bytes = 1;
          return false;
        }

        i += 3;
      } else if (u8a[i] >= 0xEE && u8a[i] <= 0xEF)
      /* EE..EF 80..BF 80..BF */
      {
        if (i + 2 < len)
          /* Expect a 2nd and 3rd byte */
          {
            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {
              // *message = "After a first byte between EE and EF, expecting 2nd byte between 80 and BF.";
              // *faulty_bytes = 2;
              return false;
            }

            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {
              // *message = "After a first byte between EE and EF, expecting 3rd byte between 80 and BF.";
              // *faulty_bytes = 3;
              return false;
            }
          } else {
          // *message = "After a first byte between EE and EF, two following bytes.";
          // *faulty_bytes = 1;
          return false;
        }

        i += 3;
      } else if (u8a[i] === 0xF0)
      /* F0 90..BF 80..BF 80..BF */
      {
        if (i + 3 < len)
          /* Expect a 2nd, 3rd 3th byte */
          {
            if (u8a[i + 1] < 0x90 || u8a[i + 1] > 0xBF) {
              // *message = "After a first byte of F0, expecting 2nd byte between 90 and BF.";
              // *faulty_bytes = 2;
              return false;
            }

            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {
              // *message = "After a first byte of F0, expecting 3rd byte between 80 and BF.";
              // *faulty_bytes = 3;
              return false;
            }

            if (u8a[i + 3] < 0x80 || u8a[i + 3] > 0xBF) {
              // *message = "After a first byte of F0, expecting 4th byte between 80 and BF.";
              // *faulty_bytes = 4;
              return false;
            }
          } else {
          // *message = "After a first byte of F0, expecting three following bytes.";
          // *faulty_bytes = 1;
          return false;
        }

        i += 4;
      } else if (u8a[i] >= 0xF1 && u8a[i] <= 0xF3)
      /* F1..F3 80..BF 80..BF 80..BF */
      {
        if (i + 3 < len)
          /* Expect a 2nd, 3rd 3th byte */
          {
            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {
              // *message = "After a first byte of F1, F2, or F3, expecting a 2nd byte between 80 and BF.";
              // *faulty_bytes = 2;
              return false;
            }

            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {
              // *message = "After a first byte of F1, F2, or F3, expecting a 3rd byte between 80 and BF.";
              // *faulty_bytes = 3;
              return false;
            }

            if (u8a[i + 3] < 0x80 || u8a[i + 3] > 0xBF) {
              // *message = "After a first byte of F1, F2, or F3, expecting a 4th byte between 80 and BF.";
              // *faulty_bytes = 4;
              return false;
            }
          } else {
          // *message = "After a first byte of F1, F2, or F3, expecting three following bytes.";
          // *faulty_bytes = 1;
          return false;
        }

        i += 4;
      } else if (u8a[i] === 0xF4)
      /* F4 80..8F 80..BF 80..BF */
      {
        if (i + 3 < len)
          /* Expect a 2nd, 3rd 3th byte */
          {
            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0x8F) {
              // *message = "After a first byte of F4, expecting 2nd byte between 80 and 8F.";
              // *faulty_bytes = 2;
              return false;
            }

            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {
              // *message = "After a first byte of F4, expecting 3rd byte between 80 and BF.";
              // *faulty_bytes = 3;
              return false;
            }

            if (u8a[i + 3] < 0x80 || u8a[i + 3] > 0xBF) {
              // *message = "After a first byte of F4, expecting 4th byte between 80 and BF.";
              // *faulty_bytes = 4;
              return false;
            }
          } else {
          // *message = "After a first byte of F4, expecting three following bytes.";
          // *faulty_bytes = 1;
          return false;
        }

        i += 4;
      } else {
      // *message = "Expecting bytes in the following ranges: 00..7F C2..F4.";
      // *faulty_bytes = 1;
      return false;
    }
  }

  return true;
}
},{"../u8a/toU8a.js":"node_modules/@polkadot/util/u8a/toU8a.js","./string.js":"node_modules/@polkadot/util/is/string.js"}],"node_modules/@polkadot/util/is/wasm.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isWasm = isWasm;

var _eq = require("../u8a/eq.js");

var _u8a = require("./u8a.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
var WASM_MAGIC = new Uint8Array([0, 97, 115, 109]); // \0asm

/**
 * @name isWasm
 * @summary Tests if the input has a WASM header
 * @description
 * Checks to see if the input Uint8Array contains a valid WASM header
 */

function isWasm(value) {
  return (0, _u8a.isU8a)(value) && (0, _eq.u8aEq)(value.subarray(0, 4), WASM_MAGIC);
}
},{"../u8a/eq.js":"node_modules/@polkadot/util/u8a/eq.js","./u8a.js":"node_modules/@polkadot/util/is/u8a.js"}],"node_modules/@polkadot/util/is/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "isArray", {
  enumerable: true,
  get: function () {
    return _array.isArray;
  }
});
Object.defineProperty(exports, "isAscii", {
  enumerable: true,
  get: function () {
    return _ascii.isAscii;
  }
});
Object.defineProperty(exports, "isBigInt", {
  enumerable: true,
  get: function () {
    return _bigInt.isBigInt;
  }
});
Object.defineProperty(exports, "isBn", {
  enumerable: true,
  get: function () {
    return _bn.isBn;
  }
});
Object.defineProperty(exports, "isBoolean", {
  enumerable: true,
  get: function () {
    return _boolean.isBoolean;
  }
});
Object.defineProperty(exports, "isBuffer", {
  enumerable: true,
  get: function () {
    return _buffer.isBuffer;
  }
});
Object.defineProperty(exports, "isChildClass", {
  enumerable: true,
  get: function () {
    return _childClass.isChildClass;
  }
});
Object.defineProperty(exports, "isCodec", {
  enumerable: true,
  get: function () {
    return _codec.isCodec;
  }
});
Object.defineProperty(exports, "isCompact", {
  enumerable: true,
  get: function () {
    return _compact.isCompact;
  }
});
Object.defineProperty(exports, "isError", {
  enumerable: true,
  get: function () {
    return _error.isError;
  }
});
Object.defineProperty(exports, "isFunction", {
  enumerable: true,
  get: function () {
    return _function.isFunction;
  }
});
Object.defineProperty(exports, "isHex", {
  enumerable: true,
  get: function () {
    return _hex.isHex;
  }
});
Object.defineProperty(exports, "isInstanceOf", {
  enumerable: true,
  get: function () {
    return _instanceOf.isInstanceOf;
  }
});
Object.defineProperty(exports, "isIp", {
  enumerable: true,
  get: function () {
    return _ip.isIp;
  }
});
Object.defineProperty(exports, "isJsonObject", {
  enumerable: true,
  get: function () {
    return _jsonObject.isJsonObject;
  }
});
Object.defineProperty(exports, "isNull", {
  enumerable: true,
  get: function () {
    return _null.isNull;
  }
});
Object.defineProperty(exports, "isNumber", {
  enumerable: true,
  get: function () {
    return _number.isNumber;
  }
});
Object.defineProperty(exports, "isObject", {
  enumerable: true,
  get: function () {
    return _object.isObject;
  }
});
Object.defineProperty(exports, "isObservable", {
  enumerable: true,
  get: function () {
    return _observable.isObservable;
  }
});
Object.defineProperty(exports, "isPromise", {
  enumerable: true,
  get: function () {
    return _promise.isPromise;
  }
});
Object.defineProperty(exports, "isString", {
  enumerable: true,
  get: function () {
    return _string.isString;
  }
});
Object.defineProperty(exports, "isTestChain", {
  enumerable: true,
  get: function () {
    return _testChain.isTestChain;
  }
});
Object.defineProperty(exports, "isToBigInt", {
  enumerable: true,
  get: function () {
    return _toBigInt.isToBigInt;
  }
});
Object.defineProperty(exports, "isToBn", {
  enumerable: true,
  get: function () {
    return _toBn.isToBn;
  }
});
Object.defineProperty(exports, "isU8a", {
  enumerable: true,
  get: function () {
    return _u8a.isU8a;
  }
});
Object.defineProperty(exports, "isUndefined", {
  enumerable: true,
  get: function () {
    return _undefined.isUndefined;
  }
});
Object.defineProperty(exports, "isUtf8", {
  enumerable: true,
  get: function () {
    return _utf.isUtf8;
  }
});
Object.defineProperty(exports, "isWasm", {
  enumerable: true,
  get: function () {
    return _wasm.isWasm;
  }
});

var _array = require("./array.js");

var _ascii = require("./ascii.js");

var _bigInt = require("./bigInt.js");

var _bn = require("./bn.js");

var _buffer = require("./buffer.js");

var _boolean = require("./boolean.js");

var _childClass = require("./childClass.js");

var _codec = require("./codec.js");

var _compact = require("./compact.js");

var _error = require("./error.js");

var _function = require("./function.js");

var _hex = require("./hex.js");

var _instanceOf = require("./instanceOf.js");

var _ip = require("./ip.js");

var _jsonObject = require("./jsonObject.js");

var _null = require("./null.js");

var _number = require("./number.js");

var _object = require("./object.js");

var _observable = require("./observable.js");

var _promise = require("./promise.js");

var _string = require("./string.js");

var _testChain = require("./testChain.js");

var _toBigInt = require("./toBigInt.js");

var _toBn = require("./toBn.js");

var _u8a = require("./u8a.js");

var _undefined = require("./undefined.js");

var _utf = require("./utf8.js");

var _wasm = require("./wasm.js");
},{"./array.js":"node_modules/@polkadot/util/is/array.js","./ascii.js":"node_modules/@polkadot/util/is/ascii.js","./bigInt.js":"node_modules/@polkadot/util/is/bigInt.js","./bn.js":"node_modules/@polkadot/util/is/bn.js","./buffer.js":"node_modules/@polkadot/util/is/buffer.js","./boolean.js":"node_modules/@polkadot/util/is/boolean.js","./childClass.js":"node_modules/@polkadot/util/is/childClass.js","./codec.js":"node_modules/@polkadot/util/is/codec.js","./compact.js":"node_modules/@polkadot/util/is/compact.js","./error.js":"node_modules/@polkadot/util/is/error.js","./function.js":"node_modules/@polkadot/util/is/function.js","./hex.js":"node_modules/@polkadot/util/is/hex.js","./instanceOf.js":"node_modules/@polkadot/util/is/instanceOf.js","./ip.js":"node_modules/@polkadot/util/is/ip.js","./jsonObject.js":"node_modules/@polkadot/util/is/jsonObject.js","./null.js":"node_modules/@polkadot/util/is/null.js","./number.js":"node_modules/@polkadot/util/is/number.js","./object.js":"node_modules/@polkadot/util/is/object.js","./observable.js":"node_modules/@polkadot/util/is/observable.js","./promise.js":"node_modules/@polkadot/util/is/promise.js","./string.js":"node_modules/@polkadot/util/is/string.js","./testChain.js":"node_modules/@polkadot/util/is/testChain.js","./toBigInt.js":"node_modules/@polkadot/util/is/toBigInt.js","./toBn.js":"node_modules/@polkadot/util/is/toBn.js","./u8a.js":"node_modules/@polkadot/util/is/u8a.js","./undefined.js":"node_modules/@polkadot/util/is/undefined.js","./utf8.js":"node_modules/@polkadot/util/is/utf8.js","./wasm.js":"node_modules/@polkadot/util/is/wasm.js"}],"node_modules/@polkadot/util/lazy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.lazyMethod = lazyMethod;
exports.lazyMethods = lazyMethods;

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name lazyMethod
 * @description
 * Creates a lazy, on-demand getter for the specific value. Upon get the value will be evaluated.
 */
function lazyMethod(result, item, creator, getName) {
  var name = getName ? getName(item) : item.toString();
  var value;
  Object.defineProperty(result, name, {
    // This allows for re-configuration with the embedded defineProperty below
    // and ensures that on tested browsers and Node, it _will_ be redefined
    // and thus short-circuited for future access
    configurable: true,
    enumerable: true,
    // Use a function here, we don't want to capture the outer this, i.e.
    // don't use arrow functions in this context since we have a this inside
    get: function get() {
      // This check should _always_ be false and unneeded, since we override
      // with a value below ... however we ensure we are quire vigilant against
      // all environment failures, so we are rather be safe than sorry
      if (value === undefined) {
        value = creator(item);

        try {
          // re-define the property as a value, next time around this
          // getter will only return the computed value
          Object.defineProperty(this, name, {
            value: value
          });
        } catch (_unused) {// ignore any errors, since this _should_ not happen due to
          // the "configurable" property above. But if it ever does
          // from here-on we will be the cached value the next time
          // around (with a very slight dip in performance)
        }
      }

      return value;
    }
  });
}
/**
 * @name lazyMethods
 * @description
 * Creates lazy, on-demand getters for the specific values.
 */


function lazyMethods(result, items, creator, getName) {
  for (var i = 0; i < items.length; i++) {
    lazyMethod(result, items[i], creator, getName);
  }

  return result;
}
},{}],"node_modules/@polkadot/util/logger.js":[function(require,module,exports) {
var process = require("process");
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.logger = logger;
exports.loggerFormat = loggerFormat;

var _formatDate = require("./format/formatDate.js");

var _bn = require("./is/bn.js");

var _buffer = require("./is/buffer.js");

var _function = require("./is/function.js");

var _object = require("./is/object.js");

var _u8a = require("./is/u8a.js");

var _toHex = require("./u8a/toHex.js");

var _toU8a = require("./u8a/toU8a.js");

var _has = require("./has.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var logTo = {
  debug: 'log',
  error: 'error',
  log: 'log',
  warn: 'warn'
};

function formatOther(value) {
  if (value && (0, _object.isObject)(value) && value.constructor === Object) {
    var result = {};

    for (var _i = 0, _Object$keys = Object.keys(value); _i < _Object$keys.length; _i++) {
      var k = _Object$keys[_i];
      result[k] = loggerFormat(value[k]);
    }

    return result;
  }

  return value;
}

function loggerFormat(value) {
  if (Array.isArray(value)) {
    return value.map(loggerFormat);
  } else if ((0, _bn.isBn)(value)) {
    return value.toString();
  } else if ((0, _u8a.isU8a)(value) || (0, _buffer.isBuffer)(value)) {
    return (0, _toHex.u8aToHex)((0, _toU8a.u8aToU8a)(value));
  }

  return formatOther(value);
}

function formatWithLength(maxLength) {
  return function (v) {
    if (maxLength <= 0) {
      return v;
    }

    var r = "".concat(v);
    return r.length < maxLength ? v : "".concat(r.substring(0, maxLength), " ...");
  };
}

function apply(log, type, values) {
  var _console;

  var maxSize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -1;

  if (values.length === 1 && (0, _function.isFunction)(values[0])) {
    var fnResult = values[0]();
    return apply(log, type, Array.isArray(fnResult) ? fnResult : [fnResult], maxSize);
  }

  (_console = console)[logTo[log]].apply(_console, [(0, _formatDate.formatDate)(new Date()), type].concat(_toConsumableArray(values.map(loggerFormat).map(formatWithLength(maxSize)))));
}

function noop() {// noop
}

function isDebugOn(e, type) {
  return !!e && (e === '*' || type === e || e.endsWith('*') && type.startsWith(e.slice(0, -1)));
}

function isDebugOff(e, type) {
  return !!e && e.startsWith('-') && (type === e.slice(1) || e.endsWith('*') && type.startsWith(e.slice(1, -1)));
}

function getDebugFlag(env, type) {
  var flag = false;

  var _iterator = _createForOfIteratorHelper(env),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var e = _step.value;

      if (isDebugOn(e, type)) {
        flag = true;
      } else if (isDebugOff(e, type)) {
        flag = false;
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  return flag;
}

function parseEnv(type) {
  var env = (_has.hasProcess ? process : {}).env || {};
  var maxSize = parseInt(env.DEBUG_MAX || '-1', 10);
  return [getDebugFlag((env.DEBUG || '').toLowerCase().split(','), type), isNaN(maxSize) ? -1 : maxSize];
}
/**
 * @name Logger
 * @summary Creates a consistent log interface for messages
 * @description
 * Returns a `Logger` that has `.log`, `.error`, `.warn` and `.debug` (controlled with environment `DEBUG=typeA,typeB`) methods. Logging is done with a consistent prefix (type of logger, date) followed by the actual message using the underlying console.
 * @example
 * <BR>
 *
 * ```javascript
 * import { logger } from '@polkadot/util';
 *
 * const l = logger('test');
 * ```
 */


function logger(_type) {
  var type = "".concat(_type.toUpperCase(), ":").padStart(16);

  var _parseEnv = parseEnv(_type.toLowerCase()),
      _parseEnv2 = _slicedToArray(_parseEnv, 2),
      isDebug = _parseEnv2[0],
      maxSize = _parseEnv2[1];

  return {
    debug: isDebug ? function () {
      for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {
        values[_key] = arguments[_key];
      }

      return apply('debug', type, values, maxSize);
    } : noop,
    error: function error() {
      for (var _len2 = arguments.length, values = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        values[_key2] = arguments[_key2];
      }

      return apply('error', type, values);
    },
    log: function log() {
      for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        values[_key3] = arguments[_key3];
      }

      return apply('log', type, values);
    },
    noop: noop,
    warn: function warn() {
      for (var _len4 = arguments.length, values = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        values[_key4] = arguments[_key4];
      }

      return apply('warn', type, values);
    }
  };
}
},{"./format/formatDate.js":"node_modules/@polkadot/util/format/formatDate.js","./is/bn.js":"node_modules/@polkadot/util/is/bn.js","./is/buffer.js":"node_modules/@polkadot/util/is/buffer.js","./is/function.js":"node_modules/@polkadot/util/is/function.js","./is/object.js":"node_modules/@polkadot/util/is/object.js","./is/u8a.js":"node_modules/@polkadot/util/is/u8a.js","./u8a/toHex.js":"node_modules/@polkadot/util/u8a/toHex.js","./u8a/toU8a.js":"node_modules/@polkadot/util/u8a/toU8a.js","./has.js":"node_modules/@polkadot/util/has.js","process":"node_modules/process/browser.js"}],"node_modules/@polkadot/util/memoize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.memoize = memoize;

var _stringify = require("./stringify.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
function defaultGetId() {
  return 'none';
}
/**
 * @name memoize
 * @description Memomize the function with a specific instanceId
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any


function memoize(fn) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref$getInstanceId = _ref.getInstanceId,
      getInstanceId = _ref$getInstanceId === void 0 ? defaultGetId : _ref$getInstanceId;

  var cache = {};

  var memoized = function memoized() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var stringParams = (0, _stringify.stringify)(args);
    var instanceId = getInstanceId();

    if (!cache[instanceId]) {
      cache[instanceId] = {};
    }

    if (cache[instanceId][stringParams] === undefined) {
      cache[instanceId][stringParams] = fn.apply(void 0, args);
    }

    return cache[instanceId][stringParams];
  };

  memoized.unmemoize = function () {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    var stringParams = (0, _stringify.stringify)(args);
    var instanceId = getInstanceId();

    if (cache[instanceId] && cache[instanceId][stringParams] !== undefined) {
      delete cache[instanceId][stringParams];
    }
  };

  return memoized;
}
},{"./stringify.js":"node_modules/@polkadot/util/stringify.js"}],"node_modules/@polkadot/util/nextTick.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.nextTick = nextTick;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name nextTick
 * @description Defer the operation to the queue for evaluation on the next tick
 */
function nextTick(onExec, onError) {
  Promise.resolve().then(function () {
    onExec();
  }).catch(function (error) {
    if (onError) {
      onError(error);
    } else {
      console.error(error);
    }
  });
}
},{}],"node_modules/@polkadot/util/number/toHex.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.numberToHex = numberToHex;

var _fixLength = require("../hex/fixLength.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name numberToHex
 * @summary Creates a hex value from a number.
 * @description
 * `null`/`undefined`/`NaN` inputs returns an empty `0x` result. `number` input values return the actual bytes value converted to a `hex`. With `bitLength` set, it converts the number to the equivalent size.
 * @example
 * <BR>
 *
 * ```javascript
 * import { numberToHex } from '@polkadot/util';
 *
 * numberToHex(0x1234); // => '0x1234'
 * numberToHex(0x1234, 32); // => 0x00001234
 * ```
 */
function numberToHex(value) {
  var bitLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;

  if (value === undefined || value === null || isNaN(value)) {
    return '0x';
  }

  var hex = value.toString(16);
  return (0, _fixLength.hexFixLength)(hex.length % 2 ? "0".concat(hex) : hex, bitLength, true);
}
},{"../hex/fixLength.js":"node_modules/@polkadot/util/hex/fixLength.js"}],"node_modules/@polkadot/util/number/toU8a.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.numberToU8a = numberToU8a;

var _toU8a = require("../hex/toU8a.js");

var _toHex = require("./toHex.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name numberToU8a
 * @summary Creates a Uint8Array object from a number.
 * @description
 * `null`/`undefined`/`NaN` inputs returns an empty `Uint8Array` result. `number` input values return the actual bytes value converted to a `Uint8Array`. With `bitLength`, it converts the value to the equivalent size.
 * @example
 * <BR>
 *
 * ```javascript
 * import { numberToU8a } from '@polkadot/util';
 *
 * numberToU8a(0x1234); // => [0x12, 0x34]
 * ```
 */
function numberToU8a(value) {
  var bitLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;
  return value === undefined || value === null || isNaN(value) ? new Uint8Array() : (0, _toU8a.hexToU8a)((0, _toHex.numberToHex)(value, bitLength));
}
},{"../hex/toU8a.js":"node_modules/@polkadot/util/hex/toU8a.js","./toHex.js":"node_modules/@polkadot/util/number/toHex.js"}],"node_modules/@polkadot/util/number/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "numberToHex", {
  enumerable: true,
  get: function () {
    return _toHex.numberToHex;
  }
});
Object.defineProperty(exports, "numberToU8a", {
  enumerable: true,
  get: function () {
    return _toU8a.numberToU8a;
  }
});

var _toHex = require("./toHex.js");

var _toU8a = require("./toU8a.js");
},{"./toHex.js":"node_modules/@polkadot/util/number/toHex.js","./toU8a.js":"node_modules/@polkadot/util/number/toU8a.js"}],"node_modules/@polkadot/util/object/clear.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.objectClear = objectClear;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name objectClear
 * @summary Removes all the keys from the input object
 */
function objectClear(value) {
  var keys = Object.keys(value);

  for (var i = 0; i < keys.length; i++) {
    delete value[keys[i]];
  }

  return value;
}
},{}],"node_modules/@polkadot/util/object/copy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.objectCopy = objectCopy;

var _spread = require("./spread.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name objectCopy
 * @summary Creates a shallow clone of the input object
 */
function objectCopy(source) {
  return (0, _spread.objectSpread)({}, source);
}
},{"./spread.js":"node_modules/@polkadot/util/object/spread.js"}],"node_modules/@polkadot/util/object/entries.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.objectEntries = objectEntries;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name objectEntries
 * @summary A version of Object.entries that is typed for TS
 */
function objectEntries(obj) {
  return Object.entries(obj);
}
},{}],"node_modules/@polkadot/util/object/keys.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.objectKeys = objectKeys;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name objectKeys
 * @summary A version of Object.keys that is typed for TS
 */
function objectKeys(value) {
  return Object.keys(value);
}
},{}],"node_modules/@polkadot/util/object/property.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.objectProperties = objectProperties;
exports.objectProperty = objectProperty;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name objectProperty
 * @summary Assign a get property on the input object
 */
function objectProperty(that, key, getter) {
  // There are 3 approaches here -
  //  - Object.prototype.hasOwnProperty.call(that, key) - this only checks the current class, i.e
  //    will retuirn false if the property is set in the parent class
  //  - isUndefined(...) - this may yield a false positive when the property is there, but not set.
  //    Additionally, on pre-defined getters it may make a call
  //  - key in that - Does not need to be combined with either of the above and checks the full chain
  if (!(key in that)) {
    Object.defineProperty(that, key, {
      enumerable: true,
      // Unlike in lazy, we always call into the upper function, i.e. this method
      // does not cache old values (it is expected to be used for dynamic values)
      get: function get() {
        return getter(key);
      }
    });
  }
}
/**
 * @name objectProperties
 * @summary Assign get properties on the input object
 */


function objectProperties(that, keys, getter) {
  var _loop = function _loop(i) {
    objectProperty(that, keys[i], function (k) {
      return getter(k, i);
    });
  };

  for (var i = 0; i < keys.length; i++) {
    _loop(i);
  }
}
},{}],"node_modules/@polkadot/util/object/values.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.objectValues = objectValues;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name objectValues
 * @summary A version of Object.values that is typed for TS
 */
function objectValues(obj) {
  return Object.values(obj);
}
},{}],"node_modules/@polkadot/util/object/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "objectClear", {
  enumerable: true,
  get: function () {
    return _clear.objectClear;
  }
});
Object.defineProperty(exports, "objectCopy", {
  enumerable: true,
  get: function () {
    return _copy.objectCopy;
  }
});
Object.defineProperty(exports, "objectEntries", {
  enumerable: true,
  get: function () {
    return _entries.objectEntries;
  }
});
Object.defineProperty(exports, "objectKeys", {
  enumerable: true,
  get: function () {
    return _keys.objectKeys;
  }
});
Object.defineProperty(exports, "objectProperties", {
  enumerable: true,
  get: function () {
    return _property.objectProperties;
  }
});
Object.defineProperty(exports, "objectProperty", {
  enumerable: true,
  get: function () {
    return _property.objectProperty;
  }
});
Object.defineProperty(exports, "objectSpread", {
  enumerable: true,
  get: function () {
    return _spread.objectSpread;
  }
});
Object.defineProperty(exports, "objectValues", {
  enumerable: true,
  get: function () {
    return _values.objectValues;
  }
});

var _clear = require("./clear.js");

var _copy = require("./copy.js");

var _entries = require("./entries.js");

var _keys = require("./keys.js");

var _property = require("./property.js");

var _spread = require("./spread.js");

var _values = require("./values.js");
},{"./clear.js":"node_modules/@polkadot/util/object/clear.js","./copy.js":"node_modules/@polkadot/util/object/copy.js","./entries.js":"node_modules/@polkadot/util/object/entries.js","./keys.js":"node_modules/@polkadot/util/object/keys.js","./property.js":"node_modules/@polkadot/util/object/property.js","./spread.js":"node_modules/@polkadot/util/object/spread.js","./values.js":"node_modules/@polkadot/util/object/values.js"}],"node_modules/@polkadot/util/promisify.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.promisify = promisify;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name promisify
 * @summary Wraps an async callback into a `Promise`
 * @description
 * Wraps the supplied async function `fn` that has a standard JS callback `(error: Error, result: any)` into a `Promise`, passing the supplied parameters. When `error` is set, the Promise is rejected, else the Promise resolves with the `result` value.
 * @example
 * <BR>
 *
 * ```javascript
 * const { promisify } from '@polkadot/util';
 *
 * await promisify(null, ((a, cb) => cb(null, a), true); // resolves with `true`
 * await promisify(null, (cb) => cb(new Error('error!'))); // rejects with `error!`
 * ```
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function promisify(self, fn) {
  for (var _len = arguments.length, params = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    params[_key - 2] = arguments[_key];
  }

  return new Promise(function (resolve, reject) {
    fn.apply(self, params.concat(function (error, result) {
      if (error) {
        reject(error);
      } else {
        resolve(result);
      }
    }));
  });
}
},{}],"node_modules/@polkadot/util/string/camelCase.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.stringPascalCase = exports.stringCamelCase = exports.CC_TO_UP = exports.CC_TO_LO = void 0;
// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
var CC_TO_UP = new Array(256);
exports.CC_TO_UP = CC_TO_UP;
var CC_TO_LO = new Array(256);
exports.CC_TO_LO = CC_TO_LO;

for (var i = 0; i < CC_TO_UP.length; i++) {
  CC_TO_LO[i] = String.fromCharCode(i).toLowerCase();
  CC_TO_UP[i] = String.fromCharCode(i).toUpperCase();
}
/** @internal */


function formatAllCaps(w) {
  return w.slice(0, w.length - 1).toLowerCase() + CC_TO_UP[w.charCodeAt(w.length - 1)];
}
/**
 * @internal
 *
 * Inspired by https://stackoverflow.com/a/2970667
 *
 * This is not as optimal as the original SO answer (we split into per-word),
 * however it does pass the tests (which the SO version doesn't) and is still
 * a major improvement over the original camelcase npm package -
 *
 *   camelcase: 20.88 Î¼s/op
 *        this:  1.00 Î¼s/op
 *
 * Caveat of this: only Ascii, but acceptable for the intended usecase
 */


function converter(format) {
  return function (value) {
    var parts = value // replace all seperators (including consequtive) with spaces
    .replace(/[-_., ]+/g, ' ') // we don't want leading or trailing spaces
    .trim() // split into words
    .split(' ');
    var count = parts.length;
    var result = '';

    for (var _i = 0; _i < count; _i++) {
      var w = parts[_i]; // apply the formatting

      result += format(/^[\dA-Z]+$/.test(w) // all full uppercase + letters are changed to lowercase
      ? w.toLowerCase() // all consecutive capitals + letters are changed to lowercase
      // e.g. UUID64 -> uuid64, while preserving splits, eg. NFTOrder -> nftOrder
      : w.replace(/^[\dA-Z]{2,}[^a-z]/, formatAllCaps), _i);
    }

    return result;
  };
}
/**
 * @name stringCamelCase
 * @summary Convert a dash/dot/underscore/space separated Ascii string/String to camelCase
 */


var stringCamelCase = converter(function (w, i) {
  return (// lowercase for first letter/first word, else uppercase first, rest unchanged
    (i ? CC_TO_UP[w.charCodeAt(0)] : CC_TO_LO[w.charCodeAt(0)]) + w.slice(1)
  );
});
/**
 * @name stringPascalCase
 * @summary Convert a dash/dot/underscore/space separated Ascii string/String to PascalCase
 */

exports.stringCamelCase = stringCamelCase;
var stringPascalCase = converter(function (w) {
  return (// uppercase the first character, leave the rest unchanged
    CC_TO_UP[w.charCodeAt(0)] + w.slice(1)
  );
});
exports.stringPascalCase = stringPascalCase;
},{}],"node_modules/@polkadot/util/string/lowerFirst.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.stringUpperFirst = exports.stringLowerFirst = void 0;

var _camelCase = require("./camelCase.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/** @internal */
function converter(map) {
  return function (value) {
    return value ? map[value.charCodeAt(0)] + value.slice(1) : '';
  };
}
/**
 * @name stringLowerFirst
 * @summary Lowercase the first letter of a string
 * @description
 * Lowercase the first letter of a string
 * @example
 * <BR>
 *
 * ```javascript
 * import { stringLowerFirst } from '@polkadot/util';
 *
 * stringLowerFirst('ABC'); // => 'aBC'
 * ```
 */


var stringLowerFirst = converter(_camelCase.CC_TO_LO);
/**
 * @name stringUpperFirst
 * @summary Uppercase the first letter of a string
 * @description
 * Lowercase the first letter of a string
 * @example
 * <BR>
 *
 * ```javascript
 * import { stringUpperFirst } from '@polkadot/util';
 *
 * stringUpperFirst('abc'); // => 'Abc'
 * ```
 */

exports.stringLowerFirst = stringLowerFirst;
var stringUpperFirst = converter(_camelCase.CC_TO_UP);
exports.stringUpperFirst = stringUpperFirst;
},{"./camelCase.js":"node_modules/@polkadot/util/string/camelCase.js"}],"node_modules/@polkadot/util/string/shorten.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.stringShorten = stringShorten;

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name stringShorten
 * @summary Returns a string with maximum length
 * @description
 * Checks the string against the `prefixLength`, if longer than double this, shortens it by placing `..` in the middle of it
 * @example
 * <BR>
 *
 * ```javascript
 * import { stringShorten } from '@polkadot/util';
 *
 * stringShorten('1234567890', 2); // => 12..90
 * ```
 */
function stringShorten(value) {
  var prefixLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;
  return value.length <= 2 + 2 * prefixLength ? value.toString() : "".concat(value.substring(0, prefixLength), "\u2026").concat(value.slice(-prefixLength));
}
},{}],"node_modules/@polkadot/util/string/toHex.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.stringToHex = stringToHex;

var _toHex = require("../u8a/toHex.js");

var _toU8a = require("./toU8a.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name stringToHex
 * @summary Creates a hex string from a utf-8 string
 * @description
 * String input values return the actual encoded hex value.
 * @example
 * <BR>
 *
 * ```javascript
 * import { stringToHex } from '@polkadot/util';
 *
 * stringToU8a('hello'); // 0x68656c6c6f
 * ```
 */
function stringToHex(value) {
  return (0, _toHex.u8aToHex)((0, _toU8a.stringToU8a)(value));
}
},{"../u8a/toHex.js":"node_modules/@polkadot/util/u8a/toHex.js","./toU8a.js":"node_modules/@polkadot/util/string/toU8a.js"}],"node_modules/@polkadot/util/string/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "stringCamelCase", {
  enumerable: true,
  get: function () {
    return _camelCase.stringCamelCase;
  }
});
Object.defineProperty(exports, "stringLowerFirst", {
  enumerable: true,
  get: function () {
    return _lowerFirst.stringLowerFirst;
  }
});
Object.defineProperty(exports, "stringPascalCase", {
  enumerable: true,
  get: function () {
    return _camelCase.stringPascalCase;
  }
});
Object.defineProperty(exports, "stringShorten", {
  enumerable: true,
  get: function () {
    return _shorten.stringShorten;
  }
});
Object.defineProperty(exports, "stringToHex", {
  enumerable: true,
  get: function () {
    return _toHex.stringToHex;
  }
});
Object.defineProperty(exports, "stringToU8a", {
  enumerable: true,
  get: function () {
    return _toU8a.stringToU8a;
  }
});
Object.defineProperty(exports, "stringUpperFirst", {
  enumerable: true,
  get: function () {
    return _lowerFirst.stringUpperFirst;
  }
});

var _camelCase = require("./camelCase.js");

var _lowerFirst = require("./lowerFirst.js");

var _shorten = require("./shorten.js");

var _toHex = require("./toHex.js");

var _toU8a = require("./toU8a.js");
},{"./camelCase.js":"node_modules/@polkadot/util/string/camelCase.js","./lowerFirst.js":"node_modules/@polkadot/util/string/lowerFirst.js","./shorten.js":"node_modules/@polkadot/util/string/shorten.js","./toHex.js":"node_modules/@polkadot/util/string/toHex.js","./toU8a.js":"node_modules/@polkadot/util/string/toU8a.js"}],"node_modules/@polkadot/util/bundle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  packageInfo: true
};
Object.defineProperty(exports, "packageInfo", {
  enumerable: true,
  get: function () {
    return _packageInfo.packageInfo;
  }
});

var _packageInfo = require("./packageInfo.js");

var _index = require("./array/index.js");

Object.keys(_index).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index[key];
    }
  });
});

var _assert = require("./assert.js");

Object.keys(_assert).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _assert[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _assert[key];
    }
  });
});

var _index2 = require("./bi/index.js");

Object.keys(_index2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index2[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index2[key];
    }
  });
});

var _index3 = require("./bn/index.js");

Object.keys(_index3).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index3[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index3[key];
    }
  });
});

var _index4 = require("./buffer/index.js");

Object.keys(_index4).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index4[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index4[key];
    }
  });
});

var _index5 = require("./compact/index.js");

Object.keys(_index5).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index5[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index5[key];
    }
  });
});

var _extractTime = require("./extractTime.js");

Object.keys(_extractTime).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _extractTime[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _extractTime[key];
    }
  });
});

var _index6 = require("./float/index.js");

Object.keys(_index6).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index6[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index6[key];
    }
  });
});

var _index7 = require("./format/index.js");

Object.keys(_index7).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index7[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index7[key];
    }
  });
});

var _has = require("./has.js");

Object.keys(_has).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _has[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _has[key];
    }
  });
});

var _index8 = require("./hex/index.js");

Object.keys(_index8).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index8[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index8[key];
    }
  });
});

var _index9 = require("./is/index.js");

Object.keys(_index9).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index9[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index9[key];
    }
  });
});

var _lazy = require("./lazy.js");

Object.keys(_lazy).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _lazy[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _lazy[key];
    }
  });
});

var _logger = require("./logger.js");

Object.keys(_logger).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _logger[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _logger[key];
    }
  });
});

var _memoize = require("./memoize.js");

Object.keys(_memoize).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _memoize[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _memoize[key];
    }
  });
});

var _nextTick = require("./nextTick.js");

Object.keys(_nextTick).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _nextTick[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _nextTick[key];
    }
  });
});

var _index10 = require("./number/index.js");

Object.keys(_index10).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index10[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index10[key];
    }
  });
});

var _index11 = require("./object/index.js");

Object.keys(_index11).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index11[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index11[key];
    }
  });
});

var _promisify = require("./promisify.js");

Object.keys(_promisify).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _promisify[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _promisify[key];
    }
  });
});

var _index12 = require("./string/index.js");

Object.keys(_index12).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index12[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index12[key];
    }
  });
});

var _stringify = require("./stringify.js");

Object.keys(_stringify).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _stringify[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _stringify[key];
    }
  });
});

var _index13 = require("./u8a/index.js");

Object.keys(_index13).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index13[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index13[key];
    }
  });
});

var _versionDetect = require("./versionDetect.js");

Object.keys(_versionDetect).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _versionDetect[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _versionDetect[key];
    }
  });
});
},{"./packageInfo.js":"node_modules/@polkadot/util/packageInfo.js","./array/index.js":"node_modules/@polkadot/util/array/index.js","./assert.js":"node_modules/@polkadot/util/assert.js","./bi/index.js":"node_modules/@polkadot/util/bi/index.js","./bn/index.js":"node_modules/@polkadot/util/bn/index.js","./buffer/index.js":"node_modules/@polkadot/util/buffer/index.js","./compact/index.js":"node_modules/@polkadot/util/compact/index.js","./extractTime.js":"node_modules/@polkadot/util/extractTime.js","./float/index.js":"node_modules/@polkadot/util/float/index.js","./format/index.js":"node_modules/@polkadot/util/format/index.js","./has.js":"node_modules/@polkadot/util/has.js","./hex/index.js":"node_modules/@polkadot/util/hex/index.js","./is/index.js":"node_modules/@polkadot/util/is/index.js","./lazy.js":"node_modules/@polkadot/util/lazy.js","./logger.js":"node_modules/@polkadot/util/logger.js","./memoize.js":"node_modules/@polkadot/util/memoize.js","./nextTick.js":"node_modules/@polkadot/util/nextTick.js","./number/index.js":"node_modules/@polkadot/util/number/index.js","./object/index.js":"node_modules/@polkadot/util/object/index.js","./promisify.js":"node_modules/@polkadot/util/promisify.js","./string/index.js":"node_modules/@polkadot/util/string/index.js","./stringify.js":"node_modules/@polkadot/util/stringify.js","./u8a/index.js":"node_modules/@polkadot/util/u8a/index.js","./versionDetect.js":"node_modules/@polkadot/util/versionDetect.js"}],"node_modules/@polkadot/util/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

require("./detectPackage.js");

var _bundle = require("./bundle.js");

Object.keys(_bundle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _bundle[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bundle[key];
    }
  });
});
},{"./detectPackage.js":"node_modules/@polkadot/util/detectPackage.js","./bundle.js":"node_modules/@polkadot/util/bundle.js"}],"node_modules/@polkadot/api-derive/packageInfo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packageInfo = void 0;
// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
var packageInfo = {
  name: '@polkadot/api-derive',
  path: import.meta && import.meta.url ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto',
  type: 'esm',
  version: '8.11.2'
};
exports.packageInfo = packageInfo;
},{}],"node_modules/@polkadot/rpc-core/packageInfo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packageInfo = void 0;
// Copyright 2017-2022 @polkadot/rpc-core authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
var packageInfo = {
  name: '@polkadot/rpc-core',
  path: import.meta && import.meta.url ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto',
  type: 'esm',
  version: '8.11.2'
};
exports.packageInfo = packageInfo;
},{}],"node_modules/@polkadot/rpc-provider/packageInfo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packageInfo = void 0;
// Copyright 2017-2022 @polkadot/rpc-provider authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
var packageInfo = {
  name: '@polkadot/rpc-provider',
  path: import.meta && import.meta.url ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto',
  type: 'esm',
  version: '8.11.2'
};
exports.packageInfo = packageInfo;
},{}],"node_modules/@polkadot/types/packageInfo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packageInfo = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
var packageInfo = {
  name: '@polkadot/types',
  path: import.meta && import.meta.url ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto',
  type: 'esm',
  version: '8.11.2'
};
exports.packageInfo = packageInfo;
},{}],"node_modules/@polkadot/types-known/packageInfo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packageInfo = void 0;
// Copyright 2017-2022 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
var packageInfo = {
  name: '@polkadot/types-known',
  path: import.meta && import.meta.url ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto',
  type: 'esm',
  version: '8.11.2'
};
exports.packageInfo = packageInfo;
},{}],"node_modules/@polkadot/api/detectOther.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _packageInfo = require("@polkadot/api-derive/packageInfo");

var _packageInfo2 = require("@polkadot/rpc-core/packageInfo");

var _packageInfo3 = require("@polkadot/rpc-provider/packageInfo");

var _packageInfo4 = require("@polkadot/types/packageInfo");

var _packageInfo5 = require("@polkadot/types-known/packageInfo");

// Copyright 2017-2022 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0
var _default = [_packageInfo.packageInfo, _packageInfo2.packageInfo, _packageInfo3.packageInfo, _packageInfo4.packageInfo, _packageInfo5.packageInfo];
exports.default = _default;
},{"@polkadot/api-derive/packageInfo":"node_modules/@polkadot/api-derive/packageInfo.js","@polkadot/rpc-core/packageInfo":"node_modules/@polkadot/rpc-core/packageInfo.js","@polkadot/rpc-provider/packageInfo":"node_modules/@polkadot/rpc-provider/packageInfo.js","@polkadot/types/packageInfo":"node_modules/@polkadot/types/packageInfo.js","@polkadot/types-known/packageInfo":"node_modules/@polkadot/types-known/packageInfo.js"}],"node_modules/@polkadot/api/packageInfo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packageInfo = void 0;
// Copyright 2017-2022 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
var packageInfo = {
  name: '@polkadot/api',
  path: import.meta && import.meta.url ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto',
  type: 'esm',
  version: '8.11.2'
};
exports.packageInfo = packageInfo;
},{}],"node_modules/@polkadot/api/detectPackage.js":[function(require,module,exports) {
"use strict";

var _util = require("@polkadot/util");

var _detectOther = _interopRequireDefault(require("./detectOther.js"));

var _packageInfo = require("./packageInfo.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
(0, _util.detectPackage)(_packageInfo.packageInfo, null, _detectOther.default);
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./detectOther.js":"node_modules/@polkadot/api/detectOther.js","./packageInfo.js":"node_modules/@polkadot/api/packageInfo.js"}],"node_modules/@polkadot/rpc-augment/detectOther.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _packageInfo = require("@polkadot/rpc-core/packageInfo");

var _packageInfo2 = require("@polkadot/types/packageInfo");

// Copyright 2017-2022 @polkadot/rpc-augment authors & contributors
// SPDX-License-Identifier: Apache-2.0
var _default = [_packageInfo.packageInfo, _packageInfo2.packageInfo];
exports.default = _default;
},{"@polkadot/rpc-core/packageInfo":"node_modules/@polkadot/rpc-core/packageInfo.js","@polkadot/types/packageInfo":"node_modules/@polkadot/types/packageInfo.js"}],"node_modules/@polkadot/rpc-augment/packageInfo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packageInfo = void 0;
// Copyright 2017-2022 @polkadot/rpc-augment authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
var packageInfo = {
  name: '@polkadot/rpc-augment',
  path: import.meta && import.meta.url ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto',
  type: 'esm',
  version: '8.11.2'
};
exports.packageInfo = packageInfo;
},{}],"node_modules/@polkadot/rpc-augment/detectPackage.js":[function(require,module,exports) {
"use strict";

var _util = require("@polkadot/util");

var _detectOther = _interopRequireDefault(require("./detectOther.js"));

var _packageInfo = require("./packageInfo.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/rpc-augment authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
(0, _util.detectPackage)(_packageInfo.packageInfo, null, _detectOther.default);
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./detectOther.js":"node_modules/@polkadot/rpc-augment/detectOther.js","./packageInfo.js":"node_modules/@polkadot/rpc-augment/packageInfo.js"}],"node_modules/@polkadot/rpc-augment/augment/jsonrpc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"node_modules/@polkadot/rpc-augment/augment/index.js":[function(require,module,exports) {
"use strict";

require("./jsonrpc.js");
},{"./jsonrpc.js":"node_modules/@polkadot/rpc-augment/augment/jsonrpc.js"}],"node_modules/@polkadot/rpc-augment/bundle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "packageInfo", {
  enumerable: true,
  get: function () {
    return _packageInfo.packageInfo;
  }
});

require("./augment/index.js");

var _packageInfo = require("./packageInfo.js");
},{"./augment/index.js":"node_modules/@polkadot/rpc-augment/augment/index.js","./packageInfo.js":"node_modules/@polkadot/rpc-augment/packageInfo.js"}],"node_modules/@polkadot/rpc-augment/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

require("./detectPackage.js");

var _bundle = require("./bundle.js");

Object.keys(_bundle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _bundle[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bundle[key];
    }
  });
});
},{"./detectPackage.js":"node_modules/@polkadot/rpc-augment/detectPackage.js","./bundle.js":"node_modules/@polkadot/rpc-augment/bundle.js"}],"node_modules/@polkadot/util-crypto/packageInfo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packageInfo = void 0;
// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
var packageInfo = {
  name: '@polkadot/util-crypto',
  path: import.meta && import.meta.url ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto',
  type: 'esm',
  version: '9.7.2'
};
exports.packageInfo = packageInfo;
},{}],"node_modules/@polkadot/keyring/detectOther.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _packageInfo = require("@polkadot/util/packageInfo");

var _packageInfo2 = require("@polkadot/util-crypto/packageInfo");

// Copyright 2017-2022 @polkadot/keyring authors & contributors
// SPDX-License-Identifier: Apache-2.0
var _default = [_packageInfo.packageInfo, _packageInfo2.packageInfo];
exports.default = _default;
},{"@polkadot/util/packageInfo":"node_modules/@polkadot/util/packageInfo.js","@polkadot/util-crypto/packageInfo":"node_modules/@polkadot/util-crypto/packageInfo.js"}],"node_modules/@polkadot/keyring/packageInfo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packageInfo = void 0;
// Copyright 2017-2022 @polkadot/keyring authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
var packageInfo = {
  name: '@polkadot/keyring',
  path: import.meta && import.meta.url ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto',
  type: 'esm',
  version: '9.7.2'
};
exports.packageInfo = packageInfo;
},{}],"node_modules/@polkadot/keyring/detectPackage.js":[function(require,module,exports) {
"use strict";

var _util = require("@polkadot/util");

var _detectOther = _interopRequireDefault(require("./detectOther.js"));

var _packageInfo = require("./packageInfo.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/keyring authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
(0, _util.detectPackage)(_packageInfo.packageInfo, null, _detectOther.default);
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./detectOther.js":"node_modules/@polkadot/keyring/detectOther.js","./packageInfo.js":"node_modules/@polkadot/keyring/packageInfo.js"}],"node_modules/@polkadot/networks/packageInfo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packageInfo = void 0;
// Copyright 2017-2022 @polkadot/networks authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
var packageInfo = {
  name: '@polkadot/networks',
  path: import.meta && import.meta.url ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto',
  type: 'esm',
  version: '9.7.2'
};
exports.packageInfo = packageInfo;
},{}],"node_modules/@polkadot/x-randomvalues/cjs/packageInfo.js":[function(require,module,exports) {
var __dirname = "C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\x-randomvalues\\cjs";
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packageInfo = void 0;
// Copyright 2017-2022 @polkadot/x-randomvalues authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
const packageInfo = {
  name: '@polkadot/x-randomvalues',
  path: typeof __dirname === 'string' ? __dirname : 'auto',
  type: 'cjs',
  version: '9.7.2'
};
exports.packageInfo = packageInfo;
},{}],"node_modules/@polkadot/x-randomvalues/cjs/browser.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getRandomValues = getRandomValues;
Object.defineProperty(exports, "packageInfo", {
  enumerable: true,
  get: function () {
    return _packageInfo.packageInfo;
  }
});

var _xGlobal = require("@polkadot/x-global");

var _packageInfo = require("./packageInfo");

// Copyright 2017-2022 @polkadot/x-randomvalues authors & contributors
// SPDX-License-Identifier: Apache-2.0
function getRandomValues(arr) {
  // We use x-global here - this prevents packagers such as rollup
  // confusing this with the "normal" Node.js import and stubbing it
  // (and also aligns with eg. x-fetch, where x-global is used)
  return _xGlobal.xglobal.crypto.getRandomValues(arr);
}
},{"@polkadot/x-global":"node_modules/@polkadot/x-global/index.js","./packageInfo":"node_modules/@polkadot/x-randomvalues/cjs/packageInfo.js"}],"node_modules/@polkadot/util-crypto/detectOther.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _packageInfo = require("@polkadot/networks/packageInfo");

var _packageInfo2 = require("@polkadot/util/packageInfo");

var _xRandomvalues = require("@polkadot/x-randomvalues");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
var _default = [_packageInfo.packageInfo, _packageInfo2.packageInfo, _xRandomvalues.packageInfo];
exports.default = _default;
},{"@polkadot/networks/packageInfo":"node_modules/@polkadot/networks/packageInfo.js","@polkadot/util/packageInfo":"node_modules/@polkadot/util/packageInfo.js","@polkadot/x-randomvalues":"node_modules/@polkadot/x-randomvalues/cjs/browser.js"}],"node_modules/@polkadot/util-crypto/detectPackage.js":[function(require,module,exports) {
"use strict";

var _util = require("@polkadot/util");

var _detectOther = _interopRequireDefault(require("./detectOther.js"));

var _packageInfo = require("./packageInfo.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
(0, _util.detectPackage)(_packageInfo.packageInfo, null, _detectOther.default);
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./detectOther.js":"node_modules/@polkadot/util-crypto/detectOther.js","./packageInfo.js":"node_modules/@polkadot/util-crypto/packageInfo.js"}],"node_modules/@polkadot/x-bigint/shim.js":[function(require,module,exports) {
"use strict";

var _xBigint = require("@polkadot/x-bigint");

var _xGlobal = require("@polkadot/x-global");

// Copyright 2017-2022 @polkadot/x-bigint authors & contributors
// SPDX-License-Identifier: Apache-2.0
(0, _xGlobal.exposeGlobal)('BigInt', _xBigint.BigInt);
},{"@polkadot/x-bigint":"node_modules/@polkadot/x-bigint/index.js","@polkadot/x-global":"node_modules/@polkadot/x-global/index.js"}],"node_modules/@noble/secp256k1/lib/esm/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Signature = exports.Point = exports.CURVE = void 0;
exports.getPublicKey = getPublicKey;
exports.getSharedSecret = getSharedSecret;
exports.recoverPublicKey = recoverPublicKey;
exports.schnorr = void 0;
exports.sign = sign;
exports.signSync = signSync;
exports.utils = void 0;
exports.verify = verify;

var nodeCrypto = _interopRequireWildcard(require("crypto"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */
const _0n = BigInt(0);

const _1n = BigInt(1);

const _2n = BigInt(2);

const _3n = BigInt(3);

const _8n = BigInt(8);

const POW_2_256 = _2n ** BigInt(256);

const CURVE = {
  a: _0n,
  b: BigInt(7),
  P: POW_2_256 - _2n ** BigInt(32) - BigInt(977),
  n: POW_2_256 - BigInt('432420386565659656852420866394968145599'),
  h: _1n,
  Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),
  Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),
  beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee')
};
exports.CURVE = CURVE;

function weistrass(x) {
  const {
    a,
    b
  } = CURVE;
  const x2 = mod(x * x);
  const x3 = mod(x2 * x);
  return mod(x3 + a * x + b);
}

const USE_ENDOMORPHISM = CURVE.a === _0n;

class JacobianPoint {
  constructor(x, y, z) {
    this.x = x;
    this.y = y;
    this.z = z;
  }

  static fromAffine(p) {
    if (!(p instanceof Point)) {
      throw new TypeError('JacobianPoint#fromAffine: expected Point');
    }

    return new JacobianPoint(p.x, p.y, _1n);
  }

  static toAffineBatch(points) {
    const toInv = invertBatch(points.map(p => p.z));
    return points.map((p, i) => p.toAffine(toInv[i]));
  }

  static normalizeZ(points) {
    return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);
  }

  equals(other) {
    if (!(other instanceof JacobianPoint)) throw new TypeError('JacobianPoint expected');
    const {
      x: X1,
      y: Y1,
      z: Z1
    } = this;
    const {
      x: X2,
      y: Y2,
      z: Z2
    } = other;
    const Z1Z1 = mod(Z1 ** _2n);
    const Z2Z2 = mod(Z2 ** _2n);
    const U1 = mod(X1 * Z2Z2);
    const U2 = mod(X2 * Z1Z1);
    const S1 = mod(mod(Y1 * Z2) * Z2Z2);
    const S2 = mod(mod(Y2 * Z1) * Z1Z1);
    return U1 === U2 && S1 === S2;
  }

  negate() {
    return new JacobianPoint(this.x, mod(-this.y), this.z);
  }

  double() {
    const {
      x: X1,
      y: Y1,
      z: Z1
    } = this;
    const A = mod(X1 ** _2n);
    const B = mod(Y1 ** _2n);
    const C = mod(B ** _2n);
    const D = mod(_2n * (mod((X1 + B) ** _2n) - A - C));
    const E = mod(_3n * A);
    const F = mod(E ** _2n);
    const X3 = mod(F - _2n * D);
    const Y3 = mod(E * (D - X3) - _8n * C);
    const Z3 = mod(_2n * Y1 * Z1);
    return new JacobianPoint(X3, Y3, Z3);
  }

  add(other) {
    if (!(other instanceof JacobianPoint)) throw new TypeError('JacobianPoint expected');
    const {
      x: X1,
      y: Y1,
      z: Z1
    } = this;
    const {
      x: X2,
      y: Y2,
      z: Z2
    } = other;
    if (X2 === _0n || Y2 === _0n) return this;
    if (X1 === _0n || Y1 === _0n) return other;
    const Z1Z1 = mod(Z1 ** _2n);
    const Z2Z2 = mod(Z2 ** _2n);
    const U1 = mod(X1 * Z2Z2);
    const U2 = mod(X2 * Z1Z1);
    const S1 = mod(mod(Y1 * Z2) * Z2Z2);
    const S2 = mod(mod(Y2 * Z1) * Z1Z1);
    const H = mod(U2 - U1);
    const r = mod(S2 - S1);

    if (H === _0n) {
      if (r === _0n) {
        return this.double();
      } else {
        return JacobianPoint.ZERO;
      }
    }

    const HH = mod(H ** _2n);
    const HHH = mod(H * HH);
    const V = mod(U1 * HH);
    const X3 = mod(r ** _2n - HHH - _2n * V);
    const Y3 = mod(r * (V - X3) - S1 * HHH);
    const Z3 = mod(Z1 * Z2 * H);
    return new JacobianPoint(X3, Y3, Z3);
  }

  subtract(other) {
    return this.add(other.negate());
  }

  multiplyUnsafe(scalar) {
    let n = normalizeScalar(scalar);
    const G = JacobianPoint.BASE;
    const P0 = JacobianPoint.ZERO;
    if (n === _0n) return P0;
    if (n === _1n) return this;

    if (!USE_ENDOMORPHISM) {
      let p = P0;
      let d = this;

      while (n > _0n) {
        if (n & _1n) p = p.add(d);
        d = d.double();
        n >>= _1n;
      }

      return p;
    }

    let {
      k1neg,
      k1,
      k2neg,
      k2
    } = splitScalarEndo(n);
    let k1p = P0;
    let k2p = P0;
    let d = this;

    while (k1 > _0n || k2 > _0n) {
      if (k1 & _1n) k1p = k1p.add(d);
      if (k2 & _1n) k2p = k2p.add(d);
      d = d.double();
      k1 >>= _1n;
      k2 >>= _1n;
    }

    if (k1neg) k1p = k1p.negate();
    if (k2neg) k2p = k2p.negate();
    k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);
    return k1p.add(k2p);
  }

  precomputeWindow(W) {
    const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;
    const points = [];
    let p = this;
    let base = p;

    for (let window = 0; window < windows; window++) {
      base = p;
      points.push(base);

      for (let i = 1; i < 2 ** (W - 1); i++) {
        base = base.add(p);
        points.push(base);
      }

      p = base.double();
    }

    return points;
  }

  wNAF(n, affinePoint) {
    if (!affinePoint && this.equals(JacobianPoint.BASE)) affinePoint = Point.BASE;
    const W = affinePoint && affinePoint._WINDOW_SIZE || 1;

    if (256 % W) {
      throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');
    }

    let precomputes = affinePoint && pointPrecomputes.get(affinePoint);

    if (!precomputes) {
      precomputes = this.precomputeWindow(W);

      if (affinePoint && W !== 1) {
        precomputes = JacobianPoint.normalizeZ(precomputes);
        pointPrecomputes.set(affinePoint, precomputes);
      }
    }

    let p = JacobianPoint.ZERO;
    let f = JacobianPoint.ZERO;
    const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);
    const windowSize = 2 ** (W - 1);
    const mask = BigInt(2 ** W - 1);
    const maxNumber = 2 ** W;
    const shiftBy = BigInt(W);

    for (let window = 0; window < windows; window++) {
      const offset = window * windowSize;
      let wbits = Number(n & mask);
      n >>= shiftBy;

      if (wbits > windowSize) {
        wbits -= maxNumber;
        n += _1n;
      }

      if (wbits === 0) {
        let pr = precomputes[offset];
        if (window % 2) pr = pr.negate();
        f = f.add(pr);
      } else {
        let cached = precomputes[offset + Math.abs(wbits) - 1];
        if (wbits < 0) cached = cached.negate();
        p = p.add(cached);
      }
    }

    return {
      p,
      f
    };
  }

  multiply(scalar, affinePoint) {
    let n = normalizeScalar(scalar);
    let point;
    let fake;

    if (USE_ENDOMORPHISM) {
      const {
        k1neg,
        k1,
        k2neg,
        k2
      } = splitScalarEndo(n);
      let {
        p: k1p,
        f: f1p
      } = this.wNAF(k1, affinePoint);
      let {
        p: k2p,
        f: f2p
      } = this.wNAF(k2, affinePoint);
      if (k1neg) k1p = k1p.negate();
      if (k2neg) k2p = k2p.negate();
      k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);
      point = k1p.add(k2p);
      fake = f1p.add(f2p);
    } else {
      const {
        p,
        f
      } = this.wNAF(n, affinePoint);
      point = p;
      fake = f;
    }

    return JacobianPoint.normalizeZ([point, fake])[0];
  }

  toAffine(invZ = invert(this.z)) {
    const {
      x,
      y,
      z
    } = this;
    const iz1 = invZ;
    const iz2 = mod(iz1 * iz1);
    const iz3 = mod(iz2 * iz1);
    const ax = mod(x * iz2);
    const ay = mod(y * iz3);
    const zz = mod(z * iz1);
    if (zz !== _1n) throw new Error('invZ was invalid');
    return new Point(ax, ay);
  }

}

JacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);
JacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);
const pointPrecomputes = new WeakMap();

class Point {
  constructor(x, y) {
    this.x = x;
    this.y = y;
  }

  _setWindowSize(windowSize) {
    this._WINDOW_SIZE = windowSize;
    pointPrecomputes.delete(this);
  }

  static fromCompressedHex(bytes) {
    const isShort = bytes.length === 32;
    const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));
    if (!isValidFieldElement(x)) throw new Error('Point is not on curve');
    const y2 = weistrass(x);
    let y = sqrtMod(y2);
    const isYOdd = (y & _1n) === _1n;

    if (isShort) {
      if (isYOdd) y = mod(-y);
    } else {
      const isFirstByteOdd = (bytes[0] & 1) === 1;
      if (isFirstByteOdd !== isYOdd) y = mod(-y);
    }

    const point = new Point(x, y);
    point.assertValidity();
    return point;
  }

  static fromUncompressedHex(bytes) {
    const x = bytesToNumber(bytes.subarray(1, 33));
    const y = bytesToNumber(bytes.subarray(33, 65));
    const point = new Point(x, y);
    point.assertValidity();
    return point;
  }

  static fromHex(hex) {
    const bytes = ensureBytes(hex);
    const len = bytes.length;
    const header = bytes[0];

    if (len === 32 || len === 33 && (header === 0x02 || header === 0x03)) {
      return this.fromCompressedHex(bytes);
    }

    if (len === 65 && header === 0x04) return this.fromUncompressedHex(bytes);
    throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${len}`);
  }

  static fromPrivateKey(privateKey) {
    return Point.BASE.multiply(normalizePrivateKey(privateKey));
  }

  static fromSignature(msgHash, signature, recovery) {
    msgHash = ensureBytes(msgHash);
    const h = truncateHash(msgHash);
    const {
      r,
      s
    } = normalizeSignature(signature);

    if (recovery !== 0 && recovery !== 1) {
      throw new Error('Cannot recover signature: invalid recovery bit');
    }

    if (h === _0n) throw new Error('Cannot recover signature: msgHash cannot be 0');
    const prefix = recovery & 1 ? '03' : '02';
    const R = Point.fromHex(prefix + numTo32bStr(r));
    const {
      n
    } = CURVE;
    const rinv = invert(r, n);
    const u1 = mod(-h * rinv, n);
    const u2 = mod(s * rinv, n);
    const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);
    if (!Q) throw new Error('Cannot recover signature: point at infinify');
    Q.assertValidity();
    return Q;
  }

  toRawBytes(isCompressed = false) {
    return hexToBytes(this.toHex(isCompressed));
  }

  toHex(isCompressed = false) {
    const x = numTo32bStr(this.x);

    if (isCompressed) {
      const prefix = this.y & _1n ? '03' : '02';
      return `${prefix}${x}`;
    } else {
      return `04${x}${numTo32bStr(this.y)}`;
    }
  }

  toHexX() {
    return this.toHex(true).slice(2);
  }

  toRawX() {
    return this.toRawBytes(true).slice(1);
  }

  assertValidity() {
    const msg = 'Point is not on elliptic curve';
    const {
      x,
      y
    } = this;
    if (!isValidFieldElement(x) || !isValidFieldElement(y)) throw new Error(msg);
    const left = mod(y * y);
    const right = weistrass(x);
    if (mod(left - right) !== _0n) throw new Error(msg);
  }

  equals(other) {
    return this.x === other.x && this.y === other.y;
  }

  negate() {
    return new Point(this.x, mod(-this.y));
  }

  double() {
    return JacobianPoint.fromAffine(this).double().toAffine();
  }

  add(other) {
    return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();
  }

  subtract(other) {
    return this.add(other.negate());
  }

  multiply(scalar) {
    return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();
  }

  multiplyAndAddUnsafe(Q, a, b) {
    const P = JacobianPoint.fromAffine(this);
    const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);
    const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);
    const sum = aP.add(bQ);
    return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();
  }

}

exports.Point = Point;
Point.BASE = new Point(CURVE.Gx, CURVE.Gy);
Point.ZERO = new Point(_0n, _0n);

function sliceDER(s) {
  return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;
}

function parseDERInt(data) {
  if (data.length < 2 || data[0] !== 0x02) {
    throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);
  }

  const len = data[1];
  const res = data.subarray(2, len + 2);

  if (!len || res.length !== len) {
    throw new Error(`Invalid signature integer: wrong length`);
  }

  if (res[0] === 0x00 && res[1] <= 0x7f) {
    throw new Error('Invalid signature integer: trailing length');
  }

  return {
    data: bytesToNumber(res),
    left: data.subarray(len + 2)
  };
}

function parseDERSignature(data) {
  if (data.length < 2 || data[0] != 0x30) {
    throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);
  }

  if (data[1] !== data.length - 2) {
    throw new Error('Invalid signature: incorrect length');
  }

  const {
    data: r,
    left: sBytes
  } = parseDERInt(data.subarray(2));
  const {
    data: s,
    left: rBytesLeft
  } = parseDERInt(sBytes);

  if (rBytesLeft.length) {
    throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);
  }

  return {
    r,
    s
  };
}

class Signature {
  constructor(r, s) {
    this.r = r;
    this.s = s;
    this.assertValidity();
  }

  static fromCompact(hex) {
    const arr = isUint8a(hex);
    const name = 'Signature.fromCompact';
    if (typeof hex !== 'string' && !arr) throw new TypeError(`${name}: Expected string or Uint8Array`);
    const str = arr ? bytesToHex(hex) : hex;
    if (str.length !== 128) throw new Error(`${name}: Expected 64-byte hex`);
    return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));
  }

  static fromDER(hex) {
    const arr = isUint8a(hex);
    if (typeof hex !== 'string' && !arr) throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);
    const {
      r,
      s
    } = parseDERSignature(arr ? hex : hexToBytes(hex));
    return new Signature(r, s);
  }

  static fromHex(hex) {
    return this.fromDER(hex);
  }

  assertValidity() {
    const {
      r,
      s
    } = this;
    if (!isWithinCurveOrder(r)) throw new Error('Invalid Signature: r must be 0 < r < n');
    if (!isWithinCurveOrder(s)) throw new Error('Invalid Signature: s must be 0 < s < n');
  }

  hasHighS() {
    const HALF = CURVE.n >> _1n;
    return this.s > HALF;
  }

  normalizeS() {
    return this.hasHighS() ? new Signature(this.r, CURVE.n - this.s) : this;
  }

  toDERRawBytes(isCompressed = false) {
    return hexToBytes(this.toDERHex(isCompressed));
  }

  toDERHex(isCompressed = false) {
    const sHex = sliceDER(numberToHexUnpadded(this.s));
    if (isCompressed) return sHex;
    const rHex = sliceDER(numberToHexUnpadded(this.r));
    const rLen = numberToHexUnpadded(rHex.length / 2);
    const sLen = numberToHexUnpadded(sHex.length / 2);
    const length = numberToHexUnpadded(rHex.length / 2 + sHex.length / 2 + 4);
    return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;
  }

  toRawBytes() {
    return this.toDERRawBytes();
  }

  toHex() {
    return this.toDERHex();
  }

  toCompactRawBytes() {
    return hexToBytes(this.toCompactHex());
  }

  toCompactHex() {
    return numTo32bStr(this.r) + numTo32bStr(this.s);
  }

}

exports.Signature = Signature;

function concatBytes(...arrays) {
  if (!arrays.every(isUint8a)) throw new Error('Uint8Array list expected');
  if (arrays.length === 1) return arrays[0];
  const length = arrays.reduce((a, arr) => a + arr.length, 0);
  const result = new Uint8Array(length);

  for (let i = 0, pad = 0; i < arrays.length; i++) {
    const arr = arrays[i];
    result.set(arr, pad);
    pad += arr.length;
  }

  return result;
}

function isUint8a(bytes) {
  return bytes instanceof Uint8Array;
}

const hexes = Array.from({
  length: 256
}, (v, i) => i.toString(16).padStart(2, '0'));

function bytesToHex(uint8a) {
  if (!(uint8a instanceof Uint8Array)) throw new Error('Expected Uint8Array');
  let hex = '';

  for (let i = 0; i < uint8a.length; i++) {
    hex += hexes[uint8a[i]];
  }

  return hex;
}

function numTo32bStr(num) {
  if (num > POW_2_256) throw new Error('Expected number < 2^256');
  return num.toString(16).padStart(64, '0');
}

function numTo32b(num) {
  return hexToBytes(numTo32bStr(num));
}

function numberToHexUnpadded(num) {
  const hex = num.toString(16);
  return hex.length & 1 ? `0${hex}` : hex;
}

function hexToNumber(hex) {
  if (typeof hex !== 'string') {
    throw new TypeError('hexToNumber: expected string, got ' + typeof hex);
  }

  return BigInt(`0x${hex}`);
}

function hexToBytes(hex) {
  if (typeof hex !== 'string') {
    throw new TypeError('hexToBytes: expected string, got ' + typeof hex);
  }

  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);
  const array = new Uint8Array(hex.length / 2);

  for (let i = 0; i < array.length; i++) {
    const j = i * 2;
    const hexByte = hex.slice(j, j + 2);
    const byte = Number.parseInt(hexByte, 16);
    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');
    array[i] = byte;
  }

  return array;
}

function bytesToNumber(bytes) {
  return hexToNumber(bytesToHex(bytes));
}

function ensureBytes(hex) {
  return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);
}

function normalizeScalar(num) {
  if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0) return BigInt(num);
  if (typeof num === 'bigint' && isWithinCurveOrder(num)) return num;
  throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');
}

function mod(a, b = CURVE.P) {
  const result = a % b;
  return result >= _0n ? result : b + result;
}

function pow2(x, power) {
  const {
    P
  } = CURVE;
  let res = x;

  while (power-- > _0n) {
    res *= res;
    res %= P;
  }

  return res;
}

function sqrtMod(x) {
  const {
    P
  } = CURVE;

  const _6n = BigInt(6);

  const _11n = BigInt(11);

  const _22n = BigInt(22);

  const _23n = BigInt(23);

  const _44n = BigInt(44);

  const _88n = BigInt(88);

  const b2 = x * x * x % P;
  const b3 = b2 * b2 * x % P;
  const b6 = pow2(b3, _3n) * b3 % P;
  const b9 = pow2(b6, _3n) * b3 % P;
  const b11 = pow2(b9, _2n) * b2 % P;
  const b22 = pow2(b11, _11n) * b11 % P;
  const b44 = pow2(b22, _22n) * b22 % P;
  const b88 = pow2(b44, _44n) * b44 % P;
  const b176 = pow2(b88, _88n) * b88 % P;
  const b220 = pow2(b176, _44n) * b44 % P;
  const b223 = pow2(b220, _3n) * b3 % P;
  const t1 = pow2(b223, _23n) * b22 % P;
  const t2 = pow2(t1, _6n) * b2 % P;
  return pow2(t2, _2n);
}

function invert(number, modulo = CURVE.P) {
  if (number === _0n || modulo <= _0n) {
    throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);
  }

  let a = mod(number, modulo);
  let b = modulo;
  let x = _0n,
      y = _1n,
      u = _1n,
      v = _0n;

  while (a !== _0n) {
    const q = b / a;
    const r = b % a;
    const m = x - u * q;
    const n = y - v * q;
    b = a, a = r, x = u, y = v, u = m, v = n;
  }

  const gcd = b;
  if (gcd !== _1n) throw new Error('invert: does not exist');
  return mod(x, modulo);
}

function invertBatch(nums, p = CURVE.P) {
  const scratch = new Array(nums.length);
  const lastMultiplied = nums.reduce((acc, num, i) => {
    if (num === _0n) return acc;
    scratch[i] = acc;
    return mod(acc * num, p);
  }, _1n);
  const inverted = invert(lastMultiplied, p);
  nums.reduceRight((acc, num, i) => {
    if (num === _0n) return acc;
    scratch[i] = mod(acc * scratch[i], p);
    return mod(acc * num, p);
  }, inverted);
  return scratch;
}

const divNearest = (a, b) => (a + b / _2n) / b;

const POW_2_128 = _2n ** BigInt(128);

function splitScalarEndo(k) {
  const {
    n
  } = CURVE;
  const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');
  const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');
  const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');
  const b2 = a1;
  const c1 = divNearest(b2 * k, n);
  const c2 = divNearest(-b1 * k, n);
  let k1 = mod(k - c1 * a1 - c2 * a2, n);
  let k2 = mod(-c1 * b1 - c2 * b2, n);
  const k1neg = k1 > POW_2_128;
  const k2neg = k2 > POW_2_128;
  if (k1neg) k1 = n - k1;
  if (k2neg) k2 = n - k2;

  if (k1 > POW_2_128 || k2 > POW_2_128) {
    throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);
  }

  return {
    k1neg,
    k1,
    k2neg,
    k2
  };
}

function truncateHash(hash) {
  const {
    n
  } = CURVE;
  const byteLength = hash.length;
  const delta = byteLength * 8 - 256;
  let h = bytesToNumber(hash);
  if (delta > 0) h = h >> BigInt(delta);
  if (h >= n) h -= n;
  return h;
}

class HmacDrbg {
  constructor() {
    this.v = new Uint8Array(32).fill(1);
    this.k = new Uint8Array(32).fill(0);
    this.counter = 0;
  }

  hmac(...values) {
    return utils.hmacSha256(this.k, ...values);
  }

  hmacSync(...values) {
    if (typeof utils.hmacSha256Sync !== 'function') throw new Error('utils.hmacSha256Sync is undefined, you need to set it');
    const res = utils.hmacSha256Sync(this.k, ...values);
    if (res instanceof Promise) throw new Error('To use sync sign(), ensure utils.hmacSha256 is sync');
    return res;
  }

  incr() {
    if (this.counter >= 1000) {
      throw new Error('Tried 1,000 k values for sign(), all were invalid');
    }

    this.counter += 1;
  }

  async reseed(seed = new Uint8Array()) {
    this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);
    this.v = await this.hmac(this.v);
    if (seed.length === 0) return;
    this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);
    this.v = await this.hmac(this.v);
  }

  reseedSync(seed = new Uint8Array()) {
    this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);
    this.v = this.hmacSync(this.v);
    if (seed.length === 0) return;
    this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);
    this.v = this.hmacSync(this.v);
  }

  async generate() {
    this.incr();
    this.v = await this.hmac(this.v);
    return this.v;
  }

  generateSync() {
    this.incr();
    this.v = this.hmacSync(this.v);
    return this.v;
  }

}

function isWithinCurveOrder(num) {
  return _0n < num && num < CURVE.n;
}

function isValidFieldElement(num) {
  return _0n < num && num < CURVE.P;
}

function kmdToSig(kBytes, m, d) {
  const k = bytesToNumber(kBytes);
  if (!isWithinCurveOrder(k)) return;
  const {
    n
  } = CURVE;
  const q = Point.BASE.multiply(k);
  const r = mod(q.x, n);
  if (r === _0n) return;
  const s = mod(invert(k, n) * mod(m + d * r, n), n);
  if (s === _0n) return;
  const sig = new Signature(r, s);
  const recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);
  return {
    sig,
    recovery
  };
}

function normalizePrivateKey(key) {
  let num;

  if (typeof key === 'bigint') {
    num = key;
  } else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {
    num = BigInt(key);
  } else if (typeof key === 'string') {
    if (key.length !== 64) throw new Error('Expected 32 bytes of private key');
    num = hexToNumber(key);
  } else if (isUint8a(key)) {
    if (key.length !== 32) throw new Error('Expected 32 bytes of private key');
    num = bytesToNumber(key);
  } else {
    throw new TypeError('Expected valid private key');
  }

  if (!isWithinCurveOrder(num)) throw new Error('Expected private key: 0 < key < n');
  return num;
}

function normalizePublicKey(publicKey) {
  if (publicKey instanceof Point) {
    publicKey.assertValidity();
    return publicKey;
  } else {
    return Point.fromHex(publicKey);
  }
}

function normalizeSignature(signature) {
  if (signature instanceof Signature) {
    signature.assertValidity();
    return signature;
  }

  try {
    return Signature.fromDER(signature);
  } catch (error) {
    return Signature.fromCompact(signature);
  }
}

function getPublicKey(privateKey, isCompressed = false) {
  return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);
}

function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {
  return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);
}

function isPub(item) {
  const arr = isUint8a(item);
  const str = typeof item === 'string';
  const len = (arr || str) && item.length;
  if (arr) return len === 33 || len === 65;
  if (str) return len === 66 || len === 130;
  if (item instanceof Point) return true;
  return false;
}

function getSharedSecret(privateA, publicB, isCompressed = false) {
  if (isPub(privateA)) throw new TypeError('getSharedSecret: first arg must be private key');
  if (!isPub(publicB)) throw new TypeError('getSharedSecret: second arg must be public key');
  const b = normalizePublicKey(publicB);
  b.assertValidity();
  return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);
}

function bits2int(bytes) {
  const slice = bytes.length > 32 ? bytes.slice(0, 32) : bytes;
  return bytesToNumber(slice);
}

function bits2octets(bytes) {
  const z1 = bits2int(bytes);
  const z2 = mod(z1, CURVE.n);
  return int2octets(z2 < _0n ? z1 : z2);
}

function int2octets(num) {
  if (typeof num !== 'bigint') throw new Error('Expected bigint');
  const hex = numTo32bStr(num);
  return hexToBytes(hex);
}

function initSigArgs(msgHash, privateKey, extraEntropy) {
  if (msgHash == null) throw new Error(`sign: expected valid message hash, not "${msgHash}"`);
  const h1 = ensureBytes(msgHash);
  const d = normalizePrivateKey(privateKey);
  const seedArgs = [int2octets(d), bits2octets(h1)];

  if (extraEntropy != null) {
    if (extraEntropy === true) extraEntropy = utils.randomBytes(32);
    const e = ensureBytes(extraEntropy);
    if (e.length !== 32) throw new Error('sign: Expected 32 bytes of extra data');
    seedArgs.push(e);
  }

  const seed = concatBytes(...seedArgs);
  const m = bits2int(h1);
  return {
    seed,
    m,
    d
  };
}

function finalizeSig(recSig, opts) {
  let {
    sig,
    recovery
  } = recSig;
  const {
    canonical,
    der,
    recovered
  } = Object.assign({
    canonical: true,
    der: true
  }, opts);

  if (canonical && sig.hasHighS()) {
    sig = sig.normalizeS();
    recovery ^= 1;
  }

  const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();
  return recovered ? [hashed, recovery] : hashed;
}

async function sign(msgHash, privKey, opts = {}) {
  const {
    seed,
    m,
    d
  } = initSigArgs(msgHash, privKey, opts.extraEntropy);
  let sig;
  const drbg = new HmacDrbg();
  await drbg.reseed(seed);

  while (!(sig = kmdToSig(await drbg.generate(), m, d))) await drbg.reseed();

  return finalizeSig(sig, opts);
}

function signSync(msgHash, privKey, opts = {}) {
  const {
    seed,
    m,
    d
  } = initSigArgs(msgHash, privKey, opts.extraEntropy);
  let sig;
  const drbg = new HmacDrbg();
  drbg.reseedSync(seed);

  while (!(sig = kmdToSig(drbg.generateSync(), m, d))) drbg.reseedSync();

  return finalizeSig(sig, opts);
}

const vopts = {
  strict: true
};

function verify(signature, msgHash, publicKey, opts = vopts) {
  let sig;

  try {
    sig = normalizeSignature(signature);
    msgHash = ensureBytes(msgHash);
  } catch (error) {
    return false;
  }

  const {
    r,
    s
  } = sig;
  if (opts.strict && sig.hasHighS()) return false;
  const h = truncateHash(msgHash);
  if (h === _0n) return false;
  let P;

  try {
    P = normalizePublicKey(publicKey);
  } catch (error) {
    return false;
  }

  const {
    n
  } = CURVE;
  const sinv = invert(s, n);
  const u1 = mod(h * sinv, n);
  const u2 = mod(r * sinv, n);
  const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);
  if (!R) return false;
  const v = mod(R.x, n);
  return v === r;
}

function finalizeSchnorrChallenge(ch) {
  return mod(bytesToNumber(ch), CURVE.n);
}

function hasEvenY(point) {
  return (point.y & _1n) === _0n;
}

class SchnorrSignature {
  constructor(r, s) {
    this.r = r;
    this.s = s;
    this.assertValidity();
  }

  static fromHex(hex) {
    const bytes = ensureBytes(hex);
    if (bytes.length !== 64) throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);
    const r = bytesToNumber(bytes.subarray(0, 32));
    const s = bytesToNumber(bytes.subarray(32, 64));
    return new SchnorrSignature(r, s);
  }

  assertValidity() {
    const {
      r,
      s
    } = this;
    if (!isValidFieldElement(r) || !isWithinCurveOrder(s)) throw new Error('Invalid signature');
  }

  toHex() {
    return numTo32bStr(this.r) + numTo32bStr(this.s);
  }

  toRawBytes() {
    return hexToBytes(this.toHex());
  }

}

function schnorrGetPublicKey(privateKey) {
  return Point.fromPrivateKey(privateKey).toRawX();
}

function initSchnorrSigArgs(message, privateKey, auxRand) {
  if (message == null) throw new TypeError(`sign: Expected valid message, not "${message}"`);
  const m = ensureBytes(message);
  const d0 = normalizePrivateKey(privateKey);
  const rand = ensureBytes(auxRand);
  if (rand.length !== 32) throw new TypeError('sign: Expected 32 bytes of aux randomness');
  const P = Point.fromPrivateKey(d0);
  const px = P.toRawX();
  const d = hasEvenY(P) ? d0 : CURVE.n - d0;
  return {
    m,
    P,
    px,
    d,
    rand
  };
}

function initSchnorrNonce(d, t0h) {
  return numTo32b(d ^ bytesToNumber(t0h));
}

function finalizeSchnorrNonce(k0h) {
  const k0 = mod(bytesToNumber(k0h), CURVE.n);
  if (k0 === _0n) throw new Error('sign: Creation of signature failed. k is zero');
  const R = Point.fromPrivateKey(k0);
  const rx = R.toRawX();
  const k = hasEvenY(R) ? k0 : CURVE.n - k0;
  return {
    R,
    rx,
    k
  };
}

function finalizeSchnorrSig(R, k, e, d) {
  return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();
}

async function schnorrSign(message, privateKey, auxRand = utils.randomBytes()) {
  const {
    m,
    px,
    d,
    rand
  } = initSchnorrSigArgs(message, privateKey, auxRand);
  const t = initSchnorrNonce(d, await utils.taggedHash(TAGS.aux, rand));
  const {
    R,
    rx,
    k
  } = finalizeSchnorrNonce(await utils.taggedHash(TAGS.nonce, t, px, m));
  const e = finalizeSchnorrChallenge(await utils.taggedHash(TAGS.challenge, rx, px, m));
  const sig = finalizeSchnorrSig(R, k, e, d);
  const isValid = await schnorrVerify(sig, m, px);
  if (!isValid) throw new Error('sign: Invalid signature produced');
  return sig;
}

function schnorrSignSync(message, privateKey, auxRand = utils.randomBytes()) {
  const {
    m,
    px,
    d,
    rand
  } = initSchnorrSigArgs(message, privateKey, auxRand);
  const t = initSchnorrNonce(d, utils.taggedHashSync(TAGS.aux, rand));
  const {
    R,
    rx,
    k
  } = finalizeSchnorrNonce(utils.taggedHashSync(TAGS.nonce, t, px, m));
  const e = finalizeSchnorrChallenge(utils.taggedHashSync(TAGS.challenge, rx, px, m));
  const sig = finalizeSchnorrSig(R, k, e, d);
  const isValid = schnorrVerifySync(sig, m, px);
  if (!isValid) throw new Error('sign: Invalid signature produced');
  return sig;
}

function initSchnorrVerify(signature, message, publicKey) {
  const raw = signature instanceof SchnorrSignature;
  const sig = raw ? signature : SchnorrSignature.fromHex(signature);
  if (raw) sig.assertValidity();
  return { ...sig,
    m: ensureBytes(message),
    P: normalizePublicKey(publicKey)
  };
}

function finalizeSchnorrVerify(r, P, s, e) {
  const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));
  if (!R || !hasEvenY(R) || R.x !== r) return false;
  return true;
}

async function schnorrVerify(signature, message, publicKey) {
  try {
    const {
      r,
      s,
      m,
      P
    } = initSchnorrVerify(signature, message, publicKey);
    const e = finalizeSchnorrChallenge(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));
    return finalizeSchnorrVerify(r, P, s, e);
  } catch (error) {
    return false;
  }
}

function schnorrVerifySync(signature, message, publicKey) {
  try {
    const {
      r,
      s,
      m,
      P
    } = initSchnorrVerify(signature, message, publicKey);
    const e = finalizeSchnorrChallenge(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));
    return finalizeSchnorrVerify(r, P, s, e);
  } catch (error) {
    return false;
  }
}

const schnorr = {
  Signature: SchnorrSignature,
  getPublicKey: schnorrGetPublicKey,
  sign: schnorrSign,
  verify: schnorrVerify,
  signSync: schnorrSignSync,
  verifySync: schnorrVerifySync
};
exports.schnorr = schnorr;

Point.BASE._setWindowSize(8);

const crypto = {
  node: nodeCrypto,
  web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined
};
const TAGS = {
  challenge: 'BIP0340/challenge',
  aux: 'BIP0340/aux',
  nonce: 'BIP0340/nonce'
};
const TAGGED_HASH_PREFIXES = {};
const utils = {
  isValidPrivateKey(privateKey) {
    try {
      normalizePrivateKey(privateKey);
      return true;
    } catch (error) {
      return false;
    }
  },

  privateAdd: (privateKey, tweak) => {
    const p = normalizePrivateKey(privateKey);
    const t = bytesToNumber(ensureBytes(tweak));
    return numTo32b(mod(p + t, CURVE.n));
  },
  privateNegate: privateKey => {
    const p = normalizePrivateKey(privateKey);
    return numTo32b(CURVE.n - p);
  },
  pointAddScalar: (p, tweak, isCompressed) => {
    const P = Point.fromHex(p);
    const t = bytesToNumber(ensureBytes(tweak));
    const Q = Point.BASE.multiplyAndAddUnsafe(P, t, _1n);
    if (!Q) throw new Error('Tweaked point at infinity');
    return Q.toRawBytes(isCompressed);
  },
  pointMultiply: (p, tweak, isCompressed) => {
    const P = Point.fromHex(p);
    const t = bytesToNumber(ensureBytes(tweak));
    return P.multiply(t).toRawBytes(isCompressed);
  },
  hashToPrivateKey: hash => {
    hash = ensureBytes(hash);
    if (hash.length < 40 || hash.length > 1024) throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');

    const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;

    return numTo32b(num);
  },
  randomBytes: (bytesLength = 32) => {
    if (crypto.web) {
      return crypto.web.getRandomValues(new Uint8Array(bytesLength));
    } else if (crypto.node) {
      const {
        randomBytes
      } = crypto.node;
      return Uint8Array.from(randomBytes(bytesLength));
    } else {
      throw new Error("The environment doesn't have randomBytes function");
    }
  },
  randomPrivateKey: () => {
    return utils.hashToPrivateKey(utils.randomBytes(40));
  },
  bytesToHex,
  hexToBytes,
  concatBytes,
  mod,
  invert,
  sha256: async (...messages) => {
    if (crypto.web) {
      const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));
      return new Uint8Array(buffer);
    } else if (crypto.node) {
      const {
        createHash
      } = crypto.node;
      const hash = createHash('sha256');
      messages.forEach(m => hash.update(m));
      return Uint8Array.from(hash.digest());
    } else {
      throw new Error("The environment doesn't have sha256 function");
    }
  },
  hmacSha256: async (key, ...messages) => {
    if (crypto.web) {
      const ckey = await crypto.web.subtle.importKey('raw', key, {
        name: 'HMAC',
        hash: {
          name: 'SHA-256'
        }
      }, false, ['sign']);
      const message = concatBytes(...messages);
      const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);
      return new Uint8Array(buffer);
    } else if (crypto.node) {
      const {
        createHmac
      } = crypto.node;
      const hash = createHmac('sha256', key);
      messages.forEach(m => hash.update(m));
      return Uint8Array.from(hash.digest());
    } else {
      throw new Error("The environment doesn't have hmac-sha256 function");
    }
  },
  sha256Sync: undefined,
  hmacSha256Sync: undefined,
  taggedHash: async (tag, ...messages) => {
    let tagP = TAGGED_HASH_PREFIXES[tag];

    if (tagP === undefined) {
      const tagH = await utils.sha256(Uint8Array.from(tag, c => c.charCodeAt(0)));
      tagP = concatBytes(tagH, tagH);
      TAGGED_HASH_PREFIXES[tag] = tagP;
    }

    return utils.sha256(tagP, ...messages);
  },
  taggedHashSync: (tag, ...messages) => {
    if (typeof utils.sha256Sync !== 'function') throw new Error('utils.sha256Sync is undefined, you need to set it');
    let tagP = TAGGED_HASH_PREFIXES[tag];

    if (tagP === undefined) {
      const tagH = utils.sha256Sync(Uint8Array.from(tag, c => c.charCodeAt(0)));
      tagP = concatBytes(tagH, tagH);
      TAGGED_HASH_PREFIXES[tag] = tagP;
    }

    return utils.sha256Sync(tagP, ...messages);
  },

  precompute(windowSize = 8, point = Point.BASE) {
    const cached = point === Point.BASE ? point : new Point(point.x, point.y);

    cached._setWindowSize(windowSize);

    cached.multiply(_3n);
    return cached;
  }

};
exports.utils = utils;
},{"crypto":"node_modules/parcel-bundler/src/builtins/_empty.js"}],"node_modules/@polkadot/wasm-bridge/packageInfo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packageInfo = void 0;
// Copyright 2017-2022 @polkadot/wasm-bridge authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
var packageInfo = {
  name: '@polkadot/wasm-bridge',
  path: import.meta && import.meta.url ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto',
  type: 'esm',
  version: '6.2.2'
};
exports.packageInfo = packageInfo;
},{}],"node_modules/@polkadot/wasm-crypto-asmjs/packageInfo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packageInfo = void 0;
// Copyright 2017-2022 @polkadot/wasm-crypto-asmjs authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
var packageInfo = {
  name: '@polkadot/wasm-crypto-asmjs',
  path: import.meta && import.meta.url ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto',
  type: 'esm',
  version: '6.2.2'
};
exports.packageInfo = packageInfo;
},{}],"node_modules/@polkadot/wasm-crypto-init/packageInfo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packageInfo = void 0;
// Copyright 2017-2022 @polkadot/wasm-crypto-init authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
var packageInfo = {
  name: '@polkadot/wasm-crypto-init',
  path: import.meta && import.meta.url ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto',
  type: 'esm',
  version: '6.2.2'
};
exports.packageInfo = packageInfo;
},{}],"node_modules/@polkadot/wasm-crypto-wasm/packageInfo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packageInfo = void 0;
// Copyright 2017-2022 @polkadot/wasm-crypto-wasm authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
var packageInfo = {
  name: '@polkadot/wasm-crypto-wasm',
  path: import.meta && import.meta.url ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto',
  type: 'esm',
  version: '6.2.2'
};
exports.packageInfo = packageInfo;
},{}],"node_modules/@polkadot/wasm-util/packageInfo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packageInfo = void 0;
// Copyright 2017-2022 @polkadot/wasm-util authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
var packageInfo = {
  name: '@polkadot/wasm-util',
  path: import.meta && import.meta.url ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto',
  type: 'esm',
  version: '6.2.2'
};
exports.packageInfo = packageInfo;
},{}],"node_modules/@polkadot/wasm-crypto/detectOther.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _packageInfo = require("@polkadot/wasm-bridge/packageInfo");

var _packageInfo2 = require("@polkadot/wasm-crypto-asmjs/packageInfo");

var _packageInfo3 = require("@polkadot/wasm-crypto-init/packageInfo");

var _packageInfo4 = require("@polkadot/wasm-crypto-wasm/packageInfo");

var _packageInfo5 = require("@polkadot/wasm-util/packageInfo");

// Copyright 2017-2022 @polkadot/wasm-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
var _default = [_packageInfo.packageInfo, _packageInfo2.packageInfo, _packageInfo3.packageInfo, _packageInfo4.packageInfo, _packageInfo5.packageInfo];
exports.default = _default;
},{"@polkadot/wasm-bridge/packageInfo":"node_modules/@polkadot/wasm-bridge/packageInfo.js","@polkadot/wasm-crypto-asmjs/packageInfo":"node_modules/@polkadot/wasm-crypto-asmjs/packageInfo.js","@polkadot/wasm-crypto-init/packageInfo":"node_modules/@polkadot/wasm-crypto-init/packageInfo.js","@polkadot/wasm-crypto-wasm/packageInfo":"node_modules/@polkadot/wasm-crypto-wasm/packageInfo.js","@polkadot/wasm-util/packageInfo":"node_modules/@polkadot/wasm-util/packageInfo.js"}],"node_modules/@polkadot/wasm-crypto/packageInfo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packageInfo = void 0;
// Copyright 2017-2022 @polkadot/wasm-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
var packageInfo = {
  name: '@polkadot/wasm-crypto',
  path: import.meta && import.meta.url ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto',
  type: 'esm',
  version: '6.2.2'
};
exports.packageInfo = packageInfo;
},{}],"node_modules/@polkadot/wasm-crypto/detectPackage.js":[function(require,module,exports) {
"use strict";

var _util = require("@polkadot/util");

var _detectOther = _interopRequireDefault(require("./detectOther.js"));

var _packageInfo = require("./packageInfo.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/wasm-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
(0, _util.detectPackage)(_packageInfo.packageInfo, null, _detectOther.default);
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./detectOther.js":"node_modules/@polkadot/wasm-crypto/detectOther.js","./packageInfo.js":"node_modules/@polkadot/wasm-crypto/packageInfo.js"}],"node_modules/@polkadot/wasm-bridge/detectOther.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/wasm-bridge authors & contributors
// SPDX-License-Identifier: Apache-2.0
var _default = [];
exports.default = _default;
},{}],"node_modules/@polkadot/wasm-bridge/detectPackage.js":[function(require,module,exports) {
"use strict";

var _util = require("@polkadot/util");

var _detectOther = _interopRequireDefault(require("./detectOther.js"));

var _packageInfo = require("./packageInfo.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/wasm-bridge authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
(0, _util.detectPackage)(_packageInfo.packageInfo, null, _detectOther.default);
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./detectOther.js":"node_modules/@polkadot/wasm-bridge/detectOther.js","./packageInfo.js":"node_modules/@polkadot/wasm-bridge/packageInfo.js"}],"node_modules/@polkadot/wasm-bridge/wbg.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Wbg = void 0;

var _xRandomvalues = require("@polkadot/x-randomvalues");

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

var DEFAULT_CRYPTO = {
  getRandomValues: _xRandomvalues.getRandomValues
};
var DEFAULT_SELF = {
  crypto: DEFAULT_CRYPTO
};
/**
 * @name Wbg
 * @description
 * This defines the internal interfaces that wasm-bindgen used to communicate
 * with the host layer. None of these functions are available to the user, rather
 * they are called internally from the WASM code itself.
 *
 * The interfaces here are exposed in the imports on the created WASM interfaces.
 *
 * Internally the implementation does a thin layer into the supplied bridge.
 */

var _bridge = /*#__PURE__*/new WeakMap();

var Wbg = /*#__PURE__*/_createClass(function Wbg(bridge) {
  var _this = this;

  _classCallCheck(this, Wbg);

  _classPrivateFieldInitSpec(this, _bridge, {
    writable: true,
    value: void 0
  });

  _defineProperty(this, "abort", function () {
    throw new Error('abort');
  });

  _defineProperty(this, "__wbindgen_is_undefined", function (idx) {
    return _classPrivateFieldGet(_this, _bridge).getObject(idx) === undefined;
  });

  _defineProperty(this, "__wbindgen_throw", function (ptr, len) {
    throw new Error(_classPrivateFieldGet(_this, _bridge).getString(ptr, len));
  });

  _defineProperty(this, "__wbg_self_1b7a39e3a92c949c", function () {
    return _classPrivateFieldGet(_this, _bridge).addObject(DEFAULT_SELF);
  });

  _defineProperty(this, "__wbg_require_604837428532a733", function (ptr, len) {
    throw new Error("Unable to require ".concat(_classPrivateFieldGet(_this, _bridge).getString(ptr, len)));
  });

  _defineProperty(this, "__wbg_crypto_968f1772287e2df0", function (_idx) {
    return _classPrivateFieldGet(_this, _bridge).addObject(DEFAULT_CRYPTO);
  });

  _defineProperty(this, "__wbg_getRandomValues_a3d34b4fee3c2869", function (_idx) {
    return _classPrivateFieldGet(_this, _bridge).addObject(DEFAULT_CRYPTO.getRandomValues);
  });

  _defineProperty(this, "__wbg_getRandomValues_f5e14ab7ac8e995d", function (_arg0, ptr, len) {
    DEFAULT_CRYPTO.getRandomValues(_classPrivateFieldGet(_this, _bridge).getU8a(ptr, len));
  });

  _defineProperty(this, "__wbg_randomFillSync_d5bd2d655fdf256a", function (_idx, _ptr, _len) {
    throw new Error('randomFillsync is not available'); // getObject(idx).randomFillSync(getU8a(ptr, len));
  });

  _defineProperty(this, "__wbindgen_object_drop_ref", function (idx) {
    _classPrivateFieldGet(_this, _bridge).takeObject(idx);
  });

  _classPrivateFieldSet(this, _bridge, bridge);
}
/** @internal */
);

exports.Wbg = Wbg;
},{"@polkadot/x-randomvalues":"node_modules/@polkadot/x-randomvalues/cjs/browser.js"}],"node_modules/@polkadot/wasm-bridge/bridge.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Bridge = void 0;

var _util = require("@polkadot/util");

var _wbg2 = require("./wbg.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

var _cachegetInt = /*#__PURE__*/new WeakMap();

var _cachegetUint = /*#__PURE__*/new WeakMap();

var _createWasm = /*#__PURE__*/new WeakMap();

var _heap = /*#__PURE__*/new WeakMap();

var _heapNext = /*#__PURE__*/new WeakMap();

var _wasm = /*#__PURE__*/new WeakMap();

var _wasmError = /*#__PURE__*/new WeakMap();

var _wasmPromise = /*#__PURE__*/new WeakMap();

var _wbg = /*#__PURE__*/new WeakMap();

var _type = /*#__PURE__*/new WeakMap();

/**
 * @name Bridge
 * @description
 * Creates a bridge between the JS and WASM environments.
 *
 * For any bridge it is passed an function white is then called internally at the
 * time of initialization. This affectively implements the layer between WASM and
 * the native environment, providing all the plumbing needed for the Wbg classes.
 */
var Bridge = /*#__PURE__*/function () {
  function Bridge(createWasm) {
    _classCallCheck(this, Bridge);

    _classPrivateFieldInitSpec(this, _cachegetInt, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(this, _cachegetUint, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(this, _createWasm, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(this, _heap, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(this, _heapNext, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(this, _wasm, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(this, _wasmError, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(this, _wasmPromise, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(this, _wbg, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(this, _type, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldSet(this, _createWasm, createWasm);

    _classPrivateFieldSet(this, _cachegetInt, null);

    _classPrivateFieldSet(this, _cachegetUint, null);

    _classPrivateFieldSet(this, _heap, new Array(32).fill(undefined).concat(undefined, null, true, false));

    _classPrivateFieldSet(this, _heapNext, _classPrivateFieldGet(this, _heap).length);

    _classPrivateFieldSet(this, _type, 'none');

    _classPrivateFieldSet(this, _wasm, null);

    _classPrivateFieldSet(this, _wasmError, null);

    _classPrivateFieldSet(this, _wasmPromise, null);

    _classPrivateFieldSet(this, _wbg, _objectSpread({}, new _wbg2.Wbg(this)));
  }
  /** @description Returns the init error */


  _createClass(Bridge, [{
    key: "error",
    get: function get() {
      return _classPrivateFieldGet(this, _wasmError);
    }
    /** @description Returns the init type */

  }, {
    key: "type",
    get: function get() {
      return _classPrivateFieldGet(this, _type);
    }
    /** @description Returns the created wasm interface */

  }, {
    key: "wasm",
    get: function get() {
      return _classPrivateFieldGet(this, _wasm);
    }
    /** @description Performs the wasm initialization */

  }, {
    key: "init",
    value: function () {
      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(createWasm) {
        var _yield$_classPrivateF, error, type, wasm;

        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!_classPrivateFieldGet(this, _wasmPromise) || createWasm) {
                  _classPrivateFieldSet(this, _wasmPromise, (createWasm || _classPrivateFieldGet(this, _createWasm))(_classPrivateFieldGet(this, _wbg)));
                }

                _context.next = 3;
                return _classPrivateFieldGet(this, _wasmPromise);

              case 3:
                _yield$_classPrivateF = _context.sent;
                error = _yield$_classPrivateF.error;
                type = _yield$_classPrivateF.type;
                wasm = _yield$_classPrivateF.wasm;

                _classPrivateFieldSet(this, _type, type);

                _classPrivateFieldSet(this, _wasm, wasm);

                _classPrivateFieldSet(this, _wasmError, error);

                return _context.abrupt("return", _classPrivateFieldGet(this, _wasm));

              case 11:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function init(_x) {
        return _init.apply(this, arguments);
      }

      return init;
    }()
    /**
     * @internal
     * @description Gets an object from the heap
     */

  }, {
    key: "getObject",
    value: function getObject(idx) {
      return _classPrivateFieldGet(this, _heap)[idx];
    }
    /**
     * @internal
     * @description Removes an object from the heap
     */

  }, {
    key: "dropObject",
    value: function dropObject(idx) {
      if (idx < 36) {
        return;
      }

      _classPrivateFieldGet(this, _heap)[idx] = _classPrivateFieldGet(this, _heapNext);

      _classPrivateFieldSet(this, _heapNext, idx);
    }
    /**
     * @internal
     * @description Retrieves and removes an object to the heap
     */

  }, {
    key: "takeObject",
    value: function takeObject(idx) {
      var ret = this.getObject(idx);
      this.dropObject(idx);
      return ret;
    }
    /**
     * @internal
     * @description Adds an object to the heap
     */

  }, {
    key: "addObject",
    value: function addObject(obj) {
      if (_classPrivateFieldGet(this, _heapNext) === _classPrivateFieldGet(this, _heap).length) {
        _classPrivateFieldGet(this, _heap).push(_classPrivateFieldGet(this, _heap).length + 1);
      }

      var idx = _classPrivateFieldGet(this, _heapNext);

      _classPrivateFieldSet(this, _heapNext, _classPrivateFieldGet(this, _heap)[idx]);

      _classPrivateFieldGet(this, _heap)[idx] = obj;
      return idx;
    }
    /**
     * @internal
     * @description Retrieve an Int32 in the WASM interface
     */

  }, {
    key: "getInt32",
    value: function getInt32() {
      if (_classPrivateFieldGet(this, _cachegetInt) === null || _classPrivateFieldGet(this, _cachegetInt).buffer !== _classPrivateFieldGet(this, _wasm).memory.buffer) {
        _classPrivateFieldSet(this, _cachegetInt, new Int32Array(_classPrivateFieldGet(this, _wasm).memory.buffer));
      }

      return _classPrivateFieldGet(this, _cachegetInt);
    }
    /**
     * @internal
     * @description Retrieve an Uint8Array in the WASM interface
     */

  }, {
    key: "getUint8",
    value: function getUint8() {
      if (_classPrivateFieldGet(this, _cachegetUint) === null || _classPrivateFieldGet(this, _cachegetUint).buffer !== _classPrivateFieldGet(this, _wasm).memory.buffer) {
        _classPrivateFieldSet(this, _cachegetUint, new Uint8Array(_classPrivateFieldGet(this, _wasm).memory.buffer));
      }

      return _classPrivateFieldGet(this, _cachegetUint);
    }
    /**
     * @internal
     * @description Retrieves an Uint8Array in the WASM interface
     */

  }, {
    key: "getU8a",
    value: function getU8a(ptr, len) {
      return this.getUint8().subarray(ptr / 1, ptr / 1 + len);
    }
    /**
     * @internal
     * @description Retrieves a string in the WASM interface
     */

  }, {
    key: "getString",
    value: function getString(ptr, len) {
      return (0, _util.u8aToString)(this.getU8a(ptr, len));
    }
    /**
     * @internal
     * @description Allocates an Uint8Array in the WASM interface
     */

  }, {
    key: "allocU8a",
    value: function allocU8a(arg) {
      var ptr = _classPrivateFieldGet(this, _wasm).__wbindgen_malloc(arg.length * 1);

      this.getUint8().set(arg, ptr / 1);
      return [ptr, arg.length];
    }
    /**
     * @internal
     * @description Allocates a string in the WASM interface
     */

  }, {
    key: "allocString",
    value: function allocString(arg) {
      return this.allocU8a((0, _util.stringToU8a)(arg));
    }
    /**
     * @internal
     * @description Retrieves an Uint8Array from the WASM interface
     */

  }, {
    key: "resultU8a",
    value: function resultU8a() {
      var r0 = this.getInt32()[8 / 4 + 0];
      var r1 = this.getInt32()[8 / 4 + 1];
      var ret = this.getU8a(r0, r1).slice();

      _classPrivateFieldGet(this, _wasm).__wbindgen_free(r0, r1 * 1);

      return ret;
    }
    /**
     * @internal
     * @description Retrieve a string from the WASM interface
     */

  }, {
    key: "resultString",
    value: function resultString() {
      return (0, _util.u8aToString)(this.resultU8a());
    }
  }]);

  return Bridge;
}();

exports.Bridge = Bridge;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./wbg.js":"node_modules/@polkadot/wasm-bridge/wbg.js"}],"node_modules/@polkadot/wasm-bridge/init.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createWasmFn = createWasmFn;

function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

// Copyright 2019-2022 @polkadot/wasm-bundle authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name createWasmFn
 * @description
 * Create a WASM (or ASM.js) creator interface based on the supplied information.
 *
 * It will attempt to create a WASM interface first and if this fails or is not available in
 * the environment, will fallback to attempting to create an ASM.js interface.
 */
function createWasmFn(root, wasmBytes, asmFn) {
  return /*#__PURE__*/function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(wbg) {
      var result, source;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              result = {
                error: null,
                type: 'none',
                wasm: null
              };
              _context.prev = 1;

              if (!(!wasmBytes || !wasmBytes.length)) {
                _context.next = 6;
                break;
              }

              throw new Error('No WebAssembly provided for initialization');

            case 6:
              if (!((typeof WebAssembly === "undefined" ? "undefined" : _typeof(WebAssembly)) !== 'object' || typeof WebAssembly.instantiate !== 'function')) {
                _context.next = 8;
                break;
              }

              throw new Error('WebAssembly is not available in your environment');

            case 8:
              _context.next = 10;
              return WebAssembly.instantiate(wasmBytes, {
                wbg: wbg
              });

            case 10:
              source = _context.sent;
              result.wasm = source.instance.exports;
              result.type = 'wasm';
              _context.next = 18;
              break;

            case 15:
              _context.prev = 15;
              _context.t0 = _context["catch"](1);

              // if we have a valid supplied asm.js, return that
              if (typeof asmFn === 'function') {
                result.wasm = asmFn(wbg);
                result.type = 'asm';
              } else {
                result.error = "FATAL: Unable to initialize @polkadot/wasm-".concat(root, ":: ").concat(_context.t0.message);
                console.error(result.error);
              }

            case 18:
              return _context.abrupt("return", result);

            case 19:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, null, [[1, 15]]);
    }));

    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }();
}
},{}],"node_modules/@polkadot/wasm-bridge/bundle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _bridge = require("./bridge.js");

Object.keys(_bridge).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _bridge[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bridge[key];
    }
  });
});

var _init = require("./init.js");

Object.keys(_init).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _init[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _init[key];
    }
  });
});
},{"./bridge.js":"node_modules/@polkadot/wasm-bridge/bridge.js","./init.js":"node_modules/@polkadot/wasm-bridge/init.js"}],"node_modules/@polkadot/wasm-bridge/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

require("./detectPackage.js");

var _bundle = require("./bundle.js");

Object.keys(_bundle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _bundle[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bundle[key];
    }
  });
});
},{"./detectPackage.js":"node_modules/@polkadot/wasm-bridge/detectPackage.js","./bundle.js":"node_modules/@polkadot/wasm-bridge/bundle.js"}],"node_modules/@polkadot/wasm-crypto-wasm/detectOther.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2019-2022 @polkadot/wasm-crypto-wasm authors & contributors
// SPDX-License-Identifier: Apache-2.0
var _default = [];
exports.default = _default;
},{}],"node_modules/@polkadot/wasm-crypto-wasm/detectPackage.js":[function(require,module,exports) {
"use strict";

var _util = require("@polkadot/util");

var _detectOther = _interopRequireDefault(require("./detectOther.js"));

var _packageInfo = require("./packageInfo.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/wasm-crypto-wasm authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
(0, _util.detectPackage)(_packageInfo.packageInfo, null, _detectOther.default);
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./detectOther.js":"node_modules/@polkadot/wasm-crypto-wasm/detectOther.js","./packageInfo.js":"node_modules/@polkadot/wasm-crypto-wasm/packageInfo.js"}],"node_modules/@polkadot/wasm-util/detectOther.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _packageInfo = require("@polkadot/wasm-util/packageInfo");

// Copyright 2019-2022 @polkadot/wasm-util authors & contributors
// SPDX-License-Identifier: Apache-2.0
var _default = [_packageInfo.packageInfo];
exports.default = _default;
},{"@polkadot/wasm-util/packageInfo":"node_modules/@polkadot/wasm-util/packageInfo.js"}],"node_modules/@polkadot/wasm-util/detectPackage.js":[function(require,module,exports) {
"use strict";

var _util = require("@polkadot/util");

var _detectOther = _interopRequireDefault(require("./detectOther.js"));

var _packageInfo = require("./packageInfo.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/wasm-util authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
(0, _util.detectPackage)(_packageInfo.packageInfo, null, _detectOther.default);
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./detectOther.js":"node_modules/@polkadot/wasm-util/detectOther.js","./packageInfo.js":"node_modules/@polkadot/wasm-util/packageInfo.js"}],"node_modules/@polkadot/wasm-util/base64.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.base64Decode = base64Decode;
// Copyright 2019-2022 @polkadot/wasm-util authors & contributors
// SPDX-License-Identifier: Apache-2.0
var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
/**
 * @name base64Decode
 * @description
 * A fail-safe base64Decoding function that operates in all environments. Unlike
 * decoding from Buffer (Node.js only) or atob (browser-only) this implementation
 * is slightly slower, but it is platform independent.
 */

function base64Decode(data) {
  // TODO: For Node.js speedups, we could add an explicit base64Node.ts implementation
  // that would be (via export maps) be available in that environment only
  var bytes = [];
  var byte = 0;
  var bits = 0;

  for (var i = 0; i < data.length && data[i] !== '='; i++) {
    // each character represents 6 bits
    byte = byte << 6 | chars.indexOf(data[i]); // each byte needs to contain 8 bits

    if ((bits += 6) >= 8) {
      bytes.push(byte >>> (bits -= 8) & 0xff);
    }
  }

  return Uint8Array.from(bytes);
}
},{}],"node_modules/@polkadot/wasm-util/fflate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.unzlibSync = unzlibSync;

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

// Copyright 2019-2022 @polkadot/wasm-util authors & contributors
// SPDX-License-Identifier: Apache-2.0
// MIT License
//
// Copyright (c) 2020 Arjun Barrett
//
// Copied from https://github.com/101arrowz/fflate/blob/73c737941ec89d85cdf0ad39ee6f26c5fdc95fd7/src/index.ts
// This only contains the unzlibSync function, no compression, no async, no workers
//
// These 2 issues are addressed as a short-term, stop-gap solution
//   - https://github.com/polkadot-js/api/issues/2963
//   - https://github.com/101arrowz/fflate/issues/17
//
// Only tweaks make here are some TS adjustments (we use strict null checks), the code is otherwise as-is with
// only the single required function provided (compression is still being done in the build with fflate)

/* eslint-disable */
// inflate state
// aliases for shorter compressed code (most minifers don't do this)
var u8 = Uint8Array,
    u16 = Uint16Array,
    u32 = Uint32Array; // code length index map

var clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]); // fixed length extra bits

var fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0,
/* unused */
0, 0,
/* impossible */
0]); // fixed distance extra bits
// see fleb note

var fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13,
/* unused */
0, 0]); // get base, reverse index map from extra bits

var freb = function freb(eb, start) {
  var b = new u16(31);

  for (var i = 0; i < 31; ++i) {
    b[i] = start += 1 << eb[i - 1];
  } // numbers here are at max 18 bits


  var r = new u32(b[30]);

  for (var _i = 1; _i < 30; ++_i) {
    for (var j = b[_i]; j < b[_i + 1]; ++j) {
      r[j] = j - b[_i] << 5 | _i;
    }
  }

  return [b, r];
};

var _freb = freb(fleb, 2),
    _freb2 = _slicedToArray(_freb, 2),
    fl = _freb2[0],
    revfl = _freb2[1]; // we can ignore the fact that the other numbers are wrong; they never happen anyway


fl[28] = 258, revfl[258] = 28;

var _freb3 = freb(fdeb, 0),
    _freb4 = _slicedToArray(_freb3, 1),
    fd = _freb4[0]; // map of value to reverse (assuming 16 bits)


var rev = new u16(32768);

for (var i = 0; i < 32768; ++i) {
  // reverse table algorithm from SO
  var x = (i & 0xAAAA) >>> 1 | (i & 0x5555) << 1;
  x = (x & 0xCCCC) >>> 2 | (x & 0x3333) << 2;
  x = (x & 0xF0F0) >>> 4 | (x & 0x0F0F) << 4;
  rev[i] = ((x & 0xFF00) >>> 8 | (x & 0x00FF) << 8) >>> 1;
} // create huffman tree from u8 "map": index -> code length for code index
// mb (max bits) must be at most 15
// TODO: optimize/split up?


var hMap = function hMap(cd, mb, r) {
  var s = cd.length; // index

  var i = 0; // u16 "map": index -> # of codes with bit length = index

  var l = new u16(mb); // length of cd must be 288 (total # of codes)

  for (; i < s; ++i) {
    ++l[cd[i] - 1];
  } // u16 "map": index -> minimum code for bit length = index


  var le = new u16(mb);

  for (i = 0; i < mb; ++i) {
    le[i] = le[i - 1] + l[i - 1] << 1;
  }

  var co;

  if (r) {
    // u16 "map": index -> number of actual bits, symbol for code
    co = new u16(1 << mb); // bits to remove for reverser

    var rvb = 15 - mb;

    for (i = 0; i < s; ++i) {
      // ignore 0 lengths
      if (cd[i]) {
        // num encoding both symbol and bits read
        var sv = i << 4 | cd[i]; // free bits

        var _r = mb - cd[i]; // start value


        var v = le[cd[i] - 1]++ << _r; // m is end value

        for (var m = v | (1 << _r) - 1; v <= m; ++v) {
          // every 16 bit value starting with the code yields the same result
          co[rev[v] >>> rvb] = sv;
        }
      }
    }
  } else {
    co = new u16(s);

    for (i = 0; i < s; ++i) {
      co[i] = rev[le[cd[i] - 1]++] >>> 15 - cd[i];
    }
  }

  return co;
}; // fixed length tree


var flt = new u8(288);

for (var _i2 = 0; _i2 < 144; ++_i2) {
  flt[_i2] = 8;
}

for (var _i3 = 144; _i3 < 256; ++_i3) {
  flt[_i3] = 9;
}

for (var _i4 = 256; _i4 < 280; ++_i4) {
  flt[_i4] = 7;
}

for (var _i5 = 280; _i5 < 288; ++_i5) {
  flt[_i5] = 8;
} // fixed distance tree


var fdt = new u8(32);

for (var _i6 = 0; _i6 < 32; ++_i6) {
  fdt[_i6] = 5;
} // fixed length map


var flrm = hMap(flt, 9, 1); // fixed distance map

var fdrm = hMap(fdt, 5, 1); // read d, starting at bit p and mask with m

var bits = function bits(d, p, m) {
  var o = p >>> 3;
  return (d[o] | d[o + 1] << 8) >>> (p & 7) & m;
}; // read d, starting at bit p continuing for at least 16 bits


var bits16 = function bits16(d, p) {
  var o = p >>> 3;
  return (d[o] | d[o + 1] << 8 | d[o + 2] << 16) >>> (p & 7);
}; // get end of byte


var shft = function shft(p) {
  return (p >>> 3) + (p & 7 && 1);
}; // typed array slice - allows garbage collector to free original reference,
// while being more compatible than .slice


var slc = function slc(v, s, e) {
  if (s == null || s < 0) s = 0;
  if (e == null || e > v.length) e = v.length; // can't use .constructor in case user-supplied

  var n = new (v instanceof u16 ? u16 : v instanceof u32 ? u32 : u8)(e - s);
  n.set(v.subarray(s, e));
  return n;
}; // find max of array


var max = function max(a) {
  var m = a[0];

  for (var _i7 = 1; _i7 < a.length; ++_i7) {
    if (a[_i7] > m) m = a[_i7];
  }

  return m;
}; // expands raw DEFLATE data


var inflt = function inflt(dat, buf, st) {
  var noSt = !st || st.i;
  if (!st) st = {}; // source length

  var sl = dat.length; // have to estimate size

  var noBuf = !buf || !noSt; // Assumes roughly 33% compression ratio average

  if (!buf) buf = new u8(sl * 3); // ensure buffer can fit at least l elements

  var cbuf = function cbuf(l) {
    var bl = buf.length; // need to increase size to fit

    if (l > bl) {
      // Double or set to necessary, whichever is greater
      var nbuf = new u8(Math.max(bl << 1, l));
      nbuf.set(buf);
      buf = nbuf;
    }
  }; //  last chunk         bitpos           bytes


  var final = st.f || 0,
      pos = st.p || 0,
      bt = st.b || 0,
      lm = st.l,
      dm = st.d,
      lbt = st.m,
      dbt = st.n;
  if (final && !lm) return buf; // total bits

  var tbts = sl << 3;

  do {
    if (!lm) {
      // BFINAL - this is only 1 when last chunk is next
      st.f = final = bits(dat, pos, 1); // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman

      var type = bits(dat, pos + 1, 3);
      pos += 3;

      if (!type) {
        // go to end of byte boundary
        var s = shft(pos) + 4,
            l = dat[s - 4] | dat[s - 3] << 8,
            t = s + l;

        if (t > sl) {
          if (noSt) throw 'unexpected EOF';
          break;
        } // ensure size


        if (noBuf) cbuf(bt + l); // Copy over uncompressed data

        buf.set(dat.subarray(s, t), bt); // Get new bitpos, update byte count

        st.b = bt += l, st.p = pos = t << 3;
        continue;
      } else if (type == 1) lm = flrm, dm = fdrm, lbt = 9, dbt = 5;else if (type == 2) {
        //  literal                            lengths
        var hLit = bits(dat, pos, 31) + 257,
            hcLen = bits(dat, pos + 10, 15) + 4;
        var tl = hLit + bits(dat, pos + 5, 31) + 1;
        pos += 14; // length+distance tree

        var ldt = new u8(tl); // code length tree

        var clt = new u8(19);

        for (var _i8 = 0; _i8 < hcLen; ++_i8) {
          // use index map to get real code
          clt[clim[_i8]] = bits(dat, pos + _i8 * 3, 7);
        }

        pos += hcLen * 3; // code lengths bits

        var clb = max(clt),
            clbmsk = (1 << clb) - 1;
        if (!noSt && pos + tl * (clb + 7) > tbts) break; // code lengths map

        var clm = hMap(clt, clb, 1);

        for (var _i9 = 0; _i9 < tl;) {
          var r = clm[bits(dat, pos, clbmsk)]; // bits read

          pos += r & 15; // symbol

          var _s2 = r >>> 4; // code length to copy


          if (_s2 < 16) {
            ldt[_i9++] = _s2;
          } else {
            //  copy   count
            var c = 0,
                n = 0;
            if (_s2 == 16) n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[_i9 - 1];else if (_s2 == 17) n = 3 + bits(dat, pos, 7), pos += 3;else if (_s2 == 18) n = 11 + bits(dat, pos, 127), pos += 7;

            while (n--) {
              ldt[_i9++] = c;
            }
          }
        } //    length tree                 distance tree


        var lt = ldt.subarray(0, hLit),
            dt = ldt.subarray(hLit); // max length bits

        lbt = max(lt); // max dist bits

        dbt = max(dt);
        lm = hMap(lt, lbt, 1);
        dm = hMap(dt, dbt, 1);
      } else throw 'invalid block type';

      if (pos > tbts) throw 'unexpected EOF';
    } // Make sure the buffer can hold this + the largest possible addition
    // maximum chunk size (practically, theoretically infinite) is 2^17;


    if (noBuf) cbuf(bt + 131072);
    var lms = (1 << lbt) - 1,
        dms = (1 << dbt) - 1;
    var mxa = lbt + dbt + 18;

    while (noSt || pos + mxa < tbts) {
      // bits read, code
      var _c = lm[bits16(dat, pos) & lms],
          sym = _c >>> 4;
      pos += _c & 15;
      if (pos > tbts) throw 'unexpected EOF';
      if (!_c) throw 'invalid length/literal';
      if (sym < 256) buf[bt++] = sym;else if (sym == 256) {
        lm = undefined;
        break;
      } else {
        var add = sym - 254; // no extra bits needed if less

        if (sym > 264) {
          // index
          var _i10 = sym - 257,
              b = fleb[_i10];

          add = bits(dat, pos, (1 << b) - 1) + fl[_i10];
          pos += b;
        } // dist


        var d = dm[bits16(dat, pos) & dms],
            dsym = d >>> 4;
        if (!d) throw 'invalid distance';
        pos += d & 15;
        var _dt = fd[dsym];

        if (dsym > 3) {
          var _b = fdeb[dsym];
          _dt += bits16(dat, pos) & (1 << _b) - 1, pos += _b;
        }

        if (pos > tbts) throw 'unexpected EOF';
        if (noBuf) cbuf(bt + 131072);
        var end = bt + add;

        for (; bt < end; bt += 4) {
          buf[bt] = buf[bt - _dt];
          buf[bt + 1] = buf[bt + 1 - _dt];
          buf[bt + 2] = buf[bt + 2 - _dt];
          buf[bt + 3] = buf[bt + 3 - _dt];
        }

        bt = end;
      }
    }

    st.l = lm, st.p = pos, st.b = bt;
    if (lm) final = 1, st.m = lbt, st.d = dm, st.n = dbt;
  } while (!final);

  return bt == buf.length ? buf : slc(buf, 0, bt);
}; // zlib valid


var zlv = function zlv(d) {
  if ((d[0] & 15) != 8 || d[0] >>> 4 > 7 || (d[0] << 8 | d[1]) % 31) throw 'invalid zlib data';
  if (d[1] & 32) throw 'invalid zlib data: preset dictionaries not supported';
};
/**
 * Expands Zlib data
 * @param data The data to decompress
 * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.
 * @returns The decompressed version of the data
 */


function unzlibSync(data, out) {
  return inflt((zlv(data), data.subarray(2, -4)), out);
}
},{}],"node_modules/@polkadot/wasm-util/bundle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "base64Decode", {
  enumerable: true,
  get: function () {
    return _base.base64Decode;
  }
});
Object.defineProperty(exports, "packageInfo", {
  enumerable: true,
  get: function () {
    return _packageInfo.packageInfo;
  }
});
Object.defineProperty(exports, "unzlibSync", {
  enumerable: true,
  get: function () {
    return _fflate.unzlibSync;
  }
});

var _base = require("./base64.js");

var _fflate = require("./fflate.js");

var _packageInfo = require("./packageInfo.js");
},{"./base64.js":"node_modules/@polkadot/wasm-util/base64.js","./fflate.js":"node_modules/@polkadot/wasm-util/fflate.js","./packageInfo.js":"node_modules/@polkadot/wasm-util/packageInfo.js"}],"node_modules/@polkadot/wasm-util/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

require("./detectPackage.js");

var _bundle = require("./bundle.js");

Object.keys(_bundle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _bundle[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bundle[key];
    }
  });
});
},{"./detectPackage.js":"node_modules/@polkadot/wasm-util/detectPackage.js","./bundle.js":"node_modules/@polkadot/wasm-util/bundle.js"}],"node_modules/@polkadot/wasm-crypto-wasm/cjs/bytes.js":[function(require,module,exports) {
// Copyright 2019-2022 @polkadot/wasm-crypto-wasm authors & contributors
// SPDX-License-Identifier: Apache-2.0

// Generated as part of the build, do not edit

const sizeCompressed = 171116;
const sizeUncompressed = 339508;
const bytes = '';

module.exports = { bytes, sizeCompressed, sizeUncompressed };

},{}],"node_modules/@polkadot/wasm-crypto-wasm/bundle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "packageInfo", {
  enumerable: true,
  get: function () {
    return _packageInfo.packageInfo;
  }
});
exports.wasmBytes = void 0;

var _wasmUtil = require("@polkadot/wasm-util");

var _bytes = require("./cjs/bytes.js");

var _packageInfo = require("./packageInfo.js");

// Copyright 2019-2022 @polkadot/wasm-crypto-wasm authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name wasmBytes
 * @description
 * The decoded WASM interface as exposed by this package.
 *
 * The build process will output into cjs/* into a compressed base64 format.
 * Upon loading the exposed bytes will be decoded and decompressed form this
 * specific format and returned.
 */
var wasmBytes = (0, _wasmUtil.unzlibSync)((0, _wasmUtil.base64Decode)(_bytes.bytes), new Uint8Array(_bytes.sizeUncompressed));
exports.wasmBytes = wasmBytes;
},{"@polkadot/wasm-util":"node_modules/@polkadot/wasm-util/index.js","./cjs/bytes.js":"node_modules/@polkadot/wasm-crypto-wasm/cjs/bytes.js","./packageInfo.js":"node_modules/@polkadot/wasm-crypto-wasm/packageInfo.js"}],"node_modules/@polkadot/wasm-crypto-wasm/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

require("./detectPackage.js");

var _bundle = require("./bundle.js");

Object.keys(_bundle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _bundle[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bundle[key];
    }
  });
});
},{"./detectPackage.js":"node_modules/@polkadot/wasm-crypto-wasm/detectPackage.js","./bundle.js":"node_modules/@polkadot/wasm-crypto-wasm/bundle.js"}],"node_modules/@polkadot/wasm-crypto-init/cjs/packageInfo.js":[function(require,module,exports) {
var __dirname = "C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\wasm-crypto-init\\cjs";
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packageInfo = void 0;
// Copyright 2017-2022 @polkadot/wasm-crypto-init authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
const packageInfo = {
  name: '@polkadot/wasm-crypto-init',
  path: typeof __dirname === 'string' ? __dirname : 'auto',
  type: 'cjs',
  version: '6.2.2'
};
exports.packageInfo = packageInfo;
},{}],"node_modules/@polkadot/wasm-crypto-init/cjs/wasm.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createWasm = void 0;
Object.defineProperty(exports, "packageInfo", {
  enumerable: true,
  get: function () {
    return _packageInfo.packageInfo;
  }
});

var _wasmBridge = require("@polkadot/wasm-bridge");

var _wasmCryptoWasm = require("@polkadot/wasm-crypto-wasm");

var _packageInfo = require("./packageInfo");

// Copyright 2019-2022 @polkadot/wasm-crypto-init authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name createWasm
 * @description
 * Creates an interface using only WASM
 */
const createWasm = (0, _wasmBridge.createWasmFn)('crypto', _wasmCryptoWasm.wasmBytes, null);
exports.createWasm = createWasm;
},{"@polkadot/wasm-bridge":"node_modules/@polkadot/wasm-bridge/index.js","@polkadot/wasm-crypto-wasm":"node_modules/@polkadot/wasm-crypto-wasm/index.js","./packageInfo":"node_modules/@polkadot/wasm-crypto-init/cjs/packageInfo.js"}],"node_modules/@polkadot/wasm-crypto/init.js":[function(require,module,exports) {
var define;
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bridge = void 0;
exports.initBridge = initBridge;

var _wasmBridge = require("@polkadot/wasm-bridge");

var _wasmCryptoInit = require("@polkadot/wasm-crypto-init");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

/**
 * @name bridge
 * @description
 * The JS <-> WASM bridge that is in operation. For the specific package
 * it is a global, i.e. all operations happens on this specific bridge
 */
var bridge = new _wasmBridge.Bridge(_wasmCryptoInit.createWasm);
/**
 * @name initBridge
 * @description
 * Creates a new bridge interface with the (optional) initialization function
 */

exports.bridge = bridge;

function initBridge(_x) {
  return _initBridge.apply(this, arguments);
}

function _initBridge() {
  _initBridge = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(createWasm) {
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            return _context.abrupt("return", bridge.init(createWasm));

          case 1:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _initBridge.apply(this, arguments);
}
},{"@polkadot/wasm-bridge":"node_modules/@polkadot/wasm-bridge/index.js","@polkadot/wasm-crypto-init":"node_modules/@polkadot/wasm-crypto-init/cjs/wasm.js"}],"node_modules/@polkadot/wasm-crypto/bundle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.blake2b = exports.bip39Validate = exports.bip39ToSeed = exports.bip39ToMiniSecret = exports.bip39ToEntropy = exports.bip39Generate = void 0;
Object.defineProperty(exports, "bridge", {
  enumerable: true,
  get: function () {
    return _init.bridge;
  }
});
exports.hmacSha512 = exports.hmacSha256 = exports.ed25519Verify = exports.ed25519Sign = exports.ed25519KeypairFromSeed = void 0;
exports.isReady = isReady;
exports.keccak512 = exports.keccak256 = void 0;
Object.defineProperty(exports, "packageInfo", {
  enumerable: true,
  get: function () {
    return _packageInfo.packageInfo;
  }
});
exports.vrfVerify = exports.vrfSign = exports.twox = exports.sr25519Verify = exports.sr25519Sign = exports.sr25519KeypairFromSeed = exports.sr25519DerivePublicSoft = exports.sr25519DeriveKeypairSoft = exports.sr25519DeriveKeypairHard = exports.sr25519Agree = exports.sha512 = exports.sha256 = exports.secp256k1Sign = exports.secp256k1Recover = exports.secp256k1FromSeed = exports.secp256k1Expand = exports.secp256k1Compress = exports.scrypt = exports.pbkdf2 = void 0;
exports.waitReady = waitReady;

var _init = require("./init.js");

var _packageInfo = require("./packageInfo.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

// Removes the first parameter (expected as WasmCryptoInstance) and leaves the
// rest of the parameters in-tack. This allows us to dynamically create a function
// return from the withWasm helper

/**
 * @internal
 * @description
 * This create an extenal interface function from the signature, all the while checking
 * the actual bridge wasm interface to ensure it has been initialized.
 *
 * This means that we can call it
 *
 *   withWasm(wasm: WasmCryptoInstance, a: number, b: string) => Uint8Array
 *
 * and in this case it will create an interface function with the signarure
 *
 *   (a: number, b: string) => Uint8Array
 */
function withWasm(fn) {
  return function () {
    if (!_init.bridge.wasm) {
      throw new Error('The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.');
    }

    for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {
      params[_key] = arguments[_key];
    }

    return fn.apply(void 0, [_init.bridge.wasm].concat(params));
  };
}

var bip39Generate = withWasm(function (wasm, words) {
  wasm.ext_bip39_generate(8, words);
  return _init.bridge.resultString();
});
exports.bip39Generate = bip39Generate;
var bip39ToEntropy = withWasm(function (wasm, phrase) {
  wasm.ext_bip39_to_entropy.apply(wasm, [8].concat(_toConsumableArray(_init.bridge.allocString(phrase))));
  return _init.bridge.resultU8a();
});
exports.bip39ToEntropy = bip39ToEntropy;
var bip39ToMiniSecret = withWasm(function (wasm, phrase, password) {
  wasm.ext_bip39_to_mini_secret.apply(wasm, [8].concat(_toConsumableArray(_init.bridge.allocString(phrase)), _toConsumableArray(_init.bridge.allocString(password))));
  return _init.bridge.resultU8a();
});
exports.bip39ToMiniSecret = bip39ToMiniSecret;
var bip39ToSeed = withWasm(function (wasm, phrase, password) {
  wasm.ext_bip39_to_seed.apply(wasm, [8].concat(_toConsumableArray(_init.bridge.allocString(phrase)), _toConsumableArray(_init.bridge.allocString(password))));
  return _init.bridge.resultU8a();
});
exports.bip39ToSeed = bip39ToSeed;
var bip39Validate = withWasm(function (wasm, phrase) {
  var ret = wasm.ext_bip39_validate.apply(wasm, _toConsumableArray(_init.bridge.allocString(phrase)));
  return ret !== 0;
});
exports.bip39Validate = bip39Validate;
var ed25519KeypairFromSeed = withWasm(function (wasm, seed) {
  wasm.ext_ed_from_seed.apply(wasm, [8].concat(_toConsumableArray(_init.bridge.allocU8a(seed))));
  return _init.bridge.resultU8a();
});
exports.ed25519KeypairFromSeed = ed25519KeypairFromSeed;
var ed25519Sign = withWasm(function (wasm, pubkey, seckey, message) {
  wasm.ext_ed_sign.apply(wasm, [8].concat(_toConsumableArray(_init.bridge.allocU8a(pubkey)), _toConsumableArray(_init.bridge.allocU8a(seckey)), _toConsumableArray(_init.bridge.allocU8a(message))));
  return _init.bridge.resultU8a();
});
exports.ed25519Sign = ed25519Sign;
var ed25519Verify = withWasm(function (wasm, signature, message, pubkey) {
  var ret = wasm.ext_ed_verify.apply(wasm, _toConsumableArray(_init.bridge.allocU8a(signature)).concat(_toConsumableArray(_init.bridge.allocU8a(message)), _toConsumableArray(_init.bridge.allocU8a(pubkey))));
  return ret !== 0;
});
exports.ed25519Verify = ed25519Verify;
var secp256k1FromSeed = withWasm(function (wasm, seckey) {
  wasm.ext_secp_from_seed.apply(wasm, [8].concat(_toConsumableArray(_init.bridge.allocU8a(seckey))));
  return _init.bridge.resultU8a();
});
exports.secp256k1FromSeed = secp256k1FromSeed;
var secp256k1Compress = withWasm(function (wasm, pubkey) {
  wasm.ext_secp_pub_compress.apply(wasm, [8].concat(_toConsumableArray(_init.bridge.allocU8a(pubkey))));
  return _init.bridge.resultU8a();
});
exports.secp256k1Compress = secp256k1Compress;
var secp256k1Expand = withWasm(function (wasm, pubkey) {
  wasm.ext_secp_pub_expand.apply(wasm, [8].concat(_toConsumableArray(_init.bridge.allocU8a(pubkey))));
  return _init.bridge.resultU8a();
});
exports.secp256k1Expand = secp256k1Expand;
var secp256k1Recover = withWasm(function (wasm, msgHash, sig, recovery) {
  wasm.ext_secp_recover.apply(wasm, [8].concat(_toConsumableArray(_init.bridge.allocU8a(msgHash)), _toConsumableArray(_init.bridge.allocU8a(sig)), [recovery]));
  return _init.bridge.resultU8a();
});
exports.secp256k1Recover = secp256k1Recover;
var secp256k1Sign = withWasm(function (wasm, msgHash, seckey) {
  wasm.ext_secp_sign.apply(wasm, [8].concat(_toConsumableArray(_init.bridge.allocU8a(msgHash)), _toConsumableArray(_init.bridge.allocU8a(seckey))));
  return _init.bridge.resultU8a();
});
exports.secp256k1Sign = secp256k1Sign;
var sr25519DeriveKeypairHard = withWasm(function (wasm, pair, cc) {
  wasm.ext_sr_derive_keypair_hard.apply(wasm, [8].concat(_toConsumableArray(_init.bridge.allocU8a(pair)), _toConsumableArray(_init.bridge.allocU8a(cc))));
  return _init.bridge.resultU8a();
});
exports.sr25519DeriveKeypairHard = sr25519DeriveKeypairHard;
var sr25519DeriveKeypairSoft = withWasm(function (wasm, pair, cc) {
  wasm.ext_sr_derive_keypair_soft.apply(wasm, [8].concat(_toConsumableArray(_init.bridge.allocU8a(pair)), _toConsumableArray(_init.bridge.allocU8a(cc))));
  return _init.bridge.resultU8a();
});
exports.sr25519DeriveKeypairSoft = sr25519DeriveKeypairSoft;
var sr25519DerivePublicSoft = withWasm(function (wasm, pubkey, cc) {
  wasm.ext_sr_derive_public_soft.apply(wasm, [8].concat(_toConsumableArray(_init.bridge.allocU8a(pubkey)), _toConsumableArray(_init.bridge.allocU8a(cc))));
  return _init.bridge.resultU8a();
});
exports.sr25519DerivePublicSoft = sr25519DerivePublicSoft;
var sr25519KeypairFromSeed = withWasm(function (wasm, seed) {
  wasm.ext_sr_from_seed.apply(wasm, [8].concat(_toConsumableArray(_init.bridge.allocU8a(seed))));
  return _init.bridge.resultU8a();
});
exports.sr25519KeypairFromSeed = sr25519KeypairFromSeed;
var sr25519Sign = withWasm(function (wasm, pubkey, secret, message) {
  wasm.ext_sr_sign.apply(wasm, [8].concat(_toConsumableArray(_init.bridge.allocU8a(pubkey)), _toConsumableArray(_init.bridge.allocU8a(secret)), _toConsumableArray(_init.bridge.allocU8a(message))));
  return _init.bridge.resultU8a();
});
exports.sr25519Sign = sr25519Sign;
var sr25519Verify = withWasm(function (wasm, signature, message, pubkey) {
  var ret = wasm.ext_sr_verify.apply(wasm, _toConsumableArray(_init.bridge.allocU8a(signature)).concat(_toConsumableArray(_init.bridge.allocU8a(message)), _toConsumableArray(_init.bridge.allocU8a(pubkey))));
  return ret !== 0;
});
exports.sr25519Verify = sr25519Verify;
var sr25519Agree = withWasm(function (wasm, pubkey, secret) {
  wasm.ext_sr_agree.apply(wasm, [8].concat(_toConsumableArray(_init.bridge.allocU8a(pubkey)), _toConsumableArray(_init.bridge.allocU8a(secret))));
  return _init.bridge.resultU8a();
});
exports.sr25519Agree = sr25519Agree;
var vrfSign = withWasm(function (wasm, secret, context, message, extra) {
  wasm.ext_vrf_sign.apply(wasm, [8].concat(_toConsumableArray(_init.bridge.allocU8a(secret)), _toConsumableArray(_init.bridge.allocU8a(context)), _toConsumableArray(_init.bridge.allocU8a(message)), _toConsumableArray(_init.bridge.allocU8a(extra))));
  return _init.bridge.resultU8a();
});
exports.vrfSign = vrfSign;
var vrfVerify = withWasm(function (wasm, pubkey, context, message, extra, outAndProof) {
  var ret = wasm.ext_vrf_verify.apply(wasm, _toConsumableArray(_init.bridge.allocU8a(pubkey)).concat(_toConsumableArray(_init.bridge.allocU8a(context)), _toConsumableArray(_init.bridge.allocU8a(message)), _toConsumableArray(_init.bridge.allocU8a(extra)), _toConsumableArray(_init.bridge.allocU8a(outAndProof))));
  return ret !== 0;
});
exports.vrfVerify = vrfVerify;
var blake2b = withWasm(function (wasm, data, key, size) {
  wasm.ext_blake2b.apply(wasm, [8].concat(_toConsumableArray(_init.bridge.allocU8a(data)), _toConsumableArray(_init.bridge.allocU8a(key)), [size]));
  return _init.bridge.resultU8a();
});
exports.blake2b = blake2b;
var hmacSha256 = withWasm(function (wasm, key, data) {
  wasm.ext_hmac_sha256.apply(wasm, [8].concat(_toConsumableArray(_init.bridge.allocU8a(key)), _toConsumableArray(_init.bridge.allocU8a(data))));
  return _init.bridge.resultU8a();
});
exports.hmacSha256 = hmacSha256;
var hmacSha512 = withWasm(function (wasm, key, data) {
  wasm.ext_hmac_sha512.apply(wasm, [8].concat(_toConsumableArray(_init.bridge.allocU8a(key)), _toConsumableArray(_init.bridge.allocU8a(data))));
  return _init.bridge.resultU8a();
});
exports.hmacSha512 = hmacSha512;
var keccak256 = withWasm(function (wasm, data) {
  wasm.ext_keccak256.apply(wasm, [8].concat(_toConsumableArray(_init.bridge.allocU8a(data))));
  return _init.bridge.resultU8a();
});
exports.keccak256 = keccak256;
var keccak512 = withWasm(function (wasm, data) {
  wasm.ext_keccak512.apply(wasm, [8].concat(_toConsumableArray(_init.bridge.allocU8a(data))));
  return _init.bridge.resultU8a();
});
exports.keccak512 = keccak512;
var pbkdf2 = withWasm(function (wasm, data, salt, rounds) {
  wasm.ext_pbkdf2.apply(wasm, [8].concat(_toConsumableArray(_init.bridge.allocU8a(data)), _toConsumableArray(_init.bridge.allocU8a(salt)), [rounds]));
  return _init.bridge.resultU8a();
});
exports.pbkdf2 = pbkdf2;
var scrypt = withWasm(function (wasm, password, salt, log2n, r, p) {
  wasm.ext_scrypt.apply(wasm, [8].concat(_toConsumableArray(_init.bridge.allocU8a(password)), _toConsumableArray(_init.bridge.allocU8a(salt)), [log2n, r, p]));
  return _init.bridge.resultU8a();
});
exports.scrypt = scrypt;
var sha256 = withWasm(function (wasm, data) {
  wasm.ext_sha256.apply(wasm, [8].concat(_toConsumableArray(_init.bridge.allocU8a(data))));
  return _init.bridge.resultU8a();
});
exports.sha256 = sha256;
var sha512 = withWasm(function (wasm, data) {
  wasm.ext_sha512.apply(wasm, [8].concat(_toConsumableArray(_init.bridge.allocU8a(data))));
  return _init.bridge.resultU8a();
});
exports.sha512 = sha512;
var twox = withWasm(function (wasm, data, rounds) {
  wasm.ext_twox.apply(wasm, [8].concat(_toConsumableArray(_init.bridge.allocU8a(data)), [rounds]));
  return _init.bridge.resultU8a();
});
exports.twox = twox;

function isReady() {
  return !!_init.bridge.wasm;
}

function waitReady() {
  return _waitReady.apply(this, arguments);
}

function _waitReady() {
  _waitReady = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
    var wasm;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            _context.next = 3;
            return (0, _init.initBridge)();

          case 3:
            wasm = _context.sent;
            return _context.abrupt("return", !!wasm);

          case 7:
            _context.prev = 7;
            _context.t0 = _context["catch"](0);
            return _context.abrupt("return", false);

          case 10:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[0, 7]]);
  }));
  return _waitReady.apply(this, arguments);
}
},{"./init.js":"node_modules/@polkadot/wasm-crypto/init.js","./packageInfo.js":"node_modules/@polkadot/wasm-crypto/packageInfo.js"}],"node_modules/@polkadot/wasm-crypto/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

require("./detectPackage.js");

var _bundle = require("./bundle.js");

Object.keys(_bundle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _bundle[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bundle[key];
    }
  });
});
},{"./detectPackage.js":"node_modules/@polkadot/wasm-crypto/detectPackage.js","./bundle.js":"node_modules/@polkadot/wasm-crypto/bundle.js"}],"node_modules/@polkadot/util-crypto/crypto.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cryptoIsReady = void 0;
exports.cryptoWaitReady = cryptoWaitReady;

var _util = require("@polkadot/util");

var _wasmCrypto = require("@polkadot/wasm-crypto");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
var cryptoIsReady = _wasmCrypto.isReady;
exports.cryptoIsReady = cryptoIsReady;

function cryptoWaitReady() {
  return (0, _wasmCrypto.waitReady)().then(function () {
    (0, _util.assert)((0, _wasmCrypto.isReady)(), 'Unable to initialize @polkadot/util-crypto');
    return true;
  }).catch(function () {
    return false;
  });
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js"}],"node_modules/@noble/hashes/_assert.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = void 0;
function number(n) {
    if (!Number.isSafeInteger(n) || n < 0)
        throw new Error(`Wrong positive integer: ${n}`);
}
exports.number = number;
function bool(b) {
    if (typeof b !== 'boolean')
        throw new Error(`Expected boolean, not ${b}`);
}
exports.bool = bool;
function bytes(b, ...lengths) {
    if (!(b instanceof Uint8Array))
        throw new TypeError('Expected Uint8Array');
    if (lengths.length > 0 && !lengths.includes(b.length))
        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);
}
exports.bytes = bytes;
function hash(hash) {
    if (typeof hash !== 'function' || typeof hash.create !== 'function')
        throw new Error('Hash should be wrapped by utils.wrapConstructor');
    number(hash.outputLen);
    number(hash.blockLen);
}
exports.hash = hash;
function exists(instance, checkFinished = true) {
    if (instance.destroyed)
        throw new Error('Hash instance has been destroyed');
    if (checkFinished && instance.finished)
        throw new Error('Hash#digest() has already been called');
}
exports.exists = exists;
function output(out, instance) {
    bytes(out);
    const min = instance.outputLen;
    if (out.length < min) {
        throw new Error(`digestInto() expects output buffer of length at least ${min}`);
    }
}
exports.output = output;
const assert = {
    number,
    bool,
    bytes,
    hash,
    exists,
    output,
};
exports.default = assert;

},{}],"node_modules/@noble/hashes/cryptoBrowser.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.crypto = void 0;
exports.crypto = {
    node: undefined,
    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,
};

},{}],"node_modules/@noble/hashes/utils.js":[function(require,module,exports) {
"use strict";
/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
Object.defineProperty(exports, "__esModule", { value: true });
exports.randomBytes = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;
// The import here is via the package name. This is to ensure
// that exports mapping/resolution does fall into place.
const crypto_1 = require("@noble/hashes/crypto");
// Cast array to different type
const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);
exports.u8 = u8;
const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));
exports.u32 = u32;
// Cast array to view
const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);
exports.createView = createView;
// The rotate right (circular right shift) operation for uint32
const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);
exports.rotr = rotr;
exports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;
// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.
// So, just to be sure not to corrupt anything.
if (!exports.isLE)
    throw new Error('Non little-endian hardware is not supported');
const hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));
/**
 * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))
 */
function bytesToHex(uint8a) {
    // pre-caching improves the speed 6x
    if (!(uint8a instanceof Uint8Array))
        throw new Error('Uint8Array expected');
    let hex = '';
    for (let i = 0; i < uint8a.length; i++) {
        hex += hexes[uint8a[i]];
    }
    return hex;
}
exports.bytesToHex = bytesToHex;
/**
 * @example hexToBytes('deadbeef')
 */
function hexToBytes(hex) {
    if (typeof hex !== 'string') {
        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);
    }
    if (hex.length % 2)
        throw new Error('hexToBytes: received invalid unpadded hex');
    const array = new Uint8Array(hex.length / 2);
    for (let i = 0; i < array.length; i++) {
        const j = i * 2;
        const hexByte = hex.slice(j, j + 2);
        const byte = Number.parseInt(hexByte, 16);
        if (Number.isNaN(byte) || byte < 0)
            throw new Error('Invalid byte sequence');
        array[i] = byte;
    }
    return array;
}
exports.hexToBytes = hexToBytes;
// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise
// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.
const nextTick = async () => { };
exports.nextTick = nextTick;
// Returns control to thread each 'tick' ms to avoid blocking
async function asyncLoop(iters, tick, cb) {
    let ts = Date.now();
    for (let i = 0; i < iters; i++) {
        cb(i);
        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too
        const diff = Date.now() - ts;
        if (diff >= 0 && diff < tick)
            continue;
        await (0, exports.nextTick)();
        ts += diff;
    }
}
exports.asyncLoop = asyncLoop;
function utf8ToBytes(str) {
    if (typeof str !== 'string') {
        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);
    }
    return new TextEncoder().encode(str);
}
exports.utf8ToBytes = utf8ToBytes;
function toBytes(data) {
    if (typeof data === 'string')
        data = utf8ToBytes(data);
    if (!(data instanceof Uint8Array))
        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);
    return data;
}
exports.toBytes = toBytes;
/**
 * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`
 * @example concatBytes(buf1, buf2)
 */
function concatBytes(...arrays) {
    if (!arrays.every((a) => a instanceof Uint8Array))
        throw new Error('Uint8Array list expected');
    if (arrays.length === 1)
        return arrays[0];
    const length = arrays.reduce((a, arr) => a + arr.length, 0);
    const result = new Uint8Array(length);
    for (let i = 0, pad = 0; i < arrays.length; i++) {
        const arr = arrays[i];
        result.set(arr, pad);
        pad += arr.length;
    }
    return result;
}
exports.concatBytes = concatBytes;
// For runtime check if class implements interface
class Hash {
    // Safe version that clones internal state
    clone() {
        return this._cloneInto();
    }
}
exports.Hash = Hash;
// Check if object doens't have custom constructor (like Uint8Array/Array)
const isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;
function checkOpts(defaults, opts) {
    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))
        throw new TypeError('Options should be object or undefined');
    const merged = Object.assign(defaults, opts);
    return merged;
}
exports.checkOpts = checkOpts;
function wrapConstructor(hashConstructor) {
    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();
    const tmp = hashConstructor();
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = () => hashConstructor();
    return hashC;
}
exports.wrapConstructor = wrapConstructor;
function wrapConstructorWithOpts(hashCons) {
    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();
    const tmp = hashCons({});
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = (opts) => hashCons(opts);
    return hashC;
}
exports.wrapConstructorWithOpts = wrapConstructorWithOpts;
/**
 * Secure PRNG
 */
function randomBytes(bytesLength = 32) {
    if (crypto_1.crypto.web) {
        return crypto_1.crypto.web.getRandomValues(new Uint8Array(bytesLength));
    }
    else if (crypto_1.crypto.node) {
        return new Uint8Array(crypto_1.crypto.node.randomBytes(bytesLength).buffer);
    }
    else {
        throw new Error("The environment doesn't have randomBytes function");
    }
}
exports.randomBytes = randomBytes;

},{"@noble/hashes/crypto":"node_modules/@noble/hashes/cryptoBrowser.js"}],"node_modules/@noble/hashes/hmac.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hmac = void 0;
const _assert_js_1 = require("./_assert.js");
const utils_js_1 = require("./utils.js");
// HMAC (RFC 2104)
class HMAC extends utils_js_1.Hash {
    constructor(hash, _key) {
        super();
        this.finished = false;
        this.destroyed = false;
        _assert_js_1.default.hash(hash);
        const key = (0, utils_js_1.toBytes)(_key);
        this.iHash = hash.create();
        if (!(this.iHash instanceof utils_js_1.Hash))
            throw new TypeError('Expected instance of class which extends utils.Hash');
        const blockLen = (this.blockLen = this.iHash.blockLen);
        this.outputLen = this.iHash.outputLen;
        const pad = new Uint8Array(blockLen);
        // blockLen can be bigger than outputLen
        pad.set(key.length > this.iHash.blockLen ? hash.create().update(key).digest() : key);
        for (let i = 0; i < pad.length; i++)
            pad[i] ^= 0x36;
        this.iHash.update(pad);
        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone
        this.oHash = hash.create();
        // Undo internal XOR && apply outer XOR
        for (let i = 0; i < pad.length; i++)
            pad[i] ^= 0x36 ^ 0x5c;
        this.oHash.update(pad);
        pad.fill(0);
    }
    update(buf) {
        _assert_js_1.default.exists(this);
        this.iHash.update(buf);
        return this;
    }
    digestInto(out) {
        _assert_js_1.default.exists(this);
        _assert_js_1.default.bytes(out, this.outputLen);
        this.finished = true;
        this.iHash.digestInto(out);
        this.oHash.update(out);
        this.oHash.digestInto(out);
        this.destroy();
    }
    digest() {
        const out = new Uint8Array(this.oHash.outputLen);
        this.digestInto(out);
        return out;
    }
    _cloneInto(to) {
        // Create new instance without calling constructor since key already in state and we don't know it.
        to || (to = Object.create(Object.getPrototypeOf(this), {}));
        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;
        to = to;
        to.finished = finished;
        to.destroyed = destroyed;
        to.blockLen = blockLen;
        to.outputLen = outputLen;
        to.oHash = oHash._cloneInto(to.oHash);
        to.iHash = iHash._cloneInto(to.iHash);
        return to;
    }
    destroy() {
        this.destroyed = true;
        this.oHash.destroy();
        this.iHash.destroy();
    }
}
/**
 * HMAC: RFC2104 message authentication code.
 * @param hash - function that would be used e.g. sha256
 * @param key - message key
 * @param message - message data
 */
const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();
exports.hmac = hmac;
exports.hmac.create = (hash, key) => new HMAC(hash, key);

},{"./_assert.js":"node_modules/@noble/hashes/_assert.js","./utils.js":"node_modules/@noble/hashes/utils.js"}],"node_modules/@noble/hashes/_sha2.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SHA2 = void 0;
const _assert_js_1 = require("./_assert.js");
const utils_js_1 = require("./utils.js");
// Polyfill for Safari 14
function setBigUint64(view, byteOffset, value, isLE) {
    if (typeof view.setBigUint64 === 'function')
        return view.setBigUint64(byteOffset, value, isLE);
    const _32n = BigInt(32);
    const _u32_max = BigInt(0xffffffff);
    const wh = Number((value >> _32n) & _u32_max);
    const wl = Number(value & _u32_max);
    const h = isLE ? 4 : 0;
    const l = isLE ? 0 : 4;
    view.setUint32(byteOffset + h, wh, isLE);
    view.setUint32(byteOffset + l, wl, isLE);
}
// Base SHA2 class (RFC 6234)
class SHA2 extends utils_js_1.Hash {
    constructor(blockLen, outputLen, padOffset, isLE) {
        super();
        this.blockLen = blockLen;
        this.outputLen = outputLen;
        this.padOffset = padOffset;
        this.isLE = isLE;
        this.finished = false;
        this.length = 0;
        this.pos = 0;
        this.destroyed = false;
        this.buffer = new Uint8Array(blockLen);
        this.view = (0, utils_js_1.createView)(this.buffer);
    }
    update(data) {
        _assert_js_1.default.exists(this);
        const { view, buffer, blockLen } = this;
        data = (0, utils_js_1.toBytes)(data);
        const len = data.length;
        for (let pos = 0; pos < len;) {
            const take = Math.min(blockLen - this.pos, len - pos);
            // Fast path: we have at least one block in input, cast it to view and process
            if (take === blockLen) {
                const dataView = (0, utils_js_1.createView)(data);
                for (; blockLen <= len - pos; pos += blockLen)
                    this.process(dataView, pos);
                continue;
            }
            buffer.set(data.subarray(pos, pos + take), this.pos);
            this.pos += take;
            pos += take;
            if (this.pos === blockLen) {
                this.process(view, 0);
                this.pos = 0;
            }
        }
        this.length += data.length;
        this.roundClean();
        return this;
    }
    digestInto(out) {
        _assert_js_1.default.exists(this);
        _assert_js_1.default.output(out, this);
        this.finished = true;
        // Padding
        // We can avoid allocation of buffer for padding completely if it
        // was previously not allocated here. But it won't change performance.
        const { buffer, view, blockLen, isLE } = this;
        let { pos } = this;
        // append the bit '1' to the message
        buffer[pos++] = 0b10000000;
        this.buffer.subarray(pos).fill(0);
        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again
        if (this.padOffset > blockLen - pos) {
            this.process(view, 0);
            pos = 0;
        }
        // Pad until full block byte with zeros
        for (let i = pos; i < blockLen; i++)
            buffer[i] = 0;
        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that
        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.
        // So we just write lowest 64 bits of that value.
        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);
        this.process(view, 0);
        const oview = (0, utils_js_1.createView)(out);
        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));
    }
    digest() {
        const { buffer, outputLen } = this;
        this.digestInto(buffer);
        const res = buffer.slice(0, outputLen);
        this.destroy();
        return res;
    }
    _cloneInto(to) {
        to || (to = new this.constructor());
        to.set(...this.get());
        const { blockLen, buffer, length, finished, destroyed, pos } = this;
        to.length = length;
        to.pos = pos;
        to.finished = finished;
        to.destroyed = destroyed;
        if (length % blockLen)
            to.buffer.set(buffer);
        return to;
    }
}
exports.SHA2 = SHA2;

},{"./_assert.js":"node_modules/@noble/hashes/_assert.js","./utils.js":"node_modules/@noble/hashes/utils.js"}],"node_modules/@noble/hashes/sha256.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.sha256 = void 0;
const _sha2_js_1 = require("./_sha2.js");
const utils_js_1 = require("./utils.js");
// Choice: a ? b : c
const Chi = (a, b, c) => (a & b) ^ (~a & c);
// Majority function, true if any two inpust is true
const Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);
// Round constants:
// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)
// prettier-ignore
const SHA256_K = new Uint32Array([
    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
]);
// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):
// prettier-ignore
const IV = new Uint32Array([
    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
]);
// Temporary buffer, not used to store anything between runs
// Named this way because it matches specification.
const SHA256_W = new Uint32Array(64);
class SHA256 extends _sha2_js_1.SHA2 {
    constructor() {
        super(64, 32, 8, false);
        // We cannot use array here since array allows indexing by variable
        // which means optimizer/compiler cannot use registers.
        this.A = IV[0] | 0;
        this.B = IV[1] | 0;
        this.C = IV[2] | 0;
        this.D = IV[3] | 0;
        this.E = IV[4] | 0;
        this.F = IV[5] | 0;
        this.G = IV[6] | 0;
        this.H = IV[7] | 0;
    }
    get() {
        const { A, B, C, D, E, F, G, H } = this;
        return [A, B, C, D, E, F, G, H];
    }
    // prettier-ignore
    set(A, B, C, D, E, F, G, H) {
        this.A = A | 0;
        this.B = B | 0;
        this.C = C | 0;
        this.D = D | 0;
        this.E = E | 0;
        this.F = F | 0;
        this.G = G | 0;
        this.H = H | 0;
    }
    process(view, offset) {
        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array
        for (let i = 0; i < 16; i++, offset += 4)
            SHA256_W[i] = view.getUint32(offset, false);
        for (let i = 16; i < 64; i++) {
            const W15 = SHA256_W[i - 15];
            const W2 = SHA256_W[i - 2];
            const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ (W15 >>> 3);
            const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ (W2 >>> 10);
            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;
        }
        // Compression function main loop, 64 rounds
        let { A, B, C, D, E, F, G, H } = this;
        for (let i = 0; i < 64; i++) {
            const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);
            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;
            const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);
            const T2 = (sigma0 + Maj(A, B, C)) | 0;
            H = G;
            G = F;
            F = E;
            E = (D + T1) | 0;
            D = C;
            C = B;
            B = A;
            A = (T1 + T2) | 0;
        }
        // Add the compressed chunk to the current hash value
        A = (A + this.A) | 0;
        B = (B + this.B) | 0;
        C = (C + this.C) | 0;
        D = (D + this.D) | 0;
        E = (E + this.E) | 0;
        F = (F + this.F) | 0;
        G = (G + this.G) | 0;
        H = (H + this.H) | 0;
        this.set(A, B, C, D, E, F, G, H);
    }
    roundClean() {
        SHA256_W.fill(0);
    }
    destroy() {
        this.set(0, 0, 0, 0, 0, 0, 0, 0);
        this.buffer.fill(0);
    }
}
/**
 * SHA2-256 hash function
 * @param message - data that would be hashed
 */
exports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());

},{"./_sha2.js":"node_modules/@noble/hashes/_sha2.js","./utils.js":"node_modules/@noble/hashes/utils.js"}],"node_modules/@noble/hashes/_u64.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.add = exports.toBig = exports.split = exports.fromBig = void 0;
const U32_MASK64 = BigInt(2 ** 32 - 1);
const _32n = BigInt(32);
// We are not using BigUint64Array, because they are extremely slow as per 2022
function fromBig(n, le = false) {
    if (le)
        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };
    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };
}
exports.fromBig = fromBig;
function split(lst, le = false) {
    let Ah = new Uint32Array(lst.length);
    let Al = new Uint32Array(lst.length);
    for (let i = 0; i < lst.length; i++) {
        const { h, l } = fromBig(lst[i], le);
        [Ah[i], Al[i]] = [h, l];
    }
    return [Ah, Al];
}
exports.split = split;
const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);
exports.toBig = toBig;
// for Shift in [0, 32)
const shrSH = (h, l, s) => h >>> s;
const shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);
// Right rotate for Shift in [1, 32)
const rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));
const rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);
// Right rotate for Shift in (32, 64), NOTE: 32 is special case.
const rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));
const rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));
// Right rotate for shift===32 (just swaps l&h)
const rotr32H = (h, l) => l;
const rotr32L = (h, l) => h;
// Left rotate for Shift in [1, 32)
const rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));
const rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));
// Left rotate for Shift in (32, 64), NOTE: 32 is special case.
const rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));
const rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));
// JS uses 32-bit signed integers for bitwise operations which means we cannot
// simple take carry out of low bit sum by shift, we need to use division.
// Removing "export" has 5% perf penalty -_-
function add(Ah, Al, Bh, Bl) {
    const l = (Al >>> 0) + (Bl >>> 0);
    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };
}
exports.add = add;
// Addition with more than 2 elements
const add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);
const add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;
const add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);
const add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;
const add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);
const add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;
// prettier-ignore
const u64 = {
    fromBig, split, toBig: exports.toBig,
    shrSH, shrSL,
    rotrSH, rotrSL, rotrBH, rotrBL,
    rotr32H, rotr32L,
    rotlSH, rotlSL, rotlBH, rotlBL,
    add, add3L, add3H, add4L, add4H, add5H, add5L,
};
exports.default = u64;

},{}],"node_modules/@noble/hashes/sha512.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.sha384 = exports.sha512_256 = exports.sha512 = exports.SHA512 = void 0;
const _sha2_js_1 = require("./_sha2.js");
const _u64_js_1 = require("./_u64.js");
const utils_js_1 = require("./utils.js");
// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):
// prettier-ignore
const [SHA512_Kh, SHA512_Kl] = _u64_js_1.default.split([
    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',
    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',
    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',
    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',
    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',
    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',
    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',
    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',
    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',
    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',
    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',
    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',
    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',
    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',
    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',
    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',
    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',
    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',
    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',
    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'
].map(n => BigInt(n)));
// Temporary buffer, not used to store anything between runs
const SHA512_W_H = new Uint32Array(80);
const SHA512_W_L = new Uint32Array(80);
class SHA512 extends _sha2_js_1.SHA2 {
    constructor() {
        super(128, 64, 16, false);
        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.
        // Also looks cleaner and easier to verify with spec.
        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):
        // h -- high 32 bits, l -- low 32 bits
        this.Ah = 0x6a09e667 | 0;
        this.Al = 0xf3bcc908 | 0;
        this.Bh = 0xbb67ae85 | 0;
        this.Bl = 0x84caa73b | 0;
        this.Ch = 0x3c6ef372 | 0;
        this.Cl = 0xfe94f82b | 0;
        this.Dh = 0xa54ff53a | 0;
        this.Dl = 0x5f1d36f1 | 0;
        this.Eh = 0x510e527f | 0;
        this.El = 0xade682d1 | 0;
        this.Fh = 0x9b05688c | 0;
        this.Fl = 0x2b3e6c1f | 0;
        this.Gh = 0x1f83d9ab | 0;
        this.Gl = 0xfb41bd6b | 0;
        this.Hh = 0x5be0cd19 | 0;
        this.Hl = 0x137e2179 | 0;
    }
    // prettier-ignore
    get() {
        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;
        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];
    }
    // prettier-ignore
    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {
        this.Ah = Ah | 0;
        this.Al = Al | 0;
        this.Bh = Bh | 0;
        this.Bl = Bl | 0;
        this.Ch = Ch | 0;
        this.Cl = Cl | 0;
        this.Dh = Dh | 0;
        this.Dl = Dl | 0;
        this.Eh = Eh | 0;
        this.El = El | 0;
        this.Fh = Fh | 0;
        this.Fl = Fl | 0;
        this.Gh = Gh | 0;
        this.Gl = Gl | 0;
        this.Hh = Hh | 0;
        this.Hl = Hl | 0;
    }
    process(view, offset) {
        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array
        for (let i = 0; i < 16; i++, offset += 4) {
            SHA512_W_H[i] = view.getUint32(offset);
            SHA512_W_L[i] = view.getUint32((offset += 4));
        }
        for (let i = 16; i < 80; i++) {
            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)
            const W15h = SHA512_W_H[i - 15] | 0;
            const W15l = SHA512_W_L[i - 15] | 0;
            const s0h = _u64_js_1.default.rotrSH(W15h, W15l, 1) ^ _u64_js_1.default.rotrSH(W15h, W15l, 8) ^ _u64_js_1.default.shrSH(W15h, W15l, 7);
            const s0l = _u64_js_1.default.rotrSL(W15h, W15l, 1) ^ _u64_js_1.default.rotrSL(W15h, W15l, 8) ^ _u64_js_1.default.shrSL(W15h, W15l, 7);
            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)
            const W2h = SHA512_W_H[i - 2] | 0;
            const W2l = SHA512_W_L[i - 2] | 0;
            const s1h = _u64_js_1.default.rotrSH(W2h, W2l, 19) ^ _u64_js_1.default.rotrBH(W2h, W2l, 61) ^ _u64_js_1.default.shrSH(W2h, W2l, 6);
            const s1l = _u64_js_1.default.rotrSL(W2h, W2l, 19) ^ _u64_js_1.default.rotrBL(W2h, W2l, 61) ^ _u64_js_1.default.shrSL(W2h, W2l, 6);
            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];
            const SUMl = _u64_js_1.default.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);
            const SUMh = _u64_js_1.default.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);
            SHA512_W_H[i] = SUMh | 0;
            SHA512_W_L[i] = SUMl | 0;
        }
        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;
        // Compression function main loop, 80 rounds
        for (let i = 0; i < 80; i++) {
            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)
            const sigma1h = _u64_js_1.default.rotrSH(Eh, El, 14) ^ _u64_js_1.default.rotrSH(Eh, El, 18) ^ _u64_js_1.default.rotrBH(Eh, El, 41);
            const sigma1l = _u64_js_1.default.rotrSL(Eh, El, 14) ^ _u64_js_1.default.rotrSL(Eh, El, 18) ^ _u64_js_1.default.rotrBL(Eh, El, 41);
            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;
            const CHIh = (Eh & Fh) ^ (~Eh & Gh);
            const CHIl = (El & Fl) ^ (~El & Gl);
            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]
            // prettier-ignore
            const T1ll = _u64_js_1.default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);
            const T1h = _u64_js_1.default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);
            const T1l = T1ll | 0;
            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)
            const sigma0h = _u64_js_1.default.rotrSH(Ah, Al, 28) ^ _u64_js_1.default.rotrBH(Ah, Al, 34) ^ _u64_js_1.default.rotrBH(Ah, Al, 39);
            const sigma0l = _u64_js_1.default.rotrSL(Ah, Al, 28) ^ _u64_js_1.default.rotrBL(Ah, Al, 34) ^ _u64_js_1.default.rotrBL(Ah, Al, 39);
            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);
            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);
            Hh = Gh | 0;
            Hl = Gl | 0;
            Gh = Fh | 0;
            Gl = Fl | 0;
            Fh = Eh | 0;
            Fl = El | 0;
            ({ h: Eh, l: El } = _u64_js_1.default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));
            Dh = Ch | 0;
            Dl = Cl | 0;
            Ch = Bh | 0;
            Cl = Bl | 0;
            Bh = Ah | 0;
            Bl = Al | 0;
            const All = _u64_js_1.default.add3L(T1l, sigma0l, MAJl);
            Ah = _u64_js_1.default.add3H(All, T1h, sigma0h, MAJh);
            Al = All | 0;
        }
        // Add the compressed chunk to the current hash value
        ({ h: Ah, l: Al } = _u64_js_1.default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));
        ({ h: Bh, l: Bl } = _u64_js_1.default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));
        ({ h: Ch, l: Cl } = _u64_js_1.default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));
        ({ h: Dh, l: Dl } = _u64_js_1.default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));
        ({ h: Eh, l: El } = _u64_js_1.default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));
        ({ h: Fh, l: Fl } = _u64_js_1.default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));
        ({ h: Gh, l: Gl } = _u64_js_1.default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));
        ({ h: Hh, l: Hl } = _u64_js_1.default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));
        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);
    }
    roundClean() {
        SHA512_W_H.fill(0);
        SHA512_W_L.fill(0);
    }
    destroy() {
        this.buffer.fill(0);
        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    }
}
exports.SHA512 = SHA512;
class SHA512_256 extends SHA512 {
    constructor() {
        super();
        // h -- high 32 bits, l -- low 32 bits
        this.Ah = 0x22312194 | 0;
        this.Al = 0xfc2bf72c | 0;
        this.Bh = 0x9f555fa3 | 0;
        this.Bl = 0xc84c64c2 | 0;
        this.Ch = 0x2393b86b | 0;
        this.Cl = 0x6f53b151 | 0;
        this.Dh = 0x96387719 | 0;
        this.Dl = 0x5940eabd | 0;
        this.Eh = 0x96283ee2 | 0;
        this.El = 0xa88effe3 | 0;
        this.Fh = 0xbe5e1e25 | 0;
        this.Fl = 0x53863992 | 0;
        this.Gh = 0x2b0199fc | 0;
        this.Gl = 0x2c85b8aa | 0;
        this.Hh = 0x0eb72ddc | 0;
        this.Hl = 0x81c52ca2 | 0;
        this.outputLen = 32;
    }
}
class SHA384 extends SHA512 {
    constructor() {
        super();
        // h -- high 32 bits, l -- low 32 bits
        this.Ah = 0xcbbb9d5d | 0;
        this.Al = 0xc1059ed8 | 0;
        this.Bh = 0x629a292a | 0;
        this.Bl = 0x367cd507 | 0;
        this.Ch = 0x9159015a | 0;
        this.Cl = 0x3070dd17 | 0;
        this.Dh = 0x152fecd8 | 0;
        this.Dl = 0xf70e5939 | 0;
        this.Eh = 0x67332667 | 0;
        this.El = 0xffc00b31 | 0;
        this.Fh = 0x8eb44a87 | 0;
        this.Fl = 0x68581511 | 0;
        this.Gh = 0xdb0c2e0d | 0;
        this.Gl = 0x64f98fa7 | 0;
        this.Hh = 0x47b5481d | 0;
        this.Hl = 0xbefa4fa4 | 0;
        this.outputLen = 48;
    }
}
exports.sha512 = (0, utils_js_1.wrapConstructor)(() => new SHA512());
exports.sha512_256 = (0, utils_js_1.wrapConstructor)(() => new SHA512_256());
exports.sha384 = (0, utils_js_1.wrapConstructor)(() => new SHA384());

},{"./_sha2.js":"node_modules/@noble/hashes/_sha2.js","./_u64.js":"node_modules/@noble/hashes/_u64.js","./utils.js":"node_modules/@noble/hashes/utils.js"}],"node_modules/@polkadot/util-crypto/hmac/shaAsU8a.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hmacSha512AsU8a = exports.hmacSha256AsU8a = void 0;
exports.hmacShaAsU8a = hmacShaAsU8a;

var _hmac = require("@noble/hashes/hmac");

var _sha = require("@noble/hashes/sha256");

var _sha2 = require("@noble/hashes/sha512");

var _util = require("@polkadot/util");

var _wasmCrypto = require("@polkadot/wasm-crypto");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
var JS_HASH = {
  256: _sha.sha256,
  512: _sha2.sha512
};
var WA_MHAC = {
  256: _wasmCrypto.hmacSha256,
  512: _wasmCrypto.hmacSha512
};

function createSha(bitLength) {
  return function (key, data, onlyJs) {
    return hmacShaAsU8a(key, data, bitLength, onlyJs);
  };
}
/**
 * @name hmacShaAsU8a
 * @description creates a Hmac Sha (256/512) Uint8Array from the key & data
 */


function hmacShaAsU8a(key, data) {
  var bitLength = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 256;
  var onlyJs = arguments.length > 3 ? arguments[3] : undefined;
  var u8aKey = (0, _util.u8aToU8a)(key);
  return !_util.hasBigInt || !onlyJs && (0, _wasmCrypto.isReady)() ? WA_MHAC[bitLength](u8aKey, data) : (0, _hmac.hmac)(JS_HASH[bitLength], u8aKey, data);
}
/**
 * @name hmacSha256AsU8a
 * @description creates a Hmac Sha256 Uint8Array from the key & data
 */


var hmacSha256AsU8a = createSha(256);
/**
 * @name hmacSha512AsU8a
 * @description creates a Hmac Sha512 Uint8Array from the key & data
 */

exports.hmacSha256AsU8a = hmacSha256AsU8a;
var hmacSha512AsU8a = createSha(512);
exports.hmacSha512AsU8a = hmacSha512AsU8a;
},{"@noble/hashes/hmac":"node_modules/@noble/hashes/hmac.js","@noble/hashes/sha256":"node_modules/@noble/hashes/sha256.js","@noble/hashes/sha512":"node_modules/@noble/hashes/sha512.js","@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js"}],"node_modules/@polkadot/util-crypto/hmac/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "hmacSha256AsU8a", {
  enumerable: true,
  get: function () {
    return _shaAsU8a.hmacSha256AsU8a;
  }
});
Object.defineProperty(exports, "hmacSha512AsU8a", {
  enumerable: true,
  get: function () {
    return _shaAsU8a.hmacSha512AsU8a;
  }
});
Object.defineProperty(exports, "hmacShaAsU8a", {
  enumerable: true,
  get: function () {
    return _shaAsU8a.hmacShaAsU8a;
  }
});

var _shaAsU8a = require("./shaAsU8a.js");
},{"./shaAsU8a.js":"node_modules/@polkadot/util-crypto/hmac/shaAsU8a.js"}],"node_modules/@polkadot/util-crypto/bundleInit.js":[function(require,module,exports) {
"use strict";

require("@polkadot/x-bigint/shim");

var _secp256k = require("@noble/secp256k1");

var _util = require("@polkadot/util");

var _crypto = require("./crypto.js");

var _index = require("./hmac/index.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Set overrides on the secp256k1 utils
//   - hmacShaSync - This needs to be set, unset by default
_secp256k.utils.hmacSha256Sync = function (key) {
  for (var _len = arguments.length, messages = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    messages[_key - 1] = arguments[_key];
  }

  return (0, _index.hmacSha256AsU8a)(key, _util.u8aConcat.apply(void 0, messages));
}; // start init process immediately


(0, _crypto.cryptoWaitReady)().catch(function () {// shouldn't happen, logged and caught inside cryptoWaitReady
});
},{"@polkadot/x-bigint/shim":"node_modules/@polkadot/x-bigint/shim.js","@noble/secp256k1":"node_modules/@noble/secp256k1/lib/esm/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","./crypto.js":"node_modules/@polkadot/util-crypto/crypto.js","./hmac/index.js":"node_modules/@polkadot/util-crypto/hmac/index.js"}],"node_modules/@scure/base/lib/esm/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.assertNumber = assertNumber;
exports.utils = exports.utf8 = exports.stringToBytes = exports.str = exports.hex = exports.bytesToString = exports.bytes = exports.bech32m = exports.bech32 = exports.base64url = exports.base64 = exports.base58xrp = exports.base58xmr = exports.base58flickr = exports.base58check = exports.base58 = exports.base32hex = exports.base32crockford = exports.base32 = exports.base16 = void 0;

/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */
function assertNumber(n) {
  if (!Number.isSafeInteger(n)) throw new Error(`Wrong integer: ${n}`);
}

function chain(...args) {
  const wrap = (a, b) => c => a(b(c));

  const encode = Array.from(args).reverse().reduce((acc, i) => acc ? wrap(acc, i.encode) : i.encode, undefined);
  const decode = args.reduce((acc, i) => acc ? wrap(acc, i.decode) : i.decode, undefined);
  return {
    encode,
    decode
  };
}

function alphabet(alphabet) {
  return {
    encode: digits => {
      if (!Array.isArray(digits) || digits.length && typeof digits[0] !== 'number') throw new Error('alphabet.encode input should be an array of numbers');
      return digits.map(i => {
        assertNumber(i);
        if (i < 0 || i >= alphabet.length) throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);
        return alphabet[i];
      });
    },
    decode: input => {
      if (!Array.isArray(input) || input.length && typeof input[0] !== 'string') throw new Error('alphabet.decode input should be array of strings');
      return input.map(letter => {
        if (typeof letter !== 'string') throw new Error(`alphabet.decode: not string element=${letter}`);
        const index = alphabet.indexOf(letter);
        if (index === -1) throw new Error(`Unknown letter: "${letter}". Allowed: ${alphabet}`);
        return index;
      });
    }
  };
}

function join(separator = '') {
  if (typeof separator !== 'string') throw new Error('join separator should be string');
  return {
    encode: from => {
      if (!Array.isArray(from) || from.length && typeof from[0] !== 'string') throw new Error('join.encode input should be array of strings');

      for (let i of from) if (typeof i !== 'string') throw new Error(`join.encode: non-string input=${i}`);

      return from.join(separator);
    },
    decode: to => {
      if (typeof to !== 'string') throw new Error('join.decode input should be string');
      return to.split(separator);
    }
  };
}

function padding(bits, chr = '=') {
  assertNumber(bits);
  if (typeof chr !== 'string') throw new Error('padding chr should be string');
  return {
    encode(data) {
      if (!Array.isArray(data) || data.length && typeof data[0] !== 'string') throw new Error('padding.encode input should be array of strings');

      for (let i of data) if (typeof i !== 'string') throw new Error(`padding.encode: non-string input=${i}`);

      while (data.length * bits % 8) data.push(chr);

      return data;
    },

    decode(input) {
      if (!Array.isArray(input) || input.length && typeof input[0] !== 'string') throw new Error('padding.encode input should be array of strings');

      for (let i of input) if (typeof i !== 'string') throw new Error(`padding.decode: non-string input=${i}`);

      let end = input.length;
      if (end * bits % 8) throw new Error('Invalid padding: string should have whole number of bytes');

      for (; end > 0 && input[end - 1] === chr; end--) {
        if (!((end - 1) * bits % 8)) throw new Error('Invalid padding: string has too much padding');
      }

      return input.slice(0, end);
    }

  };
}

function normalize(fn) {
  if (typeof fn !== 'function') throw new Error('normalize fn should be function');
  return {
    encode: from => from,
    decode: to => fn(to)
  };
}

function convertRadix(data, from, to) {
  if (from < 2) throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);
  if (to < 2) throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);
  if (!Array.isArray(data)) throw new Error('convertRadix: data should be array');
  if (!data.length) return [];
  let pos = 0;
  const res = [];
  const digits = Array.from(data);
  digits.forEach(d => {
    assertNumber(d);
    if (d < 0 || d >= from) throw new Error(`Wrong integer: ${d}`);
  });

  while (true) {
    let carry = 0;
    let done = true;

    for (let i = pos; i < digits.length; i++) {
      const digit = digits[i];
      const digitBase = from * carry + digit;

      if (!Number.isSafeInteger(digitBase) || from * carry / from !== carry || digitBase - digit !== from * carry) {
        throw new Error('convertRadix: carry overflow');
      }

      carry = digitBase % to;
      digits[i] = Math.floor(digitBase / to);
      if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase) throw new Error('convertRadix: carry overflow');
      if (!done) continue;else if (!digits[i]) pos = i;else done = false;
    }

    res.push(carry);
    if (done) break;
  }

  for (let i = 0; i < data.length - 1 && data[i] === 0; i++) res.push(0);

  return res.reverse();
}

const gcd = (a, b) => !b ? a : gcd(b, a % b);

const radix2carry = (from, to) => from + (to - gcd(from, to));

function convertRadix2(data, from, to, padding) {
  if (!Array.isArray(data)) throw new Error('convertRadix2: data should be array');
  if (from <= 0 || from > 32) throw new Error(`convertRadix2: wrong from=${from}`);
  if (to <= 0 || to > 32) throw new Error(`convertRadix2: wrong to=${to}`);

  if (radix2carry(from, to) > 32) {
    throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);
  }

  let carry = 0;
  let pos = 0;
  const mask = 2 ** to - 1;
  const res = [];

  for (const n of data) {
    assertNumber(n);
    if (n >= 2 ** from) throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);
    carry = carry << from | n;
    if (pos + from > 32) throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);
    pos += from;

    for (; pos >= to; pos -= to) res.push((carry >> pos - to & mask) >>> 0);

    carry &= 2 ** pos - 1;
  }

  carry = carry << to - pos & mask;
  if (!padding && pos >= from) throw new Error('Excess padding');
  if (!padding && carry) throw new Error(`Non-zero padding: ${carry}`);
  if (padding && pos > 0) res.push(carry >>> 0);
  return res;
}

function radix(num) {
  assertNumber(num);
  return {
    encode: bytes => {
      if (!(bytes instanceof Uint8Array)) throw new Error('radix.encode input should be Uint8Array');
      return convertRadix(Array.from(bytes), 2 ** 8, num);
    },
    decode: digits => {
      if (!Array.isArray(digits) || digits.length && typeof digits[0] !== 'number') throw new Error('radix.decode input should be array of strings');
      return Uint8Array.from(convertRadix(digits, num, 2 ** 8));
    }
  };
}

function radix2(bits, revPadding = false) {
  assertNumber(bits);
  if (bits <= 0 || bits > 32) throw new Error('radix2: bits should be in (0..32]');
  if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32) throw new Error('radix2: carry overflow');
  return {
    encode: bytes => {
      if (!(bytes instanceof Uint8Array)) throw new Error('radix2.encode input should be Uint8Array');
      return convertRadix2(Array.from(bytes), 8, bits, !revPadding);
    },
    decode: digits => {
      if (!Array.isArray(digits) || digits.length && typeof digits[0] !== 'number') throw new Error('radix2.decode input should be array of strings');
      return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));
    }
  };
}

function unsafeWrapper(fn) {
  if (typeof fn !== 'function') throw new Error('unsafeWrapper fn should be function');
  return function (...args) {
    try {
      return fn.apply(null, args);
    } catch (e) {}
  };
}

function checksum(len, fn) {
  assertNumber(len);
  if (typeof fn !== 'function') throw new Error('checksum fn should be function');
  return {
    encode(data) {
      if (!(data instanceof Uint8Array)) throw new Error('checksum.encode: input should be Uint8Array');
      const checksum = fn(data).slice(0, len);
      const res = new Uint8Array(data.length + len);
      res.set(data);
      res.set(checksum, data.length);
      return res;
    },

    decode(data) {
      if (!(data instanceof Uint8Array)) throw new Error('checksum.decode: input should be Uint8Array');
      const payload = data.slice(0, -len);
      const newChecksum = fn(payload).slice(0, len);
      const oldChecksum = data.slice(-len);

      for (let i = 0; i < len; i++) if (newChecksum[i] !== oldChecksum[i]) throw new Error('Invalid checksum');

      return payload;
    }

  };
}

const utils = {
  alphabet,
  chain,
  checksum,
  radix,
  radix2,
  join,
  padding
};
exports.utils = utils;
const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));
exports.base16 = base16;
const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));
exports.base32 = base32;
const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));
exports.base32hex = base32hex;
const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize(s => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));
exports.base32crockford = base32crockford;
const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));
exports.base64 = base64;
const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));
exports.base64url = base64url;

const genBase58 = abc => chain(radix(58), alphabet(abc), join(''));

const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');
exports.base58 = base58;
const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');
exports.base58flickr = base58flickr;
const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');
exports.base58xrp = base58xrp;
const XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];
const base58xmr = {
  encode(data) {
    let res = '';

    for (let i = 0; i < data.length; i += 8) {
      const block = data.subarray(i, i + 8);
      res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');
    }

    return res;
  },

  decode(str) {
    let res = [];

    for (let i = 0; i < str.length; i += 11) {
      const slice = str.slice(i, i + 11);
      const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);
      const block = base58.decode(slice);

      for (let j = 0; j < block.length - blockLen; j++) {
        if (block[j] !== 0) throw new Error('base58xmr: wrong padding');
      }

      res = res.concat(Array.from(block.slice(block.length - blockLen)));
    }

    return Uint8Array.from(res);
  }

};
exports.base58xmr = base58xmr;

const base58check = sha256 => chain(checksum(4, data => sha256(sha256(data))), base58);

exports.base58check = base58check;
const BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));
const POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];

function bech32Polymod(pre) {
  const b = pre >> 25;
  let chk = (pre & 0x1ffffff) << 5;

  for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {
    if ((b >> i & 1) === 1) chk ^= POLYMOD_GENERATORS[i];
  }

  return chk;
}

function bechChecksum(prefix, words, encodingConst = 1) {
  const len = prefix.length;
  let chk = 1;

  for (let i = 0; i < len; i++) {
    const c = prefix.charCodeAt(i);
    if (c < 33 || c > 126) throw new Error(`Invalid prefix (${prefix})`);
    chk = bech32Polymod(chk) ^ c >> 5;
  }

  chk = bech32Polymod(chk);

  for (let i = 0; i < len; i++) chk = bech32Polymod(chk) ^ prefix.charCodeAt(i) & 0x1f;

  for (let v of words) chk = bech32Polymod(chk) ^ v;

  for (let i = 0; i < 6; i++) chk = bech32Polymod(chk);

  chk ^= encodingConst;
  return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));
}

function genBech32(encoding) {
  const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;

  const _words = radix2(5);

  const fromWords = _words.decode;
  const toWords = _words.encode;
  const fromWordsUnsafe = unsafeWrapper(fromWords);

  function encode(prefix, words, limit = 90) {
    if (typeof prefix !== 'string') throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);
    if (!Array.isArray(words) || words.length && typeof words[0] !== 'number') throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);
    const actualLength = prefix.length + 7 + words.length;
    if (limit !== false && actualLength > limit) throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);
    prefix = prefix.toLowerCase();
    return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;
  }

  function decode(str, limit = 90) {
    if (typeof str !== 'string') throw new Error(`bech32.decode input should be string, not ${typeof str}`);
    if (str.length < 8 || limit !== false && str.length > limit) throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);
    const lowered = str.toLowerCase();
    if (str !== lowered && str !== str.toUpperCase()) throw new Error(`String must be lowercase or uppercase`);
    str = lowered;
    const sepIndex = str.lastIndexOf('1');
    if (sepIndex === 0 || sepIndex === -1) throw new Error(`Letter "1" must be present between prefix and data only`);
    const prefix = str.slice(0, sepIndex);

    const _words = str.slice(sepIndex + 1);

    if (_words.length < 6) throw new Error('Data must be at least 6 characters long');
    const words = BECH_ALPHABET.decode(_words).slice(0, -6);
    const sum = bechChecksum(prefix, words, ENCODING_CONST);
    if (!_words.endsWith(sum)) throw new Error(`Invalid checksum in ${str}: expected "${sum}"`);
    return {
      prefix,
      words
    };
  }

  const decodeUnsafe = unsafeWrapper(decode);

  function decodeToBytes(str) {
    const {
      prefix,
      words
    } = decode(str, false);
    return {
      prefix,
      words,
      bytes: fromWords(words)
    };
  }

  return {
    encode,
    decode,
    decodeToBytes,
    decodeUnsafe,
    fromWords,
    fromWordsUnsafe,
    toWords
  };
}

const bech32 = genBech32('bech32');
exports.bech32 = bech32;
const bech32m = genBech32('bech32m');
exports.bech32m = bech32m;
const utf8 = {
  encode: data => new TextDecoder().decode(data),
  decode: str => new TextEncoder().encode(str)
};
exports.utf8 = utf8;
const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize(s => {
  if (typeof s !== 'string' || s.length % 2) throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);
  return s.toLowerCase();
}));
exports.hex = hex;
const CODERS = {
  utf8,
  hex,
  base16,
  base32,
  base64,
  base64url,
  base58,
  base58xmr
};
const coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;

const bytesToString = (type, bytes) => {
  if (typeof type !== 'string' || !CODERS.hasOwnProperty(type)) throw new TypeError(coderTypeError);
  if (!(bytes instanceof Uint8Array)) throw new TypeError('bytesToString() expects Uint8Array');
  return CODERS[type].encode(bytes);
};

exports.bytesToString = bytesToString;
const str = bytesToString;
exports.str = str;

const stringToBytes = (type, str) => {
  if (!CODERS.hasOwnProperty(type)) throw new TypeError(coderTypeError);
  if (typeof str !== 'string') throw new TypeError('stringToBytes() expects string');
  return CODERS[type].decode(str);
};

exports.stringToBytes = stringToBytes;
const bytes = stringToBytes;
exports.bytes = bytes;
},{}],"node_modules/@polkadot/util-crypto/base32/helpers.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createDecode = createDecode;
exports.createEncode = createEncode;
exports.createIs = createIs;
exports.createValidate = createValidate;

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// re-export the type so *.d.ts files don't have ../src imports

/** @internal */
function createDecode(_ref, validate) {
  var coder = _ref.coder,
      ipfs = _ref.ipfs;
  return function (value, ipfsCompat) {
    validate(value, ipfsCompat);
    return coder.decode(ipfs && ipfsCompat ? value.substring(1) : value);
  };
}
/** @internal */


function createEncode(_ref2) {
  var coder = _ref2.coder,
      ipfs = _ref2.ipfs;
  return function (value, ipfsCompat) {
    var out = coder.encode((0, _util.u8aToU8a)(value));
    return ipfs && ipfsCompat ? "".concat(ipfs).concat(out) : out;
  };
}
/** @internal */


function createIs(validate) {
  return function (value, ipfsCompat) {
    try {
      return validate(value, ipfsCompat);
    } catch (error) {
      return false;
    }
  };
}
/** @internal */


function createValidate(_ref3) {
  var chars = _ref3.chars,
      ipfs = _ref3.ipfs,
      type = _ref3.type;
  return function (value, ipfsCompat) {
    (0, _util.assert)(value && typeof value === 'string', function () {
      return "Expected non-null, non-empty ".concat(type, " string input");
    });

    if (ipfs && ipfsCompat) {
      (0, _util.assert)(value[0] === ipfs, function () {
        return "Expected ipfs-compatible ".concat(type, " to start with '").concat(ipfs, "'");
      });
    }

    var _loop = function _loop(i) {
      (0, _util.assert)(chars.includes(value[i]) || value[i] === '=' && (i === value.length - 1 || !chars.includes(value[i + 1])), function () {
        return "Invalid ".concat(type, " character \"").concat(value[i], "\" (0x").concat(value.charCodeAt(i).toString(16), ") at index ").concat(i);
      });
    };

    for (var i = ipfsCompat ? 1 : 0; i < value.length; i++) {
      _loop(i);
    }

    return true;
  };
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/util-crypto/base58/bs58.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isBase58 = exports.base58Validate = exports.base58Encode = exports.base58Decode = void 0;

var _base = require("@scure/base");

var _helpers = require("../base32/helpers.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
var config = {
  chars: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',
  coder: _base.base58,
  ipfs: 'z',
  type: 'base58'
};
/**
 * @name base58Validate
 * @summary Validates a base58 value.
 * @description
 * Validates that the supplied value is valid base58, throwing exceptions if not
 */

var base58Validate = (0, _helpers.createValidate)(config);
/**
 * @name base58Decode
 * @summary Decodes a base58 value.
 * @description
 * From the provided input, decode the base58 and return the result as an `Uint8Array`.
 */

exports.base58Validate = base58Validate;
var base58Decode = (0, _helpers.createDecode)(config, base58Validate);
/**
* @name base58Encode
* @summary Creates a base58 value.
* @description
* From the provided input, create the base58 and return the result as a string.
*/

exports.base58Decode = base58Decode;
var base58Encode = (0, _helpers.createEncode)(config);
/**
* @name isBase58
* @description Checks if the input is in base58, returning true/false
*/

exports.base58Encode = base58Encode;
var isBase58 = (0, _helpers.createIs)(base58Validate);
exports.isBase58 = isBase58;
},{"@scure/base":"node_modules/@scure/base/lib/esm/index.js","../base32/helpers.js":"node_modules/@polkadot/util-crypto/base32/helpers.js"}],"node_modules/@polkadot/util-crypto/base58/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "base58Decode", {
  enumerable: true,
  get: function () {
    return _bs.base58Decode;
  }
});
Object.defineProperty(exports, "base58Encode", {
  enumerable: true,
  get: function () {
    return _bs.base58Encode;
  }
});
Object.defineProperty(exports, "base58Validate", {
  enumerable: true,
  get: function () {
    return _bs.base58Validate;
  }
});
Object.defineProperty(exports, "isBase58", {
  enumerable: true,
  get: function () {
    return _bs.isBase58;
  }
});

var _bs = require("./bs58.js");
},{"./bs58.js":"node_modules/@polkadot/util-crypto/base58/bs58.js"}],"node_modules/@noble/hashes/_blake2.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BLAKE2 = exports.SIGMA = void 0;
const _assert_js_1 = require("./_assert.js");
const utils_js_1 = require("./utils.js");
// prettier-ignore
exports.SIGMA = new Uint8Array([
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,
    11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,
    7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,
    9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,
    2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,
    12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,
    13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,
    6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,
    10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,
    // For BLAKE2b, the two extra permutations for rounds 10 and 11 are SIGMA[10..11] = SIGMA[0..1].
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,
]);
class BLAKE2 extends utils_js_1.Hash {
    constructor(blockLen, outputLen, opts = {}, keyLen, saltLen, persLen) {
        super();
        this.blockLen = blockLen;
        this.outputLen = outputLen;
        this.length = 0;
        this.pos = 0;
        this.finished = false;
        this.destroyed = false;
        _assert_js_1.default.number(blockLen);
        _assert_js_1.default.number(outputLen);
        _assert_js_1.default.number(keyLen);
        if (outputLen < 0 || outputLen > keyLen)
            throw new Error('Blake2: outputLen bigger than keyLen');
        if (opts.key !== undefined && (opts.key.length < 1 || opts.key.length > keyLen))
            throw new Error(`Key should be up 1..${keyLen} byte long or undefined`);
        if (opts.salt !== undefined && opts.salt.length !== saltLen)
            throw new Error(`Salt should be ${saltLen} byte long or undefined`);
        if (opts.personalization !== undefined && opts.personalization.length !== persLen)
            throw new Error(`Personalization should be ${persLen} byte long or undefined`);
        this.buffer32 = (0, utils_js_1.u32)((this.buffer = new Uint8Array(blockLen)));
    }
    update(data) {
        _assert_js_1.default.exists(this);
        // Main difference with other hashes: there is flag for last block,
        // so we cannot process current block before we know that there
        // is the next one. This significantly complicates logic and reduces ability
        // to do zero-copy processing
        const { blockLen, buffer, buffer32 } = this;
        data = (0, utils_js_1.toBytes)(data);
        const len = data.length;
        for (let pos = 0; pos < len;) {
            // If buffer is full and we still have input (don't process last block, same as blake2s)
            if (this.pos === blockLen) {
                this.compress(buffer32, 0, false);
                this.pos = 0;
            }
            const take = Math.min(blockLen - this.pos, len - pos);
            const dataOffset = data.byteOffset + pos;
            // full block && aligned to 4 bytes && not last in input
            if (take === blockLen && !(dataOffset % 4) && pos + take < len) {
                const data32 = new Uint32Array(data.buffer, dataOffset, Math.floor((len - pos) / 4));
                for (let pos32 = 0; pos + blockLen < len; pos32 += buffer32.length, pos += blockLen) {
                    this.length += blockLen;
                    this.compress(data32, pos32, false);
                }
                continue;
            }
            buffer.set(data.subarray(pos, pos + take), this.pos);
            this.pos += take;
            this.length += take;
            pos += take;
        }
        return this;
    }
    digestInto(out) {
        _assert_js_1.default.exists(this);
        _assert_js_1.default.output(out, this);
        const { pos, buffer32 } = this;
        this.finished = true;
        // Padding
        this.buffer.subarray(pos).fill(0);
        this.compress(buffer32, 0, true);
        const out32 = (0, utils_js_1.u32)(out);
        this.get().forEach((v, i) => (out32[i] = v));
    }
    digest() {
        const { buffer, outputLen } = this;
        this.digestInto(buffer);
        const res = buffer.slice(0, outputLen);
        this.destroy();
        return res;
    }
    _cloneInto(to) {
        const { buffer, length, finished, destroyed, outputLen, pos } = this;
        to || (to = new this.constructor({ dkLen: outputLen }));
        to.set(...this.get());
        to.length = length;
        to.finished = finished;
        to.destroyed = destroyed;
        to.outputLen = outputLen;
        to.buffer.set(buffer);
        to.pos = pos;
        return to;
    }
}
exports.BLAKE2 = BLAKE2;

},{"./_assert.js":"node_modules/@noble/hashes/_assert.js","./utils.js":"node_modules/@noble/hashes/utils.js"}],"node_modules/@noble/hashes/blake2b.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.blake2b = void 0;
const _blake2_js_1 = require("./_blake2.js");
const _u64_js_1 = require("./_u64.js");
const utils_js_1 = require("./utils.js");
// Same as SHA-512 but LE
// prettier-ignore
const IV = new Uint32Array([
    0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372, 0x5f1d36f1, 0xa54ff53a,
    0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c, 0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19
]);
// Temporary buffer
const BUF = new Uint32Array(32);
// Mixing function G splitted in two halfs
function G1(a, b, c, d, msg, x) {
    // NOTE: V is LE here
    const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore
    let Al = BUF[2 * a], Ah = BUF[2 * a + 1]; // prettier-ignore
    let Bl = BUF[2 * b], Bh = BUF[2 * b + 1]; // prettier-ignore
    let Cl = BUF[2 * c], Ch = BUF[2 * c + 1]; // prettier-ignore
    let Dl = BUF[2 * d], Dh = BUF[2 * d + 1]; // prettier-ignore
    // v[a] = (v[a] + v[b] + x) | 0;
    let ll = _u64_js_1.default.add3L(Al, Bl, Xl);
    Ah = _u64_js_1.default.add3H(ll, Ah, Bh, Xh);
    Al = ll | 0;
    // v[d] = rotr(v[d] ^ v[a], 32)
    ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });
    ({ Dh, Dl } = { Dh: _u64_js_1.default.rotr32H(Dh, Dl), Dl: _u64_js_1.default.rotr32L(Dh, Dl) });
    // v[c] = (v[c] + v[d]) | 0;
    ({ h: Ch, l: Cl } = _u64_js_1.default.add(Ch, Cl, Dh, Dl));
    // v[b] = rotr(v[b] ^ v[c], 24)
    ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });
    ({ Bh, Bl } = { Bh: _u64_js_1.default.rotrSH(Bh, Bl, 24), Bl: _u64_js_1.default.rotrSL(Bh, Bl, 24) });
    (BUF[2 * a] = Al), (BUF[2 * a + 1] = Ah);
    (BUF[2 * b] = Bl), (BUF[2 * b + 1] = Bh);
    (BUF[2 * c] = Cl), (BUF[2 * c + 1] = Ch);
    (BUF[2 * d] = Dl), (BUF[2 * d + 1] = Dh);
}
function G2(a, b, c, d, msg, x) {
    // NOTE: V is LE here
    const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore
    let Al = BUF[2 * a], Ah = BUF[2 * a + 1]; // prettier-ignore
    let Bl = BUF[2 * b], Bh = BUF[2 * b + 1]; // prettier-ignore
    let Cl = BUF[2 * c], Ch = BUF[2 * c + 1]; // prettier-ignore
    let Dl = BUF[2 * d], Dh = BUF[2 * d + 1]; // prettier-ignore
    // v[a] = (v[a] + v[b] + x) | 0;
    let ll = _u64_js_1.default.add3L(Al, Bl, Xl);
    Ah = _u64_js_1.default.add3H(ll, Ah, Bh, Xh);
    Al = ll | 0;
    // v[d] = rotr(v[d] ^ v[a], 16)
    ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });
    ({ Dh, Dl } = { Dh: _u64_js_1.default.rotrSH(Dh, Dl, 16), Dl: _u64_js_1.default.rotrSL(Dh, Dl, 16) });
    // v[c] = (v[c] + v[d]) | 0;
    ({ h: Ch, l: Cl } = _u64_js_1.default.add(Ch, Cl, Dh, Dl));
    // v[b] = rotr(v[b] ^ v[c], 63)
    ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });
    ({ Bh, Bl } = { Bh: _u64_js_1.default.rotrBH(Bh, Bl, 63), Bl: _u64_js_1.default.rotrBL(Bh, Bl, 63) });
    (BUF[2 * a] = Al), (BUF[2 * a + 1] = Ah);
    (BUF[2 * b] = Bl), (BUF[2 * b + 1] = Bh);
    (BUF[2 * c] = Cl), (BUF[2 * c + 1] = Ch);
    (BUF[2 * d] = Dl), (BUF[2 * d + 1] = Dh);
}
class BLAKE2b extends _blake2_js_1.BLAKE2 {
    constructor(opts = {}) {
        super(128, opts.dkLen === undefined ? 64 : opts.dkLen, opts, 64, 16, 16);
        // Same as SHA-512, but LE
        this.v0l = IV[0] | 0;
        this.v0h = IV[1] | 0;
        this.v1l = IV[2] | 0;
        this.v1h = IV[3] | 0;
        this.v2l = IV[4] | 0;
        this.v2h = IV[5] | 0;
        this.v3l = IV[6] | 0;
        this.v3h = IV[7] | 0;
        this.v4l = IV[8] | 0;
        this.v4h = IV[9] | 0;
        this.v5l = IV[10] | 0;
        this.v5h = IV[11] | 0;
        this.v6l = IV[12] | 0;
        this.v6h = IV[13] | 0;
        this.v7l = IV[14] | 0;
        this.v7h = IV[15] | 0;
        const keyLength = opts.key ? opts.key.length : 0;
        this.v0l ^= this.outputLen | (keyLength << 8) | (0x01 << 16) | (0x01 << 24);
        if (opts.salt) {
            const salt = (0, utils_js_1.u32)((0, utils_js_1.toBytes)(opts.salt));
            this.v4l ^= salt[0];
            this.v4h ^= salt[1];
            this.v5l ^= salt[2];
            this.v5h ^= salt[3];
        }
        if (opts.personalization) {
            const pers = (0, utils_js_1.u32)((0, utils_js_1.toBytes)(opts.personalization));
            this.v6l ^= pers[0];
            this.v6h ^= pers[1];
            this.v7l ^= pers[2];
            this.v7h ^= pers[3];
        }
        if (opts.key) {
            // Pad to blockLen and update
            const tmp = new Uint8Array(this.blockLen);
            tmp.set((0, utils_js_1.toBytes)(opts.key));
            this.update(tmp);
        }
    }
    // prettier-ignore
    get() {
        let { v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h } = this;
        return [v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h];
    }
    // prettier-ignore
    set(v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h) {
        this.v0l = v0l | 0;
        this.v0h = v0h | 0;
        this.v1l = v1l | 0;
        this.v1h = v1h | 0;
        this.v2l = v2l | 0;
        this.v2h = v2h | 0;
        this.v3l = v3l | 0;
        this.v3h = v3h | 0;
        this.v4l = v4l | 0;
        this.v4h = v4h | 0;
        this.v5l = v5l | 0;
        this.v5h = v5h | 0;
        this.v6l = v6l | 0;
        this.v6h = v6h | 0;
        this.v7l = v7l | 0;
        this.v7h = v7h | 0;
    }
    compress(msg, offset, isLast) {
        this.get().forEach((v, i) => (BUF[i] = v)); // First half from state.
        BUF.set(IV, 16); // Second half from IV.
        let { h, l } = _u64_js_1.default.fromBig(BigInt(this.length));
        BUF[24] = IV[8] ^ l; // Low word of the offset.
        BUF[25] = IV[9] ^ h; // High word.
        // Invert all bits for last block
        if (isLast) {
            BUF[28] = ~BUF[28];
            BUF[29] = ~BUF[29];
        }
        let j = 0;
        const s = _blake2_js_1.SIGMA;
        for (let i = 0; i < 12; i++) {
            G1(0, 4, 8, 12, msg, offset + 2 * s[j++]);
            G2(0, 4, 8, 12, msg, offset + 2 * s[j++]);
            G1(1, 5, 9, 13, msg, offset + 2 * s[j++]);
            G2(1, 5, 9, 13, msg, offset + 2 * s[j++]);
            G1(2, 6, 10, 14, msg, offset + 2 * s[j++]);
            G2(2, 6, 10, 14, msg, offset + 2 * s[j++]);
            G1(3, 7, 11, 15, msg, offset + 2 * s[j++]);
            G2(3, 7, 11, 15, msg, offset + 2 * s[j++]);
            G1(0, 5, 10, 15, msg, offset + 2 * s[j++]);
            G2(0, 5, 10, 15, msg, offset + 2 * s[j++]);
            G1(1, 6, 11, 12, msg, offset + 2 * s[j++]);
            G2(1, 6, 11, 12, msg, offset + 2 * s[j++]);
            G1(2, 7, 8, 13, msg, offset + 2 * s[j++]);
            G2(2, 7, 8, 13, msg, offset + 2 * s[j++]);
            G1(3, 4, 9, 14, msg, offset + 2 * s[j++]);
            G2(3, 4, 9, 14, msg, offset + 2 * s[j++]);
        }
        this.v0l ^= BUF[0] ^ BUF[16];
        this.v0h ^= BUF[1] ^ BUF[17];
        this.v1l ^= BUF[2] ^ BUF[18];
        this.v1h ^= BUF[3] ^ BUF[19];
        this.v2l ^= BUF[4] ^ BUF[20];
        this.v2h ^= BUF[5] ^ BUF[21];
        this.v3l ^= BUF[6] ^ BUF[22];
        this.v3h ^= BUF[7] ^ BUF[23];
        this.v4l ^= BUF[8] ^ BUF[24];
        this.v4h ^= BUF[9] ^ BUF[25];
        this.v5l ^= BUF[10] ^ BUF[26];
        this.v5h ^= BUF[11] ^ BUF[27];
        this.v6l ^= BUF[12] ^ BUF[28];
        this.v6h ^= BUF[13] ^ BUF[29];
        this.v7l ^= BUF[14] ^ BUF[30];
        this.v7h ^= BUF[15] ^ BUF[31];
        BUF.fill(0);
    }
    destroy() {
        this.destroyed = true;
        this.buffer32.fill(0);
        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    }
}
/**
 * BLAKE2b - optimized for 64-bit platforms. JS doesn't have uint64, so it's slower than BLAKE2s.
 * @param msg - message that would be hashed
 * @param opts - dkLen, key, salt, personalization
 */
exports.blake2b = (0, utils_js_1.wrapConstructorWithOpts)((opts) => new BLAKE2b(opts));

},{"./_blake2.js":"node_modules/@noble/hashes/_blake2.js","./_u64.js":"node_modules/@noble/hashes/_u64.js","./utils.js":"node_modules/@noble/hashes/utils.js"}],"node_modules/@polkadot/util-crypto/helpers.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createAsHex = createAsHex;
exports.createBitHasher = createBitHasher;
exports.createDualHasher = createDualHasher;

var _util = require("@polkadot/util");

var _wasmCrypto = require("@polkadot/wasm-crypto");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// re-export so TS *.d.ts generation is correct

/** @internal */
function createAsHex(fn) {
  return function () {
    return (0, _util.u8aToHex)(fn.apply(void 0, arguments));
  };
}
/** @internal */


function createBitHasher(bitLength, fn) {
  return function (data, onlyJs) {
    return fn(data, bitLength, onlyJs);
  };
}
/** @internal */


function createDualHasher(wa, js) {
  return function (value) {
    var bitLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 256;
    var onlyJs = arguments.length > 2 ? arguments[2] : undefined;
    var u8a = (0, _util.u8aToU8a)(value);
    return !_util.hasBigInt || !onlyJs && (0, _wasmCrypto.isReady)() ? wa[bitLength](u8a) : js[bitLength](u8a);
  };
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js"}],"node_modules/@polkadot/util-crypto/blake2/asU8a.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.blake2AsHex = void 0;
exports.blake2AsU8a = blake2AsU8a;

var _blake2b = require("@noble/hashes/blake2b");

var _util = require("@polkadot/util");

var _wasmCrypto = require("@polkadot/wasm-crypto");

var _helpers = require("../helpers.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name blake2AsU8a
 * @summary Creates a blake2b u8a from the input.
 * @description
 * From a `Uint8Array` input, create the blake2b and return the result as a u8a with the specified `bitLength`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { blake2AsU8a } from '@polkadot/util-crypto';
 *
 * blake2AsU8a('abc'); // => [0xba, 0x80, 0xa5, 0x3f, 0x98, 0x1c, 0x4d, 0x0d]
 * ```
 */
function blake2AsU8a(data) {
  var bitLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 256;
  var key = arguments.length > 2 ? arguments[2] : undefined;
  var onlyJs = arguments.length > 3 ? arguments[3] : undefined;
  var byteLength = Math.ceil(bitLength / 8);
  var u8a = (0, _util.u8aToU8a)(data);
  return !_util.hasBigInt || !onlyJs && (0, _wasmCrypto.isReady)() ? (0, _wasmCrypto.blake2b)(u8a, (0, _util.u8aToU8a)(key), byteLength) : (0, _blake2b.blake2b)(u8a, {
    dkLen: byteLength,
    key: key || undefined
  });
}
/**
 * @name blake2AsHex
 * @description Creates a blake2b hex from the input.
 */


var blake2AsHex = (0, _helpers.createAsHex)(blake2AsU8a);
exports.blake2AsHex = blake2AsHex;
},{"@noble/hashes/blake2b":"node_modules/@noble/hashes/blake2b.js","@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js","../helpers.js":"node_modules/@polkadot/util-crypto/helpers.js"}],"node_modules/@polkadot/util-crypto/address/sshash.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sshash = sshash;

var _util = require("@polkadot/util");

var _asU8a = require("../blake2/asU8a.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
var SS58_PREFIX = (0, _util.stringToU8a)('SS58PRE');

function sshash(key) {
  return (0, _asU8a.blake2AsU8a)((0, _util.u8aConcat)(SS58_PREFIX, key), 512);
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../blake2/asU8a.js":"node_modules/@polkadot/util-crypto/blake2/asU8a.js"}],"node_modules/@polkadot/util-crypto/address/checksum.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.checkAddressChecksum = checkAddressChecksum;

var _sshash = require("./sshash.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
function checkAddressChecksum(decoded) {
  var ss58Length = decoded[0] & 64 ? 2 : 1;
  var ss58Decoded = ss58Length === 1 ? decoded[0] : (decoded[0] & 63) << 2 | decoded[1] >> 6 | (decoded[1] & 63) << 8; // 32/33 bytes public + 2 bytes checksum + prefix

  var isPublicKey = [34 + ss58Length, 35 + ss58Length].includes(decoded.length);
  var length = decoded.length - (isPublicKey ? 2 : 1); // calculate the hash and do the checksum byte checks

  var hash = (0, _sshash.sshash)(decoded.subarray(0, length));
  var isValid = (decoded[0] & 128) === 0 && ![46, 47].includes(decoded[0]) && (isPublicKey ? decoded[decoded.length - 2] === hash[0] && decoded[decoded.length - 1] === hash[1] : decoded[decoded.length - 1] === hash[0]);
  return [isValid, length, ss58Length, ss58Decoded];
}
},{"./sshash.js":"node_modules/@polkadot/util-crypto/address/sshash.js"}],"node_modules/@substrate/ss58-registry/esm/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright (C) 2021-2022 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
var _default = [{
  "prefix": 0,
  "network": "polkadot",
  "displayName": "Polkadot Relay Chain",
  "symbols": ["DOT"],
  "decimals": [10],
  "standardAccount": "*25519",
  "website": "https://polkadot.network"
}, {
  "prefix": 1,
  "network": "BareSr25519",
  "displayName": "Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",
  "symbols": [],
  "decimals": [],
  "standardAccount": "Sr25519",
  "website": null
}, {
  "prefix": 2,
  "network": "kusama",
  "displayName": "Kusama Relay Chain",
  "symbols": ["KSM"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://kusama.network"
}, {
  "prefix": 3,
  "network": "BareEd25519",
  "displayName": "Bare 32-bit Ed25519 public key.",
  "symbols": [],
  "decimals": [],
  "standardAccount": "Ed25519",
  "website": null
}, {
  "prefix": 4,
  "network": "katalchain",
  "displayName": "Katal Chain",
  "symbols": [],
  "decimals": [],
  "standardAccount": "*25519",
  "website": null
}, {
  "prefix": 5,
  "network": "astar",
  "displayName": "Astar Network",
  "symbols": ["ASTR"],
  "decimals": [18],
  "standardAccount": "*25519",
  "website": "https://astar.network"
}, {
  "prefix": 6,
  "network": "bifrost",
  "displayName": "Bifrost",
  "symbols": ["BNC"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://bifrost.finance/"
}, {
  "prefix": 7,
  "network": "edgeware",
  "displayName": "Edgeware",
  "symbols": ["EDG"],
  "decimals": [18],
  "standardAccount": "*25519",
  "website": "https://edgewa.re"
}, {
  "prefix": 8,
  "network": "karura",
  "displayName": "Karura",
  "symbols": ["KAR"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://karura.network/"
}, {
  "prefix": 9,
  "network": "reynolds",
  "displayName": "Laminar Reynolds Canary",
  "symbols": ["REY"],
  "decimals": [18],
  "standardAccount": "*25519",
  "website": "http://laminar.network/"
}, {
  "prefix": 10,
  "network": "acala",
  "displayName": "Acala",
  "symbols": ["ACA"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://acala.network/"
}, {
  "prefix": 11,
  "network": "laminar",
  "displayName": "Laminar",
  "symbols": ["LAMI"],
  "decimals": [18],
  "standardAccount": "*25519",
  "website": "http://laminar.network/"
}, {
  "prefix": 12,
  "network": "polymesh",
  "displayName": "Polymesh",
  "symbols": ["POLYX"],
  "decimals": [6],
  "standardAccount": "*25519",
  "website": "https://polymath.network/"
}, {
  "prefix": 13,
  "network": "integritee",
  "displayName": "Integritee",
  "symbols": ["TEER"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://integritee.network"
}, {
  "prefix": 14,
  "network": "totem",
  "displayName": "Totem",
  "symbols": ["TOTEM"],
  "decimals": [0],
  "standardAccount": "*25519",
  "website": "https://totemaccounting.com"
}, {
  "prefix": 15,
  "network": "synesthesia",
  "displayName": "Synesthesia",
  "symbols": ["SYN"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://synesthesia.network/"
}, {
  "prefix": 16,
  "network": "kulupu",
  "displayName": "Kulupu",
  "symbols": ["KLP"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://kulupu.network/"
}, {
  "prefix": 17,
  "network": "dark",
  "displayName": "Dark Mainnet",
  "symbols": [],
  "decimals": [],
  "standardAccount": "*25519",
  "website": null
}, {
  "prefix": 18,
  "network": "darwinia",
  "displayName": "Darwinia Network",
  "symbols": ["RING", "KTON"],
  "decimals": [9, 9],
  "standardAccount": "*25519",
  "website": "https://darwinia.network/"
}, {
  "prefix": 20,
  "network": "stafi",
  "displayName": "Stafi",
  "symbols": ["FIS"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://stafi.io"
}, {
  "prefix": 22,
  "network": "dock-pos-mainnet",
  "displayName": "Dock Mainnet",
  "symbols": ["DCK"],
  "decimals": [6],
  "standardAccount": "*25519",
  "website": "https://dock.io"
}, {
  "prefix": 23,
  "network": "shift",
  "displayName": "ShiftNrg",
  "symbols": [],
  "decimals": [],
  "standardAccount": "*25519",
  "website": null
}, {
  "prefix": 24,
  "network": "zero",
  "displayName": "ZERO",
  "symbols": ["ZERO"],
  "decimals": [18],
  "standardAccount": "*25519",
  "website": "https://zero.io"
}, {
  "prefix": 25,
  "network": "zero-alphaville",
  "displayName": "ZERO Alphaville",
  "symbols": ["ZERO"],
  "decimals": [18],
  "standardAccount": "*25519",
  "website": "https://zero.io"
}, {
  "prefix": 26,
  "network": "jupiter",
  "displayName": "Jupiter",
  "symbols": ["jDOT"],
  "decimals": [10],
  "standardAccount": "*25519",
  "website": "https://jupiter.patract.io"
}, {
  "prefix": 27,
  "network": "kabocha",
  "displayName": "Kabocha",
  "symbols": ["KAB"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://kabocha.network"
}, {
  "prefix": 28,
  "network": "subsocial",
  "displayName": "Subsocial",
  "symbols": [],
  "decimals": [],
  "standardAccount": "*25519",
  "website": null
}, {
  "prefix": 29,
  "network": "cord",
  "displayName": "CORD Network",
  "symbols": ["DHI", "WAY"],
  "decimals": [12, 12],
  "standardAccount": "*25519",
  "website": "https://cord.network/"
}, {
  "prefix": 30,
  "network": "phala",
  "displayName": "Phala Network",
  "symbols": ["PHA"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://phala.network"
}, {
  "prefix": 31,
  "network": "litentry",
  "displayName": "Litentry Network",
  "symbols": ["LIT"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://litentry.com/"
}, {
  "prefix": 32,
  "network": "robonomics",
  "displayName": "Robonomics",
  "symbols": ["XRT"],
  "decimals": [9],
  "standardAccount": "*25519",
  "website": "https://robonomics.network"
}, {
  "prefix": 33,
  "network": "datahighway",
  "displayName": "DataHighway",
  "symbols": [],
  "decimals": [],
  "standardAccount": "*25519",
  "website": null
}, {
  "prefix": 34,
  "network": "ares",
  "displayName": "Ares Protocol",
  "symbols": ["ARES"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://www.aresprotocol.com/"
}, {
  "prefix": 35,
  "network": "vln",
  "displayName": "Valiu Liquidity Network",
  "symbols": ["USDv"],
  "decimals": [15],
  "standardAccount": "*25519",
  "website": "https://valiu.com/"
}, {
  "prefix": 36,
  "network": "centrifuge",
  "displayName": "Centrifuge Chain",
  "symbols": ["CFG"],
  "decimals": [18],
  "standardAccount": "*25519",
  "website": "https://centrifuge.io/"
}, {
  "prefix": 37,
  "network": "nodle",
  "displayName": "Nodle Chain",
  "symbols": ["NODL"],
  "decimals": [11],
  "standardAccount": "*25519",
  "website": "https://nodle.io/"
}, {
  "prefix": 38,
  "network": "kilt",
  "displayName": "KILT Spiritnet",
  "symbols": ["KILT"],
  "decimals": [15],
  "standardAccount": "*25519",
  "website": "https://kilt.io/"
}, {
  "prefix": 39,
  "network": "mathchain",
  "displayName": "MathChain mainnet",
  "symbols": ["MATH"],
  "decimals": [18],
  "standardAccount": "*25519",
  "website": "https://mathwallet.org"
}, {
  "prefix": 40,
  "network": "mathchain-testnet",
  "displayName": "MathChain testnet",
  "symbols": ["MATH"],
  "decimals": [18],
  "standardAccount": "*25519",
  "website": "https://mathwallet.org"
}, {
  "prefix": 41,
  "network": "poli",
  "displayName": "Polimec Chain",
  "symbols": [],
  "decimals": [],
  "standardAccount": "*25519",
  "website": "https://polimec.io/"
}, {
  "prefix": 42,
  "network": "substrate",
  "displayName": "Substrate",
  "symbols": [],
  "decimals": [],
  "standardAccount": "*25519",
  "website": "https://substrate.io/"
}, {
  "prefix": 43,
  "network": "BareSecp256k1",
  "displayName": "Bare 32-bit ECDSA SECP-256k1 public key.",
  "symbols": [],
  "decimals": [],
  "standardAccount": "secp256k1",
  "website": null
}, {
  "prefix": 44,
  "network": "chainx",
  "displayName": "ChainX",
  "symbols": ["PCX"],
  "decimals": [8],
  "standardAccount": "*25519",
  "website": "https://chainx.org/"
}, {
  "prefix": 45,
  "network": "uniarts",
  "displayName": "UniArts Network",
  "symbols": ["UART", "UINK"],
  "decimals": [12, 12],
  "standardAccount": "*25519",
  "website": "https://uniarts.me"
}, {
  "prefix": 46,
  "network": "reserved46",
  "displayName": "This prefix is reserved.",
  "symbols": [],
  "decimals": [],
  "standardAccount": null,
  "website": null
}, {
  "prefix": 47,
  "network": "reserved47",
  "displayName": "This prefix is reserved.",
  "symbols": [],
  "decimals": [],
  "standardAccount": null,
  "website": null
}, {
  "prefix": 48,
  "network": "neatcoin",
  "displayName": "Neatcoin Mainnet",
  "symbols": ["NEAT"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://neatcoin.org"
}, {
  "prefix": 49,
  "network": "picasso",
  "displayName": "Picasso",
  "symbols": ["PICA"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://picasso.composable.finance"
}, {
  "prefix": 50,
  "network": "composable",
  "displayName": "Composable",
  "symbols": ["LAYR"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://composable.finance"
}, {
  "prefix": 51,
  "network": "oak",
  "displayName": "OAK Network",
  "symbols": ["OAK"],
  "decimals": [10],
  "standardAccount": "*25519",
  "website": "https://oak.tech"
}, {
  "prefix": 52,
  "network": "KICO",
  "displayName": "KICO",
  "symbols": ["KICO"],
  "decimals": [14],
  "standardAccount": "*25519",
  "website": "https://dico.io"
}, {
  "prefix": 53,
  "network": "DICO",
  "displayName": "DICO",
  "symbols": ["DICO"],
  "decimals": [14],
  "standardAccount": "*25519",
  "website": "https://dico.io"
}, {
  "prefix": 54,
  "network": "cere",
  "displayName": "Cere Network",
  "symbols": ["CERE"],
  "decimals": [10],
  "standardAccount": "*25519",
  "website": "https://cere.network"
}, {
  "prefix": 55,
  "network": "xxnetwork",
  "displayName": "xx network",
  "symbols": ["XX"],
  "decimals": [9],
  "standardAccount": "*25519",
  "website": "https://xx.network"
}, {
  "prefix": 56,
  "network": "pendulum",
  "displayName": "Pendulum chain",
  "symbols": ["PEN"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://pendulumchain.org/"
}, {
  "prefix": 57,
  "network": "amplitude",
  "displayName": "Amplitude chain",
  "symbols": ["AMPE"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://pendulumchain.org/"
}, {
  "prefix": 63,
  "network": "hydradx",
  "displayName": "HydraDX",
  "symbols": ["HDX"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://hydradx.io"
}, {
  "prefix": 65,
  "network": "aventus",
  "displayName": "AvN Mainnet",
  "symbols": ["AVT"],
  "decimals": [18],
  "standardAccount": "*25519",
  "website": "https://aventus.io"
}, {
  "prefix": 66,
  "network": "crust",
  "displayName": "Crust Network",
  "symbols": ["CRU"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://crust.network"
}, {
  "prefix": 67,
  "network": "genshiro",
  "displayName": "Genshiro Network",
  "symbols": ["GENS", "EQD", "LPT0"],
  "decimals": [9, 9, 9],
  "standardAccount": "*25519",
  "website": "https://genshiro.equilibrium.io"
}, {
  "prefix": 68,
  "network": "equilibrium",
  "displayName": "Equilibrium Network",
  "symbols": ["EQ"],
  "decimals": [9],
  "standardAccount": "*25519",
  "website": "https://equilibrium.io"
}, {
  "prefix": 69,
  "network": "sora",
  "displayName": "SORA Network",
  "symbols": ["XOR"],
  "decimals": [18],
  "standardAccount": "*25519",
  "website": "https://sora.org"
}, {
  "prefix": 73,
  "network": "zeitgeist",
  "displayName": "Zeitgeist",
  "symbols": ["ZTG"],
  "decimals": [10],
  "standardAccount": "*25519",
  "website": "https://zeitgeist.pm"
}, {
  "prefix": 77,
  "network": "manta",
  "displayName": "Manta network",
  "symbols": ["MANTA"],
  "decimals": [18],
  "standardAccount": "*25519",
  "website": "https://manta.network"
}, {
  "prefix": 78,
  "network": "calamari",
  "displayName": "Calamari: Manta Canary Network",
  "symbols": ["KMA"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://manta.network"
}, {
  "prefix": 88,
  "network": "polkadex",
  "displayName": "Polkadex Mainnet",
  "symbols": ["PDEX"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://polkadex.trade"
}, {
  "prefix": 89,
  "network": "polkadexparachain",
  "displayName": "Polkadex Parachain",
  "symbols": ["PDEX"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://polkadex.trade"
}, {
  "prefix": 93,
  "network": "fragnova",
  "displayName": "Fragnova Network",
  "symbols": ["NOVA"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://fragnova.com"
}, {
  "prefix": 98,
  "network": "polkasmith",
  "displayName": "PolkaSmith Canary Network",
  "symbols": ["PKS"],
  "decimals": [18],
  "standardAccount": "*25519",
  "website": "https://polkafoundry.com"
}, {
  "prefix": 99,
  "network": "polkafoundry",
  "displayName": "PolkaFoundry Network",
  "symbols": ["PKF"],
  "decimals": [18],
  "standardAccount": "*25519",
  "website": "https://polkafoundry.com"
}, {
  "prefix": 101,
  "network": "origintrail-parachain",
  "displayName": "OriginTrail Parachain",
  "symbols": ["OTP"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://parachain.origintrail.io/"
}, {
  "prefix": 105,
  "network": "pontem-network",
  "displayName": "Pontem Network",
  "symbols": ["PONT"],
  "decimals": [10],
  "standardAccount": "*25519",
  "website": "https://pontem.network"
}, {
  "prefix": 110,
  "network": "heiko",
  "displayName": "Heiko",
  "symbols": ["HKO"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://parallel.fi/"
}, {
  "prefix": 113,
  "network": "integritee-incognito",
  "displayName": "Integritee Incognito",
  "symbols": [],
  "decimals": [],
  "standardAccount": "*25519",
  "website": "https://integritee.network"
}, {
  "prefix": 117,
  "network": "tinker",
  "displayName": "Tinker",
  "symbols": ["TNKR"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://invarch.network"
}, {
  "prefix": 128,
  "network": "clover",
  "displayName": "Clover Finance",
  "symbols": ["CLV"],
  "decimals": [18],
  "standardAccount": "*25519",
  "website": "https://clover.finance"
}, {
  "prefix": 131,
  "network": "litmus",
  "displayName": "Litmus Network",
  "symbols": ["LIT"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://litentry.com/"
}, {
  "prefix": 136,
  "network": "altair",
  "displayName": "Altair",
  "symbols": ["AIR"],
  "decimals": [18],
  "standardAccount": "*25519",
  "website": "https://centrifuge.io/"
}, {
  "prefix": 172,
  "network": "parallel",
  "displayName": "Parallel",
  "symbols": ["PARA"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://parallel.fi/"
}, {
  "prefix": 252,
  "network": "social-network",
  "displayName": "Social Network",
  "symbols": ["NET"],
  "decimals": [18],
  "standardAccount": "*25519",
  "website": "https://social.network"
}, {
  "prefix": 255,
  "network": "quartz_mainnet",
  "displayName": "QUARTZ by UNIQUE",
  "symbols": ["QTZ"],
  "decimals": [15],
  "standardAccount": "*25519",
  "website": "https://unique.network"
}, {
  "prefix": 268,
  "network": "pioneer_network",
  "displayName": "Pioneer Network by Bit.Country",
  "symbols": ["NEER"],
  "decimals": [18],
  "standardAccount": "*25519",
  "website": "https://bit.country"
}, {
  "prefix": 420,
  "network": "sora_kusama_para",
  "displayName": "SORA Kusama Parachain",
  "symbols": ["XOR"],
  "decimals": [18],
  "standardAccount": "*25519",
  "website": "https://sora.org"
}, {
  "prefix": 789,
  "network": "geek",
  "displayName": "GEEK Network",
  "symbols": ["GEEK"],
  "decimals": [18],
  "standardAccount": "*25519",
  "website": "https://geek.gl"
}, {
  "prefix": 1110,
  "network": "efinity",
  "displayName": "Efinity",
  "symbols": ["EFI"],
  "decimals": [18],
  "standardAccount": "Sr25519",
  "website": "https://efinity.io/"
}, {
  "prefix": 1221,
  "network": "peaq",
  "displayName": "Peaq Network",
  "symbols": ["PEAQ"],
  "decimals": [18],
  "standardAccount": "Sr25519",
  "website": "https://www.peaq.network/"
}, {
  "prefix": 1222,
  "network": "apex",
  "displayName": "Apex Network",
  "symbols": ["APEX"],
  "decimals": [18],
  "standardAccount": "Sr25519",
  "website": "https://www.peaq.network/"
}, {
  "prefix": 1284,
  "network": "moonbeam",
  "displayName": "Moonbeam",
  "symbols": ["GLMR"],
  "decimals": [18],
  "standardAccount": "secp256k1",
  "website": "https://moonbeam.network"
}, {
  "prefix": 1285,
  "network": "moonriver",
  "displayName": "Moonriver",
  "symbols": ["MOVR"],
  "decimals": [18],
  "standardAccount": "secp256k1",
  "website": "https://moonbeam.network"
}, {
  "prefix": 1328,
  "network": "ajuna",
  "displayName": "Ajuna Network",
  "symbols": ["AJUN"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://ajuna.io"
}, {
  "prefix": 1337,
  "network": "bajun",
  "displayName": "Bajun Network",
  "symbols": ["BAJU"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://ajuna.io"
}, {
  "prefix": 2007,
  "network": "kapex",
  "displayName": "Kapex",
  "symbols": ["KAPEX"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://totemaccounting.com"
}, {
  "prefix": 2032,
  "network": "interlay",
  "displayName": "Interlay",
  "symbols": ["INTR"],
  "decimals": [10],
  "standardAccount": "*25519",
  "website": "https://interlay.io/"
}, {
  "prefix": 2092,
  "network": "kintsugi",
  "displayName": "Kintsugi",
  "symbols": ["KINT"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://interlay.io/"
}, {
  "prefix": 2254,
  "network": "subspace_testnet",
  "displayName": "Subspace testnet",
  "symbols": ["tSSC"],
  "decimals": [18],
  "standardAccount": "*25519",
  "website": "https://subspace.network"
}, {
  "prefix": 6094,
  "network": "subspace",
  "displayName": "Subspace",
  "symbols": ["SSC"],
  "decimals": [18],
  "standardAccount": "*25519",
  "website": "https://subspace.network"
}, {
  "prefix": 7007,
  "network": "tidefi",
  "displayName": "Tidefi",
  "symbols": ["TIFI"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://tidefi.com"
}, {
  "prefix": 7391,
  "network": "unique_mainnet",
  "displayName": "Unique Network",
  "symbols": ["UNQ"],
  "decimals": [18],
  "standardAccount": "*25519",
  "website": "https://unique.network"
}, {
  "prefix": 9807,
  "network": "dentnet",
  "displayName": "DENTNet",
  "symbols": ["DENTX"],
  "decimals": [18],
  "standardAccount": "*25519",
  "website": "https://www.dentnet.io"
}, {
  "prefix": 10041,
  "network": "basilisk",
  "displayName": "Basilisk",
  "symbols": ["BSX"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://bsx.fi"
}, {
  "prefix": 11330,
  "network": "cess-testnet",
  "displayName": "CESS Testnet",
  "symbols": ["TCESS"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://cess.cloud"
}, {
  "prefix": 11331,
  "network": "cess",
  "displayName": "CESS",
  "symbols": ["CESS"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://cess.cloud"
}, {
  "prefix": 11820,
  "network": "contextfree",
  "displayName": "Automata ContextFree",
  "symbols": ["CTX"],
  "decimals": [18],
  "standardAccount": "*25519",
  "website": "https://ata.network"
}, {
  "prefix": 15253,
  "network": "ice-network",
  "displayName": "ICE Network",
  "symbols": ["ICX", "ICY"],
  "decimals": [18, 18],
  "standardAccount": "*25519",
  "website": "https://icenetwork.io"
}, {
  "prefix": 12191,
  "network": "nftmart",
  "displayName": "NFTMart",
  "symbols": ["NMT"],
  "decimals": [12],
  "standardAccount": "*25519",
  "website": "https://nftmart.io"
}];
exports.default = _default;
},{}],"node_modules/@polkadot/networks/defaults/genesis.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.knownGenesis = void 0;
// Copyright 2017-2022 @polkadot/networks authors & contributors
// SPDX-License-Identifier: Apache-2.0
// NOTE: In the case where the network was hard-spooned and multiple genesisHashes
// are provided, it needs to be in reverse order, i.e. most-recent first, oldest
// last. This make lookups for the current a simple genesisHash[0]
// (See Kusama as an example)
var knownGenesis = {
  acala: ['0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c'],
  astar: ['0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6'],
  basilisk: ['0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755'],
  bifrost: ['0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b'],
  centrifuge: ['0xb3db41421702df9a7fcac62b53ffeac85f7853cc4e689e0b93aeb3db18c09d82', '0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5'],
  composable: ['0xdaab8df776eb52ec604a5df5d388bb62a050a0aaec4556a64265b9d42755552d'],
  'dock-mainnet': ['0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae', '0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9'],
  edgeware: ['0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b'],
  equilibrium: ['0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925'],
  genshiro: ['0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243'],
  hydradx: ['0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc', // Snakenet Gen3-1
  '0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9', // Snakenet Gen3
  '0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047', // Snakenet Gen2
  '0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2' // Snakenet Gen1
  ],
  karura: ['0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b'],
  kulupu: ['0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba'],
  kusama: ['0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe', // Kusama CC3,
  '0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636', // Kusama CC2
  '0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf' // Kusama CC1
  ],
  'nodle-para': ['0x97da7ede98d7bad4e36b4d734b6055425a3be036da2a332ea5a7037656427a21'],
  parallel: ['0xe61a41c53f5dcd0beb09df93b34402aada44cb05117b71059cce40a2723a4e97'],
  picasso: ['0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c'],
  polkadex: ['0x3920bcb4960a1eef5580cd5367ff3f430eef052774f78468852f7b9cb39f8a3c'],
  polkadot: ['0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3'],
  polymesh: ['0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063'],
  rococo: ['0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e', '0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897', '0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770', '0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff', '0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a', '0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9', '0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779', '0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215', '0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9', '0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147', '0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd', '0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299'],
  sora: ['0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5'],
  stafi: ['0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80'],
  statemine: ['0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a'],
  statemint: ['0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f'],
  subsocial: ['0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8'],
  westend: ['0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e'],
  xxnetwork: ['0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa']
};
exports.knownGenesis = knownGenesis;
},{}],"node_modules/@polkadot/networks/defaults/icons.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.knownIcon = void 0;
// Copyright 2017-2022 @polkadot/networks authors & contributors
// SPDX-License-Identifier: Apache-2.0
// these are icon overrides
var knownIcon = {
  centrifuge: 'polkadot',
  kusama: 'polkadot',
  polkadot: 'polkadot',
  sora: 'polkadot',
  statemine: 'polkadot',
  statemint: 'polkadot',
  westmint: 'polkadot'
};
exports.knownIcon = knownIcon;
},{}],"node_modules/@polkadot/networks/defaults/ledger.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.knownLedger = void 0;
// Copyright 2017-2022 @polkadot/networks authors & contributors
// SPDX-License-Identifier: Apache-2.0
// These match up with the keys of the ledgerApps object in the @polkadot/hw-ledger/defaults.ts
// and maps to the known slip44 (minus the `0x8` hard derivation flag)
//
// NOTE: Any network here needs to have a genesisHash attached in the ./genesis.ts config
var knownLedger = {
  acala: 0x00000313,
  astar: 0x0000032a,
  bifrost: 0x00000314,
  centrifuge: 0x000002eb,
  composable: 0x00000162,
  'dock-mainnet': 0x00000252,
  edgeware: 0x0000020b,
  equilibrium: 0x05f5e0fd,
  genshiro: 0x05f5e0fc,
  karura: 0x000002ae,
  kusama: 0x000001b2,
  'nodle-para': 0x000003eb,
  parallel: 0x00000162,
  polkadex: 0x0000031f,
  polkadot: 0x00000162,
  polymesh: 0x00000253,
  sora: 0x00000269,
  statemine: 0x000001b2,
  // common-good on Kusama, shares derivation
  statemint: 0x00000162,
  // common-good on Polkadot, shares derivation
  xxnetwork: 0x000007a3
};
exports.knownLedger = knownLedger;
},{}],"node_modules/@polkadot/networks/defaults/testnets.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.knownTestnet = void 0;
// Copyright 2017-2022 @polkadot/networks authors & contributors
// SPDX-License-Identifier: Apache-2.0
// testnets should not allow selection
var knownTestnet = {
  '': true,
  // this is the default non-network entry
  'cess-testnet': true,
  'dock-testnet': true,
  jupiter: true,
  'mathchain-testnet': true,
  subspace_testnet: true,
  'zero-alphaville': true
};
exports.knownTestnet = knownTestnet;
},{}],"node_modules/@polkadot/networks/defaults/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "knownGenesis", {
  enumerable: true,
  get: function () {
    return _genesis.knownGenesis;
  }
});
Object.defineProperty(exports, "knownIcon", {
  enumerable: true,
  get: function () {
    return _icons.knownIcon;
  }
});
Object.defineProperty(exports, "knownLedger", {
  enumerable: true,
  get: function () {
    return _ledger.knownLedger;
  }
});
Object.defineProperty(exports, "knownTestnet", {
  enumerable: true,
  get: function () {
    return _testnets.knownTestnet;
  }
});

var _genesis = require("./genesis.js");

var _icons = require("./icons.js");

var _ledger = require("./ledger.js");

var _testnets = require("./testnets.js");
},{"./genesis.js":"node_modules/@polkadot/networks/defaults/genesis.js","./icons.js":"node_modules/@polkadot/networks/defaults/icons.js","./ledger.js":"node_modules/@polkadot/networks/defaults/ledger.js","./testnets.js":"node_modules/@polkadot/networks/defaults/testnets.js"}],"node_modules/@polkadot/networks/interfaces.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.selectableNetworks = exports.availableNetworks = exports.allNetworks = void 0;

var _ss58Registry = _interopRequireDefault(require("@substrate/ss58-registry"));

var _index = require("./defaults/index.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/networks authors & contributors
// SPDX-License-Identifier: Apache-2.0
// These are known prefixes that are not sorted
var UNSORTED = [0, 2, 42];
var TESTNETS = ['testnet'];

function toExpanded(o) {
  var network = o.network || '';
  var nameParts = network.replace(/_/g, '-').split('-');
  var n = o; // ledger additions

  n.slip44 = _index.knownLedger[network];
  n.hasLedgerSupport = !!n.slip44; // general items

  n.genesisHash = _index.knownGenesis[network] || [];
  n.icon = _index.knownIcon[network] || 'substrate'; // filtering

  n.isTestnet = !!_index.knownTestnet[network] || TESTNETS.includes(nameParts[nameParts.length - 1]);
  n.isIgnored = n.isTestnet || !(o.standardAccount && o.decimals && o.decimals.length && o.symbols && o.symbols.length) && o.prefix !== 42;
  return n;
}

function filterSelectable(_ref) {
  var genesisHash = _ref.genesisHash,
      prefix = _ref.prefix;
  return !!genesisHash.length || prefix === 42;
}

function filterAvailable(n) {
  return !n.isIgnored && !!n.network;
}

function sortNetworks(a, b) {
  var isUnSortedA = UNSORTED.includes(a.prefix);
  var isUnSortedB = UNSORTED.includes(b.prefix);
  return isUnSortedA === isUnSortedB ? isUnSortedA ? 0 : a.displayName.localeCompare(b.displayName) : isUnSortedA ? -1 : 1;
} // This is all the Substrate networks with our additional information


var allNetworks = _ss58Registry.default.map(toExpanded); // The list of available/claimed prefixes
//   - no testnets
//   - we only include those where we have a standardAccount
//   - sort by name, however we keep 0, 2, 42 first in the list


exports.allNetworks = allNetworks;
var availableNetworks = allNetworks.filter(filterAvailable).sort(sortNetworks); // A filtered list of those chains we have details about (genesisHashes)

exports.availableNetworks = availableNetworks;
var selectableNetworks = availableNetworks.filter(filterSelectable);
exports.selectableNetworks = selectableNetworks;
},{"@substrate/ss58-registry":"node_modules/@substrate/ss58-registry/esm/index.js","./defaults/index.js":"node_modules/@polkadot/networks/defaults/index.js"}],"node_modules/@polkadot/networks/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  packageInfo: true
};
Object.defineProperty(exports, "packageInfo", {
  enumerable: true,
  get: function () {
    return _packageInfo.packageInfo;
  }
});

var _interfaces = require("./interfaces.js");

Object.keys(_interfaces).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _interfaces[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _interfaces[key];
    }
  });
});

var _packageInfo = require("./packageInfo.js");
},{"./interfaces.js":"node_modules/@polkadot/networks/interfaces.js","./packageInfo.js":"node_modules/@polkadot/networks/packageInfo.js"}],"node_modules/@polkadot/util-crypto/networks.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "allNetworks", {
  enumerable: true,
  get: function () {
    return _networks.allNetworks;
  }
});
Object.defineProperty(exports, "availableNetworks", {
  enumerable: true,
  get: function () {
    return _networks.availableNetworks;
  }
});
Object.defineProperty(exports, "selectableNetworks", {
  enumerable: true,
  get: function () {
    return _networks.selectableNetworks;
  }
});

var _networks = require("@polkadot/networks");
},{"@polkadot/networks":"node_modules/@polkadot/networks/index.js"}],"node_modules/@polkadot/util-crypto/address/defaults.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaults = void 0;

var _networks = require("../networks.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
var defaults = {
  allowedDecodedLengths: [1, 2, 4, 8, 32, 33],
  // publicKey has prefix + 2 checksum bytes, short only prefix + 1 checksum byte
  allowedEncodedLengths: [3, 4, 6, 10, 35, 36, 37, 38],
  allowedPrefix: _networks.availableNetworks.map(function (_ref) {
    var prefix = _ref.prefix;
    return prefix;
  }),
  prefix: 42
};
exports.defaults = defaults;
},{"../networks.js":"node_modules/@polkadot/util-crypto/networks.js"}],"node_modules/@polkadot/util-crypto/address/decode.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.decodeAddress = decodeAddress;

var _util = require("@polkadot/util");

var _index = require("../base58/index.js");

var _checksum = require("./checksum.js");

var _defaults = require("./defaults.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function decodeAddress(encoded, ignoreChecksum) {
  var ss58Format = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;
  (0, _util.assert)(encoded, 'Invalid empty address passed');

  if ((0, _util.isU8a)(encoded) || (0, _util.isHex)(encoded)) {
    return (0, _util.u8aToU8a)(encoded);
  }

  try {
    var decoded = (0, _index.base58Decode)(encoded);
    (0, _util.assert)(_defaults.defaults.allowedEncodedLengths.includes(decoded.length), 'Invalid decoded address length');

    var _checkAddressChecksum = (0, _checksum.checkAddressChecksum)(decoded),
        _checkAddressChecksum2 = _slicedToArray(_checkAddressChecksum, 4),
        isValid = _checkAddressChecksum2[0],
        endPos = _checkAddressChecksum2[1],
        ss58Length = _checkAddressChecksum2[2],
        ss58Decoded = _checkAddressChecksum2[3];

    (0, _util.assert)(ignoreChecksum || isValid, 'Invalid decoded address checksum');
    (0, _util.assert)([-1, ss58Decoded].includes(ss58Format), function () {
      return "Expected ss58Format ".concat(ss58Format, ", received ").concat(ss58Decoded);
    });
    return decoded.slice(ss58Length, endPos);
  } catch (error) {
    throw new Error("Decoding ".concat(encoded, ": ").concat(error.message));
  }
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../base58/index.js":"node_modules/@polkadot/util-crypto/base58/index.js","./checksum.js":"node_modules/@polkadot/util-crypto/address/checksum.js","./defaults.js":"node_modules/@polkadot/util-crypto/address/defaults.js"}],"node_modules/@polkadot/util-crypto/address/addressToEvm.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addressToEvm = addressToEvm;

var _decode = require("./decode.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name addressToEvm
 * @summary Converts an SS58 address to its corresponding EVM address.
 */
function addressToEvm(address, ignoreChecksum) {
  return (0, _decode.decodeAddress)(address, ignoreChecksum).subarray(0, 20);
}
},{"./decode.js":"node_modules/@polkadot/util-crypto/address/decode.js"}],"node_modules/@polkadot/util-crypto/address/check.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.checkAddress = checkAddress;

var _index = require("../base58/index.js");

var _checksum = require("./checksum.js");

var _defaults = require("./defaults.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

/**
 * @name checkAddress
 * @summary Validates an ss58 address.
 * @description
 * From the provided input, validate that the address is a valid input.
 */
function checkAddress(address, prefix) {
  var decoded;

  try {
    decoded = (0, _index.base58Decode)(address);
  } catch (error) {
    return [false, error.message];
  }

  var _checkAddressChecksum = (0, _checksum.checkAddressChecksum)(decoded),
      _checkAddressChecksum2 = _slicedToArray(_checkAddressChecksum, 4),
      isValid = _checkAddressChecksum2[0],
      ss58Decoded = _checkAddressChecksum2[3];

  if (ss58Decoded !== prefix) {
    return [false, "Prefix mismatch, expected ".concat(prefix, ", found ").concat(ss58Decoded)];
  } else if (!_defaults.defaults.allowedEncodedLengths.includes(decoded.length)) {
    return [false, 'Invalid decoded address length'];
  }

  return [isValid, isValid ? null : 'Invalid decoded address checksum'];
}
},{"../base58/index.js":"node_modules/@polkadot/util-crypto/base58/index.js","./checksum.js":"node_modules/@polkadot/util-crypto/address/checksum.js","./defaults.js":"node_modules/@polkadot/util-crypto/address/defaults.js"}],"node_modules/@polkadot/util-crypto/bn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BN_LE_OPTS = exports.BN_LE_512_OPTS = exports.BN_LE_32_OPTS = exports.BN_LE_256_OPTS = exports.BN_LE_16_OPTS = exports.BN_BE_OPTS = exports.BN_BE_32_OPTS = exports.BN_BE_256_OPTS = void 0;
// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
var BN_BE_OPTS = {
  isLe: false
};
exports.BN_BE_OPTS = BN_BE_OPTS;
var BN_LE_OPTS = {
  isLe: true
};
exports.BN_LE_OPTS = BN_LE_OPTS;
var BN_LE_16_OPTS = {
  bitLength: 16,
  isLe: true
};
exports.BN_LE_16_OPTS = BN_LE_16_OPTS;
var BN_BE_32_OPTS = {
  bitLength: 32,
  isLe: false
};
exports.BN_BE_32_OPTS = BN_BE_32_OPTS;
var BN_LE_32_OPTS = {
  bitLength: 32,
  isLe: true
};
exports.BN_LE_32_OPTS = BN_LE_32_OPTS;
var BN_BE_256_OPTS = {
  bitLength: 256,
  isLe: false
};
exports.BN_BE_256_OPTS = BN_BE_256_OPTS;
var BN_LE_256_OPTS = {
  bitLength: 256,
  isLe: true
};
exports.BN_LE_256_OPTS = BN_LE_256_OPTS;
var BN_LE_512_OPTS = {
  bitLength: 512,
  isLe: true
};
exports.BN_LE_512_OPTS = BN_LE_512_OPTS;
},{}],"node_modules/@polkadot/util-crypto/address/util.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addressToU8a = addressToU8a;

var _decode = require("./decode.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
function addressToU8a(who) {
  return (0, _decode.decodeAddress)(who);
}
},{"./decode.js":"node_modules/@polkadot/util-crypto/address/decode.js"}],"node_modules/@polkadot/util-crypto/address/keyMulti.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createKeyMulti = createKeyMulti;

var _util = require("@polkadot/util");

var _asU8a = require("../blake2/asU8a.js");

var _bn = require("../bn.js");

var _util2 = require("./util.js");

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var PREFIX = (0, _util.stringToU8a)('modlpy/utilisuba');

function createKeyMulti(who, threshold) {
  return (0, _asU8a.blake2AsU8a)(_util.u8aConcat.apply(void 0, [PREFIX, (0, _util.compactToU8a)(who.length)].concat(_toConsumableArray((0, _util.u8aSorted)(who.map(_util2.addressToU8a))), [(0, _util.bnToU8a)(threshold, _bn.BN_LE_16_OPTS)])));
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../blake2/asU8a.js":"node_modules/@polkadot/util-crypto/blake2/asU8a.js","../bn.js":"node_modules/@polkadot/util-crypto/bn.js","./util.js":"node_modules/@polkadot/util-crypto/address/util.js"}],"node_modules/@polkadot/util-crypto/address/keyDerived.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createKeyDerived = createKeyDerived;

var _util = require("@polkadot/util");

var _asU8a = require("../blake2/asU8a.js");

var _bn = require("../bn.js");

var _decode = require("./decode.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
var PREFIX = (0, _util.stringToU8a)('modlpy/utilisuba');

function createKeyDerived(who, index) {
  return (0, _asU8a.blake2AsU8a)((0, _util.u8aConcat)(PREFIX, (0, _decode.decodeAddress)(who), (0, _util.bnToU8a)(index, _bn.BN_LE_16_OPTS)));
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../blake2/asU8a.js":"node_modules/@polkadot/util-crypto/blake2/asU8a.js","../bn.js":"node_modules/@polkadot/util-crypto/bn.js","./decode.js":"node_modules/@polkadot/util-crypto/address/decode.js"}],"node_modules/@polkadot/util-crypto/key/DeriveJunction.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DeriveJunction = void 0;

var _util = require("@polkadot/util");

var _asU8a = require("../blake2/asU8a.js");

var _bn = require("../bn.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

var RE_NUMBER = /^\d+$/;
var JUNCTION_ID_LEN = 32;

var _chainCode = /*#__PURE__*/new WeakMap();

var _isHard = /*#__PURE__*/new WeakMap();

var DeriveJunction = /*#__PURE__*/function () {
  function DeriveJunction() {
    _classCallCheck(this, DeriveJunction);

    _classPrivateFieldInitSpec(this, _chainCode, {
      writable: true,
      value: new Uint8Array(32)
    });

    _classPrivateFieldInitSpec(this, _isHard, {
      writable: true,
      value: false
    });
  }

  _createClass(DeriveJunction, [{
    key: "chainCode",
    get: function get() {
      return _classPrivateFieldGet(this, _chainCode);
    }
  }, {
    key: "isHard",
    get: function get() {
      return _classPrivateFieldGet(this, _isHard);
    }
  }, {
    key: "isSoft",
    get: function get() {
      return !_classPrivateFieldGet(this, _isHard);
    }
  }, {
    key: "hard",
    value: function hard(value) {
      return this.soft(value).harden();
    }
  }, {
    key: "harden",
    value: function harden() {
      _classPrivateFieldSet(this, _isHard, true);

      return this;
    }
  }, {
    key: "soft",
    value: function soft(value) {
      if ((0, _util.isNumber)(value) || (0, _util.isBn)(value) || (0, _util.isBigInt)(value)) {
        return this.soft((0, _util.bnToU8a)(value, _bn.BN_LE_256_OPTS));
      } else if ((0, _util.isHex)(value)) {
        return this.soft((0, _util.hexToU8a)(value));
      } else if ((0, _util.isString)(value)) {
        return this.soft((0, _util.compactAddLength)((0, _util.stringToU8a)(value)));
      } else if (value.length > JUNCTION_ID_LEN) {
        return this.soft((0, _asU8a.blake2AsU8a)(value));
      }

      _classPrivateFieldGet(this, _chainCode).fill(0);

      _classPrivateFieldGet(this, _chainCode).set(value, 0);

      return this;
    }
  }, {
    key: "soften",
    value: function soften() {
      _classPrivateFieldSet(this, _isHard, false);

      return this;
    }
  }], [{
    key: "from",
    value: function from(value) {
      var result = new DeriveJunction();

      var _ref = value.startsWith('/') ? [value.substring(1), true] : [value, false],
          _ref2 = _slicedToArray(_ref, 2),
          code = _ref2[0],
          isHard = _ref2[1];

      result.soft(RE_NUMBER.test(code) ? new _util.BN(code, 10) : code);
      return isHard ? result.harden() : result;
    }
  }]);

  return DeriveJunction;
}();

exports.DeriveJunction = DeriveJunction;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../blake2/asU8a.js":"node_modules/@polkadot/util-crypto/blake2/asU8a.js","../bn.js":"node_modules/@polkadot/util-crypto/bn.js"}],"node_modules/@polkadot/util-crypto/key/extractPath.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.keyExtractPath = keyExtractPath;

var _util = require("@polkadot/util");

var _DeriveJunction = require("./DeriveJunction.js");

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var RE_JUNCTION = /\/(\/?)([^/]+)/g;
/**
 * @description Extract derivation junctions from the supplied path
 */

function keyExtractPath(derivePath) {
  var parts = derivePath.match(RE_JUNCTION);
  var path = [];
  var constructed = '';

  if (parts) {
    constructed = parts.join('');

    var _iterator = _createForOfIteratorHelper(parts),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var p = _step.value;
        path.push(_DeriveJunction.DeriveJunction.from(p.substring(1)));
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }

  (0, _util.assert)(constructed === derivePath, function () {
    return "Re-constructed path \"".concat(constructed, "\" does not match input");
  });
  return {
    parts: parts,
    path: path
  };
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./DeriveJunction.js":"node_modules/@polkadot/util-crypto/key/DeriveJunction.js"}],"node_modules/@polkadot/util-crypto/key/extractSuri.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.keyExtractSuri = keyExtractSuri;

var _extractPath = require("./extractPath.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var RE_CAPTURE = /^(\w+( \w+)*)((\/\/?[^/]+)*)(\/\/\/(.*))?$/;
/**
 * @description Extracts the phrase, path and password from a SURI format for specifying secret keys `<secret>/<soft-key>//<hard-key>///<password>` (the `///password` may be omitted, and `/<soft-key>` and `//<hard-key>` maybe repeated and mixed).
 */

function keyExtractSuri(suri) {
  // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec
  var matches = suri.match(RE_CAPTURE);

  if (matches === null) {
    throw new Error('Unable to match provided value to a secret URI');
  }

  var _matches = _slicedToArray(matches, 7),
      phrase = _matches[1],
      derivePath = _matches[3],
      password = _matches[6];

  var _keyExtractPath = (0, _extractPath.keyExtractPath)(derivePath),
      path = _keyExtractPath.path;

  return {
    derivePath: derivePath,
    password: password,
    path: path,
    phrase: phrase
  };
}
},{"./extractPath.js":"node_modules/@polkadot/util-crypto/key/extractPath.js"}],"node_modules/@polkadot/util-crypto/secp256k1/deriveHard.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.secp256k1DeriveHard = secp256k1DeriveHard;

var _util = require("@polkadot/util");

var _asU8a = require("../blake2/asU8a.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
var HDKD = (0, _util.compactAddLength)((0, _util.stringToU8a)('Secp256k1HDKD'));

function secp256k1DeriveHard(seed, chainCode) {
  if (!(0, _util.isU8a)(chainCode) || chainCode.length !== 32) {
    throw new Error('Invalid chainCode passed to derive');
  } // NOTE This is specific to the Substrate HDD derivation, so always use the blake2 hasher


  return (0, _asU8a.blake2AsU8a)((0, _util.u8aConcat)(HDKD, seed, chainCode), 256);
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../blake2/asU8a.js":"node_modules/@polkadot/util-crypto/blake2/asU8a.js"}],"node_modules/@polkadot/util-crypto/secp256k1/pair/fromSeed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.secp256k1PairFromSeed = secp256k1PairFromSeed;

var _secp256k = require("@noble/secp256k1");

var _util = require("@polkadot/util");

var _wasmCrypto = require("@polkadot/wasm-crypto");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name secp256k1PairFromSeed
 * @description Returns a object containing a `publicKey` & `secretKey` generated from the supplied seed.
 */
function secp256k1PairFromSeed(seed, onlyJs) {
  if (seed.length !== 32) {
    throw new Error('Expected valid 32-byte private key as a seed');
  }

  if (!_util.hasBigInt || !onlyJs && (0, _wasmCrypto.isReady)()) {
    var full = (0, _wasmCrypto.secp256k1FromSeed)(seed);
    var publicKey = full.slice(32); // There is an issue with the secp256k1 when running in an ASM.js environment where
    // it seems that the lazy static section yields invalid results on the _first_ run.
    // If this happens, fail outright, we cannot allow invalid return values
    // https://github.com/polkadot-js/wasm/issues/307

    if ((0, _util.u8aEmpty)(publicKey)) {
      throw new Error('Invalid publicKey generated from WASM interface');
    }

    return {
      publicKey: publicKey,
      secretKey: full.slice(0, 32)
    };
  }

  return {
    publicKey: (0, _secp256k.getPublicKey)(seed, true),
    secretKey: seed
  };
}
},{"@noble/secp256k1":"node_modules/@noble/secp256k1/lib/esm/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js"}],"node_modules/@polkadot/util-crypto/key/hdkdDerive.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createSeedDeriveFn = createSeedDeriveFn;

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
function createSeedDeriveFn(fromSeed, derive) {
  return function (keypair, _ref) {
    var chainCode = _ref.chainCode,
        isHard = _ref.isHard;
    (0, _util.assert)(isHard, 'A soft key was found in the path and is not supported');
    return fromSeed(derive(keypair.secretKey.subarray(0, 32), chainCode));
  };
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/util-crypto/key/hdkdEcdsa.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.keyHdkdEcdsa = void 0;

var _deriveHard = require("../secp256k1/deriveHard.js");

var _fromSeed = require("../secp256k1/pair/fromSeed.js");

var _hdkdDerive = require("./hdkdDerive.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
var keyHdkdEcdsa = (0, _hdkdDerive.createSeedDeriveFn)(_fromSeed.secp256k1PairFromSeed, _deriveHard.secp256k1DeriveHard);
exports.keyHdkdEcdsa = keyHdkdEcdsa;
},{"../secp256k1/deriveHard.js":"node_modules/@polkadot/util-crypto/secp256k1/deriveHard.js","../secp256k1/pair/fromSeed.js":"node_modules/@polkadot/util-crypto/secp256k1/pair/fromSeed.js","./hdkdDerive.js":"node_modules/@polkadot/util-crypto/key/hdkdDerive.js"}],"node_modules/tweetnacl/nacl-fast.js":[function(require,module,exports) {
(function(nacl) {
'use strict';

// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.
// Public domain.
//
// Implementation derived from TweetNaCl version 20140427.
// See for details: http://tweetnacl.cr.yp.to/

var gf = function(init) {
  var i, r = new Float64Array(16);
  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];
  return r;
};

//  Pluggable, initialized in high-level API below.
var randombytes = function(/* x, n */) { throw new Error('no PRNG'); };

var _0 = new Uint8Array(16);
var _9 = new Uint8Array(32); _9[0] = 9;

var gf0 = gf(),
    gf1 = gf([1]),
    _121665 = gf([0xdb41, 1]),
    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),
    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),
    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),
    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),
    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);

function ts64(x, i, h, l) {
  x[i]   = (h >> 24) & 0xff;
  x[i+1] = (h >> 16) & 0xff;
  x[i+2] = (h >>  8) & 0xff;
  x[i+3] = h & 0xff;
  x[i+4] = (l >> 24)  & 0xff;
  x[i+5] = (l >> 16)  & 0xff;
  x[i+6] = (l >>  8)  & 0xff;
  x[i+7] = l & 0xff;
}

function vn(x, xi, y, yi, n) {
  var i,d = 0;
  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];
  return (1 & ((d - 1) >>> 8)) - 1;
}

function crypto_verify_16(x, xi, y, yi) {
  return vn(x,xi,y,yi,16);
}

function crypto_verify_32(x, xi, y, yi) {
  return vn(x,xi,y,yi,32);
}

function core_salsa20(o, p, k, c) {
  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,
      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,
      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,
      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,
      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,
      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,
      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,
      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,
      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,
      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,
      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,
      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,
      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,
      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,
      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,
      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;

  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,
      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,
      x15 = j15, u;

  for (var i = 0; i < 20; i += 2) {
    u = x0 + x12 | 0;
    x4 ^= u<<7 | u>>>(32-7);
    u = x4 + x0 | 0;
    x8 ^= u<<9 | u>>>(32-9);
    u = x8 + x4 | 0;
    x12 ^= u<<13 | u>>>(32-13);
    u = x12 + x8 | 0;
    x0 ^= u<<18 | u>>>(32-18);

    u = x5 + x1 | 0;
    x9 ^= u<<7 | u>>>(32-7);
    u = x9 + x5 | 0;
    x13 ^= u<<9 | u>>>(32-9);
    u = x13 + x9 | 0;
    x1 ^= u<<13 | u>>>(32-13);
    u = x1 + x13 | 0;
    x5 ^= u<<18 | u>>>(32-18);

    u = x10 + x6 | 0;
    x14 ^= u<<7 | u>>>(32-7);
    u = x14 + x10 | 0;
    x2 ^= u<<9 | u>>>(32-9);
    u = x2 + x14 | 0;
    x6 ^= u<<13 | u>>>(32-13);
    u = x6 + x2 | 0;
    x10 ^= u<<18 | u>>>(32-18);

    u = x15 + x11 | 0;
    x3 ^= u<<7 | u>>>(32-7);
    u = x3 + x15 | 0;
    x7 ^= u<<9 | u>>>(32-9);
    u = x7 + x3 | 0;
    x11 ^= u<<13 | u>>>(32-13);
    u = x11 + x7 | 0;
    x15 ^= u<<18 | u>>>(32-18);

    u = x0 + x3 | 0;
    x1 ^= u<<7 | u>>>(32-7);
    u = x1 + x0 | 0;
    x2 ^= u<<9 | u>>>(32-9);
    u = x2 + x1 | 0;
    x3 ^= u<<13 | u>>>(32-13);
    u = x3 + x2 | 0;
    x0 ^= u<<18 | u>>>(32-18);

    u = x5 + x4 | 0;
    x6 ^= u<<7 | u>>>(32-7);
    u = x6 + x5 | 0;
    x7 ^= u<<9 | u>>>(32-9);
    u = x7 + x6 | 0;
    x4 ^= u<<13 | u>>>(32-13);
    u = x4 + x7 | 0;
    x5 ^= u<<18 | u>>>(32-18);

    u = x10 + x9 | 0;
    x11 ^= u<<7 | u>>>(32-7);
    u = x11 + x10 | 0;
    x8 ^= u<<9 | u>>>(32-9);
    u = x8 + x11 | 0;
    x9 ^= u<<13 | u>>>(32-13);
    u = x9 + x8 | 0;
    x10 ^= u<<18 | u>>>(32-18);

    u = x15 + x14 | 0;
    x12 ^= u<<7 | u>>>(32-7);
    u = x12 + x15 | 0;
    x13 ^= u<<9 | u>>>(32-9);
    u = x13 + x12 | 0;
    x14 ^= u<<13 | u>>>(32-13);
    u = x14 + x13 | 0;
    x15 ^= u<<18 | u>>>(32-18);
  }
   x0 =  x0 +  j0 | 0;
   x1 =  x1 +  j1 | 0;
   x2 =  x2 +  j2 | 0;
   x3 =  x3 +  j3 | 0;
   x4 =  x4 +  j4 | 0;
   x5 =  x5 +  j5 | 0;
   x6 =  x6 +  j6 | 0;
   x7 =  x7 +  j7 | 0;
   x8 =  x8 +  j8 | 0;
   x9 =  x9 +  j9 | 0;
  x10 = x10 + j10 | 0;
  x11 = x11 + j11 | 0;
  x12 = x12 + j12 | 0;
  x13 = x13 + j13 | 0;
  x14 = x14 + j14 | 0;
  x15 = x15 + j15 | 0;

  o[ 0] = x0 >>>  0 & 0xff;
  o[ 1] = x0 >>>  8 & 0xff;
  o[ 2] = x0 >>> 16 & 0xff;
  o[ 3] = x0 >>> 24 & 0xff;

  o[ 4] = x1 >>>  0 & 0xff;
  o[ 5] = x1 >>>  8 & 0xff;
  o[ 6] = x1 >>> 16 & 0xff;
  o[ 7] = x1 >>> 24 & 0xff;

  o[ 8] = x2 >>>  0 & 0xff;
  o[ 9] = x2 >>>  8 & 0xff;
  o[10] = x2 >>> 16 & 0xff;
  o[11] = x2 >>> 24 & 0xff;

  o[12] = x3 >>>  0 & 0xff;
  o[13] = x3 >>>  8 & 0xff;
  o[14] = x3 >>> 16 & 0xff;
  o[15] = x3 >>> 24 & 0xff;

  o[16] = x4 >>>  0 & 0xff;
  o[17] = x4 >>>  8 & 0xff;
  o[18] = x4 >>> 16 & 0xff;
  o[19] = x4 >>> 24 & 0xff;

  o[20] = x5 >>>  0 & 0xff;
  o[21] = x5 >>>  8 & 0xff;
  o[22] = x5 >>> 16 & 0xff;
  o[23] = x5 >>> 24 & 0xff;

  o[24] = x6 >>>  0 & 0xff;
  o[25] = x6 >>>  8 & 0xff;
  o[26] = x6 >>> 16 & 0xff;
  o[27] = x6 >>> 24 & 0xff;

  o[28] = x7 >>>  0 & 0xff;
  o[29] = x7 >>>  8 & 0xff;
  o[30] = x7 >>> 16 & 0xff;
  o[31] = x7 >>> 24 & 0xff;

  o[32] = x8 >>>  0 & 0xff;
  o[33] = x8 >>>  8 & 0xff;
  o[34] = x8 >>> 16 & 0xff;
  o[35] = x8 >>> 24 & 0xff;

  o[36] = x9 >>>  0 & 0xff;
  o[37] = x9 >>>  8 & 0xff;
  o[38] = x9 >>> 16 & 0xff;
  o[39] = x9 >>> 24 & 0xff;

  o[40] = x10 >>>  0 & 0xff;
  o[41] = x10 >>>  8 & 0xff;
  o[42] = x10 >>> 16 & 0xff;
  o[43] = x10 >>> 24 & 0xff;

  o[44] = x11 >>>  0 & 0xff;
  o[45] = x11 >>>  8 & 0xff;
  o[46] = x11 >>> 16 & 0xff;
  o[47] = x11 >>> 24 & 0xff;

  o[48] = x12 >>>  0 & 0xff;
  o[49] = x12 >>>  8 & 0xff;
  o[50] = x12 >>> 16 & 0xff;
  o[51] = x12 >>> 24 & 0xff;

  o[52] = x13 >>>  0 & 0xff;
  o[53] = x13 >>>  8 & 0xff;
  o[54] = x13 >>> 16 & 0xff;
  o[55] = x13 >>> 24 & 0xff;

  o[56] = x14 >>>  0 & 0xff;
  o[57] = x14 >>>  8 & 0xff;
  o[58] = x14 >>> 16 & 0xff;
  o[59] = x14 >>> 24 & 0xff;

  o[60] = x15 >>>  0 & 0xff;
  o[61] = x15 >>>  8 & 0xff;
  o[62] = x15 >>> 16 & 0xff;
  o[63] = x15 >>> 24 & 0xff;
}

function core_hsalsa20(o,p,k,c) {
  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,
      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,
      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,
      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,
      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,
      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,
      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,
      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,
      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,
      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,
      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,
      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,
      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,
      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,
      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,
      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;

  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,
      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,
      x15 = j15, u;

  for (var i = 0; i < 20; i += 2) {
    u = x0 + x12 | 0;
    x4 ^= u<<7 | u>>>(32-7);
    u = x4 + x0 | 0;
    x8 ^= u<<9 | u>>>(32-9);
    u = x8 + x4 | 0;
    x12 ^= u<<13 | u>>>(32-13);
    u = x12 + x8 | 0;
    x0 ^= u<<18 | u>>>(32-18);

    u = x5 + x1 | 0;
    x9 ^= u<<7 | u>>>(32-7);
    u = x9 + x5 | 0;
    x13 ^= u<<9 | u>>>(32-9);
    u = x13 + x9 | 0;
    x1 ^= u<<13 | u>>>(32-13);
    u = x1 + x13 | 0;
    x5 ^= u<<18 | u>>>(32-18);

    u = x10 + x6 | 0;
    x14 ^= u<<7 | u>>>(32-7);
    u = x14 + x10 | 0;
    x2 ^= u<<9 | u>>>(32-9);
    u = x2 + x14 | 0;
    x6 ^= u<<13 | u>>>(32-13);
    u = x6 + x2 | 0;
    x10 ^= u<<18 | u>>>(32-18);

    u = x15 + x11 | 0;
    x3 ^= u<<7 | u>>>(32-7);
    u = x3 + x15 | 0;
    x7 ^= u<<9 | u>>>(32-9);
    u = x7 + x3 | 0;
    x11 ^= u<<13 | u>>>(32-13);
    u = x11 + x7 | 0;
    x15 ^= u<<18 | u>>>(32-18);

    u = x0 + x3 | 0;
    x1 ^= u<<7 | u>>>(32-7);
    u = x1 + x0 | 0;
    x2 ^= u<<9 | u>>>(32-9);
    u = x2 + x1 | 0;
    x3 ^= u<<13 | u>>>(32-13);
    u = x3 + x2 | 0;
    x0 ^= u<<18 | u>>>(32-18);

    u = x5 + x4 | 0;
    x6 ^= u<<7 | u>>>(32-7);
    u = x6 + x5 | 0;
    x7 ^= u<<9 | u>>>(32-9);
    u = x7 + x6 | 0;
    x4 ^= u<<13 | u>>>(32-13);
    u = x4 + x7 | 0;
    x5 ^= u<<18 | u>>>(32-18);

    u = x10 + x9 | 0;
    x11 ^= u<<7 | u>>>(32-7);
    u = x11 + x10 | 0;
    x8 ^= u<<9 | u>>>(32-9);
    u = x8 + x11 | 0;
    x9 ^= u<<13 | u>>>(32-13);
    u = x9 + x8 | 0;
    x10 ^= u<<18 | u>>>(32-18);

    u = x15 + x14 | 0;
    x12 ^= u<<7 | u>>>(32-7);
    u = x12 + x15 | 0;
    x13 ^= u<<9 | u>>>(32-9);
    u = x13 + x12 | 0;
    x14 ^= u<<13 | u>>>(32-13);
    u = x14 + x13 | 0;
    x15 ^= u<<18 | u>>>(32-18);
  }

  o[ 0] = x0 >>>  0 & 0xff;
  o[ 1] = x0 >>>  8 & 0xff;
  o[ 2] = x0 >>> 16 & 0xff;
  o[ 3] = x0 >>> 24 & 0xff;

  o[ 4] = x5 >>>  0 & 0xff;
  o[ 5] = x5 >>>  8 & 0xff;
  o[ 6] = x5 >>> 16 & 0xff;
  o[ 7] = x5 >>> 24 & 0xff;

  o[ 8] = x10 >>>  0 & 0xff;
  o[ 9] = x10 >>>  8 & 0xff;
  o[10] = x10 >>> 16 & 0xff;
  o[11] = x10 >>> 24 & 0xff;

  o[12] = x15 >>>  0 & 0xff;
  o[13] = x15 >>>  8 & 0xff;
  o[14] = x15 >>> 16 & 0xff;
  o[15] = x15 >>> 24 & 0xff;

  o[16] = x6 >>>  0 & 0xff;
  o[17] = x6 >>>  8 & 0xff;
  o[18] = x6 >>> 16 & 0xff;
  o[19] = x6 >>> 24 & 0xff;

  o[20] = x7 >>>  0 & 0xff;
  o[21] = x7 >>>  8 & 0xff;
  o[22] = x7 >>> 16 & 0xff;
  o[23] = x7 >>> 24 & 0xff;

  o[24] = x8 >>>  0 & 0xff;
  o[25] = x8 >>>  8 & 0xff;
  o[26] = x8 >>> 16 & 0xff;
  o[27] = x8 >>> 24 & 0xff;

  o[28] = x9 >>>  0 & 0xff;
  o[29] = x9 >>>  8 & 0xff;
  o[30] = x9 >>> 16 & 0xff;
  o[31] = x9 >>> 24 & 0xff;
}

function crypto_core_salsa20(out,inp,k,c) {
  core_salsa20(out,inp,k,c);
}

function crypto_core_hsalsa20(out,inp,k,c) {
  core_hsalsa20(out,inp,k,c);
}

var sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);
            // "expand 32-byte k"

function crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {
  var z = new Uint8Array(16), x = new Uint8Array(64);
  var u, i;
  for (i = 0; i < 16; i++) z[i] = 0;
  for (i = 0; i < 8; i++) z[i] = n[i];
  while (b >= 64) {
    crypto_core_salsa20(x,z,k,sigma);
    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];
    u = 1;
    for (i = 8; i < 16; i++) {
      u = u + (z[i] & 0xff) | 0;
      z[i] = u & 0xff;
      u >>>= 8;
    }
    b -= 64;
    cpos += 64;
    mpos += 64;
  }
  if (b > 0) {
    crypto_core_salsa20(x,z,k,sigma);
    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];
  }
  return 0;
}

function crypto_stream_salsa20(c,cpos,b,n,k) {
  var z = new Uint8Array(16), x = new Uint8Array(64);
  var u, i;
  for (i = 0; i < 16; i++) z[i] = 0;
  for (i = 0; i < 8; i++) z[i] = n[i];
  while (b >= 64) {
    crypto_core_salsa20(x,z,k,sigma);
    for (i = 0; i < 64; i++) c[cpos+i] = x[i];
    u = 1;
    for (i = 8; i < 16; i++) {
      u = u + (z[i] & 0xff) | 0;
      z[i] = u & 0xff;
      u >>>= 8;
    }
    b -= 64;
    cpos += 64;
  }
  if (b > 0) {
    crypto_core_salsa20(x,z,k,sigma);
    for (i = 0; i < b; i++) c[cpos+i] = x[i];
  }
  return 0;
}

function crypto_stream(c,cpos,d,n,k) {
  var s = new Uint8Array(32);
  crypto_core_hsalsa20(s,n,k,sigma);
  var sn = new Uint8Array(8);
  for (var i = 0; i < 8; i++) sn[i] = n[i+16];
  return crypto_stream_salsa20(c,cpos,d,sn,s);
}

function crypto_stream_xor(c,cpos,m,mpos,d,n,k) {
  var s = new Uint8Array(32);
  crypto_core_hsalsa20(s,n,k,sigma);
  var sn = new Uint8Array(8);
  for (var i = 0; i < 8; i++) sn[i] = n[i+16];
  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);
}

/*
* Port of Andrew Moon's Poly1305-donna-16. Public domain.
* https://github.com/floodyberry/poly1305-donna
*/

var poly1305 = function(key) {
  this.buffer = new Uint8Array(16);
  this.r = new Uint16Array(10);
  this.h = new Uint16Array(10);
  this.pad = new Uint16Array(8);
  this.leftover = 0;
  this.fin = 0;

  var t0, t1, t2, t3, t4, t5, t6, t7;

  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;
  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;
  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;
  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;
  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;
  this.r[5] = ((t4 >>>  1)) & 0x1ffe;
  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;
  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;
  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;
  this.r[9] = ((t7 >>>  5)) & 0x007f;

  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;
  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;
  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;
  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;
  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;
  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;
  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;
  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;
};

poly1305.prototype.blocks = function(m, mpos, bytes) {
  var hibit = this.fin ? 0 : (1 << 11);
  var t0, t1, t2, t3, t4, t5, t6, t7, c;
  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;

  var h0 = this.h[0],
      h1 = this.h[1],
      h2 = this.h[2],
      h3 = this.h[3],
      h4 = this.h[4],
      h5 = this.h[5],
      h6 = this.h[6],
      h7 = this.h[7],
      h8 = this.h[8],
      h9 = this.h[9];

  var r0 = this.r[0],
      r1 = this.r[1],
      r2 = this.r[2],
      r3 = this.r[3],
      r4 = this.r[4],
      r5 = this.r[5],
      r6 = this.r[6],
      r7 = this.r[7],
      r8 = this.r[8],
      r9 = this.r[9];

  while (bytes >= 16) {
    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;
    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;
    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;
    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;
    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;
    h5 += ((t4 >>>  1)) & 0x1fff;
    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;
    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;
    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;
    h9 += ((t7 >>> 5)) | hibit;

    c = 0;

    d0 = c;
    d0 += h0 * r0;
    d0 += h1 * (5 * r9);
    d0 += h2 * (5 * r8);
    d0 += h3 * (5 * r7);
    d0 += h4 * (5 * r6);
    c = (d0 >>> 13); d0 &= 0x1fff;
    d0 += h5 * (5 * r5);
    d0 += h6 * (5 * r4);
    d0 += h7 * (5 * r3);
    d0 += h8 * (5 * r2);
    d0 += h9 * (5 * r1);
    c += (d0 >>> 13); d0 &= 0x1fff;

    d1 = c;
    d1 += h0 * r1;
    d1 += h1 * r0;
    d1 += h2 * (5 * r9);
    d1 += h3 * (5 * r8);
    d1 += h4 * (5 * r7);
    c = (d1 >>> 13); d1 &= 0x1fff;
    d1 += h5 * (5 * r6);
    d1 += h6 * (5 * r5);
    d1 += h7 * (5 * r4);
    d1 += h8 * (5 * r3);
    d1 += h9 * (5 * r2);
    c += (d1 >>> 13); d1 &= 0x1fff;

    d2 = c;
    d2 += h0 * r2;
    d2 += h1 * r1;
    d2 += h2 * r0;
    d2 += h3 * (5 * r9);
    d2 += h4 * (5 * r8);
    c = (d2 >>> 13); d2 &= 0x1fff;
    d2 += h5 * (5 * r7);
    d2 += h6 * (5 * r6);
    d2 += h7 * (5 * r5);
    d2 += h8 * (5 * r4);
    d2 += h9 * (5 * r3);
    c += (d2 >>> 13); d2 &= 0x1fff;

    d3 = c;
    d3 += h0 * r3;
    d3 += h1 * r2;
    d3 += h2 * r1;
    d3 += h3 * r0;
    d3 += h4 * (5 * r9);
    c = (d3 >>> 13); d3 &= 0x1fff;
    d3 += h5 * (5 * r8);
    d3 += h6 * (5 * r7);
    d3 += h7 * (5 * r6);
    d3 += h8 * (5 * r5);
    d3 += h9 * (5 * r4);
    c += (d3 >>> 13); d3 &= 0x1fff;

    d4 = c;
    d4 += h0 * r4;
    d4 += h1 * r3;
    d4 += h2 * r2;
    d4 += h3 * r1;
    d4 += h4 * r0;
    c = (d4 >>> 13); d4 &= 0x1fff;
    d4 += h5 * (5 * r9);
    d4 += h6 * (5 * r8);
    d4 += h7 * (5 * r7);
    d4 += h8 * (5 * r6);
    d4 += h9 * (5 * r5);
    c += (d4 >>> 13); d4 &= 0x1fff;

    d5 = c;
    d5 += h0 * r5;
    d5 += h1 * r4;
    d5 += h2 * r3;
    d5 += h3 * r2;
    d5 += h4 * r1;
    c = (d5 >>> 13); d5 &= 0x1fff;
    d5 += h5 * r0;
    d5 += h6 * (5 * r9);
    d5 += h7 * (5 * r8);
    d5 += h8 * (5 * r7);
    d5 += h9 * (5 * r6);
    c += (d5 >>> 13); d5 &= 0x1fff;

    d6 = c;
    d6 += h0 * r6;
    d6 += h1 * r5;
    d6 += h2 * r4;
    d6 += h3 * r3;
    d6 += h4 * r2;
    c = (d6 >>> 13); d6 &= 0x1fff;
    d6 += h5 * r1;
    d6 += h6 * r0;
    d6 += h7 * (5 * r9);
    d6 += h8 * (5 * r8);
    d6 += h9 * (5 * r7);
    c += (d6 >>> 13); d6 &= 0x1fff;

    d7 = c;
    d7 += h0 * r7;
    d7 += h1 * r6;
    d7 += h2 * r5;
    d7 += h3 * r4;
    d7 += h4 * r3;
    c = (d7 >>> 13); d7 &= 0x1fff;
    d7 += h5 * r2;
    d7 += h6 * r1;
    d7 += h7 * r0;
    d7 += h8 * (5 * r9);
    d7 += h9 * (5 * r8);
    c += (d7 >>> 13); d7 &= 0x1fff;

    d8 = c;
    d8 += h0 * r8;
    d8 += h1 * r7;
    d8 += h2 * r6;
    d8 += h3 * r5;
    d8 += h4 * r4;
    c = (d8 >>> 13); d8 &= 0x1fff;
    d8 += h5 * r3;
    d8 += h6 * r2;
    d8 += h7 * r1;
    d8 += h8 * r0;
    d8 += h9 * (5 * r9);
    c += (d8 >>> 13); d8 &= 0x1fff;

    d9 = c;
    d9 += h0 * r9;
    d9 += h1 * r8;
    d9 += h2 * r7;
    d9 += h3 * r6;
    d9 += h4 * r5;
    c = (d9 >>> 13); d9 &= 0x1fff;
    d9 += h5 * r4;
    d9 += h6 * r3;
    d9 += h7 * r2;
    d9 += h8 * r1;
    d9 += h9 * r0;
    c += (d9 >>> 13); d9 &= 0x1fff;

    c = (((c << 2) + c)) | 0;
    c = (c + d0) | 0;
    d0 = c & 0x1fff;
    c = (c >>> 13);
    d1 += c;

    h0 = d0;
    h1 = d1;
    h2 = d2;
    h3 = d3;
    h4 = d4;
    h5 = d5;
    h6 = d6;
    h7 = d7;
    h8 = d8;
    h9 = d9;

    mpos += 16;
    bytes -= 16;
  }
  this.h[0] = h0;
  this.h[1] = h1;
  this.h[2] = h2;
  this.h[3] = h3;
  this.h[4] = h4;
  this.h[5] = h5;
  this.h[6] = h6;
  this.h[7] = h7;
  this.h[8] = h8;
  this.h[9] = h9;
};

poly1305.prototype.finish = function(mac, macpos) {
  var g = new Uint16Array(10);
  var c, mask, f, i;

  if (this.leftover) {
    i = this.leftover;
    this.buffer[i++] = 1;
    for (; i < 16; i++) this.buffer[i] = 0;
    this.fin = 1;
    this.blocks(this.buffer, 0, 16);
  }

  c = this.h[1] >>> 13;
  this.h[1] &= 0x1fff;
  for (i = 2; i < 10; i++) {
    this.h[i] += c;
    c = this.h[i] >>> 13;
    this.h[i] &= 0x1fff;
  }
  this.h[0] += (c * 5);
  c = this.h[0] >>> 13;
  this.h[0] &= 0x1fff;
  this.h[1] += c;
  c = this.h[1] >>> 13;
  this.h[1] &= 0x1fff;
  this.h[2] += c;

  g[0] = this.h[0] + 5;
  c = g[0] >>> 13;
  g[0] &= 0x1fff;
  for (i = 1; i < 10; i++) {
    g[i] = this.h[i] + c;
    c = g[i] >>> 13;
    g[i] &= 0x1fff;
  }
  g[9] -= (1 << 13);

  mask = (c ^ 1) - 1;
  for (i = 0; i < 10; i++) g[i] &= mask;
  mask = ~mask;
  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];

  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;
  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;
  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;
  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;
  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;
  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;
  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;
  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;

  f = this.h[0] + this.pad[0];
  this.h[0] = f & 0xffff;
  for (i = 1; i < 8; i++) {
    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;
    this.h[i] = f & 0xffff;
  }

  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;
  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;
  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;
  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;
  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;
  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;
  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;
  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;
  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;
  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;
  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;
  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;
  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;
  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;
  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;
  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;
};

poly1305.prototype.update = function(m, mpos, bytes) {
  var i, want;

  if (this.leftover) {
    want = (16 - this.leftover);
    if (want > bytes)
      want = bytes;
    for (i = 0; i < want; i++)
      this.buffer[this.leftover + i] = m[mpos+i];
    bytes -= want;
    mpos += want;
    this.leftover += want;
    if (this.leftover < 16)
      return;
    this.blocks(this.buffer, 0, 16);
    this.leftover = 0;
  }

  if (bytes >= 16) {
    want = bytes - (bytes % 16);
    this.blocks(m, mpos, want);
    mpos += want;
    bytes -= want;
  }

  if (bytes) {
    for (i = 0; i < bytes; i++)
      this.buffer[this.leftover + i] = m[mpos+i];
    this.leftover += bytes;
  }
};

function crypto_onetimeauth(out, outpos, m, mpos, n, k) {
  var s = new poly1305(k);
  s.update(m, mpos, n);
  s.finish(out, outpos);
  return 0;
}

function crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {
  var x = new Uint8Array(16);
  crypto_onetimeauth(x,0,m,mpos,n,k);
  return crypto_verify_16(h,hpos,x,0);
}

function crypto_secretbox(c,m,d,n,k) {
  var i;
  if (d < 32) return -1;
  crypto_stream_xor(c,0,m,0,d,n,k);
  crypto_onetimeauth(c, 16, c, 32, d - 32, c);
  for (i = 0; i < 16; i++) c[i] = 0;
  return 0;
}

function crypto_secretbox_open(m,c,d,n,k) {
  var i;
  var x = new Uint8Array(32);
  if (d < 32) return -1;
  crypto_stream(x,0,32,n,k);
  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;
  crypto_stream_xor(m,0,c,0,d,n,k);
  for (i = 0; i < 32; i++) m[i] = 0;
  return 0;
}

function set25519(r, a) {
  var i;
  for (i = 0; i < 16; i++) r[i] = a[i]|0;
}

function car25519(o) {
  var i, v, c = 1;
  for (i = 0; i < 16; i++) {
    v = o[i] + c + 65535;
    c = Math.floor(v / 65536);
    o[i] = v - c * 65536;
  }
  o[0] += c-1 + 37 * (c-1);
}

function sel25519(p, q, b) {
  var t, c = ~(b-1);
  for (var i = 0; i < 16; i++) {
    t = c & (p[i] ^ q[i]);
    p[i] ^= t;
    q[i] ^= t;
  }
}

function pack25519(o, n) {
  var i, j, b;
  var m = gf(), t = gf();
  for (i = 0; i < 16; i++) t[i] = n[i];
  car25519(t);
  car25519(t);
  car25519(t);
  for (j = 0; j < 2; j++) {
    m[0] = t[0] - 0xffed;
    for (i = 1; i < 15; i++) {
      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);
      m[i-1] &= 0xffff;
    }
    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);
    b = (m[15]>>16) & 1;
    m[14] &= 0xffff;
    sel25519(t, m, 1-b);
  }
  for (i = 0; i < 16; i++) {
    o[2*i] = t[i] & 0xff;
    o[2*i+1] = t[i]>>8;
  }
}

function neq25519(a, b) {
  var c = new Uint8Array(32), d = new Uint8Array(32);
  pack25519(c, a);
  pack25519(d, b);
  return crypto_verify_32(c, 0, d, 0);
}

function par25519(a) {
  var d = new Uint8Array(32);
  pack25519(d, a);
  return d[0] & 1;
}

function unpack25519(o, n) {
  var i;
  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);
  o[15] &= 0x7fff;
}

function A(o, a, b) {
  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];
}

function Z(o, a, b) {
  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];
}

function M(o, a, b) {
  var v, c,
     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,
     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,
    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,
    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,
    b0 = b[0],
    b1 = b[1],
    b2 = b[2],
    b3 = b[3],
    b4 = b[4],
    b5 = b[5],
    b6 = b[6],
    b7 = b[7],
    b8 = b[8],
    b9 = b[9],
    b10 = b[10],
    b11 = b[11],
    b12 = b[12],
    b13 = b[13],
    b14 = b[14],
    b15 = b[15];

  v = a[0];
  t0 += v * b0;
  t1 += v * b1;
  t2 += v * b2;
  t3 += v * b3;
  t4 += v * b4;
  t5 += v * b5;
  t6 += v * b6;
  t7 += v * b7;
  t8 += v * b8;
  t9 += v * b9;
  t10 += v * b10;
  t11 += v * b11;
  t12 += v * b12;
  t13 += v * b13;
  t14 += v * b14;
  t15 += v * b15;
  v = a[1];
  t1 += v * b0;
  t2 += v * b1;
  t3 += v * b2;
  t4 += v * b3;
  t5 += v * b4;
  t6 += v * b5;
  t7 += v * b6;
  t8 += v * b7;
  t9 += v * b8;
  t10 += v * b9;
  t11 += v * b10;
  t12 += v * b11;
  t13 += v * b12;
  t14 += v * b13;
  t15 += v * b14;
  t16 += v * b15;
  v = a[2];
  t2 += v * b0;
  t3 += v * b1;
  t4 += v * b2;
  t5 += v * b3;
  t6 += v * b4;
  t7 += v * b5;
  t8 += v * b6;
  t9 += v * b7;
  t10 += v * b8;
  t11 += v * b9;
  t12 += v * b10;
  t13 += v * b11;
  t14 += v * b12;
  t15 += v * b13;
  t16 += v * b14;
  t17 += v * b15;
  v = a[3];
  t3 += v * b0;
  t4 += v * b1;
  t5 += v * b2;
  t6 += v * b3;
  t7 += v * b4;
  t8 += v * b5;
  t9 += v * b6;
  t10 += v * b7;
  t11 += v * b8;
  t12 += v * b9;
  t13 += v * b10;
  t14 += v * b11;
  t15 += v * b12;
  t16 += v * b13;
  t17 += v * b14;
  t18 += v * b15;
  v = a[4];
  t4 += v * b0;
  t5 += v * b1;
  t6 += v * b2;
  t7 += v * b3;
  t8 += v * b4;
  t9 += v * b5;
  t10 += v * b6;
  t11 += v * b7;
  t12 += v * b8;
  t13 += v * b9;
  t14 += v * b10;
  t15 += v * b11;
  t16 += v * b12;
  t17 += v * b13;
  t18 += v * b14;
  t19 += v * b15;
  v = a[5];
  t5 += v * b0;
  t6 += v * b1;
  t7 += v * b2;
  t8 += v * b3;
  t9 += v * b4;
  t10 += v * b5;
  t11 += v * b6;
  t12 += v * b7;
  t13 += v * b8;
  t14 += v * b9;
  t15 += v * b10;
  t16 += v * b11;
  t17 += v * b12;
  t18 += v * b13;
  t19 += v * b14;
  t20 += v * b15;
  v = a[6];
  t6 += v * b0;
  t7 += v * b1;
  t8 += v * b2;
  t9 += v * b3;
  t10 += v * b4;
  t11 += v * b5;
  t12 += v * b6;
  t13 += v * b7;
  t14 += v * b8;
  t15 += v * b9;
  t16 += v * b10;
  t17 += v * b11;
  t18 += v * b12;
  t19 += v * b13;
  t20 += v * b14;
  t21 += v * b15;
  v = a[7];
  t7 += v * b0;
  t8 += v * b1;
  t9 += v * b2;
  t10 += v * b3;
  t11 += v * b4;
  t12 += v * b5;
  t13 += v * b6;
  t14 += v * b7;
  t15 += v * b8;
  t16 += v * b9;
  t17 += v * b10;
  t18 += v * b11;
  t19 += v * b12;
  t20 += v * b13;
  t21 += v * b14;
  t22 += v * b15;
  v = a[8];
  t8 += v * b0;
  t9 += v * b1;
  t10 += v * b2;
  t11 += v * b3;
  t12 += v * b4;
  t13 += v * b5;
  t14 += v * b6;
  t15 += v * b7;
  t16 += v * b8;
  t17 += v * b9;
  t18 += v * b10;
  t19 += v * b11;
  t20 += v * b12;
  t21 += v * b13;
  t22 += v * b14;
  t23 += v * b15;
  v = a[9];
  t9 += v * b0;
  t10 += v * b1;
  t11 += v * b2;
  t12 += v * b3;
  t13 += v * b4;
  t14 += v * b5;
  t15 += v * b6;
  t16 += v * b7;
  t17 += v * b8;
  t18 += v * b9;
  t19 += v * b10;
  t20 += v * b11;
  t21 += v * b12;
  t22 += v * b13;
  t23 += v * b14;
  t24 += v * b15;
  v = a[10];
  t10 += v * b0;
  t11 += v * b1;
  t12 += v * b2;
  t13 += v * b3;
  t14 += v * b4;
  t15 += v * b5;
  t16 += v * b6;
  t17 += v * b7;
  t18 += v * b8;
  t19 += v * b9;
  t20 += v * b10;
  t21 += v * b11;
  t22 += v * b12;
  t23 += v * b13;
  t24 += v * b14;
  t25 += v * b15;
  v = a[11];
  t11 += v * b0;
  t12 += v * b1;
  t13 += v * b2;
  t14 += v * b3;
  t15 += v * b4;
  t16 += v * b5;
  t17 += v * b6;
  t18 += v * b7;
  t19 += v * b8;
  t20 += v * b9;
  t21 += v * b10;
  t22 += v * b11;
  t23 += v * b12;
  t24 += v * b13;
  t25 += v * b14;
  t26 += v * b15;
  v = a[12];
  t12 += v * b0;
  t13 += v * b1;
  t14 += v * b2;
  t15 += v * b3;
  t16 += v * b4;
  t17 += v * b5;
  t18 += v * b6;
  t19 += v * b7;
  t20 += v * b8;
  t21 += v * b9;
  t22 += v * b10;
  t23 += v * b11;
  t24 += v * b12;
  t25 += v * b13;
  t26 += v * b14;
  t27 += v * b15;
  v = a[13];
  t13 += v * b0;
  t14 += v * b1;
  t15 += v * b2;
  t16 += v * b3;
  t17 += v * b4;
  t18 += v * b5;
  t19 += v * b6;
  t20 += v * b7;
  t21 += v * b8;
  t22 += v * b9;
  t23 += v * b10;
  t24 += v * b11;
  t25 += v * b12;
  t26 += v * b13;
  t27 += v * b14;
  t28 += v * b15;
  v = a[14];
  t14 += v * b0;
  t15 += v * b1;
  t16 += v * b2;
  t17 += v * b3;
  t18 += v * b4;
  t19 += v * b5;
  t20 += v * b6;
  t21 += v * b7;
  t22 += v * b8;
  t23 += v * b9;
  t24 += v * b10;
  t25 += v * b11;
  t26 += v * b12;
  t27 += v * b13;
  t28 += v * b14;
  t29 += v * b15;
  v = a[15];
  t15 += v * b0;
  t16 += v * b1;
  t17 += v * b2;
  t18 += v * b3;
  t19 += v * b4;
  t20 += v * b5;
  t21 += v * b6;
  t22 += v * b7;
  t23 += v * b8;
  t24 += v * b9;
  t25 += v * b10;
  t26 += v * b11;
  t27 += v * b12;
  t28 += v * b13;
  t29 += v * b14;
  t30 += v * b15;

  t0  += 38 * t16;
  t1  += 38 * t17;
  t2  += 38 * t18;
  t3  += 38 * t19;
  t4  += 38 * t20;
  t5  += 38 * t21;
  t6  += 38 * t22;
  t7  += 38 * t23;
  t8  += 38 * t24;
  t9  += 38 * t25;
  t10 += 38 * t26;
  t11 += 38 * t27;
  t12 += 38 * t28;
  t13 += 38 * t29;
  t14 += 38 * t30;
  // t15 left as is

  // first car
  c = 1;
  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;
  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;
  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;
  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;
  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;
  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;
  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;
  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;
  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;
  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;
  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;
  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;
  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;
  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;
  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;
  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;
  t0 += c-1 + 37 * (c-1);

  // second car
  c = 1;
  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;
  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;
  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;
  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;
  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;
  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;
  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;
  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;
  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;
  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;
  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;
  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;
  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;
  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;
  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;
  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;
  t0 += c-1 + 37 * (c-1);

  o[ 0] = t0;
  o[ 1] = t1;
  o[ 2] = t2;
  o[ 3] = t3;
  o[ 4] = t4;
  o[ 5] = t5;
  o[ 6] = t6;
  o[ 7] = t7;
  o[ 8] = t8;
  o[ 9] = t9;
  o[10] = t10;
  o[11] = t11;
  o[12] = t12;
  o[13] = t13;
  o[14] = t14;
  o[15] = t15;
}

function S(o, a) {
  M(o, a, a);
}

function inv25519(o, i) {
  var c = gf();
  var a;
  for (a = 0; a < 16; a++) c[a] = i[a];
  for (a = 253; a >= 0; a--) {
    S(c, c);
    if(a !== 2 && a !== 4) M(c, c, i);
  }
  for (a = 0; a < 16; a++) o[a] = c[a];
}

function pow2523(o, i) {
  var c = gf();
  var a;
  for (a = 0; a < 16; a++) c[a] = i[a];
  for (a = 250; a >= 0; a--) {
      S(c, c);
      if(a !== 1) M(c, c, i);
  }
  for (a = 0; a < 16; a++) o[a] = c[a];
}

function crypto_scalarmult(q, n, p) {
  var z = new Uint8Array(32);
  var x = new Float64Array(80), r, i;
  var a = gf(), b = gf(), c = gf(),
      d = gf(), e = gf(), f = gf();
  for (i = 0; i < 31; i++) z[i] = n[i];
  z[31]=(n[31]&127)|64;
  z[0]&=248;
  unpack25519(x,p);
  for (i = 0; i < 16; i++) {
    b[i]=x[i];
    d[i]=a[i]=c[i]=0;
  }
  a[0]=d[0]=1;
  for (i=254; i>=0; --i) {
    r=(z[i>>>3]>>>(i&7))&1;
    sel25519(a,b,r);
    sel25519(c,d,r);
    A(e,a,c);
    Z(a,a,c);
    A(c,b,d);
    Z(b,b,d);
    S(d,e);
    S(f,a);
    M(a,c,a);
    M(c,b,e);
    A(e,a,c);
    Z(a,a,c);
    S(b,a);
    Z(c,d,f);
    M(a,c,_121665);
    A(a,a,d);
    M(c,c,a);
    M(a,d,f);
    M(d,b,x);
    S(b,e);
    sel25519(a,b,r);
    sel25519(c,d,r);
  }
  for (i = 0; i < 16; i++) {
    x[i+16]=a[i];
    x[i+32]=c[i];
    x[i+48]=b[i];
    x[i+64]=d[i];
  }
  var x32 = x.subarray(32);
  var x16 = x.subarray(16);
  inv25519(x32,x32);
  M(x16,x16,x32);
  pack25519(q,x16);
  return 0;
}

function crypto_scalarmult_base(q, n) {
  return crypto_scalarmult(q, n, _9);
}

function crypto_box_keypair(y, x) {
  randombytes(x, 32);
  return crypto_scalarmult_base(y, x);
}

function crypto_box_beforenm(k, y, x) {
  var s = new Uint8Array(32);
  crypto_scalarmult(s, x, y);
  return crypto_core_hsalsa20(k, _0, s, sigma);
}

var crypto_box_afternm = crypto_secretbox;
var crypto_box_open_afternm = crypto_secretbox_open;

function crypto_box(c, m, d, n, y, x) {
  var k = new Uint8Array(32);
  crypto_box_beforenm(k, y, x);
  return crypto_box_afternm(c, m, d, n, k);
}

function crypto_box_open(m, c, d, n, y, x) {
  var k = new Uint8Array(32);
  crypto_box_beforenm(k, y, x);
  return crypto_box_open_afternm(m, c, d, n, k);
}

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function crypto_hashblocks_hl(hh, hl, m, n) {
  var wh = new Int32Array(16), wl = new Int32Array(16),
      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,
      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,
      th, tl, i, j, h, l, a, b, c, d;

  var ah0 = hh[0],
      ah1 = hh[1],
      ah2 = hh[2],
      ah3 = hh[3],
      ah4 = hh[4],
      ah5 = hh[5],
      ah6 = hh[6],
      ah7 = hh[7],

      al0 = hl[0],
      al1 = hl[1],
      al2 = hl[2],
      al3 = hl[3],
      al4 = hl[4],
      al5 = hl[5],
      al6 = hl[6],
      al7 = hl[7];

  var pos = 0;
  while (n >= 128) {
    for (i = 0; i < 16; i++) {
      j = 8 * i + pos;
      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];
      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];
    }
    for (i = 0; i < 80; i++) {
      bh0 = ah0;
      bh1 = ah1;
      bh2 = ah2;
      bh3 = ah3;
      bh4 = ah4;
      bh5 = ah5;
      bh6 = ah6;
      bh7 = ah7;

      bl0 = al0;
      bl1 = al1;
      bl2 = al2;
      bl3 = al3;
      bl4 = al4;
      bl5 = al5;
      bl6 = al6;
      bl7 = al7;

      // add
      h = ah7;
      l = al7;

      a = l & 0xffff; b = l >>> 16;
      c = h & 0xffff; d = h >>> 16;

      // Sigma1
      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));
      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // Ch
      h = (ah4 & ah5) ^ (~ah4 & ah6);
      l = (al4 & al5) ^ (~al4 & al6);

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // K
      h = K[i*2];
      l = K[i*2+1];

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // w
      h = wh[i%16];
      l = wl[i%16];

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;

      th = c & 0xffff | d << 16;
      tl = a & 0xffff | b << 16;

      // add
      h = th;
      l = tl;

      a = l & 0xffff; b = l >>> 16;
      c = h & 0xffff; d = h >>> 16;

      // Sigma0
      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));
      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // Maj
      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);
      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;

      bh7 = (c & 0xffff) | (d << 16);
      bl7 = (a & 0xffff) | (b << 16);

      // add
      h = bh3;
      l = bl3;

      a = l & 0xffff; b = l >>> 16;
      c = h & 0xffff; d = h >>> 16;

      h = th;
      l = tl;

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;

      bh3 = (c & 0xffff) | (d << 16);
      bl3 = (a & 0xffff) | (b << 16);

      ah1 = bh0;
      ah2 = bh1;
      ah3 = bh2;
      ah4 = bh3;
      ah5 = bh4;
      ah6 = bh5;
      ah7 = bh6;
      ah0 = bh7;

      al1 = bl0;
      al2 = bl1;
      al3 = bl2;
      al4 = bl3;
      al5 = bl4;
      al6 = bl5;
      al7 = bl6;
      al0 = bl7;

      if (i%16 === 15) {
        for (j = 0; j < 16; j++) {
          // add
          h = wh[j];
          l = wl[j];

          a = l & 0xffff; b = l >>> 16;
          c = h & 0xffff; d = h >>> 16;

          h = wh[(j+9)%16];
          l = wl[(j+9)%16];

          a += l & 0xffff; b += l >>> 16;
          c += h & 0xffff; d += h >>> 16;

          // sigma0
          th = wh[(j+1)%16];
          tl = wl[(j+1)%16];
          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);
          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));

          a += l & 0xffff; b += l >>> 16;
          c += h & 0xffff; d += h >>> 16;

          // sigma1
          th = wh[(j+14)%16];
          tl = wl[(j+14)%16];
          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);
          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));

          a += l & 0xffff; b += l >>> 16;
          c += h & 0xffff; d += h >>> 16;

          b += a >>> 16;
          c += b >>> 16;
          d += c >>> 16;

          wh[j] = (c & 0xffff) | (d << 16);
          wl[j] = (a & 0xffff) | (b << 16);
        }
      }
    }

    // add
    h = ah0;
    l = al0;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[0];
    l = hl[0];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[0] = ah0 = (c & 0xffff) | (d << 16);
    hl[0] = al0 = (a & 0xffff) | (b << 16);

    h = ah1;
    l = al1;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[1];
    l = hl[1];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[1] = ah1 = (c & 0xffff) | (d << 16);
    hl[1] = al1 = (a & 0xffff) | (b << 16);

    h = ah2;
    l = al2;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[2];
    l = hl[2];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[2] = ah2 = (c & 0xffff) | (d << 16);
    hl[2] = al2 = (a & 0xffff) | (b << 16);

    h = ah3;
    l = al3;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[3];
    l = hl[3];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[3] = ah3 = (c & 0xffff) | (d << 16);
    hl[3] = al3 = (a & 0xffff) | (b << 16);

    h = ah4;
    l = al4;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[4];
    l = hl[4];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[4] = ah4 = (c & 0xffff) | (d << 16);
    hl[4] = al4 = (a & 0xffff) | (b << 16);

    h = ah5;
    l = al5;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[5];
    l = hl[5];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[5] = ah5 = (c & 0xffff) | (d << 16);
    hl[5] = al5 = (a & 0xffff) | (b << 16);

    h = ah6;
    l = al6;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[6];
    l = hl[6];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[6] = ah6 = (c & 0xffff) | (d << 16);
    hl[6] = al6 = (a & 0xffff) | (b << 16);

    h = ah7;
    l = al7;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[7];
    l = hl[7];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[7] = ah7 = (c & 0xffff) | (d << 16);
    hl[7] = al7 = (a & 0xffff) | (b << 16);

    pos += 128;
    n -= 128;
  }

  return n;
}

function crypto_hash(out, m, n) {
  var hh = new Int32Array(8),
      hl = new Int32Array(8),
      x = new Uint8Array(256),
      i, b = n;

  hh[0] = 0x6a09e667;
  hh[1] = 0xbb67ae85;
  hh[2] = 0x3c6ef372;
  hh[3] = 0xa54ff53a;
  hh[4] = 0x510e527f;
  hh[5] = 0x9b05688c;
  hh[6] = 0x1f83d9ab;
  hh[7] = 0x5be0cd19;

  hl[0] = 0xf3bcc908;
  hl[1] = 0x84caa73b;
  hl[2] = 0xfe94f82b;
  hl[3] = 0x5f1d36f1;
  hl[4] = 0xade682d1;
  hl[5] = 0x2b3e6c1f;
  hl[6] = 0xfb41bd6b;
  hl[7] = 0x137e2179;

  crypto_hashblocks_hl(hh, hl, m, n);
  n %= 128;

  for (i = 0; i < n; i++) x[i] = m[b-n+i];
  x[n] = 128;

  n = 256-128*(n<112?1:0);
  x[n-9] = 0;
  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);
  crypto_hashblocks_hl(hh, hl, x, n);

  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);

  return 0;
}

function add(p, q) {
  var a = gf(), b = gf(), c = gf(),
      d = gf(), e = gf(), f = gf(),
      g = gf(), h = gf(), t = gf();

  Z(a, p[1], p[0]);
  Z(t, q[1], q[0]);
  M(a, a, t);
  A(b, p[0], p[1]);
  A(t, q[0], q[1]);
  M(b, b, t);
  M(c, p[3], q[3]);
  M(c, c, D2);
  M(d, p[2], q[2]);
  A(d, d, d);
  Z(e, b, a);
  Z(f, d, c);
  A(g, d, c);
  A(h, b, a);

  M(p[0], e, f);
  M(p[1], h, g);
  M(p[2], g, f);
  M(p[3], e, h);
}

function cswap(p, q, b) {
  var i;
  for (i = 0; i < 4; i++) {
    sel25519(p[i], q[i], b);
  }
}

function pack(r, p) {
  var tx = gf(), ty = gf(), zi = gf();
  inv25519(zi, p[2]);
  M(tx, p[0], zi);
  M(ty, p[1], zi);
  pack25519(r, ty);
  r[31] ^= par25519(tx) << 7;
}

function scalarmult(p, q, s) {
  var b, i;
  set25519(p[0], gf0);
  set25519(p[1], gf1);
  set25519(p[2], gf1);
  set25519(p[3], gf0);
  for (i = 255; i >= 0; --i) {
    b = (s[(i/8)|0] >> (i&7)) & 1;
    cswap(p, q, b);
    add(q, p);
    add(p, p);
    cswap(p, q, b);
  }
}

function scalarbase(p, s) {
  var q = [gf(), gf(), gf(), gf()];
  set25519(q[0], X);
  set25519(q[1], Y);
  set25519(q[2], gf1);
  M(q[3], X, Y);
  scalarmult(p, q, s);
}

function crypto_sign_keypair(pk, sk, seeded) {
  var d = new Uint8Array(64);
  var p = [gf(), gf(), gf(), gf()];
  var i;

  if (!seeded) randombytes(sk, 32);
  crypto_hash(d, sk, 32);
  d[0] &= 248;
  d[31] &= 127;
  d[31] |= 64;

  scalarbase(p, d);
  pack(pk, p);

  for (i = 0; i < 32; i++) sk[i+32] = pk[i];
  return 0;
}

var L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);

function modL(r, x) {
  var carry, i, j, k;
  for (i = 63; i >= 32; --i) {
    carry = 0;
    for (j = i - 32, k = i - 12; j < k; ++j) {
      x[j] += carry - 16 * x[i] * L[j - (i - 32)];
      carry = Math.floor((x[j] + 128) / 256);
      x[j] -= carry * 256;
    }
    x[j] += carry;
    x[i] = 0;
  }
  carry = 0;
  for (j = 0; j < 32; j++) {
    x[j] += carry - (x[31] >> 4) * L[j];
    carry = x[j] >> 8;
    x[j] &= 255;
  }
  for (j = 0; j < 32; j++) x[j] -= carry * L[j];
  for (i = 0; i < 32; i++) {
    x[i+1] += x[i] >> 8;
    r[i] = x[i] & 255;
  }
}

function reduce(r) {
  var x = new Float64Array(64), i;
  for (i = 0; i < 64; i++) x[i] = r[i];
  for (i = 0; i < 64; i++) r[i] = 0;
  modL(r, x);
}

// Note: difference from C - smlen returned, not passed as argument.
function crypto_sign(sm, m, n, sk) {
  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);
  var i, j, x = new Float64Array(64);
  var p = [gf(), gf(), gf(), gf()];

  crypto_hash(d, sk, 32);
  d[0] &= 248;
  d[31] &= 127;
  d[31] |= 64;

  var smlen = n + 64;
  for (i = 0; i < n; i++) sm[64 + i] = m[i];
  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];

  crypto_hash(r, sm.subarray(32), n+32);
  reduce(r);
  scalarbase(p, r);
  pack(sm, p);

  for (i = 32; i < 64; i++) sm[i] = sk[i];
  crypto_hash(h, sm, n + 64);
  reduce(h);

  for (i = 0; i < 64; i++) x[i] = 0;
  for (i = 0; i < 32; i++) x[i] = r[i];
  for (i = 0; i < 32; i++) {
    for (j = 0; j < 32; j++) {
      x[i+j] += h[i] * d[j];
    }
  }

  modL(sm.subarray(32), x);
  return smlen;
}

function unpackneg(r, p) {
  var t = gf(), chk = gf(), num = gf(),
      den = gf(), den2 = gf(), den4 = gf(),
      den6 = gf();

  set25519(r[2], gf1);
  unpack25519(r[1], p);
  S(num, r[1]);
  M(den, num, D);
  Z(num, num, r[2]);
  A(den, r[2], den);

  S(den2, den);
  S(den4, den2);
  M(den6, den4, den2);
  M(t, den6, num);
  M(t, t, den);

  pow2523(t, t);
  M(t, t, num);
  M(t, t, den);
  M(t, t, den);
  M(r[0], t, den);

  S(chk, r[0]);
  M(chk, chk, den);
  if (neq25519(chk, num)) M(r[0], r[0], I);

  S(chk, r[0]);
  M(chk, chk, den);
  if (neq25519(chk, num)) return -1;

  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);

  M(r[3], r[0], r[1]);
  return 0;
}

function crypto_sign_open(m, sm, n, pk) {
  var i;
  var t = new Uint8Array(32), h = new Uint8Array(64);
  var p = [gf(), gf(), gf(), gf()],
      q = [gf(), gf(), gf(), gf()];

  if (n < 64) return -1;

  if (unpackneg(q, pk)) return -1;

  for (i = 0; i < n; i++) m[i] = sm[i];
  for (i = 0; i < 32; i++) m[i+32] = pk[i];
  crypto_hash(h, m, n);
  reduce(h);
  scalarmult(p, q, h);

  scalarbase(q, sm.subarray(32));
  add(p, q);
  pack(t, p);

  n -= 64;
  if (crypto_verify_32(sm, 0, t, 0)) {
    for (i = 0; i < n; i++) m[i] = 0;
    return -1;
  }

  for (i = 0; i < n; i++) m[i] = sm[i + 64];
  return n;
}

var crypto_secretbox_KEYBYTES = 32,
    crypto_secretbox_NONCEBYTES = 24,
    crypto_secretbox_ZEROBYTES = 32,
    crypto_secretbox_BOXZEROBYTES = 16,
    crypto_scalarmult_BYTES = 32,
    crypto_scalarmult_SCALARBYTES = 32,
    crypto_box_PUBLICKEYBYTES = 32,
    crypto_box_SECRETKEYBYTES = 32,
    crypto_box_BEFORENMBYTES = 32,
    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,
    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,
    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,
    crypto_sign_BYTES = 64,
    crypto_sign_PUBLICKEYBYTES = 32,
    crypto_sign_SECRETKEYBYTES = 64,
    crypto_sign_SEEDBYTES = 32,
    crypto_hash_BYTES = 64;

nacl.lowlevel = {
  crypto_core_hsalsa20: crypto_core_hsalsa20,
  crypto_stream_xor: crypto_stream_xor,
  crypto_stream: crypto_stream,
  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,
  crypto_stream_salsa20: crypto_stream_salsa20,
  crypto_onetimeauth: crypto_onetimeauth,
  crypto_onetimeauth_verify: crypto_onetimeauth_verify,
  crypto_verify_16: crypto_verify_16,
  crypto_verify_32: crypto_verify_32,
  crypto_secretbox: crypto_secretbox,
  crypto_secretbox_open: crypto_secretbox_open,
  crypto_scalarmult: crypto_scalarmult,
  crypto_scalarmult_base: crypto_scalarmult_base,
  crypto_box_beforenm: crypto_box_beforenm,
  crypto_box_afternm: crypto_box_afternm,
  crypto_box: crypto_box,
  crypto_box_open: crypto_box_open,
  crypto_box_keypair: crypto_box_keypair,
  crypto_hash: crypto_hash,
  crypto_sign: crypto_sign,
  crypto_sign_keypair: crypto_sign_keypair,
  crypto_sign_open: crypto_sign_open,

  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,
  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,
  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,
  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,
  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,
  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,
  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,
  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,
  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,
  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,
  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,
  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,
  crypto_sign_BYTES: crypto_sign_BYTES,
  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,
  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,
  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,
  crypto_hash_BYTES: crypto_hash_BYTES,

  gf: gf,
  D: D,
  L: L,
  pack25519: pack25519,
  unpack25519: unpack25519,
  M: M,
  A: A,
  S: S,
  Z: Z,
  pow2523: pow2523,
  add: add,
  set25519: set25519,
  modL: modL,
  scalarmult: scalarmult,
  scalarbase: scalarbase,
};

/* High-level API */

function checkLengths(k, n) {
  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');
  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');
}

function checkBoxLengths(pk, sk) {
  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');
  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');
}

function checkArrayTypes() {
  for (var i = 0; i < arguments.length; i++) {
    if (!(arguments[i] instanceof Uint8Array))
      throw new TypeError('unexpected type, use Uint8Array');
  }
}

function cleanup(arr) {
  for (var i = 0; i < arr.length; i++) arr[i] = 0;
}

nacl.randomBytes = function(n) {
  var b = new Uint8Array(n);
  randombytes(b, n);
  return b;
};

nacl.secretbox = function(msg, nonce, key) {
  checkArrayTypes(msg, nonce, key);
  checkLengths(key, nonce);
  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);
  var c = new Uint8Array(m.length);
  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];
  crypto_secretbox(c, m, m.length, nonce, key);
  return c.subarray(crypto_secretbox_BOXZEROBYTES);
};

nacl.secretbox.open = function(box, nonce, key) {
  checkArrayTypes(box, nonce, key);
  checkLengths(key, nonce);
  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);
  var m = new Uint8Array(c.length);
  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];
  if (c.length < 32) return null;
  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;
  return m.subarray(crypto_secretbox_ZEROBYTES);
};

nacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;
nacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;
nacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;

nacl.scalarMult = function(n, p) {
  checkArrayTypes(n, p);
  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');
  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');
  var q = new Uint8Array(crypto_scalarmult_BYTES);
  crypto_scalarmult(q, n, p);
  return q;
};

nacl.scalarMult.base = function(n) {
  checkArrayTypes(n);
  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');
  var q = new Uint8Array(crypto_scalarmult_BYTES);
  crypto_scalarmult_base(q, n);
  return q;
};

nacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;
nacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;

nacl.box = function(msg, nonce, publicKey, secretKey) {
  var k = nacl.box.before(publicKey, secretKey);
  return nacl.secretbox(msg, nonce, k);
};

nacl.box.before = function(publicKey, secretKey) {
  checkArrayTypes(publicKey, secretKey);
  checkBoxLengths(publicKey, secretKey);
  var k = new Uint8Array(crypto_box_BEFORENMBYTES);
  crypto_box_beforenm(k, publicKey, secretKey);
  return k;
};

nacl.box.after = nacl.secretbox;

nacl.box.open = function(msg, nonce, publicKey, secretKey) {
  var k = nacl.box.before(publicKey, secretKey);
  return nacl.secretbox.open(msg, nonce, k);
};

nacl.box.open.after = nacl.secretbox.open;

nacl.box.keyPair = function() {
  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);
  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);
  crypto_box_keypair(pk, sk);
  return {publicKey: pk, secretKey: sk};
};

nacl.box.keyPair.fromSecretKey = function(secretKey) {
  checkArrayTypes(secretKey);
  if (secretKey.length !== crypto_box_SECRETKEYBYTES)
    throw new Error('bad secret key size');
  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);
  crypto_scalarmult_base(pk, secretKey);
  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};
};

nacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;
nacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;
nacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;
nacl.box.nonceLength = crypto_box_NONCEBYTES;
nacl.box.overheadLength = nacl.secretbox.overheadLength;

nacl.sign = function(msg, secretKey) {
  checkArrayTypes(msg, secretKey);
  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)
    throw new Error('bad secret key size');
  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);
  crypto_sign(signedMsg, msg, msg.length, secretKey);
  return signedMsg;
};

nacl.sign.open = function(signedMsg, publicKey) {
  checkArrayTypes(signedMsg, publicKey);
  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)
    throw new Error('bad public key size');
  var tmp = new Uint8Array(signedMsg.length);
  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);
  if (mlen < 0) return null;
  var m = new Uint8Array(mlen);
  for (var i = 0; i < m.length; i++) m[i] = tmp[i];
  return m;
};

nacl.sign.detached = function(msg, secretKey) {
  var signedMsg = nacl.sign(msg, secretKey);
  var sig = new Uint8Array(crypto_sign_BYTES);
  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];
  return sig;
};

nacl.sign.detached.verify = function(msg, sig, publicKey) {
  checkArrayTypes(msg, sig, publicKey);
  if (sig.length !== crypto_sign_BYTES)
    throw new Error('bad signature size');
  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)
    throw new Error('bad public key size');
  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);
  var m = new Uint8Array(crypto_sign_BYTES + msg.length);
  var i;
  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];
  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];
  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);
};

nacl.sign.keyPair = function() {
  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);
  crypto_sign_keypair(pk, sk);
  return {publicKey: pk, secretKey: sk};
};

nacl.sign.keyPair.fromSecretKey = function(secretKey) {
  checkArrayTypes(secretKey);
  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)
    throw new Error('bad secret key size');
  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];
  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};
};

nacl.sign.keyPair.fromSeed = function(seed) {
  checkArrayTypes(seed);
  if (seed.length !== crypto_sign_SEEDBYTES)
    throw new Error('bad seed size');
  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);
  for (var i = 0; i < 32; i++) sk[i] = seed[i];
  crypto_sign_keypair(pk, sk, true);
  return {publicKey: pk, secretKey: sk};
};

nacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;
nacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;
nacl.sign.seedLength = crypto_sign_SEEDBYTES;
nacl.sign.signatureLength = crypto_sign_BYTES;

nacl.hash = function(msg) {
  checkArrayTypes(msg);
  var h = new Uint8Array(crypto_hash_BYTES);
  crypto_hash(h, msg, msg.length);
  return h;
};

nacl.hash.hashLength = crypto_hash_BYTES;

nacl.verify = function(x, y) {
  checkArrayTypes(x, y);
  // Zero length arguments are considered not equal.
  if (x.length === 0 || y.length === 0) return false;
  if (x.length !== y.length) return false;
  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;
};

nacl.setPRNG = function(fn) {
  randombytes = fn;
};

(function() {
  // Initialize PRNG if environment provides CSPRNG.
  // If not, methods calling randombytes will throw.
  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;
  if (crypto && crypto.getRandomValues) {
    // Browsers.
    var QUOTA = 65536;
    nacl.setPRNG(function(x, n) {
      var i, v = new Uint8Array(n);
      for (i = 0; i < n; i += QUOTA) {
        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));
      }
      for (i = 0; i < n; i++) x[i] = v[i];
      cleanup(v);
    });
  } else if (typeof require !== 'undefined') {
    // Node.js.
    crypto = require('crypto');
    if (crypto && crypto.randomBytes) {
      nacl.setPRNG(function(x, n) {
        var i, v = crypto.randomBytes(n);
        for (i = 0; i < n; i++) x[i] = v[i];
        cleanup(v);
      });
    }
  }
})();

})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));

},{"crypto":"node_modules/parcel-bundler/src/builtins/_empty.js"}],"node_modules/ed2curve/ed2curve.js":[function(require,module,exports) {
/*
 * ed2curve: convert Ed25519 signing key pair into Curve25519
 * key pair suitable for Diffie-Hellman key exchange.
 *
 * Written by Dmitry Chestnykh in 2014. Public domain.
 */
/* jshint newcap: false */
(function(root, f) {
  'use strict';
  if (typeof module !== 'undefined' && module.exports) module.exports = f(require('tweetnacl'));
  else root.ed2curve = f(root.nacl);
}(this, function(nacl) {
  'use strict';
  if (!nacl) throw new Error('tweetnacl not loaded');

  // -- Operations copied from TweetNaCl.js. --

  var gf = function(init) {
    var i, r = new Float64Array(16);
    if (init) for (i = 0; i < init.length; i++) r[i] = init[i];
    return r;
  };

  var gf0 = gf(),
      gf1 = gf([1]),
      D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),
      I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);

  function car25519(o) {
    var c;
    var i;
    for (i = 0; i < 16; i++) {
      o[i] += 65536;
      c = Math.floor(o[i] / 65536);
      o[(i+1)*(i<15?1:0)] += c - 1 + 37 * (c-1) * (i===15?1:0);
      o[i] -= (c * 65536);
    }
  }

  function sel25519(p, q, b) {
    var t, c = ~(b-1);
    for (var i = 0; i < 16; i++) {
      t = c & (p[i] ^ q[i]);
      p[i] ^= t;
      q[i] ^= t;
    }
  }

  function unpack25519(o, n) {
    var i;
    for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);
    o[15] &= 0x7fff;
  }

  // addition
  function A(o, a, b) {
    var i;
    for (i = 0; i < 16; i++) o[i] = (a[i] + b[i])|0;
  }

  // subtraction
  function Z(o, a, b) {
    var i;
    for (i = 0; i < 16; i++) o[i] = (a[i] - b[i])|0;
  }

  // multiplication
  function M(o, a, b) {
    var i, j, t = new Float64Array(31);
    for (i = 0; i < 31; i++) t[i] = 0;
    for (i = 0; i < 16; i++) {
      for (j = 0; j < 16; j++) {
        t[i+j] += a[i] * b[j];
      }
    }
    for (i = 0; i < 15; i++) {
      t[i] += 38 * t[i+16];
    }
    for (i = 0; i < 16; i++) o[i] = t[i];
    car25519(o);
    car25519(o);
  }

  // squaring
  function S(o, a) {
    M(o, a, a);
  }

  // inversion
  function inv25519(o, i) {
    var c = gf();
    var a;
    for (a = 0; a < 16; a++) c[a] = i[a];
    for (a = 253; a >= 0; a--) {
      S(c, c);
      if(a !== 2 && a !== 4) M(c, c, i);
    }
    for (a = 0; a < 16; a++) o[a] = c[a];
  }

  function pack25519(o, n) {
    var i, j, b;
    var m = gf(), t = gf();
    for (i = 0; i < 16; i++) t[i] = n[i];
    car25519(t);
    car25519(t);
    car25519(t);
    for (j = 0; j < 2; j++) {
      m[0] = t[0] - 0xffed;
      for (i = 1; i < 15; i++) {
        m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);
        m[i-1] &= 0xffff;
      }
      m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);
      b = (m[15]>>16) & 1;
      m[14] &= 0xffff;
      sel25519(t, m, 1-b);
    }
    for (i = 0; i < 16; i++) {
      o[2*i] = t[i] & 0xff;
      o[2*i+1] = t[i] >> 8;
    }
  }

  function par25519(a) {
    var d = new Uint8Array(32);
    pack25519(d, a);
    return d[0] & 1;
  }

  function vn(x, xi, y, yi, n) {
    var i, d = 0;
    for (i = 0; i < n; i++) d |= x[xi + i] ^ y[yi + i];
    return (1 & ((d - 1) >>> 8)) - 1;
  }

  function crypto_verify_32(x, xi, y, yi) {
    return vn(x, xi, y, yi, 32);
  }

  function neq25519(a, b) {
    var c = new Uint8Array(32), d = new Uint8Array(32);
    pack25519(c, a);
    pack25519(d, b);
    return crypto_verify_32(c, 0, d, 0);
  }

  function pow2523(o, i) {
    var c = gf();
    var a;
    for (a = 0; a < 16; a++) c[a] = i[a];
    for (a = 250; a >= 0; a--) {
      S(c, c);
      if (a !== 1) M(c, c, i);
    }
    for (a = 0; a < 16; a++) o[a] = c[a];
  }

  function set25519(r, a) {
    var i;
    for (i = 0; i < 16; i++) r[i] = a[i] | 0;
  }

  function unpackneg(r, p) {
    var t = gf(), chk = gf(), num = gf(),
      den = gf(), den2 = gf(), den4 = gf(),
      den6 = gf();

    set25519(r[2], gf1);
    unpack25519(r[1], p);
    S(num, r[1]);
    M(den, num, D);
    Z(num, num, r[2]);
    A(den, r[2], den);

    S(den2, den);
    S(den4, den2);
    M(den6, den4, den2);
    M(t, den6, num);
    M(t, t, den);

    pow2523(t, t);
    M(t, t, num);
    M(t, t, den);
    M(t, t, den);
    M(r[0], t, den);

    S(chk, r[0]);
    M(chk, chk, den);
    if (neq25519(chk, num)) M(r[0], r[0], I);

    S(chk, r[0]);
    M(chk, chk, den);
    if (neq25519(chk, num)) return -1;

    if (par25519(r[0]) === (p[31] >> 7)) Z(r[0], gf0, r[0]);

    M(r[3], r[0], r[1]);
    return 0;
  }

  // ----

  // Converts Ed25519 public key to Curve25519 public key.
  // montgomeryX = (edwardsY + 1)*inverse(1 - edwardsY) mod p
  function convertPublicKey(pk) {
    var z = new Uint8Array(32),
      q = [gf(), gf(), gf(), gf()],
      a = gf(), b = gf();

    if (unpackneg(q, pk)) return null; // reject invalid key

    var y = q[1];

    A(a, gf1, y);
    Z(b, gf1, y);
    inv25519(b, b);
    M(a, a, b);

    pack25519(z, a);
    return z;
  }

  // Converts Ed25519 secret key to Curve25519 secret key.
  function convertSecretKey(sk) {
    var d = new Uint8Array(64), o = new Uint8Array(32), i;
    nacl.lowlevel.crypto_hash(d, sk, 32);
    d[0] &= 248;
    d[31] &= 127;
    d[31] |= 64;
    for (i = 0; i < 32; i++) o[i] = d[i];
    for (i = 0; i < 64; i++) d[i] = 0;
    return o;
  }

  function convertKeyPair(edKeyPair) {
    var publicKey = convertPublicKey(edKeyPair.publicKey);
    if (!publicKey) return null;
    return {
      publicKey: publicKey,
      secretKey: convertSecretKey(edKeyPair.secretKey)
    };
  }

  return {
    convertPublicKey: convertPublicKey,
    convertSecretKey: convertSecretKey,
    convertKeyPair: convertKeyPair,
  };

}));

},{"tweetnacl":"node_modules/tweetnacl/nacl-fast.js"}],"node_modules/@polkadot/util-crypto/ed25519/convertKey.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.convertPublicKeyToCurve25519 = convertPublicKeyToCurve25519;
exports.convertSecretKeyToCurve25519 = convertSecretKeyToCurve25519;

var _ed2curve = _interopRequireDefault(require("ed2curve"));

var _util = require("@polkadot/util");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
function convertSecretKeyToCurve25519(secretKey) {
  return _ed2curve.default.convertSecretKey(secretKey);
}

function convertPublicKeyToCurve25519(publicKey) {
  return (0, _util.assertReturn)(_ed2curve.default.convertPublicKey(publicKey), 'Unable to convert publicKey to ed25519');
}
},{"ed2curve":"node_modules/ed2curve/ed2curve.js","@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/util-crypto/ed25519/deriveHard.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ed25519DeriveHard = ed25519DeriveHard;

var _util = require("@polkadot/util");

var _asU8a = require("../blake2/asU8a.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
var HDKD = (0, _util.compactAddLength)((0, _util.stringToU8a)('Ed25519HDKD'));

function ed25519DeriveHard(seed, chainCode) {
  (0, _util.assert)((0, _util.isU8a)(chainCode) && chainCode.length === 32, 'Invalid chainCode passed to derive');
  return (0, _asU8a.blake2AsU8a)((0, _util.u8aConcat)(HDKD, seed, chainCode));
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../blake2/asU8a.js":"node_modules/@polkadot/util-crypto/blake2/asU8a.js"}],"node_modules/@polkadot/util-crypto/random/asU8a.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.randomAsHex = void 0;
exports.randomAsU8a = randomAsU8a;

var _xRandomvalues = require("@polkadot/x-randomvalues");

var _helpers = require("../helpers.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name randomAsU8a
 * @summary Creates a Uint8Array filled with random bytes.
 * @description
 * Returns a `Uint8Array` with the specified (optional) length filled with random bytes.
 * @example
 * <BR>
 *
 * ```javascript
 * import { randomAsU8a } from '@polkadot/util-crypto';
 *
 * randomAsU8a(); // => Uint8Array([...])
 * ```
 */
function randomAsU8a() {
  var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 32;
  return (0, _xRandomvalues.getRandomValues)(new Uint8Array(length));
}
/**
 * @name randomAsHex
 * @description Creates a hex string filled with random bytes.
 */


var randomAsHex = (0, _helpers.createAsHex)(randomAsU8a);
exports.randomAsHex = randomAsHex;
},{"@polkadot/x-randomvalues":"node_modules/@polkadot/x-randomvalues/cjs/browser.js","../helpers.js":"node_modules/@polkadot/util-crypto/helpers.js"}],"node_modules/@polkadot/util-crypto/random/asNumber.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.randomAsNumber = randomAsNumber;

var _util = require("@polkadot/util");

var _asU8a = require("./asU8a.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
var BN_53 = new _util.BN(9007199254740991);
/**
 * @name randomAsNumber
 * @summary Creates a random number from random bytes.
 * @description
 * Returns a random number generated from the secure bytes.
 * @example
 * <BR>
 *
 * ```javascript
 * import { randomAsNumber } from '@polkadot/util-crypto';
 *
 * randomAsNumber(); // => <random number>
 * ```
 */

function randomAsNumber() {
  return (0, _util.hexToBn)((0, _asU8a.randomAsHex)(8)).and(BN_53).toNumber();
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./asU8a.js":"node_modules/@polkadot/util-crypto/random/asU8a.js"}],"node_modules/@polkadot/util-crypto/random/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "randomAsHex", {
  enumerable: true,
  get: function () {
    return _asU8a.randomAsHex;
  }
});
Object.defineProperty(exports, "randomAsNumber", {
  enumerable: true,
  get: function () {
    return _asNumber.randomAsNumber;
  }
});
Object.defineProperty(exports, "randomAsU8a", {
  enumerable: true,
  get: function () {
    return _asU8a.randomAsU8a;
  }
});

var _asNumber = require("./asNumber.js");

var _asU8a = require("./asU8a.js");
},{"./asNumber.js":"node_modules/@polkadot/util-crypto/random/asNumber.js","./asU8a.js":"node_modules/@polkadot/util-crypto/random/asU8a.js"}],"node_modules/@polkadot/util-crypto/ed25519/pair/fromSeed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ed25519PairFromSeed = ed25519PairFromSeed;

var _tweetnacl = _interopRequireDefault(require("tweetnacl"));

var _wasmCrypto = require("@polkadot/wasm-crypto");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name ed25519PairFromSeed
 * @summary Creates a new public/secret keypair from a seed.
 * @description
 * Returns a object containing a `publicKey` & `secretKey` generated from the supplied seed.
 * @example
 * <BR>
 *
 * ```javascript
 * import { ed25519PairFromSeed } from '@polkadot/util-crypto';
 *
 * ed25519PairFromSeed(...); // => { secretKey: [...], publicKey: [...] }
 * ```
 */
function ed25519PairFromSeed(seed, onlyJs) {
  if (!onlyJs && (0, _wasmCrypto.isReady)()) {
    var full = (0, _wasmCrypto.ed25519KeypairFromSeed)(seed);
    return {
      publicKey: full.slice(32),
      secretKey: full.slice(0, 64)
    };
  }

  return _tweetnacl.default.sign.keyPair.fromSeed(seed);
}
},{"tweetnacl":"node_modules/tweetnacl/nacl-fast.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js"}],"node_modules/@polkadot/util-crypto/ed25519/pair/fromRandom.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ed25519PairFromRandom = ed25519PairFromRandom;

var _index = require("../../random/index.js");

var _fromSeed = require("./fromSeed.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name ed25519PairFromRandom
 * @summary Creates a new public/secret keypair.
 * @description
 * Returns a new generate object containing a `publicKey` & `secretKey`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { ed25519PairFromRandom } from '@polkadot/util-crypto';
 *
 * ed25519PairFromRandom(); // => { secretKey: [...], publicKey: [...] }
 * ```
 */
function ed25519PairFromRandom() {
  return (0, _fromSeed.ed25519PairFromSeed)((0, _index.randomAsU8a)());
}
},{"../../random/index.js":"node_modules/@polkadot/util-crypto/random/index.js","./fromSeed.js":"node_modules/@polkadot/util-crypto/ed25519/pair/fromSeed.js"}],"node_modules/@polkadot/util-crypto/ed25519/pair/fromSecret.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ed25519PairFromSecret = ed25519PairFromSecret;

var _tweetnacl = _interopRequireDefault(require("tweetnacl"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name ed25519PairFromSecret
 * @summary Creates a new public/secret keypair from a secret.
 * @description
 * Returns a object containing a `publicKey` & `secretKey` generated from the supplied secret.
 * @example
 * <BR>
 *
 * ```javascript
 * import { ed25519PairFromSecret } from '@polkadot/util-crypto';
 *
 * ed25519PairFromSecret(...); // => { secretKey: [...], publicKey: [...] }
 * ```
 */
function ed25519PairFromSecret(secret) {
  return _tweetnacl.default.sign.keyPair.fromSecretKey(secret);
}
},{"tweetnacl":"node_modules/tweetnacl/nacl-fast.js"}],"node_modules/@polkadot/util-crypto/ed25519/pair/fromString.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ed25519PairFromString = ed25519PairFromString;

var _util = require("@polkadot/util");

var _asU8a = require("../../blake2/asU8a.js");

var _fromSeed = require("./fromSeed.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name ed25519PairFromString
 * @summary Creates a new public/secret keypair from a string.
 * @description
 * Returns a object containing a `publicKey` & `secretKey` generated from the supplied string. The string is hashed and the value used as the input seed.
 * @example
 * <BR>
 *
 * ```javascript
 * import { ed25519PairFromString } from '@polkadot/util-crypto';
 *
 * ed25519PairFromString('test'); // => { secretKey: [...], publicKey: [...] }
 * ```
 */
function ed25519PairFromString(value) {
  return (0, _fromSeed.ed25519PairFromSeed)((0, _asU8a.blake2AsU8a)((0, _util.stringToU8a)(value)));
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../../blake2/asU8a.js":"node_modules/@polkadot/util-crypto/blake2/asU8a.js","./fromSeed.js":"node_modules/@polkadot/util-crypto/ed25519/pair/fromSeed.js"}],"node_modules/@polkadot/util-crypto/ed25519/sign.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ed25519Sign = ed25519Sign;

var _tweetnacl = _interopRequireDefault(require("tweetnacl"));

var _util = require("@polkadot/util");

var _wasmCrypto = require("@polkadot/wasm-crypto");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name ed25519Sign
 * @summary Signs a message using the supplied secretKey
 * @description
 * Returns message signature of `message`, using the `secretKey`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { ed25519Sign } from '@polkadot/util-crypto';
 *
 * ed25519Sign([...], [...]); // => [...]
 * ```
 */
function ed25519Sign(message, _ref, onlyJs) {
  var publicKey = _ref.publicKey,
      secretKey = _ref.secretKey;
  (0, _util.assert)(secretKey, 'Expected a valid secretKey');
  var messageU8a = (0, _util.u8aToU8a)(message);
  return !onlyJs && (0, _wasmCrypto.isReady)() ? (0, _wasmCrypto.ed25519Sign)(publicKey, secretKey.subarray(0, 32), messageU8a) : _tweetnacl.default.sign.detached(messageU8a, secretKey);
}
},{"tweetnacl":"node_modules/tweetnacl/nacl-fast.js","@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js"}],"node_modules/@polkadot/util-crypto/ed25519/verify.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ed25519Verify = ed25519Verify;

var _tweetnacl = _interopRequireDefault(require("tweetnacl"));

var _util = require("@polkadot/util");

var _wasmCrypto = require("@polkadot/wasm-crypto");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name ed25519Sign
 * @summary Verifies the signature on the supplied message.
 * @description
 * Verifies the `signature` on `message` with the supplied `publicKey`. Returns `true` on sucess, `false` otherwise.
 * @example
 * <BR>
 *
 * ```javascript
 * import { ed25519Verify } from '@polkadot/util-crypto';
 *
 * ed25519Verify([...], [...], [...]); // => true/false
 * ```
 */
function ed25519Verify(message, signature, publicKey, onlyJs) {
  var messageU8a = (0, _util.u8aToU8a)(message);
  var publicKeyU8a = (0, _util.u8aToU8a)(publicKey);
  var signatureU8a = (0, _util.u8aToU8a)(signature);
  (0, _util.assert)(publicKeyU8a.length === 32, function () {
    return "Invalid publicKey, received ".concat(publicKeyU8a.length, ", expected 32");
  });
  (0, _util.assert)(signatureU8a.length === 64, function () {
    return "Invalid signature, received ".concat(signatureU8a.length, " bytes, expected 64");
  });
  return !onlyJs && (0, _wasmCrypto.isReady)() ? (0, _wasmCrypto.ed25519Verify)(signatureU8a, messageU8a, publicKeyU8a) : _tweetnacl.default.sign.detached.verify(messageU8a, signatureU8a, publicKeyU8a);
}
},{"tweetnacl":"node_modules/tweetnacl/nacl-fast.js","@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js"}],"node_modules/@polkadot/util-crypto/ed25519/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "convertPublicKeyToCurve25519", {
  enumerable: true,
  get: function () {
    return _convertKey.convertPublicKeyToCurve25519;
  }
});
Object.defineProperty(exports, "convertSecretKeyToCurve25519", {
  enumerable: true,
  get: function () {
    return _convertKey.convertSecretKeyToCurve25519;
  }
});
Object.defineProperty(exports, "ed25519DeriveHard", {
  enumerable: true,
  get: function () {
    return _deriveHard.ed25519DeriveHard;
  }
});
Object.defineProperty(exports, "ed25519PairFromRandom", {
  enumerable: true,
  get: function () {
    return _fromRandom.ed25519PairFromRandom;
  }
});
Object.defineProperty(exports, "ed25519PairFromSecret", {
  enumerable: true,
  get: function () {
    return _fromSecret.ed25519PairFromSecret;
  }
});
Object.defineProperty(exports, "ed25519PairFromSeed", {
  enumerable: true,
  get: function () {
    return _fromSeed.ed25519PairFromSeed;
  }
});
Object.defineProperty(exports, "ed25519PairFromString", {
  enumerable: true,
  get: function () {
    return _fromString.ed25519PairFromString;
  }
});
Object.defineProperty(exports, "ed25519Sign", {
  enumerable: true,
  get: function () {
    return _sign.ed25519Sign;
  }
});
Object.defineProperty(exports, "ed25519Verify", {
  enumerable: true,
  get: function () {
    return _verify.ed25519Verify;
  }
});

var _convertKey = require("./convertKey.js");

var _deriveHard = require("./deriveHard.js");

var _fromRandom = require("./pair/fromRandom.js");

var _fromSecret = require("./pair/fromSecret.js");

var _fromSeed = require("./pair/fromSeed.js");

var _fromString = require("./pair/fromString.js");

var _sign = require("./sign.js");

var _verify = require("./verify.js");
},{"./convertKey.js":"node_modules/@polkadot/util-crypto/ed25519/convertKey.js","./deriveHard.js":"node_modules/@polkadot/util-crypto/ed25519/deriveHard.js","./pair/fromRandom.js":"node_modules/@polkadot/util-crypto/ed25519/pair/fromRandom.js","./pair/fromSecret.js":"node_modules/@polkadot/util-crypto/ed25519/pair/fromSecret.js","./pair/fromSeed.js":"node_modules/@polkadot/util-crypto/ed25519/pair/fromSeed.js","./pair/fromString.js":"node_modules/@polkadot/util-crypto/ed25519/pair/fromString.js","./sign.js":"node_modules/@polkadot/util-crypto/ed25519/sign.js","./verify.js":"node_modules/@polkadot/util-crypto/ed25519/verify.js"}],"node_modules/@polkadot/util-crypto/key/hdkdEd25519.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.keyHdkdEd25519 = void 0;

var _index = require("../ed25519/index.js");

var _hdkdDerive = require("./hdkdDerive.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
var keyHdkdEd25519 = (0, _hdkdDerive.createSeedDeriveFn)(_index.ed25519PairFromSeed, _index.ed25519DeriveHard);
exports.keyHdkdEd25519 = keyHdkdEd25519;
},{"../ed25519/index.js":"node_modules/@polkadot/util-crypto/ed25519/index.js","./hdkdDerive.js":"node_modules/@polkadot/util-crypto/key/hdkdDerive.js"}],"node_modules/@polkadot/util-crypto/sr25519/pair/fromU8a.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sr25519PairFromU8a = sr25519PairFromU8a;

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
var SEC_LEN = 64;
var PUB_LEN = 32;
var TOT_LEN = SEC_LEN + PUB_LEN;

function sr25519PairFromU8a(full) {
  var fullU8a = (0, _util.u8aToU8a)(full);

  if (fullU8a.length !== TOT_LEN) {
    throw new Error("Expected keypair with ".concat(TOT_LEN, " bytes, found ").concat(fullU8a.length));
  }

  return {
    publicKey: fullU8a.slice(SEC_LEN, TOT_LEN),
    secretKey: fullU8a.slice(0, SEC_LEN)
  };
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/util-crypto/sr25519/pair/toU8a.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sr25519KeypairToU8a = sr25519KeypairToU8a;

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
function sr25519KeypairToU8a(_ref) {
  var publicKey = _ref.publicKey,
      secretKey = _ref.secretKey;
  return (0, _util.u8aConcat)(secretKey, publicKey).slice();
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/util-crypto/sr25519/derive.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createDeriveFn = createDeriveFn;

var _util = require("@polkadot/util");

var _fromU8a = require("./pair/fromU8a.js");

var _toU8a = require("./pair/toU8a.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
function createDeriveFn(derive) {
  return function (keypair, chainCode) {
    if (!(0, _util.isU8a)(chainCode) || chainCode.length !== 32) {
      throw new Error('Invalid chainCode passed to derive');
    }

    return (0, _fromU8a.sr25519PairFromU8a)(derive((0, _toU8a.sr25519KeypairToU8a)(keypair), chainCode));
  };
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./pair/fromU8a.js":"node_modules/@polkadot/util-crypto/sr25519/pair/fromU8a.js","./pair/toU8a.js":"node_modules/@polkadot/util-crypto/sr25519/pair/toU8a.js"}],"node_modules/@polkadot/util-crypto/sr25519/deriveHard.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sr25519DeriveHard = void 0;

var _wasmCrypto = require("@polkadot/wasm-crypto");

var _derive = require("./derive.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
var sr25519DeriveHard = (0, _derive.createDeriveFn)(_wasmCrypto.sr25519DeriveKeypairHard);
exports.sr25519DeriveHard = sr25519DeriveHard;
},{"@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js","./derive.js":"node_modules/@polkadot/util-crypto/sr25519/derive.js"}],"node_modules/@polkadot/util-crypto/sr25519/deriveSoft.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sr25519DeriveSoft = void 0;

var _wasmCrypto = require("@polkadot/wasm-crypto");

var _derive = require("./derive.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
var sr25519DeriveSoft = (0, _derive.createDeriveFn)(_wasmCrypto.sr25519DeriveKeypairSoft);
exports.sr25519DeriveSoft = sr25519DeriveSoft;
},{"@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js","./derive.js":"node_modules/@polkadot/util-crypto/sr25519/derive.js"}],"node_modules/@polkadot/util-crypto/key/hdkdSr25519.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.keyHdkdSr25519 = keyHdkdSr25519;

var _deriveHard = require("../sr25519/deriveHard.js");

var _deriveSoft = require("../sr25519/deriveSoft.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
function keyHdkdSr25519(keypair, _ref) {
  var chainCode = _ref.chainCode,
      isSoft = _ref.isSoft;
  return isSoft ? (0, _deriveSoft.sr25519DeriveSoft)(keypair, chainCode) : (0, _deriveHard.sr25519DeriveHard)(keypair, chainCode);
}
},{"../sr25519/deriveHard.js":"node_modules/@polkadot/util-crypto/sr25519/deriveHard.js","../sr25519/deriveSoft.js":"node_modules/@polkadot/util-crypto/sr25519/deriveSoft.js"}],"node_modules/@polkadot/util-crypto/key/fromPath.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.keyFromPath = keyFromPath;

var _hdkdEcdsa = require("./hdkdEcdsa.js");

var _hdkdEd = require("./hdkdEd25519.js");

var _hdkdSr = require("./hdkdSr25519.js");

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var generators = {
  ecdsa: _hdkdEcdsa.keyHdkdEcdsa,
  ed25519: _hdkdEd.keyHdkdEd25519,
  // FIXME This is Substrate-compatible, not Ethereum-compatible
  ethereum: _hdkdEcdsa.keyHdkdEcdsa,
  sr25519: _hdkdSr.keyHdkdSr25519
};

function keyFromPath(pair, path, type) {
  var keyHdkd = generators[type];
  var result = pair;

  var _iterator = _createForOfIteratorHelper(path),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var junction = _step.value;
      result = keyHdkd(result, junction);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  return result;
}
},{"./hdkdEcdsa.js":"node_modules/@polkadot/util-crypto/key/hdkdEcdsa.js","./hdkdEd25519.js":"node_modules/@polkadot/util-crypto/key/hdkdEd25519.js","./hdkdSr25519.js":"node_modules/@polkadot/util-crypto/key/hdkdSr25519.js"}],"node_modules/@polkadot/util-crypto/key/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "keyExtractPath", {
  enumerable: true,
  get: function () {
    return _extractPath.keyExtractPath;
  }
});
Object.defineProperty(exports, "keyExtractSuri", {
  enumerable: true,
  get: function () {
    return _extractSuri.keyExtractSuri;
  }
});
Object.defineProperty(exports, "keyFromPath", {
  enumerable: true,
  get: function () {
    return _fromPath.keyFromPath;
  }
});
Object.defineProperty(exports, "keyHdkdEcdsa", {
  enumerable: true,
  get: function () {
    return _hdkdEcdsa.keyHdkdEcdsa;
  }
});
Object.defineProperty(exports, "keyHdkdEd25519", {
  enumerable: true,
  get: function () {
    return _hdkdEd.keyHdkdEd25519;
  }
});
Object.defineProperty(exports, "keyHdkdSr25519", {
  enumerable: true,
  get: function () {
    return _hdkdSr.keyHdkdSr25519;
  }
});

var _extractPath = require("./extractPath.js");

var _extractSuri = require("./extractSuri.js");

var _fromPath = require("./fromPath.js");

var _hdkdEd = require("./hdkdEd25519.js");

var _hdkdSr = require("./hdkdSr25519.js");

var _hdkdEcdsa = require("./hdkdEcdsa.js");
},{"./extractPath.js":"node_modules/@polkadot/util-crypto/key/extractPath.js","./extractSuri.js":"node_modules/@polkadot/util-crypto/key/extractSuri.js","./fromPath.js":"node_modules/@polkadot/util-crypto/key/fromPath.js","./hdkdEd25519.js":"node_modules/@polkadot/util-crypto/key/hdkdEd25519.js","./hdkdSr25519.js":"node_modules/@polkadot/util-crypto/key/hdkdSr25519.js","./hdkdEcdsa.js":"node_modules/@polkadot/util-crypto/key/hdkdEcdsa.js"}],"node_modules/@polkadot/util-crypto/sr25519/agreement.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sr25519Agreement = sr25519Agreement;

var _util = require("@polkadot/util");

var _wasmCrypto = require("@polkadot/wasm-crypto");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name sr25519Agreement
 * @description Key agreement between other's public key and self secret key
 */
function sr25519Agreement(secretKey, publicKey) {
  var secretKeyU8a = (0, _util.u8aToU8a)(secretKey);
  var publicKeyU8a = (0, _util.u8aToU8a)(publicKey);

  if (publicKeyU8a.length !== 32) {
    throw new Error("Invalid publicKey, received ".concat(publicKeyU8a.length, " bytes, expected 32"));
  } else if (secretKeyU8a.length !== 64) {
    throw new Error("Invalid secretKey, received ".concat(secretKeyU8a.length, " bytes, expected 64"));
  }

  return (0, _wasmCrypto.sr25519Agree)(publicKeyU8a, secretKeyU8a);
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js"}],"node_modules/@polkadot/util-crypto/sr25519/derivePublic.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sr25519DerivePublic = sr25519DerivePublic;

var _util = require("@polkadot/util");

var _wasmCrypto = require("@polkadot/wasm-crypto");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
function sr25519DerivePublic(publicKey, chainCode) {
  var publicKeyU8a = (0, _util.u8aToU8a)(publicKey);

  if (!(0, _util.isU8a)(chainCode) || chainCode.length !== 32) {
    throw new Error('Invalid chainCode passed to derive');
  } else if (publicKeyU8a.length !== 32) {
    throw new Error("Invalid publicKey, received ".concat(publicKeyU8a.length, " bytes, expected 32"));
  }

  return (0, _wasmCrypto.sr25519DerivePublicSoft)(publicKeyU8a, chainCode);
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js"}],"node_modules/@polkadot/util-crypto/sr25519/pair/fromSeed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sr25519PairFromSeed = sr25519PairFromSeed;

var _util = require("@polkadot/util");

var _wasmCrypto = require("@polkadot/wasm-crypto");

var _fromU8a = require("./fromU8a.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name sr25519PairFromSeed
 * @description Returns a object containing a `publicKey` & `secretKey` generated from the supplied seed.
 */
function sr25519PairFromSeed(seed) {
  var seedU8a = (0, _util.u8aToU8a)(seed);

  if (seedU8a.length !== 32) {
    throw new Error("Expected a seed matching 32 bytes, found ".concat(seedU8a.length));
  }

  return (0, _fromU8a.sr25519PairFromU8a)((0, _wasmCrypto.sr25519KeypairFromSeed)(seedU8a));
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js","./fromU8a.js":"node_modules/@polkadot/util-crypto/sr25519/pair/fromU8a.js"}],"node_modules/@polkadot/util-crypto/sr25519/sign.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sr25519Sign = sr25519Sign;

var _util = require("@polkadot/util");

var _wasmCrypto = require("@polkadot/wasm-crypto");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name sr25519Sign
 * @description Returns message signature of `message`, using the supplied pair
 */
function sr25519Sign(message, _ref) {
  var publicKey = _ref.publicKey,
      secretKey = _ref.secretKey;

  if ((publicKey === null || publicKey === void 0 ? void 0 : publicKey.length) !== 32) {
    throw new Error('Expected a valid publicKey, 32-bytes');
  } else if ((secretKey === null || secretKey === void 0 ? void 0 : secretKey.length) !== 64) {
    throw new Error('Expected a valid secretKey, 64-bytes');
  }

  return (0, _wasmCrypto.sr25519Sign)(publicKey, secretKey, (0, _util.u8aToU8a)(message));
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js"}],"node_modules/@polkadot/util-crypto/sr25519/verify.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sr25519Verify = sr25519Verify;

var _util = require("@polkadot/util");

var _wasmCrypto = require("@polkadot/wasm-crypto");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name sr25519Verify
 * @description Verifies the signature of `message`, using the supplied pair
 */
function sr25519Verify(message, signature, publicKey) {
  var publicKeyU8a = (0, _util.u8aToU8a)(publicKey);
  var signatureU8a = (0, _util.u8aToU8a)(signature);

  if (publicKeyU8a.length !== 32) {
    throw new Error("Invalid publicKey, received ".concat(publicKeyU8a.length, " bytes, expected 32"));
  } else if (signatureU8a.length !== 64) {
    throw new Error("Invalid signature, received ".concat(signatureU8a.length, " bytes, expected 64"));
  }

  return (0, _wasmCrypto.sr25519Verify)(signatureU8a, (0, _util.u8aToU8a)(message), publicKeyU8a);
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js"}],"node_modules/@polkadot/util-crypto/sr25519/vrfSign.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sr25519VrfSign = sr25519VrfSign;

var _util = require("@polkadot/util");

var _wasmCrypto = require("@polkadot/wasm-crypto");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
var EMPTY_U8A = new Uint8Array();
/**
 * @name sr25519VrfSign
 * @description Sign with sr25519 vrf signing (deterministic)
 */

function sr25519VrfSign(message, _ref) {
  var secretKey = _ref.secretKey;
  var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_U8A;
  var extra = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : EMPTY_U8A;

  if ((secretKey === null || secretKey === void 0 ? void 0 : secretKey.length) !== 64) {
    throw new Error('Invalid secretKey, expected 64-bytes');
  }

  return (0, _wasmCrypto.vrfSign)(secretKey, (0, _util.u8aToU8a)(context), (0, _util.u8aToU8a)(message), (0, _util.u8aToU8a)(extra));
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js"}],"node_modules/@polkadot/util-crypto/sr25519/vrfVerify.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sr25519VrfVerify = sr25519VrfVerify;

var _util = require("@polkadot/util");

var _wasmCrypto = require("@polkadot/wasm-crypto");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
var EMPTY_U8A = new Uint8Array();
/**
 * @name sr25519VrfVerify
 * @description Verify with sr25519 vrf verification
 */

function sr25519VrfVerify(message, signOutput, publicKey) {
  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : EMPTY_U8A;
  var extra = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : EMPTY_U8A;
  var publicKeyU8a = (0, _util.u8aToU8a)(publicKey);
  var proofU8a = (0, _util.u8aToU8a)(signOutput);

  if (publicKeyU8a.length !== 32) {
    throw new Error('Invalid publicKey, expected 32-bytes');
  } else if (proofU8a.length !== 96) {
    throw new Error('Invalid vrfSign output, expected 96 bytes');
  }

  return (0, _wasmCrypto.vrfVerify)(publicKeyU8a, (0, _util.u8aToU8a)(context), (0, _util.u8aToU8a)(message), (0, _util.u8aToU8a)(extra), proofU8a);
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js"}],"node_modules/@polkadot/util-crypto/sr25519/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "sr25519Agreement", {
  enumerable: true,
  get: function () {
    return _agreement.sr25519Agreement;
  }
});
Object.defineProperty(exports, "sr25519DeriveHard", {
  enumerable: true,
  get: function () {
    return _deriveHard.sr25519DeriveHard;
  }
});
Object.defineProperty(exports, "sr25519DerivePublic", {
  enumerable: true,
  get: function () {
    return _derivePublic.sr25519DerivePublic;
  }
});
Object.defineProperty(exports, "sr25519DeriveSoft", {
  enumerable: true,
  get: function () {
    return _deriveSoft.sr25519DeriveSoft;
  }
});
Object.defineProperty(exports, "sr25519PairFromSeed", {
  enumerable: true,
  get: function () {
    return _fromSeed.sr25519PairFromSeed;
  }
});
Object.defineProperty(exports, "sr25519Sign", {
  enumerable: true,
  get: function () {
    return _sign.sr25519Sign;
  }
});
Object.defineProperty(exports, "sr25519Verify", {
  enumerable: true,
  get: function () {
    return _verify.sr25519Verify;
  }
});
Object.defineProperty(exports, "sr25519VrfSign", {
  enumerable: true,
  get: function () {
    return _vrfSign.sr25519VrfSign;
  }
});
Object.defineProperty(exports, "sr25519VrfVerify", {
  enumerable: true,
  get: function () {
    return _vrfVerify.sr25519VrfVerify;
  }
});

var _agreement = require("./agreement.js");

var _deriveHard = require("./deriveHard.js");

var _derivePublic = require("./derivePublic.js");

var _deriveSoft = require("./deriveSoft.js");

var _fromSeed = require("./pair/fromSeed.js");

var _sign = require("./sign.js");

var _verify = require("./verify.js");

var _vrfSign = require("./vrfSign.js");

var _vrfVerify = require("./vrfVerify.js");
},{"./agreement.js":"node_modules/@polkadot/util-crypto/sr25519/agreement.js","./deriveHard.js":"node_modules/@polkadot/util-crypto/sr25519/deriveHard.js","./derivePublic.js":"node_modules/@polkadot/util-crypto/sr25519/derivePublic.js","./deriveSoft.js":"node_modules/@polkadot/util-crypto/sr25519/deriveSoft.js","./pair/fromSeed.js":"node_modules/@polkadot/util-crypto/sr25519/pair/fromSeed.js","./sign.js":"node_modules/@polkadot/util-crypto/sr25519/sign.js","./verify.js":"node_modules/@polkadot/util-crypto/sr25519/verify.js","./vrfSign.js":"node_modules/@polkadot/util-crypto/sr25519/vrfSign.js","./vrfVerify.js":"node_modules/@polkadot/util-crypto/sr25519/vrfVerify.js"}],"node_modules/@polkadot/util-crypto/address/encode.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.encodeAddress = encodeAddress;

var _util = require("@polkadot/util");

var _index = require("../base58/index.js");

var _decode = require("./decode.js");

var _defaults = require("./defaults.js");

var _sshash = require("./sshash.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Original implementation: https://github.com/paritytech/polka-ui/blob/4858c094684769080f5811f32b081dd7780b0880/src/polkadot.js#L34
function encodeAddress(key) {
  var ss58Format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _defaults.defaults.prefix;
  // decode it, this means we can re-encode an address
  var u8a = (0, _decode.decodeAddress)(key);
  (0, _util.assert)(ss58Format >= 0 && ss58Format <= 16383 && ![46, 47].includes(ss58Format), 'Out of range ss58Format specified');
  (0, _util.assert)(_defaults.defaults.allowedDecodedLengths.includes(u8a.length), function () {
    return "Expected a valid key to convert, with length ".concat(_defaults.defaults.allowedDecodedLengths.join(', '));
  });
  var input = (0, _util.u8aConcat)(ss58Format < 64 ? [ss58Format] : [(ss58Format & 252) >> 2 | 64, ss58Format >> 8 | (ss58Format & 3) << 6], u8a);
  return (0, _index.base58Encode)((0, _util.u8aConcat)(input, (0, _sshash.sshash)(input).subarray(0, [32, 33].includes(u8a.length) ? 2 : 1)));
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../base58/index.js":"node_modules/@polkadot/util-crypto/base58/index.js","./decode.js":"node_modules/@polkadot/util-crypto/address/decode.js","./defaults.js":"node_modules/@polkadot/util-crypto/address/defaults.js","./sshash.js":"node_modules/@polkadot/util-crypto/address/sshash.js"}],"node_modules/@polkadot/util-crypto/address/derive.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deriveAddress = deriveAddress;

var _util = require("@polkadot/util");

var _index = require("../key/index.js");

var _index2 = require("../sr25519/index.js");

var _decode = require("./decode.js");

var _encode = require("./encode.js");

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function filterHard(_ref) {
  var isHard = _ref.isHard;
  return isHard;
}
/**
 * @name deriveAddress
 * @summary Creates a sr25519 derived address from the supplied and path.
 * @description
 * Creates a sr25519 derived address based on the input address/publicKey and the uri supplied.
 */


function deriveAddress(who, suri, ss58Format) {
  var _keyExtractPath = (0, _index.keyExtractPath)(suri),
      path = _keyExtractPath.path;

  (0, _util.assert)(path.length && !path.every(filterHard), 'Expected suri to contain a combination of non-hard paths');
  var publicKey = (0, _decode.decodeAddress)(who);

  var _iterator = _createForOfIteratorHelper(path),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var chainCode = _step.value.chainCode;
      publicKey = (0, _index2.sr25519DerivePublic)(publicKey, chainCode);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  return (0, _encode.encodeAddress)(publicKey, ss58Format);
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../key/index.js":"node_modules/@polkadot/util-crypto/key/index.js","../sr25519/index.js":"node_modules/@polkadot/util-crypto/sr25519/index.js","./decode.js":"node_modules/@polkadot/util-crypto/address/decode.js","./encode.js":"node_modules/@polkadot/util-crypto/address/encode.js"}],"node_modules/@polkadot/util-crypto/address/encodeDerived.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.encodeDerivedAddress = encodeDerivedAddress;

var _decode = require("./decode.js");

var _encode = require("./encode.js");

var _keyDerived = require("./keyDerived.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name encodeDerivedAddress
 * @summary Creates a derived address as used in Substrate utility.
 * @description
 * Creates a Substrate derived address based on the input address/publicKey and the index supplied.
 */
function encodeDerivedAddress(who, index, ss58Format) {
  return (0, _encode.encodeAddress)((0, _keyDerived.createKeyDerived)((0, _decode.decodeAddress)(who), index), ss58Format);
}
},{"./decode.js":"node_modules/@polkadot/util-crypto/address/decode.js","./encode.js":"node_modules/@polkadot/util-crypto/address/encode.js","./keyDerived.js":"node_modules/@polkadot/util-crypto/address/keyDerived.js"}],"node_modules/@polkadot/util-crypto/address/encodeMulti.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.encodeMultiAddress = encodeMultiAddress;

var _encode = require("./encode.js");

var _keyMulti = require("./keyMulti.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name encodeMultiAddress
 * @summary Creates a multisig address.
 * @description
 * Creates a Substrate multisig address based on the input address and the required threshold.
 */
function encodeMultiAddress(who, threshold, ss58Format) {
  return (0, _encode.encodeAddress)((0, _keyMulti.createKeyMulti)(who, threshold), ss58Format);
}
},{"./encode.js":"node_modules/@polkadot/util-crypto/address/encode.js","./keyMulti.js":"node_modules/@polkadot/util-crypto/address/keyMulti.js"}],"node_modules/@polkadot/util-crypto/blake2/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "blake2AsHex", {
  enumerable: true,
  get: function () {
    return _asU8a.blake2AsHex;
  }
});
Object.defineProperty(exports, "blake2AsU8a", {
  enumerable: true,
  get: function () {
    return _asU8a.blake2AsU8a;
  }
});

var _asU8a = require("./asU8a.js");
},{"./asU8a.js":"node_modules/@polkadot/util-crypto/blake2/asU8a.js"}],"node_modules/@noble/hashes/sha3.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.shake256 = exports.shake128 = exports.keccak_512 = exports.keccak_384 = exports.keccak_256 = exports.keccak_224 = exports.sha3_512 = exports.sha3_384 = exports.sha3_256 = exports.sha3_224 = exports.Keccak = exports.keccakP = void 0;
const _assert_js_1 = require("./_assert.js");
const _u64_js_1 = require("./_u64.js");
const utils_js_1 = require("./utils.js");
// Various per round constants calculations
const [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];
const _0n = BigInt(0);
const _1n = BigInt(1);
const _2n = BigInt(2);
const _7n = BigInt(7);
const _256n = BigInt(256);
const _0x71n = BigInt(0x71);
for (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {
    // Pi
    [x, y] = [y, (2 * x + 3 * y) % 5];
    SHA3_PI.push(2 * (5 * y + x));
    // Rotational
    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);
    // Iota
    let t = _0n;
    for (let j = 0; j < 7; j++) {
        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;
        if (R & _2n)
            t ^= _1n << ((_1n << BigInt(j)) - _1n);
    }
    _SHA3_IOTA.push(t);
}
const [SHA3_IOTA_H, SHA3_IOTA_L] = _u64_js_1.default.split(_SHA3_IOTA, true);
// Left rotation (without 0, 32, 64)
const rotlH = (h, l, s) => s > 32 ? _u64_js_1.default.rotlBH(h, l, s) : _u64_js_1.default.rotlSH(h, l, s);
const rotlL = (h, l, s) => s > 32 ? _u64_js_1.default.rotlBL(h, l, s) : _u64_js_1.default.rotlSL(h, l, s);
// Same as keccakf1600, but allows to skip some rounds
function keccakP(s, rounds = 24) {
    const B = new Uint32Array(5 * 2);
    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)
    for (let round = 24 - rounds; round < 24; round++) {
        // Theta Î¸
        for (let x = 0; x < 10; x++)
            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];
        for (let x = 0; x < 10; x += 2) {
            const idx1 = (x + 8) % 10;
            const idx0 = (x + 2) % 10;
            const B0 = B[idx0];
            const B1 = B[idx0 + 1];
            const Th = rotlH(B0, B1, 1) ^ B[idx1];
            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];
            for (let y = 0; y < 50; y += 10) {
                s[x + y] ^= Th;
                s[x + y + 1] ^= Tl;
            }
        }
        // Rho (Ï) and Pi (Ï)
        let curH = s[2];
        let curL = s[3];
        for (let t = 0; t < 24; t++) {
            const shift = SHA3_ROTL[t];
            const Th = rotlH(curH, curL, shift);
            const Tl = rotlL(curH, curL, shift);
            const PI = SHA3_PI[t];
            curH = s[PI];
            curL = s[PI + 1];
            s[PI] = Th;
            s[PI + 1] = Tl;
        }
        // Chi (Ï)
        for (let y = 0; y < 50; y += 10) {
            for (let x = 0; x < 10; x++)
                B[x] = s[y + x];
            for (let x = 0; x < 10; x++)
                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];
        }
        // Iota (Î¹)
        s[0] ^= SHA3_IOTA_H[round];
        s[1] ^= SHA3_IOTA_L[round];
    }
    B.fill(0);
}
exports.keccakP = keccakP;
class Keccak extends utils_js_1.Hash {
    // NOTE: we accept arguments in bytes instead of bits here.
    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {
        super();
        this.blockLen = blockLen;
        this.suffix = suffix;
        this.outputLen = outputLen;
        this.enableXOF = enableXOF;
        this.rounds = rounds;
        this.pos = 0;
        this.posOut = 0;
        this.finished = false;
        this.destroyed = false;
        // Can be passed from user as dkLen
        _assert_js_1.default.number(outputLen);
        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes
        if (0 >= this.blockLen || this.blockLen >= 200)
            throw new Error('Sha3 supports only keccak-f1600 function');
        this.state = new Uint8Array(200);
        this.state32 = (0, utils_js_1.u32)(this.state);
    }
    keccak() {
        keccakP(this.state32, this.rounds);
        this.posOut = 0;
        this.pos = 0;
    }
    update(data) {
        _assert_js_1.default.exists(this);
        const { blockLen, state } = this;
        data = (0, utils_js_1.toBytes)(data);
        const len = data.length;
        for (let pos = 0; pos < len;) {
            const take = Math.min(blockLen - this.pos, len - pos);
            for (let i = 0; i < take; i++)
                state[this.pos++] ^= data[pos++];
            if (this.pos === blockLen)
                this.keccak();
        }
        return this;
    }
    finish() {
        if (this.finished)
            return;
        this.finished = true;
        const { state, suffix, pos, blockLen } = this;
        // Do the padding
        state[pos] ^= suffix;
        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)
            this.keccak();
        state[blockLen - 1] ^= 0x80;
        this.keccak();
    }
    writeInto(out) {
        _assert_js_1.default.exists(this, false);
        _assert_js_1.default.bytes(out);
        this.finish();
        const bufferOut = this.state;
        const { blockLen } = this;
        for (let pos = 0, len = out.length; pos < len;) {
            if (this.posOut >= blockLen)
                this.keccak();
            const take = Math.min(blockLen - this.posOut, len - pos);
            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);
            this.posOut += take;
            pos += take;
        }
        return out;
    }
    xofInto(out) {
        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF
        if (!this.enableXOF)
            throw new Error('XOF is not possible for this instance');
        return this.writeInto(out);
    }
    xof(bytes) {
        _assert_js_1.default.number(bytes);
        return this.xofInto(new Uint8Array(bytes));
    }
    digestInto(out) {
        _assert_js_1.default.output(out, this);
        if (this.finished)
            throw new Error('digest() was already called');
        this.writeInto(out);
        this.destroy();
        return out;
    }
    digest() {
        return this.digestInto(new Uint8Array(this.outputLen));
    }
    destroy() {
        this.destroyed = true;
        this.state.fill(0);
    }
    _cloneInto(to) {
        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;
        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));
        to.state32.set(this.state32);
        to.pos = this.pos;
        to.posOut = this.posOut;
        to.finished = this.finished;
        to.rounds = rounds;
        // Suffix can change in cSHAKE
        to.suffix = suffix;
        to.outputLen = outputLen;
        to.enableXOF = enableXOF;
        to.destroyed = this.destroyed;
        return to;
    }
}
exports.Keccak = Keccak;
const gen = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));
exports.sha3_224 = gen(0x06, 144, 224 / 8);
/**
 * SHA3-256 hash function
 * @param message - that would be hashed
 */
exports.sha3_256 = gen(0x06, 136, 256 / 8);
exports.sha3_384 = gen(0x06, 104, 384 / 8);
exports.sha3_512 = gen(0x06, 72, 512 / 8);
exports.keccak_224 = gen(0x01, 144, 224 / 8);
/**
 * keccak-256 hash function. Different from SHA3-256.
 * @param message - that would be hashed
 */
exports.keccak_256 = gen(0x01, 136, 256 / 8);
exports.keccak_384 = gen(0x01, 104, 384 / 8);
exports.keccak_512 = gen(0x01, 72, 512 / 8);
const genShake = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));
exports.shake128 = genShake(0x1f, 168, 128 / 8);
exports.shake256 = genShake(0x1f, 136, 256 / 8);

},{"./_assert.js":"node_modules/@noble/hashes/_assert.js","./_u64.js":"node_modules/@noble/hashes/_u64.js","./utils.js":"node_modules/@noble/hashes/utils.js"}],"node_modules/@polkadot/util-crypto/keccak/asU8a.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.keccakAsU8a = exports.keccakAsHex = exports.keccak512AsU8a = exports.keccak256AsU8a = void 0;

var _sha = require("@noble/hashes/sha3");

var _wasmCrypto = require("@polkadot/wasm-crypto");

var _helpers = require("../helpers.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name keccakAsU8a
 * @summary Creates a keccak Uint8Array from the input.
 * @description
 * From either a `string` or a `Buffer` input, create the keccak and return the result as a `Uint8Array`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { keccakAsU8a } from '@polkadot/util-crypto';
 *
 * keccakAsU8a('123'); // => Uint8Array
 * ```
 */
var keccakAsU8a = (0, _helpers.createDualHasher)({
  256: _wasmCrypto.keccak256,
  512: _wasmCrypto.keccak512
}, {
  256: _sha.keccak_256,
  512: _sha.keccak_512
});
/**
 * @name keccak256AsU8a
 * @description Creates a keccak256 Uint8Array from the input.
 */

exports.keccakAsU8a = keccakAsU8a;
var keccak256AsU8a = (0, _helpers.createBitHasher)(256, keccakAsU8a);
/**
 * @name keccak512AsU8a
 * @description Creates a keccak512 Uint8Array from the input.
 */

exports.keccak256AsU8a = keccak256AsU8a;
var keccak512AsU8a = (0, _helpers.createBitHasher)(512, keccakAsU8a);
/**
 * @name keccakAsHex
 * @description Creates a keccak hex string from the input.
 */

exports.keccak512AsU8a = keccak512AsU8a;
var keccakAsHex = (0, _helpers.createAsHex)(keccakAsU8a);
exports.keccakAsHex = keccakAsHex;
},{"@noble/hashes/sha3":"node_modules/@noble/hashes/sha3.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js","../helpers.js":"node_modules/@polkadot/util-crypto/helpers.js"}],"node_modules/@polkadot/util-crypto/keccak/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "keccak256AsU8a", {
  enumerable: true,
  get: function () {
    return _asU8a.keccak256AsU8a;
  }
});
Object.defineProperty(exports, "keccak512AsU8a", {
  enumerable: true,
  get: function () {
    return _asU8a.keccak512AsU8a;
  }
});
Object.defineProperty(exports, "keccakAsHex", {
  enumerable: true,
  get: function () {
    return _asU8a.keccakAsHex;
  }
});
Object.defineProperty(exports, "keccakAsU8a", {
  enumerable: true,
  get: function () {
    return _asU8a.keccakAsU8a;
  }
});

var _asU8a = require("./asU8a.js");
},{"./asU8a.js":"node_modules/@polkadot/util-crypto/keccak/asU8a.js"}],"node_modules/@polkadot/util-crypto/secp256k1/hasher.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hasher = hasher;

var _index = require("../blake2/index.js");

var _index2 = require("../keccak/index.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
function hasher(hashType, data, onlyJs) {
  return hashType === 'keccak' ? (0, _index2.keccakAsU8a)(data, undefined, onlyJs) : (0, _index.blake2AsU8a)(data, undefined, undefined, onlyJs);
}
},{"../blake2/index.js":"node_modules/@polkadot/util-crypto/blake2/index.js","../keccak/index.js":"node_modules/@polkadot/util-crypto/keccak/index.js"}],"node_modules/@polkadot/util-crypto/address/evmToAddress.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.evmToAddress = evmToAddress;

var _util = require("@polkadot/util");

var _hasher = require("../secp256k1/hasher.js");

var _encode = require("./encode.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name evmToAddress
 * @summary Converts an EVM address to its corresponding SS58 address.
 */
function evmToAddress(evmAddress, ss58Format) {
  var hashType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'blake2';
  var message = (0, _util.u8aConcat)('evm:', evmAddress);
  (0, _util.assert)(message.length === 24, function () {
    return "Converting ".concat(evmAddress, ": Invalid evm address length");
  });
  return (0, _encode.encodeAddress)((0, _hasher.hasher)(hashType, message), ss58Format);
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../secp256k1/hasher.js":"node_modules/@polkadot/util-crypto/secp256k1/hasher.js","./encode.js":"node_modules/@polkadot/util-crypto/address/encode.js"}],"node_modules/@polkadot/util-crypto/address/eq.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addressEq = addressEq;

var _util = require("@polkadot/util");

var _decode = require("./decode.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name addressEq
 * @summary Compares two addresses, either in ss58, Uint8Array or hex format.
 * @description
 * For the input values, return true is the underlying public keys do match.
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aEq } from '@polkadot/util';
 *
 * u8aEq(new Uint8Array([0x68, 0x65]), new Uint8Array([0x68, 0x65])); // true
 * ```
 */
function addressEq(a, b) {
  return (0, _util.u8aEq)((0, _decode.decodeAddress)(a), (0, _decode.decodeAddress)(b));
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./decode.js":"node_modules/@polkadot/util-crypto/address/decode.js"}],"node_modules/@polkadot/util-crypto/address/validate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.validateAddress = validateAddress;

var _decode = require("./decode.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
function validateAddress(encoded, ignoreChecksum, ss58Format) {
  return !!(0, _decode.decodeAddress)(encoded, ignoreChecksum, ss58Format);
}
},{"./decode.js":"node_modules/@polkadot/util-crypto/address/decode.js"}],"node_modules/@polkadot/util-crypto/address/is.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isAddress = isAddress;

var _validate = require("./validate.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
function isAddress(address, ignoreChecksum, ss58Format) {
  try {
    return (0, _validate.validateAddress)(address, ignoreChecksum, ss58Format);
  } catch (error) {
    return false;
  }
}
},{"./validate.js":"node_modules/@polkadot/util-crypto/address/validate.js"}],"node_modules/@polkadot/util-crypto/address/setSS58Format.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setSS58Format = setSS58Format;

var _util = require("@polkadot/util");

var _defaults = require("./defaults.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
var l = (0, _util.logger)('setSS58Format');
/**
 * @description Sets the global SS58 format to use for address encoding
 * @deprecated Use keyring.setSS58Format
 */

function setSS58Format(prefix) {
  l.warn('Global setting of the ss58Format is deprecated and not recommended. Set format on the keyring (if used) or as part of the address encode function');
  _defaults.defaults.prefix = prefix;
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./defaults.js":"node_modules/@polkadot/util-crypto/address/defaults.js"}],"node_modules/@polkadot/util-crypto/address/sort.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sortAddresses = sortAddresses;

var _util = require("@polkadot/util");

var _encode = require("./encode.js");

var _util2 = require("./util.js");

// Copyright 2017-2022 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
function sortAddresses(addresses, ss58Format) {
  var u8aToAddress = function u8aToAddress(u8a) {
    return (0, _encode.encodeAddress)(u8a, ss58Format);
  };

  return (0, _util.u8aSorted)(addresses.map(_util2.addressToU8a)).map(u8aToAddress);
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./encode.js":"node_modules/@polkadot/util-crypto/address/encode.js","./util.js":"node_modules/@polkadot/util-crypto/address/util.js"}],"node_modules/@polkadot/util-crypto/address/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "addressEq", {
  enumerable: true,
  get: function () {
    return _eq.addressEq;
  }
});
Object.defineProperty(exports, "addressToEvm", {
  enumerable: true,
  get: function () {
    return _addressToEvm.addressToEvm;
  }
});
Object.defineProperty(exports, "checkAddress", {
  enumerable: true,
  get: function () {
    return _check.checkAddress;
  }
});
Object.defineProperty(exports, "checkAddressChecksum", {
  enumerable: true,
  get: function () {
    return _checksum.checkAddressChecksum;
  }
});
Object.defineProperty(exports, "createKeyDerived", {
  enumerable: true,
  get: function () {
    return _keyDerived.createKeyDerived;
  }
});
Object.defineProperty(exports, "createKeyMulti", {
  enumerable: true,
  get: function () {
    return _keyMulti.createKeyMulti;
  }
});
Object.defineProperty(exports, "decodeAddress", {
  enumerable: true,
  get: function () {
    return _decode.decodeAddress;
  }
});
Object.defineProperty(exports, "deriveAddress", {
  enumerable: true,
  get: function () {
    return _derive.deriveAddress;
  }
});
Object.defineProperty(exports, "encodeAddress", {
  enumerable: true,
  get: function () {
    return _encode.encodeAddress;
  }
});
Object.defineProperty(exports, "encodeDerivedAddress", {
  enumerable: true,
  get: function () {
    return _encodeDerived.encodeDerivedAddress;
  }
});
Object.defineProperty(exports, "encodeMultiAddress", {
  enumerable: true,
  get: function () {
    return _encodeMulti.encodeMultiAddress;
  }
});
Object.defineProperty(exports, "evmToAddress", {
  enumerable: true,
  get: function () {
    return _evmToAddress.evmToAddress;
  }
});
Object.defineProperty(exports, "isAddress", {
  enumerable: true,
  get: function () {
    return _is.isAddress;
  }
});
Object.defineProperty(exports, "setSS58Format", {
  enumerable: true,
  get: function () {
    return _setSS58Format.setSS58Format;
  }
});
Object.defineProperty(exports, "sortAddresses", {
  enumerable: true,
  get: function () {
    return _sort.sortAddresses;
  }
});
Object.defineProperty(exports, "validateAddress", {
  enumerable: true,
  get: function () {
    return _validate.validateAddress;
  }
});

var _addressToEvm = require("./addressToEvm.js");

var _check = require("./check.js");

var _checksum = require("./checksum.js");

var _keyMulti = require("./keyMulti.js");

var _keyDerived = require("./keyDerived.js");

var _decode = require("./decode.js");

var _derive = require("./derive.js");

var _encode = require("./encode.js");

var _encodeDerived = require("./encodeDerived.js");

var _encodeMulti = require("./encodeMulti.js");

var _evmToAddress = require("./evmToAddress.js");

var _eq = require("./eq.js");

var _is = require("./is.js");

var _setSS58Format = require("./setSS58Format.js");

var _sort = require("./sort.js");

var _validate = require("./validate.js");
},{"./addressToEvm.js":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","./check.js":"node_modules/@polkadot/util-crypto/address/check.js","./checksum.js":"node_modules/@polkadot/util-crypto/address/checksum.js","./keyMulti.js":"node_modules/@polkadot/util-crypto/address/keyMulti.js","./keyDerived.js":"node_modules/@polkadot/util-crypto/address/keyDerived.js","./decode.js":"node_modules/@polkadot/util-crypto/address/decode.js","./derive.js":"node_modules/@polkadot/util-crypto/address/derive.js","./encode.js":"node_modules/@polkadot/util-crypto/address/encode.js","./encodeDerived.js":"node_modules/@polkadot/util-crypto/address/encodeDerived.js","./encodeMulti.js":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","./evmToAddress.js":"node_modules/@polkadot/util-crypto/address/evmToAddress.js","./eq.js":"node_modules/@polkadot/util-crypto/address/eq.js","./is.js":"node_modules/@polkadot/util-crypto/address/is.js","./setSS58Format.js":"node_modules/@polkadot/util-crypto/address/setSS58Format.js","./sort.js":"node_modules/@polkadot/util-crypto/address/sort.js","./validate.js":"node_modules/@polkadot/util-crypto/address/validate.js"}],"node_modules/@polkadot/util-crypto/base32/bs32.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isBase32 = exports.base32Validate = exports.base32Encode = exports.base32Decode = void 0;

var _base = require("@scure/base");

var _helpers = require("./helpers.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
var chars = 'abcdefghijklmnopqrstuvwxyz234567';
var config = {
  chars: chars,
  coder: _base.utils.chain( // We define our own chain, the default base32 has padding
  _base.utils.radix2(5), _base.utils.alphabet(chars), {
    decode: function decode(input) {
      return input.split('');
    },
    encode: function encode(input) {
      return input.join('');
    }
  }),
  ipfs: 'b',
  type: 'base32'
};
/**
 * @name base32Validate
 * @summary Validates a base32 value.
 * @description
 * Validates that the supplied value is valid base32, throwing exceptions if not
 */

var base32Validate = (0, _helpers.createValidate)(config);
/**
* @name isBase32
* @description Checks if the input is in base32, returning true/false
*/

exports.base32Validate = base32Validate;
var isBase32 = (0, _helpers.createIs)(base32Validate);
/**
 * @name base32Decode
 * @summary Delookup a base32 value.
 * @description
 * From the provided input, decode the base32 and return the result as an `Uint8Array`.
 */

exports.isBase32 = isBase32;
var base32Decode = (0, _helpers.createDecode)(config, base32Validate);
/**
* @name base32Encode
* @summary Creates a base32 value.
* @description
* From the provided input, create the base32 and return the result as a string.
*/

exports.base32Decode = base32Decode;
var base32Encode = (0, _helpers.createEncode)(config);
exports.base32Encode = base32Encode;
},{"@scure/base":"node_modules/@scure/base/lib/esm/index.js","./helpers.js":"node_modules/@polkadot/util-crypto/base32/helpers.js"}],"node_modules/@polkadot/util-crypto/base32/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "base32Decode", {
  enumerable: true,
  get: function () {
    return _bs.base32Decode;
  }
});
Object.defineProperty(exports, "base32Encode", {
  enumerable: true,
  get: function () {
    return _bs.base32Encode;
  }
});
Object.defineProperty(exports, "base32Validate", {
  enumerable: true,
  get: function () {
    return _bs.base32Validate;
  }
});
Object.defineProperty(exports, "isBase32", {
  enumerable: true,
  get: function () {
    return _bs.isBase32;
  }
});

var _bs = require("./bs32.js");
},{"./bs32.js":"node_modules/@polkadot/util-crypto/base32/bs32.js"}],"node_modules/@polkadot/util-crypto/base64/bs64.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isBase64 = exports.base64Validate = exports.base64Encode = exports.base64Decode = void 0;

var _base = require("@scure/base");

var _helpers = require("../base32/helpers.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
var config = {
  chars: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',
  coder: _base.base64,
  type: 'base64'
};
/**
 * @name base64Validate
 * @summary Validates a base64 value.
 * @description
 * Validates that the supplied value is valid base64
 */

var base64Validate = (0, _helpers.createValidate)(config);
/**
 * @name isBase64
 * @description Checks if the input is in base64, returning true/false
 */

exports.base64Validate = base64Validate;
var isBase64 = (0, _helpers.createIs)(base64Validate);
/**
 * @name base64Decode
 * @summary Decodes a base64 value.
 * @description
 * From the provided input, decode the base64 and return the result as an `Uint8Array`.
 */

exports.isBase64 = isBase64;
var base64Decode = (0, _helpers.createDecode)(config, base64Validate);
/**
 * @name base64Encode
 * @summary Creates a base64 value.
 * @description
 * From the provided input, create the base64 and return the result as a string.
 */

exports.base64Decode = base64Decode;
var base64Encode = (0, _helpers.createEncode)(config);
exports.base64Encode = base64Encode;
},{"@scure/base":"node_modules/@scure/base/lib/esm/index.js","../base32/helpers.js":"node_modules/@polkadot/util-crypto/base32/helpers.js"}],"node_modules/@polkadot/util-crypto/base64/pad.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.base64Pad = base64Pad;

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name base64Pad
 * @description Adds padding characters for correct length
 */
function base64Pad(value) {
  return value.padEnd(value.length + value.length % 4, '=');
}
},{}],"node_modules/@polkadot/util-crypto/base64/trim.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.base64Trim = base64Trim;

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name base64Trim
 * @description Trims padding characters
 */
function base64Trim(value) {
  while (value.length && value[value.length - 1] === '=') {
    value = value.slice(0, -1);
  }

  return value;
}
},{}],"node_modules/@polkadot/util-crypto/base64/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "base64Decode", {
  enumerable: true,
  get: function () {
    return _bs.base64Decode;
  }
});
Object.defineProperty(exports, "base64Encode", {
  enumerable: true,
  get: function () {
    return _bs.base64Encode;
  }
});
Object.defineProperty(exports, "base64Pad", {
  enumerable: true,
  get: function () {
    return _pad.base64Pad;
  }
});
Object.defineProperty(exports, "base64Trim", {
  enumerable: true,
  get: function () {
    return _trim.base64Trim;
  }
});
Object.defineProperty(exports, "base64Validate", {
  enumerable: true,
  get: function () {
    return _bs.base64Validate;
  }
});
Object.defineProperty(exports, "isBase64", {
  enumerable: true,
  get: function () {
    return _bs.isBase64;
  }
});

var _bs = require("./bs64.js");

var _pad = require("./pad.js");

var _trim = require("./trim.js");
},{"./bs64.js":"node_modules/@polkadot/util-crypto/base64/bs64.js","./pad.js":"node_modules/@polkadot/util-crypto/base64/pad.js","./trim.js":"node_modules/@polkadot/util-crypto/base64/trim.js"}],"node_modules/@polkadot/util-crypto/secp256k1/compress.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.secp256k1Compress = secp256k1Compress;

var _secp256k = require("@noble/secp256k1");

var _util = require("@polkadot/util");

var _wasmCrypto = require("@polkadot/wasm-crypto");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
function secp256k1Compress(publicKey, onlyJs) {
  if (publicKey.length === 33) {
    return publicKey;
  }

  if (publicKey.length !== 65) {
    throw new Error('Invalid publicKey provided');
  }

  return !_util.hasBigInt || !onlyJs && (0, _wasmCrypto.isReady)() ? (0, _wasmCrypto.secp256k1Compress)(publicKey) : _secp256k.Point.fromHex(publicKey).toRawBytes(true);
}
},{"@noble/secp256k1":"node_modules/@noble/secp256k1/lib/esm/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js"}],"node_modules/@polkadot/util-crypto/secp256k1/expand.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.secp256k1Expand = secp256k1Expand;

var _secp256k = require("@noble/secp256k1");

var _util = require("@polkadot/util");

var _wasmCrypto = require("@polkadot/wasm-crypto");

var _bn = require("../bn.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
function secp256k1Expand(publicKey, onlyJs) {
  if (publicKey.length === 65) {
    return publicKey.subarray(1);
  }

  if (publicKey.length !== 33) {
    throw new Error('Invalid publicKey provided');
  }

  if (!_util.hasBigInt || !onlyJs && (0, _wasmCrypto.isReady)()) {
    return (0, _wasmCrypto.secp256k1Expand)(publicKey).subarray(1);
  }

  var _Point$fromHex = _secp256k.Point.fromHex(publicKey),
      x = _Point$fromHex.x,
      y = _Point$fromHex.y;

  return (0, _util.u8aConcat)((0, _util.bnToU8a)(x, _bn.BN_BE_256_OPTS), (0, _util.bnToU8a)(y, _bn.BN_BE_256_OPTS));
}
},{"@noble/secp256k1":"node_modules/@noble/secp256k1/lib/esm/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js","../bn.js":"node_modules/@polkadot/util-crypto/bn.js"}],"node_modules/@polkadot/util-crypto/secp256k1/recover.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.secp256k1Recover = secp256k1Recover;

var _secp256k = require("@noble/secp256k1");

var _util = require("@polkadot/util");

var _wasmCrypto = require("@polkadot/wasm-crypto");

var _compress = require("./compress.js");

var _expand = require("./expand.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name secp256k1Recover
 * @description Recovers a publicKey from the supplied signature
 */
function secp256k1Recover(msgHash, signature, recovery) {
  var hashType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'blake2';
  var onlyJs = arguments.length > 4 ? arguments[4] : undefined;
  var sig = (0, _util.u8aToU8a)(signature).subarray(0, 64);
  var msg = (0, _util.u8aToU8a)(msgHash);
  var publicKey = !_util.hasBigInt || !onlyJs && (0, _wasmCrypto.isReady)() ? (0, _wasmCrypto.secp256k1Recover)(msg, sig, recovery) : (0, _secp256k.recoverPublicKey)(msg, _secp256k.Signature.fromCompact(sig).toRawBytes(), recovery);

  if (!publicKey) {
    throw new Error('Unable to recover publicKey from signature');
  }

  return hashType === 'keccak' ? (0, _expand.secp256k1Expand)(publicKey, onlyJs) : (0, _compress.secp256k1Compress)(publicKey, onlyJs);
}
},{"@noble/secp256k1":"node_modules/@noble/secp256k1/lib/esm/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js","./compress.js":"node_modules/@polkadot/util-crypto/secp256k1/compress.js","./expand.js":"node_modules/@polkadot/util-crypto/secp256k1/expand.js"}],"node_modules/@polkadot/util-crypto/secp256k1/sign.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.secp256k1Sign = secp256k1Sign;

var _secp256k = require("@noble/secp256k1");

var _util = require("@polkadot/util");

var _wasmCrypto = require("@polkadot/wasm-crypto");

var _bn = require("../bn.js");

var _hasher = require("./hasher.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

/**
 * @name secp256k1Sign
 * @description Returns message signature of `message`, using the supplied pair
 */
function secp256k1Sign(message, _ref) {
  var secretKey = _ref.secretKey;
  var hashType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'blake2';
  var onlyJs = arguments.length > 3 ? arguments[3] : undefined;

  if ((secretKey === null || secretKey === void 0 ? void 0 : secretKey.length) !== 32) {
    throw new Error('Expected valid secp256k1 secretKey, 32-bytes');
  }

  var data = (0, _hasher.hasher)(hashType, message, onlyJs);

  if (!_util.hasBigInt || !onlyJs && (0, _wasmCrypto.isReady)()) {
    return (0, _wasmCrypto.secp256k1Sign)(data, secretKey);
  }

  var _signSync = (0, _secp256k.signSync)(data, secretKey, {
    canonical: true,
    recovered: true
  }),
      _signSync2 = _slicedToArray(_signSync, 2),
      sigBytes = _signSync2[0],
      recoveryParam = _signSync2[1];

  var _Signature$fromHex = _secp256k.Signature.fromHex(sigBytes),
      r = _Signature$fromHex.r,
      s = _Signature$fromHex.s;

  return (0, _util.u8aConcat)((0, _util.bnToU8a)(r, _bn.BN_BE_256_OPTS), (0, _util.bnToU8a)(s, _bn.BN_BE_256_OPTS), new Uint8Array([recoveryParam || 0]));
}
},{"@noble/secp256k1":"node_modules/@noble/secp256k1/lib/esm/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js","../bn.js":"node_modules/@polkadot/util-crypto/bn.js","./hasher.js":"node_modules/@polkadot/util-crypto/secp256k1/hasher.js"}],"node_modules/@polkadot/util-crypto/secp256k1/tweakAdd.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.secp256k1PrivateKeyTweakAdd = secp256k1PrivateKeyTweakAdd;

var _util = require("@polkadot/util");

var _xBigint = require("@polkadot/x-bigint");

var _bn = require("../bn.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// pre-defined curve param as lifted form elliptic
// https://github.com/indutny/elliptic/blob/e71b2d9359c5fe9437fbf46f1f05096de447de57/lib/elliptic/curves.js#L182
var N = 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141'.replace(/ /g, '');
var N_BI = (0, _xBigint.BigInt)("0x".concat(N));
var N_BN = new _util.BN(N, 'hex');

function addBi(seckey, tweak) {
  var res = (0, _util.u8aToBigInt)(tweak, _bn.BN_BE_OPTS);

  if (res >= N_BI) {
    throw new Error('Tweak parameter is out of range');
  }

  res += (0, _util.u8aToBigInt)(seckey, _bn.BN_BE_OPTS);

  if (res >= N_BI) {
    res -= N_BI;
  }

  if (res === _util._0n) {
    throw new Error('Invalid resulting private key');
  }

  return (0, _util.nToU8a)(res, _bn.BN_BE_256_OPTS);
}

function addBn(seckey, tweak) {
  var res = new _util.BN(tweak);

  if (res.cmp(N_BN) >= 0) {
    throw new Error('Tweak parameter is out of range');
  }

  res.iadd(new _util.BN(seckey));

  if (res.cmp(N_BN) >= 0) {
    res.isub(N_BN);
  }

  if (res.isZero()) {
    throw new Error('Invalid resulting private key');
  }

  return (0, _util.bnToU8a)(res, _bn.BN_BE_256_OPTS);
}

function secp256k1PrivateKeyTweakAdd(seckey, tweak, onlyBn) {
  if (!(0, _util.isU8a)(seckey) || seckey.length !== 32) {
    throw new Error('Expected seckey to be an Uint8Array with length 32');
  } else if (!(0, _util.isU8a)(tweak) || tweak.length !== 32) {
    throw new Error('Expected tweak to be an Uint8Array with length 32');
  }

  return !_util.hasBigInt || onlyBn ? addBn(seckey, tweak) : addBi(seckey, tweak);
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/x-bigint":"node_modules/@polkadot/x-bigint/index.js","../bn.js":"node_modules/@polkadot/util-crypto/bn.js"}],"node_modules/@polkadot/util-crypto/secp256k1/verify.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.secp256k1Verify = secp256k1Verify;

var _util = require("@polkadot/util");

var _hasher = require("./hasher.js");

var _recover = require("./recover.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name secp256k1Verify
 * @description Verifies the signature of `message`, using the supplied pair
 */
function secp256k1Verify(msgHash, signature, address) {
  var hashType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'blake2';
  var onlyJs = arguments.length > 4 ? arguments[4] : undefined;
  var sig = (0, _util.u8aToU8a)(signature);

  if (sig.length !== 65) {
    throw new Error("Expected signature with 65 bytes, ".concat(sig.length, " found instead"));
  }

  var publicKey = (0, _recover.secp256k1Recover)((0, _hasher.hasher)(hashType, msgHash), sig, sig[64], hashType, onlyJs);
  var signerAddr = (0, _hasher.hasher)(hashType, publicKey, onlyJs);
  var inputAddr = (0, _util.u8aToU8a)(address); // for Ethereum (keccak) the last 20 bytes is the address

  return (0, _util.u8aEq)(publicKey, inputAddr) || (hashType === 'keccak' ? (0, _util.u8aEq)(signerAddr.slice(-20), inputAddr.slice(-20)) : (0, _util.u8aEq)(signerAddr, inputAddr));
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./hasher.js":"node_modules/@polkadot/util-crypto/secp256k1/hasher.js","./recover.js":"node_modules/@polkadot/util-crypto/secp256k1/recover.js"}],"node_modules/@polkadot/util-crypto/secp256k1/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "secp256k1Compress", {
  enumerable: true,
  get: function () {
    return _compress.secp256k1Compress;
  }
});
Object.defineProperty(exports, "secp256k1Expand", {
  enumerable: true,
  get: function () {
    return _expand.secp256k1Expand;
  }
});
Object.defineProperty(exports, "secp256k1PairFromSeed", {
  enumerable: true,
  get: function () {
    return _fromSeed.secp256k1PairFromSeed;
  }
});
Object.defineProperty(exports, "secp256k1PrivateKeyTweakAdd", {
  enumerable: true,
  get: function () {
    return _tweakAdd.secp256k1PrivateKeyTweakAdd;
  }
});
Object.defineProperty(exports, "secp256k1Recover", {
  enumerable: true,
  get: function () {
    return _recover.secp256k1Recover;
  }
});
Object.defineProperty(exports, "secp256k1Sign", {
  enumerable: true,
  get: function () {
    return _sign.secp256k1Sign;
  }
});
Object.defineProperty(exports, "secp256k1Verify", {
  enumerable: true,
  get: function () {
    return _verify.secp256k1Verify;
  }
});

var _compress = require("./compress.js");

var _expand = require("./expand.js");

var _fromSeed = require("./pair/fromSeed.js");

var _recover = require("./recover.js");

var _sign = require("./sign.js");

var _tweakAdd = require("./tweakAdd.js");

var _verify = require("./verify.js");
},{"./compress.js":"node_modules/@polkadot/util-crypto/secp256k1/compress.js","./expand.js":"node_modules/@polkadot/util-crypto/secp256k1/expand.js","./pair/fromSeed.js":"node_modules/@polkadot/util-crypto/secp256k1/pair/fromSeed.js","./recover.js":"node_modules/@polkadot/util-crypto/secp256k1/recover.js","./sign.js":"node_modules/@polkadot/util-crypto/secp256k1/sign.js","./tweakAdd.js":"node_modules/@polkadot/util-crypto/secp256k1/tweakAdd.js","./verify.js":"node_modules/@polkadot/util-crypto/secp256k1/verify.js"}],"node_modules/@polkadot/util-crypto/ethereum/encode.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ethereumEncode = ethereumEncode;

var _util = require("@polkadot/util");

var _index = require("../keccak/index.js");

var _index2 = require("../secp256k1/index.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
function getH160(u8a) {
  if ([33, 65].includes(u8a.length)) {
    u8a = (0, _index.keccakAsU8a)((0, _index2.secp256k1Expand)(u8a));
  }

  return u8a.slice(-20);
}

function ethereumEncode(addressOrPublic) {
  if (!addressOrPublic) {
    return '0x';
  }

  var u8aAddress = (0, _util.u8aToU8a)(addressOrPublic);
  (0, _util.assert)([20, 32, 33, 65].includes(u8aAddress.length), 'Invalid address or publicKey passed');
  var address = (0, _util.u8aToHex)(getH160(u8aAddress), -1, false);
  var hash = (0, _util.u8aToHex)((0, _index.keccakAsU8a)(address), -1, false);
  var result = '';

  for (var i = 0; i < 40; i++) {
    result = "".concat(result).concat(parseInt(hash[i], 16) > 7 ? address[i].toUpperCase() : address[i]);
  }

  return "0x".concat(result);
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../keccak/index.js":"node_modules/@polkadot/util-crypto/keccak/index.js","../secp256k1/index.js":"node_modules/@polkadot/util-crypto/secp256k1/index.js"}],"node_modules/@polkadot/util-crypto/ethereum/isChecksum.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isEthereumChecksum = isEthereumChecksum;

var _util = require("@polkadot/util");

var _index = require("../keccak/index.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
function isInvalidChar(char, byte) {
  return char !== (byte > 7 ? char.toUpperCase() : char.toLowerCase());
}

function isEthereumChecksum(_address) {
  var address = _address.replace('0x', '');

  var hash = (0, _util.u8aToHex)((0, _index.keccakAsU8a)(address.toLowerCase()), -1, false);

  for (var i = 0; i < 40; i++) {
    if (isInvalidChar(address[i], parseInt(hash[i], 16))) {
      return false;
    }
  }

  return true;
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../keccak/index.js":"node_modules/@polkadot/util-crypto/keccak/index.js"}],"node_modules/@polkadot/util-crypto/ethereum/isAddress.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isEthereumAddress = isEthereumAddress;

var _util = require("@polkadot/util");

var _isChecksum = require("./isChecksum.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
function isEthereumAddress(address) {
  if (!address || address.length !== 42 || !(0, _util.isHex)(address)) {
    return false;
  } else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {
    return true;
  }

  return (0, _isChecksum.isEthereumChecksum)(address);
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./isChecksum.js":"node_modules/@polkadot/util-crypto/ethereum/isChecksum.js"}],"node_modules/@polkadot/util-crypto/ethereum/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "ethereumEncode", {
  enumerable: true,
  get: function () {
    return _encode.ethereumEncode;
  }
});
Object.defineProperty(exports, "isEthereumAddress", {
  enumerable: true,
  get: function () {
    return _isAddress.isEthereumAddress;
  }
});
Object.defineProperty(exports, "isEthereumChecksum", {
  enumerable: true,
  get: function () {
    return _isChecksum.isEthereumChecksum;
  }
});

var _encode = require("./encode.js");

var _isAddress = require("./isAddress.js");

var _isChecksum = require("./isChecksum.js");
},{"./encode.js":"node_modules/@polkadot/util-crypto/ethereum/encode.js","./isAddress.js":"node_modules/@polkadot/util-crypto/ethereum/isAddress.js","./isChecksum.js":"node_modules/@polkadot/util-crypto/ethereum/isChecksum.js"}],"node_modules/@polkadot/util-crypto/hd/validatePath.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HARDENED = void 0;
exports.hdValidatePath = hdValidatePath;

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
var HARDENED = 0x80000000;
exports.HARDENED = HARDENED;

function hdValidatePath(path) {
  if (!path.startsWith('m/')) {
    return false;
  }

  var parts = path.split('/').slice(1);

  var _iterator = _createForOfIteratorHelper(parts),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var p = _step.value;
      var n = /^\d+'?$/.test(p) ? parseInt(p.replace(/'$/, ''), 10) : Number.NaN;

      if (isNaN(n) || n >= HARDENED || n < 0) {
        return false;
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  return true;
}
},{}],"node_modules/@polkadot/util-crypto/hd/ethereum/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hdEthereum = hdEthereum;

var _util = require("@polkadot/util");

var _bn = require("../../bn.js");

var _index = require("../../hmac/index.js");

var _index2 = require("../../secp256k1/index.js");

var _validatePath = require("../validatePath.js");

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var MASTER_SECRET = (0, _util.stringToU8a)('Bitcoin seed');

function createCoded(secretKey, chainCode) {
  return {
    chainCode: chainCode,
    publicKey: (0, _index2.secp256k1PairFromSeed)(secretKey).publicKey,
    secretKey: secretKey
  };
}

function deriveChild(hd, index) {
  var indexBuffer = (0, _util.bnToU8a)(index, _bn.BN_BE_32_OPTS);
  var data = index >= _validatePath.HARDENED ? (0, _util.u8aConcat)(new Uint8Array(1), hd.secretKey, indexBuffer) : (0, _util.u8aConcat)(hd.publicKey, indexBuffer);

  try {
    var I = (0, _index.hmacShaAsU8a)(hd.chainCode, data, 512);
    return createCoded((0, _index2.secp256k1PrivateKeyTweakAdd)(hd.secretKey, I.slice(0, 32)), I.slice(32));
  } catch (err) {
    // In case parse256(IL) >= n or ki == 0, proceed with the next value for i
    return deriveChild(hd, index + 1);
  }
}

function hdEthereum(seed) {
  var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  var I = (0, _index.hmacShaAsU8a)(MASTER_SECRET, seed, 512);
  var hd = createCoded(I.slice(0, 32), I.slice(32));

  if (!path || path === 'm' || path === 'M' || path === "m'" || path === "M'") {
    return hd;
  }

  (0, _util.assert)((0, _validatePath.hdValidatePath)(path), 'Invalid derivation path');
  var parts = path.split('/').slice(1);

  var _iterator = _createForOfIteratorHelper(parts),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var p = _step.value;
      hd = deriveChild(hd, parseInt(p, 10) + (p.length > 1 && p.endsWith("'") ? _validatePath.HARDENED : 0));
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  return hd;
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../../bn.js":"node_modules/@polkadot/util-crypto/bn.js","../../hmac/index.js":"node_modules/@polkadot/util-crypto/hmac/index.js","../../secp256k1/index.js":"node_modules/@polkadot/util-crypto/secp256k1/index.js","../validatePath.js":"node_modules/@polkadot/util-crypto/hd/validatePath.js"}],"node_modules/@noble/hashes/pbkdf2.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.pbkdf2Async = exports.pbkdf2 = void 0;
const _assert_js_1 = require("./_assert.js");
const hmac_js_1 = require("./hmac.js");
const utils_js_1 = require("./utils.js");
// Common prologue and epilogue for sync/async functions
function pbkdf2Init(hash, _password, _salt, _opts) {
    _assert_js_1.default.hash(hash);
    const opts = (0, utils_js_1.checkOpts)({ dkLen: 32, asyncTick: 10 }, _opts);
    const { c, dkLen, asyncTick } = opts;
    _assert_js_1.default.number(c);
    _assert_js_1.default.number(dkLen);
    _assert_js_1.default.number(asyncTick);
    if (c < 1)
        throw new Error('PBKDF2: iterations (c) should be >= 1');
    const password = (0, utils_js_1.toBytes)(_password);
    const salt = (0, utils_js_1.toBytes)(_salt);
    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);
    const DK = new Uint8Array(dkLen);
    // U1 = PRF(Password, Salt + INT_32_BE(i))
    const PRF = hmac_js_1.hmac.create(hash, password);
    const PRFSalt = PRF._cloneInto().update(salt);
    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };
}
function pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {
    PRF.destroy();
    PRFSalt.destroy();
    if (prfW)
        prfW.destroy();
    u.fill(0);
    return DK;
}
/**
 * PBKDF2-HMAC: RFC 2898 key derivation function
 * @param hash - hash function that would be used e.g. sha256
 * @param password - password from which a derived key is generated
 * @param salt - cryptographic salt
 * @param opts - {c, dkLen} where c is work factor and dkLen is output message size
 */
function pbkdf2(hash, password, salt, opts) {
    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);
    let prfW; // Working copy
    const arr = new Uint8Array(4);
    const view = (0, utils_js_1.createView)(arr);
    const u = new Uint8Array(PRF.outputLen);
    // DK = T1 + T2 + â¯ + Tdklen/hlen
    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {
        // Ti = F(Password, Salt, c, i)
        const Ti = DK.subarray(pos, pos + PRF.outputLen);
        view.setInt32(0, ti, false);
        // F(Password, Salt, c, i) = U1 ^ U2 ^ â¯ ^ Uc
        // U1 = PRF(Password, Salt + INT_32_BE(i))
        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);
        Ti.set(u.subarray(0, Ti.length));
        for (let ui = 1; ui < c; ui++) {
            // Uc = PRF(Password, Ucâ1)
            PRF._cloneInto(prfW).update(u).digestInto(u);
            for (let i = 0; i < Ti.length; i++)
                Ti[i] ^= u[i];
        }
    }
    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);
}
exports.pbkdf2 = pbkdf2;
async function pbkdf2Async(hash, password, salt, opts) {
    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);
    let prfW; // Working copy
    const arr = new Uint8Array(4);
    const view = (0, utils_js_1.createView)(arr);
    const u = new Uint8Array(PRF.outputLen);
    // DK = T1 + T2 + â¯ + Tdklen/hlen
    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {
        // Ti = F(Password, Salt, c, i)
        const Ti = DK.subarray(pos, pos + PRF.outputLen);
        view.setInt32(0, ti, false);
        // F(Password, Salt, c, i) = U1 ^ U2 ^ â¯ ^ Uc
        // U1 = PRF(Password, Salt + INT_32_BE(i))
        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);
        Ti.set(u.subarray(0, Ti.length));
        await (0, utils_js_1.asyncLoop)(c - 1, asyncTick, (i) => {
            // Uc = PRF(Password, Ucâ1)
            PRF._cloneInto(prfW).update(u).digestInto(u);
            for (let i = 0; i < Ti.length; i++)
                Ti[i] ^= u[i];
        });
    }
    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);
}
exports.pbkdf2Async = pbkdf2Async;

},{"./_assert.js":"node_modules/@noble/hashes/_assert.js","./hmac.js":"node_modules/@noble/hashes/hmac.js","./utils.js":"node_modules/@noble/hashes/utils.js"}],"node_modules/@polkadot/util-crypto/pbkdf2/encode.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pbkdf2Encode = pbkdf2Encode;

var _pbkdf = require("@noble/hashes/pbkdf2");

var _sha = require("@noble/hashes/sha512");

var _util = require("@polkadot/util");

var _wasmCrypto = require("@polkadot/wasm-crypto");

var _asU8a = require("../random/asU8a.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
function pbkdf2Encode(passphrase) {
  var salt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, _asU8a.randomAsU8a)();
  var rounds = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2048;
  var onlyJs = arguments.length > 3 ? arguments[3] : undefined;
  var u8aPass = (0, _util.u8aToU8a)(passphrase);
  var u8aSalt = (0, _util.u8aToU8a)(salt);
  return {
    password: !_util.hasBigInt || !onlyJs && (0, _wasmCrypto.isReady)() ? (0, _wasmCrypto.pbkdf2)(u8aPass, u8aSalt, rounds) : (0, _pbkdf.pbkdf2)(_sha.sha512, u8aPass, u8aSalt, {
      c: rounds,
      dkLen: 64
    }),
    rounds: rounds,
    salt: salt
  };
}
},{"@noble/hashes/pbkdf2":"node_modules/@noble/hashes/pbkdf2.js","@noble/hashes/sha512":"node_modules/@noble/hashes/sha512.js","@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js","../random/asU8a.js":"node_modules/@polkadot/util-crypto/random/asU8a.js"}],"node_modules/@polkadot/util-crypto/pbkdf2/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "pbkdf2Encode", {
  enumerable: true,
  get: function () {
    return _encode.pbkdf2Encode;
  }
});

var _encode = require("./encode.js");
},{"./encode.js":"node_modules/@polkadot/util-crypto/pbkdf2/encode.js"}],"node_modules/@polkadot/util-crypto/sha/asU8a.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.shaAsU8a = exports.sha512AsU8a = exports.sha256AsU8a = void 0;

var _sha = require("@noble/hashes/sha256");

var _sha2 = require("@noble/hashes/sha512");

var _wasmCrypto = require("@polkadot/wasm-crypto");

var _helpers = require("../helpers.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name shaAsU8a
 * @summary Creates a sha Uint8Array from the input.
 */
var shaAsU8a = (0, _helpers.createDualHasher)({
  256: _wasmCrypto.sha256,
  512: _wasmCrypto.sha512
}, {
  256: _sha.sha256,
  512: _sha2.sha512
});
/**
 * @name sha256AsU8a
 * @summary Creates a sha256 Uint8Array from the input.
 */

exports.shaAsU8a = shaAsU8a;
var sha256AsU8a = (0, _helpers.createBitHasher)(256, shaAsU8a);
/**
 * @name sha512AsU8a
 * @summary Creates a sha512 Uint8Array from the input.
 */

exports.sha256AsU8a = sha256AsU8a;
var sha512AsU8a = (0, _helpers.createBitHasher)(512, shaAsU8a);
exports.sha512AsU8a = sha512AsU8a;
},{"@noble/hashes/sha256":"node_modules/@noble/hashes/sha256.js","@noble/hashes/sha512":"node_modules/@noble/hashes/sha512.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js","../helpers.js":"node_modules/@polkadot/util-crypto/helpers.js"}],"node_modules/@polkadot/util-crypto/sha/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "sha256AsU8a", {
  enumerable: true,
  get: function () {
    return _asU8a.sha256AsU8a;
  }
});
Object.defineProperty(exports, "sha512AsU8a", {
  enumerable: true,
  get: function () {
    return _asU8a.sha512AsU8a;
  }
});
Object.defineProperty(exports, "shaAsU8a", {
  enumerable: true,
  get: function () {
    return _asU8a.shaAsU8a;
  }
});

var _asU8a = require("./asU8a.js");
},{"./asU8a.js":"node_modules/@polkadot/util-crypto/sha/asU8a.js"}],"node_modules/@polkadot/util-crypto/mnemonic/bip39-en.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Adapted from the bitcoinjs/bip39 source
// https://github.com/bitcoinjs/bip39/blob/1d063b6a6aee4145b34d701037cd3e67f5446ff9/ts_src/
var _default = 'abandon|ability|able|about|above|absent|absorb|abstract|absurd|abuse|access|accident|account|accuse|achieve|acid|acoustic|acquire|across|act|action|actor|actress|actual|adapt|add|addict|address|adjust|admit|adult|advance|advice|aerobic|affair|afford|afraid|again|age|agent|agree|ahead|aim|air|airport|aisle|alarm|album|alcohol|alert|alien|all|alley|allow|almost|alone|alpha|already|also|alter|always|amateur|amazing|among|amount|amused|analyst|anchor|ancient|anger|angle|angry|animal|ankle|announce|annual|another|answer|antenna|antique|anxiety|any|apart|apology|appear|apple|approve|april|arch|arctic|area|arena|argue|arm|armed|armor|army|around|arrange|arrest|arrive|arrow|art|artefact|artist|artwork|ask|aspect|assault|asset|assist|assume|asthma|athlete|atom|attack|attend|attitude|attract|auction|audit|august|aunt|author|auto|autumn|average|avocado|avoid|awake|aware|away|awesome|awful|awkward|axis|baby|bachelor|bacon|badge|bag|balance|balcony|ball|bamboo|banana|banner|bar|barely|bargain|barrel|base|basic|basket|battle|beach|bean|beauty|because|become|beef|before|begin|behave|behind|believe|below|belt|bench|benefit|best|betray|better|between|beyond|bicycle|bid|bike|bind|biology|bird|birth|bitter|black|blade|blame|blanket|blast|bleak|bless|blind|blood|blossom|blouse|blue|blur|blush|board|boat|body|boil|bomb|bone|bonus|book|boost|border|boring|borrow|boss|bottom|bounce|box|boy|bracket|brain|brand|brass|brave|bread|breeze|brick|bridge|brief|bright|bring|brisk|broccoli|broken|bronze|broom|brother|brown|brush|bubble|buddy|budget|buffalo|build|bulb|bulk|bullet|bundle|bunker|burden|burger|burst|bus|business|busy|butter|buyer|buzz|cabbage|cabin|cable|cactus|cage|cake|call|calm|camera|camp|can|canal|cancel|candy|cannon|canoe|canvas|canyon|capable|capital|captain|car|carbon|card|cargo|carpet|carry|cart|case|cash|casino|castle|casual|cat|catalog|catch|category|cattle|caught|cause|caution|cave|ceiling|celery|cement|census|century|cereal|certain|chair|chalk|champion|change|chaos|chapter|charge|chase|chat|cheap|check|cheese|chef|cherry|chest|chicken|chief|child|chimney|choice|choose|chronic|chuckle|chunk|churn|cigar|cinnamon|circle|citizen|city|civil|claim|clap|clarify|claw|clay|clean|clerk|clever|click|client|cliff|climb|clinic|clip|clock|clog|close|cloth|cloud|clown|club|clump|cluster|clutch|coach|coast|coconut|code|coffee|coil|coin|collect|color|column|combine|come|comfort|comic|common|company|concert|conduct|confirm|congress|connect|consider|control|convince|cook|cool|copper|copy|coral|core|corn|correct|cost|cotton|couch|country|couple|course|cousin|cover|coyote|crack|cradle|craft|cram|crane|crash|crater|crawl|crazy|cream|credit|creek|crew|cricket|crime|crisp|critic|crop|cross|crouch|crowd|crucial|cruel|cruise|crumble|crunch|crush|cry|crystal|cube|culture|cup|cupboard|curious|current|curtain|curve|cushion|custom|cute|cycle|dad|damage|damp|dance|danger|daring|dash|daughter|dawn|day|deal|debate|debris|decade|december|decide|decline|decorate|decrease|deer|defense|define|defy|degree|delay|deliver|demand|demise|denial|dentist|deny|depart|depend|deposit|depth|deputy|derive|describe|desert|design|desk|despair|destroy|detail|detect|develop|device|devote|diagram|dial|diamond|diary|dice|diesel|diet|differ|digital|dignity|dilemma|dinner|dinosaur|direct|dirt|disagree|discover|disease|dish|dismiss|disorder|display|distance|divert|divide|divorce|dizzy|doctor|document|dog|doll|dolphin|domain|donate|donkey|donor|door|dose|double|dove|draft|dragon|drama|drastic|draw|dream|dress|drift|drill|drink|drip|drive|drop|drum|dry|duck|dumb|dune|during|dust|dutch|duty|dwarf|dynamic|eager|eagle|early|earn|earth|easily|east|easy|echo|ecology|economy|edge|edit|educate|effort|egg|eight|either|elbow|elder|electric|elegant|element|elephant|elevator|elite|else|embark|embody|embrace|emerge|emotion|employ|empower|empty|enable|enact|end|endless|endorse|enemy|energy|enforce|engage|engine|enhance|enjoy|enlist|enough|enrich|enroll|ensure|enter|entire|entry|envelope|episode|equal|equip|era|erase|erode|erosion|error|erupt|escape|essay|essence|estate|eternal|ethics|evidence|evil|evoke|evolve|exact|example|excess|exchange|excite|exclude|excuse|execute|exercise|exhaust|exhibit|exile|exist|exit|exotic|expand|expect|expire|explain|expose|express|extend|extra|eye|eyebrow|fabric|face|faculty|fade|faint|faith|fall|false|fame|family|famous|fan|fancy|fantasy|farm|fashion|fat|fatal|father|fatigue|fault|favorite|feature|february|federal|fee|feed|feel|female|fence|festival|fetch|fever|few|fiber|fiction|field|figure|file|film|filter|final|find|fine|finger|finish|fire|firm|first|fiscal|fish|fit|fitness|fix|flag|flame|flash|flat|flavor|flee|flight|flip|float|flock|floor|flower|fluid|flush|fly|foam|focus|fog|foil|fold|follow|food|foot|force|forest|forget|fork|fortune|forum|forward|fossil|foster|found|fox|fragile|frame|frequent|fresh|friend|fringe|frog|front|frost|frown|frozen|fruit|fuel|fun|funny|furnace|fury|future|gadget|gain|galaxy|gallery|game|gap|garage|garbage|garden|garlic|garment|gas|gasp|gate|gather|gauge|gaze|general|genius|genre|gentle|genuine|gesture|ghost|giant|gift|giggle|ginger|giraffe|girl|give|glad|glance|glare|glass|glide|glimpse|globe|gloom|glory|glove|glow|glue|goat|goddess|gold|good|goose|gorilla|gospel|gossip|govern|gown|grab|grace|grain|grant|grape|grass|gravity|great|green|grid|grief|grit|grocery|group|grow|grunt|guard|guess|guide|guilt|guitar|gun|gym|habit|hair|half|hammer|hamster|hand|happy|harbor|hard|harsh|harvest|hat|have|hawk|hazard|head|health|heart|heavy|hedgehog|height|hello|helmet|help|hen|hero|hidden|high|hill|hint|hip|hire|history|hobby|hockey|hold|hole|holiday|hollow|home|honey|hood|hope|horn|horror|horse|hospital|host|hotel|hour|hover|hub|huge|human|humble|humor|hundred|hungry|hunt|hurdle|hurry|hurt|husband|hybrid|ice|icon|idea|identify|idle|ignore|ill|illegal|illness|image|imitate|immense|immune|impact|impose|improve|impulse|inch|include|income|increase|index|indicate|indoor|industry|infant|inflict|inform|inhale|inherit|initial|inject|injury|inmate|inner|innocent|input|inquiry|insane|insect|inside|inspire|install|intact|interest|into|invest|invite|involve|iron|island|isolate|issue|item|ivory|jacket|jaguar|jar|jazz|jealous|jeans|jelly|jewel|job|join|joke|journey|joy|judge|juice|jump|jungle|junior|junk|just|kangaroo|keen|keep|ketchup|key|kick|kid|kidney|kind|kingdom|kiss|kit|kitchen|kite|kitten|kiwi|knee|knife|knock|know|lab|label|labor|ladder|lady|lake|lamp|language|laptop|large|later|latin|laugh|laundry|lava|law|lawn|lawsuit|layer|lazy|leader|leaf|learn|leave|lecture|left|leg|legal|legend|leisure|lemon|lend|length|lens|leopard|lesson|letter|level|liar|liberty|library|license|life|lift|light|like|limb|limit|link|lion|liquid|list|little|live|lizard|load|loan|lobster|local|lock|logic|lonely|long|loop|lottery|loud|lounge|love|loyal|lucky|luggage|lumber|lunar|lunch|luxury|lyrics|machine|mad|magic|magnet|maid|mail|main|major|make|mammal|man|manage|mandate|mango|mansion|manual|maple|marble|march|margin|marine|market|marriage|mask|mass|master|match|material|math|matrix|matter|maximum|maze|meadow|mean|measure|meat|mechanic|medal|media|melody|melt|member|memory|mention|menu|mercy|merge|merit|merry|mesh|message|metal|method|middle|midnight|milk|million|mimic|mind|minimum|minor|minute|miracle|mirror|misery|miss|mistake|mix|mixed|mixture|mobile|model|modify|mom|moment|monitor|monkey|monster|month|moon|moral|more|morning|mosquito|mother|motion|motor|mountain|mouse|move|movie|much|muffin|mule|multiply|muscle|museum|mushroom|music|must|mutual|myself|mystery|myth|naive|name|napkin|narrow|nasty|nation|nature|near|neck|need|negative|neglect|neither|nephew|nerve|nest|net|network|neutral|never|news|next|nice|night|noble|noise|nominee|noodle|normal|north|nose|notable|note|nothing|notice|novel|now|nuclear|number|nurse|nut|oak|obey|object|oblige|obscure|observe|obtain|obvious|occur|ocean|october|odor|off|offer|office|often|oil|okay|old|olive|olympic|omit|once|one|onion|online|only|open|opera|opinion|oppose|option|orange|orbit|orchard|order|ordinary|organ|orient|original|orphan|ostrich|other|outdoor|outer|output|outside|oval|oven|over|own|owner|oxygen|oyster|ozone|pact|paddle|page|pair|palace|palm|panda|panel|panic|panther|paper|parade|parent|park|parrot|party|pass|patch|path|patient|patrol|pattern|pause|pave|payment|peace|peanut|pear|peasant|pelican|pen|penalty|pencil|people|pepper|perfect|permit|person|pet|phone|photo|phrase|physical|piano|picnic|picture|piece|pig|pigeon|pill|pilot|pink|pioneer|pipe|pistol|pitch|pizza|place|planet|plastic|plate|play|please|pledge|pluck|plug|plunge|poem|poet|point|polar|pole|police|pond|pony|pool|popular|portion|position|possible|post|potato|pottery|poverty|powder|power|practice|praise|predict|prefer|prepare|present|pretty|prevent|price|pride|primary|print|priority|prison|private|prize|problem|process|produce|profit|program|project|promote|proof|property|prosper|protect|proud|provide|public|pudding|pull|pulp|pulse|pumpkin|punch|pupil|puppy|purchase|purity|purpose|purse|push|put|puzzle|pyramid|quality|quantum|quarter|question|quick|quit|quiz|quote|rabbit|raccoon|race|rack|radar|radio|rail|rain|raise|rally|ramp|ranch|random|range|rapid|rare|rate|rather|raven|raw|razor|ready|real|reason|rebel|rebuild|recall|receive|recipe|record|recycle|reduce|reflect|reform|refuse|region|regret|regular|reject|relax|release|relief|rely|remain|remember|remind|remove|render|renew|rent|reopen|repair|repeat|replace|report|require|rescue|resemble|resist|resource|response|result|retire|retreat|return|reunion|reveal|review|reward|rhythm|rib|ribbon|rice|rich|ride|ridge|rifle|right|rigid|ring|riot|ripple|risk|ritual|rival|river|road|roast|robot|robust|rocket|romance|roof|rookie|room|rose|rotate|rough|round|route|royal|rubber|rude|rug|rule|run|runway|rural|sad|saddle|sadness|safe|sail|salad|salmon|salon|salt|salute|same|sample|sand|satisfy|satoshi|sauce|sausage|save|say|scale|scan|scare|scatter|scene|scheme|school|science|scissors|scorpion|scout|scrap|screen|script|scrub|sea|search|season|seat|second|secret|section|security|seed|seek|segment|select|sell|seminar|senior|sense|sentence|series|service|session|settle|setup|seven|shadow|shaft|shallow|share|shed|shell|sheriff|shield|shift|shine|ship|shiver|shock|shoe|shoot|shop|short|shoulder|shove|shrimp|shrug|shuffle|shy|sibling|sick|side|siege|sight|sign|silent|silk|silly|silver|similar|simple|since|sing|siren|sister|situate|six|size|skate|sketch|ski|skill|skin|skirt|skull|slab|slam|sleep|slender|slice|slide|slight|slim|slogan|slot|slow|slush|small|smart|smile|smoke|smooth|snack|snake|snap|sniff|snow|soap|soccer|social|sock|soda|soft|solar|soldier|solid|solution|solve|someone|song|soon|sorry|sort|soul|sound|soup|source|south|space|spare|spatial|spawn|speak|special|speed|spell|spend|sphere|spice|spider|spike|spin|spirit|split|spoil|sponsor|spoon|sport|spot|spray|spread|spring|spy|square|squeeze|squirrel|stable|stadium|staff|stage|stairs|stamp|stand|start|state|stay|steak|steel|stem|step|stereo|stick|still|sting|stock|stomach|stone|stool|story|stove|strategy|street|strike|strong|struggle|student|stuff|stumble|style|subject|submit|subway|success|such|sudden|suffer|sugar|suggest|suit|summer|sun|sunny|sunset|super|supply|supreme|sure|surface|surge|surprise|surround|survey|suspect|sustain|swallow|swamp|swap|swarm|swear|sweet|swift|swim|swing|switch|sword|symbol|symptom|syrup|system|table|tackle|tag|tail|talent|talk|tank|tape|target|task|taste|tattoo|taxi|teach|team|tell|ten|tenant|tennis|tent|term|test|text|thank|that|theme|then|theory|there|they|thing|this|thought|three|thrive|throw|thumb|thunder|ticket|tide|tiger|tilt|timber|time|tiny|tip|tired|tissue|title|toast|tobacco|today|toddler|toe|together|toilet|token|tomato|tomorrow|tone|tongue|tonight|tool|tooth|top|topic|topple|torch|tornado|tortoise|toss|total|tourist|toward|tower|town|toy|track|trade|traffic|tragic|train|transfer|trap|trash|travel|tray|treat|tree|trend|trial|tribe|trick|trigger|trim|trip|trophy|trouble|truck|true|truly|trumpet|trust|truth|try|tube|tuition|tumble|tuna|tunnel|turkey|turn|turtle|twelve|twenty|twice|twin|twist|two|type|typical|ugly|umbrella|unable|unaware|uncle|uncover|under|undo|unfair|unfold|unhappy|uniform|unique|unit|universe|unknown|unlock|until|unusual|unveil|update|upgrade|uphold|upon|upper|upset|urban|urge|usage|use|used|useful|useless|usual|utility|vacant|vacuum|vague|valid|valley|valve|van|vanish|vapor|various|vast|vault|vehicle|velvet|vendor|venture|venue|verb|verify|version|very|vessel|veteran|viable|vibrant|vicious|victory|video|view|village|vintage|violin|virtual|virus|visa|visit|visual|vital|vivid|vocal|voice|void|volcano|volume|vote|voyage|wage|wagon|wait|walk|wall|walnut|want|warfare|warm|warrior|wash|wasp|waste|water|wave|way|wealth|weapon|wear|weasel|weather|web|wedding|weekend|weird|welcome|west|wet|whale|what|wheat|wheel|when|where|whip|whisper|wide|width|wife|wild|will|win|window|wine|wing|wink|winner|winter|wire|wisdom|wise|wish|witness|wolf|woman|wonder|wood|wool|word|work|world|worry|worth|wrap|wreck|wrestle|wrist|write|wrong|yard|year|yellow|you|young|youth|zebra|zero|zone|zoo'.split('|');

exports.default = _default;
},{}],"node_modules/@polkadot/util-crypto/mnemonic/bip39.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.entropyToMnemonic = entropyToMnemonic;
exports.generateMnemonic = generateMnemonic;
exports.mnemonicToEntropy = mnemonicToEntropy;
exports.mnemonicToSeedSync = mnemonicToSeedSync;
exports.validateMnemonic = validateMnemonic;

var _util = require("@polkadot/util");

var _index = require("../pbkdf2/index.js");

var _index2 = require("../random/index.js");

var _index3 = require("../sha/index.js");

var _bip39En = _interopRequireDefault(require("./bip39-en.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Adapted from the bitcoinjs/bip39 source
// https://github.com/bitcoinjs/bip39/blob/1d063b6a6aee4145b34d701037cd3e67f5446ff9/ts_src/index.ts
// Copyright (c) 2014, Wei Lu <luwei.here@gmail.com> and Daniel Cousens <email@dcousens.com>
// ISC Licence
//
// Change made in this version -
//   - Adjust formatting (just eslint differences)
//   - Only English wordlist (this aligns with the wasm-crypto implementation)
//   - Use util-crypto randomAsU8a (instead of randombytes)
//   - Remove setting of wordlist passing of wordlist in functions
//   - Remove mnemonicToSeed (we only use the sync variant)
//   - generateMnemonic takes number of words (instead of strength)
var INVALID_MNEMONIC = 'Invalid mnemonic';
var INVALID_ENTROPY = 'Invalid entropy';
var INVALID_CHECKSUM = 'Invalid mnemonic checksum';

function normalize(str) {
  return (str || '').normalize('NFKD');
}

function binaryToByte(bin) {
  return parseInt(bin, 2);
}

function bytesToBinary(bytes) {
  return bytes.map(function (x) {
    return x.toString(2).padStart(8, '0');
  }).join('');
}

function deriveChecksumBits(entropyBuffer) {
  return bytesToBinary(Array.from((0, _index3.sha256AsU8a)(entropyBuffer))).slice(0, entropyBuffer.length * 8 / 32);
}

function mnemonicToSeedSync(mnemonic, password) {
  return (0, _index.pbkdf2Encode)((0, _util.stringToU8a)(normalize(mnemonic)), (0, _util.stringToU8a)("mnemonic".concat(normalize(password)))).password;
}

function mnemonicToEntropy(mnemonic) {
  var _entropyBits$match;

  var words = normalize(mnemonic).split(' ');
  (0, _util.assert)(words.length % 3 === 0, INVALID_MNEMONIC); // convert word indices to 11 bit binary strings

  var bits = words.map(function (word) {
    var index = _bip39En.default.indexOf(word);

    (0, _util.assert)(index !== -1, INVALID_MNEMONIC);
    return index.toString(2).padStart(11, '0');
  }).join(''); // split the binary string into ENT/CS

  var dividerIndex = Math.floor(bits.length / 33) * 32;
  var entropyBits = bits.slice(0, dividerIndex);
  var checksumBits = bits.slice(dividerIndex); // calculate the checksum and compare

  var entropyBytes = (_entropyBits$match = entropyBits.match(/(.{1,8})/g)) === null || _entropyBits$match === void 0 ? void 0 : _entropyBits$match.map(binaryToByte);
  (0, _util.assert)(entropyBytes && entropyBytes.length % 4 === 0 && entropyBytes.length >= 16 && entropyBytes.length <= 32, INVALID_ENTROPY);
  var entropy = (0, _util.u8aToU8a)(entropyBytes);
  var newChecksum = deriveChecksumBits(entropy);
  (0, _util.assert)(newChecksum === checksumBits, INVALID_CHECKSUM);
  return entropy;
}

function entropyToMnemonic(entropy) {
  // 128 <= ENT <= 256
  (0, _util.assert)(entropy.length % 4 === 0 && entropy.length >= 16 && entropy.length <= 32, INVALID_ENTROPY);
  var entropyBits = bytesToBinary(Array.from(entropy));
  var checksumBits = deriveChecksumBits(entropy); // we just set it prior, so this is a safe check
  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion

  return (entropyBits + checksumBits).match(/(.{1,11})/g).map(function (binary) {
    return _bip39En.default[binaryToByte(binary)];
  }).join(' ');
}

function generateMnemonic(numWords) {
  return entropyToMnemonic((0, _index2.randomAsU8a)(numWords / 3 * 4));
}

function validateMnemonic(mnemonic) {
  try {
    mnemonicToEntropy(mnemonic);
  } catch (e) {
    return false;
  }

  return true;
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../pbkdf2/index.js":"node_modules/@polkadot/util-crypto/pbkdf2/index.js","../random/index.js":"node_modules/@polkadot/util-crypto/random/index.js","../sha/index.js":"node_modules/@polkadot/util-crypto/sha/index.js","./bip39-en.js":"node_modules/@polkadot/util-crypto/mnemonic/bip39-en.js"}],"node_modules/@polkadot/util-crypto/mnemonic/generate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mnemonicGenerate = mnemonicGenerate;

var _util = require("@polkadot/util");

var _wasmCrypto = require("@polkadot/wasm-crypto");

var _bip = require("./bip39.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name mnemonicGenerate
 * @summary Creates a valid mnemonic string using using [BIP39](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki).
 * @example
 * <BR>
 *
 * ```javascript
 * import { mnemonicGenerate } from '@polkadot/util-crypto';
 *
 * const mnemonic = mnemonicGenerate(); // => string
 * ```
 */
function mnemonicGenerate() {
  var numWords = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 12;
  var onlyJs = arguments.length > 1 ? arguments[1] : undefined;
  return !_util.hasBigInt || !onlyJs && (0, _wasmCrypto.isReady)() ? (0, _wasmCrypto.bip39Generate)(numWords) : (0, _bip.generateMnemonic)(numWords);
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js","./bip39.js":"node_modules/@polkadot/util-crypto/mnemonic/bip39.js"}],"node_modules/@polkadot/util-crypto/mnemonic/toEntropy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mnemonicToEntropy = mnemonicToEntropy;

var _util = require("@polkadot/util");

var _wasmCrypto = require("@polkadot/wasm-crypto");

var _bip = require("./bip39.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
function mnemonicToEntropy(mnemonic, onlyJs) {
  return !_util.hasBigInt || !onlyJs && (0, _wasmCrypto.isReady)() ? (0, _wasmCrypto.bip39ToEntropy)(mnemonic) : (0, _bip.mnemonicToEntropy)(mnemonic);
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js","./bip39.js":"node_modules/@polkadot/util-crypto/mnemonic/bip39.js"}],"node_modules/@polkadot/util-crypto/mnemonic/validate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mnemonicValidate = mnemonicValidate;

var _util = require("@polkadot/util");

var _wasmCrypto = require("@polkadot/wasm-crypto");

var _bip = require("./bip39.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name mnemonicValidate
 * @summary Validates a mnemonic input using [BIP39](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki).
 * @example
 * <BR>
 *
 * ```javascript
 * import { mnemonicGenerate, mnemonicValidate } from '@polkadot/util-crypto';
 *
 * const mnemonic = mnemonicGenerate(); // => string
 * const isValidMnemonic = mnemonicValidate(mnemonic); // => boolean
 * ```
 */
function mnemonicValidate(mnemonic, onlyJs) {
  return !_util.hasBigInt || !onlyJs && (0, _wasmCrypto.isReady)() ? (0, _wasmCrypto.bip39Validate)(mnemonic) : (0, _bip.validateMnemonic)(mnemonic);
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js","./bip39.js":"node_modules/@polkadot/util-crypto/mnemonic/bip39.js"}],"node_modules/@polkadot/util-crypto/mnemonic/toLegacySeed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mnemonicToLegacySeed = mnemonicToLegacySeed;

var _util = require("@polkadot/util");

var _wasmCrypto = require("@polkadot/wasm-crypto");

var _bip = require("./bip39.js");

var _validate = require("./validate.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name mnemonicToLegacySeed
 * @summary Creates a valid Ethereum/Bitcoin-compatible seed from a mnemonic input
 * @example
 * <BR>
 *
 * ```javascript
 * import { mnemonicGenerate, mnemonicToLegacySeed, mnemonicValidate } from '@polkadot/util-crypto';
 *
 * const mnemonic = mnemonicGenerate(); // => string
 * const isValidMnemonic = mnemonicValidate(mnemonic); // => boolean
 *
 * if (isValidMnemonic) {
 *   console.log(`Seed generated from mnemonic: ${mnemonicToLegacySeed(mnemonic)}`); => u8a
 * }
 * ```
 */
function mnemonicToLegacySeed(mnemonic) {
  var password = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  var onlyJs = arguments.length > 2 ? arguments[2] : undefined;
  var byteLength = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 32;

  if (!(0, _validate.mnemonicValidate)(mnemonic)) {
    throw new Error('Invalid bip39 mnemonic specified');
  } else if (![32, 64].includes(byteLength)) {
    throw new Error("Invalid seed length ".concat(byteLength, ", expected 32 or 64"));
  }

  return byteLength === 32 ? !_util.hasBigInt || !onlyJs && (0, _wasmCrypto.isReady)() ? (0, _wasmCrypto.bip39ToSeed)(mnemonic, password) : (0, _bip.mnemonicToSeedSync)(mnemonic, password).subarray(0, 32) : (0, _bip.mnemonicToSeedSync)(mnemonic, password);
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js","./bip39.js":"node_modules/@polkadot/util-crypto/mnemonic/bip39.js","./validate.js":"node_modules/@polkadot/util-crypto/mnemonic/validate.js"}],"node_modules/@polkadot/util-crypto/mnemonic/toMiniSecret.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mnemonicToMiniSecret = mnemonicToMiniSecret;

var _util = require("@polkadot/util");

var _wasmCrypto = require("@polkadot/wasm-crypto");

var _index = require("../pbkdf2/index.js");

var _toEntropy = require("./toEntropy.js");

var _validate = require("./validate.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
function mnemonicToMiniSecret(mnemonic) {
  var password = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  var onlyJs = arguments.length > 2 ? arguments[2] : undefined;

  if (!(0, _validate.mnemonicValidate)(mnemonic)) {
    throw new Error('Invalid bip39 mnemonic specified');
  }

  if (!onlyJs && (0, _wasmCrypto.isReady)()) {
    return (0, _wasmCrypto.bip39ToMiniSecret)(mnemonic, password);
  }

  var entropy = (0, _toEntropy.mnemonicToEntropy)(mnemonic);
  var salt = (0, _util.stringToU8a)("mnemonic".concat(password)); // return the first 32 bytes as the seed

  return (0, _index.pbkdf2Encode)(entropy, salt).password.slice(0, 32);
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js","../pbkdf2/index.js":"node_modules/@polkadot/util-crypto/pbkdf2/index.js","./toEntropy.js":"node_modules/@polkadot/util-crypto/mnemonic/toEntropy.js","./validate.js":"node_modules/@polkadot/util-crypto/mnemonic/validate.js"}],"node_modules/@polkadot/util-crypto/mnemonic/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "mnemonicGenerate", {
  enumerable: true,
  get: function () {
    return _generate.mnemonicGenerate;
  }
});
Object.defineProperty(exports, "mnemonicToEntropy", {
  enumerable: true,
  get: function () {
    return _toEntropy.mnemonicToEntropy;
  }
});
Object.defineProperty(exports, "mnemonicToLegacySeed", {
  enumerable: true,
  get: function () {
    return _toLegacySeed.mnemonicToLegacySeed;
  }
});
Object.defineProperty(exports, "mnemonicToMiniSecret", {
  enumerable: true,
  get: function () {
    return _toMiniSecret.mnemonicToMiniSecret;
  }
});
Object.defineProperty(exports, "mnemonicValidate", {
  enumerable: true,
  get: function () {
    return _validate.mnemonicValidate;
  }
});

var _generate = require("./generate.js");

var _toEntropy = require("./toEntropy.js");

var _toLegacySeed = require("./toLegacySeed.js");

var _toMiniSecret = require("./toMiniSecret.js");

var _validate = require("./validate.js");
},{"./generate.js":"node_modules/@polkadot/util-crypto/mnemonic/generate.js","./toEntropy.js":"node_modules/@polkadot/util-crypto/mnemonic/toEntropy.js","./toLegacySeed.js":"node_modules/@polkadot/util-crypto/mnemonic/toLegacySeed.js","./toMiniSecret.js":"node_modules/@polkadot/util-crypto/mnemonic/toMiniSecret.js","./validate.js":"node_modules/@polkadot/util-crypto/mnemonic/validate.js"}],"node_modules/@polkadot/util-crypto/hd/ledger/derivePrivate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ledgerDerivePrivate = ledgerDerivePrivate;

var _util = require("@polkadot/util");

var _bn = require("../../bn.js");

var _index = require("../../hmac/index.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// performs hard-only derivation on the xprv
function ledgerDerivePrivate(xprv, index) {
  var kl = xprv.subarray(0, 32);
  var kr = xprv.subarray(32, 64);
  var cc = xprv.subarray(64, 96);
  var data = (0, _util.u8aConcat)([0], kl, kr, (0, _util.bnToU8a)(index, _bn.BN_LE_32_OPTS));
  var z = (0, _index.hmacShaAsU8a)(cc, data, 512);
  data[0] = 0x01;
  return (0, _util.u8aConcat)((0, _util.bnToU8a)((0, _util.u8aToBn)(kl, _bn.BN_LE_OPTS).iadd((0, _util.u8aToBn)(z.subarray(0, 28), _bn.BN_LE_OPTS).imul(_util.BN_EIGHT)), _bn.BN_LE_512_OPTS).subarray(0, 32), (0, _util.bnToU8a)((0, _util.u8aToBn)(kr, _bn.BN_LE_OPTS).iadd((0, _util.u8aToBn)(z.subarray(32, 64), _bn.BN_LE_OPTS)), _bn.BN_LE_512_OPTS).subarray(0, 32), (0, _index.hmacShaAsU8a)(cc, data, 512).subarray(32, 64));
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../../bn.js":"node_modules/@polkadot/util-crypto/bn.js","../../hmac/index.js":"node_modules/@polkadot/util-crypto/hmac/index.js"}],"node_modules/@polkadot/util-crypto/hd/ledger/master.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ledgerMaster = ledgerMaster;

var _util = require("@polkadot/util");

var _index = require("../../hmac/index.js");

var _bip = require("../../mnemonic/bip39.js");

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var ED25519_CRYPTO = 'ed25519 seed'; // gets an xprv from a mnemonic

function ledgerMaster(mnemonic, password) {
  var seed = (0, _bip.mnemonicToSeedSync)(mnemonic, password);
  var chainCode = (0, _index.hmacShaAsU8a)(ED25519_CRYPTO, new Uint8Array([1].concat(_toConsumableArray(seed))), 256);
  var priv;

  while (!priv || priv[31] & 32) {
    priv = (0, _index.hmacShaAsU8a)(ED25519_CRYPTO, priv || seed, 512);
  }

  priv[0] &= 248;
  priv[31] &= 127;
  priv[31] |= 64;
  return (0, _util.u8aConcat)(priv, chainCode);
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../../hmac/index.js":"node_modules/@polkadot/util-crypto/hmac/index.js","../../mnemonic/bip39.js":"node_modules/@polkadot/util-crypto/mnemonic/bip39.js"}],"node_modules/@polkadot/util-crypto/hd/ledger/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hdLedger = hdLedger;

var _util = require("@polkadot/util");

var _index = require("../../ed25519/index.js");

var _index2 = require("../../mnemonic/index.js");

var _validatePath = require("../validatePath.js");

var _derivePrivate = require("./derivePrivate.js");

var _master = require("./master.js");

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function hdLedger(_mnemonic, path) {
  var words = _mnemonic.split(' ').map(function (s) {
    return s.trim();
  }).filter(function (s) {
    return s;
  });

  (0, _util.assert)([12, 24, 25].includes(words.length), 'Expected a mnemonic with 24 words (or 25 including a password)');

  var _ref = words.length === 25 ? [words.slice(0, 24).join(' '), words[24]] : [words.join(' '), ''],
      _ref2 = _slicedToArray(_ref, 2),
      mnemonic = _ref2[0],
      password = _ref2[1];

  (0, _util.assert)((0, _index2.mnemonicValidate)(mnemonic), 'Invalid mnemonic passed to ledger derivation');
  (0, _util.assert)((0, _validatePath.hdValidatePath)(path), 'Invalid derivation path');
  var parts = path.split('/').slice(1);
  var seed = (0, _master.ledgerMaster)(mnemonic, password);

  var _iterator = _createForOfIteratorHelper(parts),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var p = _step.value;
      var n = parseInt(p.replace(/'$/, ''), 10);
      seed = (0, _derivePrivate.ledgerDerivePrivate)(seed, n < _validatePath.HARDENED ? n + _validatePath.HARDENED : n);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  return (0, _index.ed25519PairFromSeed)(seed.slice(0, 32));
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../../ed25519/index.js":"node_modules/@polkadot/util-crypto/ed25519/index.js","../../mnemonic/index.js":"node_modules/@polkadot/util-crypto/mnemonic/index.js","../validatePath.js":"node_modules/@polkadot/util-crypto/hd/validatePath.js","./derivePrivate.js":"node_modules/@polkadot/util-crypto/hd/ledger/derivePrivate.js","./master.js":"node_modules/@polkadot/util-crypto/hd/ledger/master.js"}],"node_modules/@polkadot/util-crypto/hd/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "hdEthereum", {
  enumerable: true,
  get: function () {
    return _index.hdEthereum;
  }
});
Object.defineProperty(exports, "hdLedger", {
  enumerable: true,
  get: function () {
    return _index2.hdLedger;
  }
});
Object.defineProperty(exports, "hdValidatePath", {
  enumerable: true,
  get: function () {
    return _validatePath.hdValidatePath;
  }
});

var _index = require("./ethereum/index.js");

var _index2 = require("./ledger/index.js");

var _validatePath = require("./validatePath.js");
},{"./ethereum/index.js":"node_modules/@polkadot/util-crypto/hd/ethereum/index.js","./ledger/index.js":"node_modules/@polkadot/util-crypto/hd/ledger/index.js","./validatePath.js":"node_modules/@polkadot/util-crypto/hd/validatePath.js"}],"node_modules/@polkadot/util-crypto/nacl/decrypt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.naclDecrypt = naclDecrypt;

var _tweetnacl = _interopRequireDefault(require("tweetnacl"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name naclDecrypt
 * @summary Decrypts a message using the supplied secretKey and nonce
 * @description
 * Returns an decrypted message, using the `secret` and `nonce`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { naclDecrypt } from '@polkadot/util-crypto';
 *
 * naclDecrypt([...], [...], [...]); // => [...]
 * ```
 */
function naclDecrypt(encrypted, nonce, secret) {
  return _tweetnacl.default.secretbox.open(encrypted, nonce, secret) || null;
}
},{"tweetnacl":"node_modules/tweetnacl/nacl-fast.js"}],"node_modules/@polkadot/util-crypto/nacl/encrypt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.naclEncrypt = naclEncrypt;

var _tweetnacl = _interopRequireDefault(require("tweetnacl"));

var _asU8a = require("../random/asU8a.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name naclEncrypt
 * @summary Encrypts a message using the supplied secretKey and nonce
 * @description
 * Returns an encrypted message, using the `secretKey` and `nonce`. If the `nonce` was not supplied, a random value is generated.
 * @example
 * <BR>
 *
 * ```javascript
 * import { naclEncrypt } from '@polkadot/util-crypto';
 *
 * naclEncrypt([...], [...]); // => [...]
 * ```
 */
function naclEncrypt(message, secret) {
  var nonce = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : (0, _asU8a.randomAsU8a)(24);
  return {
    encrypted: _tweetnacl.default.secretbox(message, nonce, secret),
    nonce: nonce
  };
}
},{"tweetnacl":"node_modules/tweetnacl/nacl-fast.js","../random/asU8a.js":"node_modules/@polkadot/util-crypto/random/asU8a.js"}],"node_modules/@polkadot/util-crypto/nacl/box/fromSecret.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.naclBoxPairFromSecret = naclBoxPairFromSecret;

var _tweetnacl = _interopRequireDefault(require("tweetnacl"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name naclBoxPairFromSecret
 * @summary Creates a new public/secret box keypair from a secret.
 * @description
 * Returns a object containing a box `publicKey` & `secretKey` generated from the supplied secret.
 * @example
 * <BR>
 *
 * ```javascript
 * import { naclBoxPairFromSecret } from '@polkadot/util-crypto';
 *
 * naclBoxPairFromSecret(...); // => { secretKey: [...], publicKey: [...] }
 * ```
 */
function naclBoxPairFromSecret(secret) {
  return _tweetnacl.default.box.keyPair.fromSecretKey(secret.slice(0, 32));
}
},{"tweetnacl":"node_modules/tweetnacl/nacl-fast.js"}],"node_modules/@polkadot/util-crypto/nacl/open.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.naclOpen = naclOpen;

var _tweetnacl = _interopRequireDefault(require("tweetnacl"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name naclOpen
 * @summary Opens a message using the receiver's secretKey and nonce
 * @description
 * Returns a message sealed by the sender, using the receiver's `secret` and `nonce`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { naclOpen } from '@polkadot/util-crypto';
 *
 * naclOpen([...], [...], [...]); // => [...]
 * ```
 */
function naclOpen(sealed, nonce, senderBoxPublic, receiverBoxSecret) {
  return _tweetnacl.default.box.open(sealed, nonce, senderBoxPublic, receiverBoxSecret) || null;
}
},{"tweetnacl":"node_modules/tweetnacl/nacl-fast.js"}],"node_modules/@polkadot/util-crypto/nacl/seal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.naclSeal = naclSeal;

var _tweetnacl = _interopRequireDefault(require("tweetnacl"));

var _asU8a = require("../random/asU8a.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name naclSeal
 * @summary Seals a message using the sender's encrypting secretKey, receiver's public key, and nonce
 * @description
 * Returns an encrypted message which can be open only by receiver's secretKey. If the `nonce` was not supplied, a random value is generated.
 * @example
 * <BR>
 *
 * ```javascript
 * import { naclSeal } from '@polkadot/util-crypto';
 *
 * naclSeal([...], [...], [...], [...]); // => [...]
 * ```
 */
function naclSeal(message, senderBoxSecret, receiverBoxPublic) {
  var nonce = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : (0, _asU8a.randomAsU8a)(24);
  return {
    nonce: nonce,
    sealed: _tweetnacl.default.box(message, nonce, receiverBoxPublic, senderBoxSecret)
  };
}
},{"tweetnacl":"node_modules/tweetnacl/nacl-fast.js","../random/asU8a.js":"node_modules/@polkadot/util-crypto/random/asU8a.js"}],"node_modules/@polkadot/util-crypto/nacl/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "naclBoxPairFromSecret", {
  enumerable: true,
  get: function () {
    return _fromSecret.naclBoxPairFromSecret;
  }
});
Object.defineProperty(exports, "naclDecrypt", {
  enumerable: true,
  get: function () {
    return _decrypt.naclDecrypt;
  }
});
Object.defineProperty(exports, "naclEncrypt", {
  enumerable: true,
  get: function () {
    return _encrypt.naclEncrypt;
  }
});
Object.defineProperty(exports, "naclOpen", {
  enumerable: true,
  get: function () {
    return _open.naclOpen;
  }
});
Object.defineProperty(exports, "naclSeal", {
  enumerable: true,
  get: function () {
    return _seal.naclSeal;
  }
});

var _decrypt = require("./decrypt.js");

var _encrypt = require("./encrypt.js");

var _fromSecret = require("./box/fromSecret.js");

var _open = require("./open.js");

var _seal = require("./seal.js");
},{"./decrypt.js":"node_modules/@polkadot/util-crypto/nacl/decrypt.js","./encrypt.js":"node_modules/@polkadot/util-crypto/nacl/encrypt.js","./box/fromSecret.js":"node_modules/@polkadot/util-crypto/nacl/box/fromSecret.js","./open.js":"node_modules/@polkadot/util-crypto/nacl/open.js","./seal.js":"node_modules/@polkadot/util-crypto/nacl/seal.js"}],"node_modules/@noble/hashes/scrypt.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.scryptAsync = exports.scrypt = void 0;
const _assert_js_1 = require("./_assert.js");
const sha256_js_1 = require("./sha256.js");
const pbkdf2_js_1 = require("./pbkdf2.js");
const utils_js_1 = require("./utils.js");
// RFC 7914 Scrypt KDF
// Left rotate for uint32
const rotl = (a, b) => (a << b) | (a >>> (32 - b));
// The main Scrypt loop: uses Salsa extensively.
// Six versions of the function were tried, this is the fastest one.
// prettier-ignore
function XorAndSalsa(prev, pi, input, ii, out, oi) {
    // Based on https://cr.yp.to/salsa20.html
    // Xor blocks
    let y00 = prev[pi++] ^ input[ii++], y01 = prev[pi++] ^ input[ii++];
    let y02 = prev[pi++] ^ input[ii++], y03 = prev[pi++] ^ input[ii++];
    let y04 = prev[pi++] ^ input[ii++], y05 = prev[pi++] ^ input[ii++];
    let y06 = prev[pi++] ^ input[ii++], y07 = prev[pi++] ^ input[ii++];
    let y08 = prev[pi++] ^ input[ii++], y09 = prev[pi++] ^ input[ii++];
    let y10 = prev[pi++] ^ input[ii++], y11 = prev[pi++] ^ input[ii++];
    let y12 = prev[pi++] ^ input[ii++], y13 = prev[pi++] ^ input[ii++];
    let y14 = prev[pi++] ^ input[ii++], y15 = prev[pi++] ^ input[ii++];
    // Save state to temporary variables (salsa)
    let x00 = y00, x01 = y01, x02 = y02, x03 = y03, x04 = y04, x05 = y05, x06 = y06, x07 = y07, x08 = y08, x09 = y09, x10 = y10, x11 = y11, x12 = y12, x13 = y13, x14 = y14, x15 = y15;
    // Main loop (salsa)
    for (let i = 0; i < 8; i += 2) {
        x04 ^= rotl(x00 + x12 | 0, 7);
        x08 ^= rotl(x04 + x00 | 0, 9);
        x12 ^= rotl(x08 + x04 | 0, 13);
        x00 ^= rotl(x12 + x08 | 0, 18);
        x09 ^= rotl(x05 + x01 | 0, 7);
        x13 ^= rotl(x09 + x05 | 0, 9);
        x01 ^= rotl(x13 + x09 | 0, 13);
        x05 ^= rotl(x01 + x13 | 0, 18);
        x14 ^= rotl(x10 + x06 | 0, 7);
        x02 ^= rotl(x14 + x10 | 0, 9);
        x06 ^= rotl(x02 + x14 | 0, 13);
        x10 ^= rotl(x06 + x02 | 0, 18);
        x03 ^= rotl(x15 + x11 | 0, 7);
        x07 ^= rotl(x03 + x15 | 0, 9);
        x11 ^= rotl(x07 + x03 | 0, 13);
        x15 ^= rotl(x11 + x07 | 0, 18);
        x01 ^= rotl(x00 + x03 | 0, 7);
        x02 ^= rotl(x01 + x00 | 0, 9);
        x03 ^= rotl(x02 + x01 | 0, 13);
        x00 ^= rotl(x03 + x02 | 0, 18);
        x06 ^= rotl(x05 + x04 | 0, 7);
        x07 ^= rotl(x06 + x05 | 0, 9);
        x04 ^= rotl(x07 + x06 | 0, 13);
        x05 ^= rotl(x04 + x07 | 0, 18);
        x11 ^= rotl(x10 + x09 | 0, 7);
        x08 ^= rotl(x11 + x10 | 0, 9);
        x09 ^= rotl(x08 + x11 | 0, 13);
        x10 ^= rotl(x09 + x08 | 0, 18);
        x12 ^= rotl(x15 + x14 | 0, 7);
        x13 ^= rotl(x12 + x15 | 0, 9);
        x14 ^= rotl(x13 + x12 | 0, 13);
        x15 ^= rotl(x14 + x13 | 0, 18);
    }
    // Write output (salsa)
    out[oi++] = (y00 + x00) | 0;
    out[oi++] = (y01 + x01) | 0;
    out[oi++] = (y02 + x02) | 0;
    out[oi++] = (y03 + x03) | 0;
    out[oi++] = (y04 + x04) | 0;
    out[oi++] = (y05 + x05) | 0;
    out[oi++] = (y06 + x06) | 0;
    out[oi++] = (y07 + x07) | 0;
    out[oi++] = (y08 + x08) | 0;
    out[oi++] = (y09 + x09) | 0;
    out[oi++] = (y10 + x10) | 0;
    out[oi++] = (y11 + x11) | 0;
    out[oi++] = (y12 + x12) | 0;
    out[oi++] = (y13 + x13) | 0;
    out[oi++] = (y14 + x14) | 0;
    out[oi++] = (y15 + x15) | 0;
}
function BlockMix(input, ii, out, oi, r) {
    // The block B is r 128-byte chunks (which is equivalent of 2r 64-byte chunks)
    let head = oi + 0;
    let tail = oi + 16 * r;
    for (let i = 0; i < 16; i++)
        out[tail + i] = input[ii + (2 * r - 1) * 16 + i]; // X â B[2râ1]
    for (let i = 0; i < r; i++, head += 16, ii += 16) {
        // We write odd & even Yi at same time. Even: 0bXXXXX0 Odd:  0bXXXXX1
        XorAndSalsa(out, tail, input, ii, out, head); // head[i] = Salsa(blockIn[2*i] ^ tail[i-1])
        if (i > 0)
            tail += 16; // First iteration overwrites tmp value in tail
        XorAndSalsa(out, head, input, (ii += 16), out, tail); // tail[i] = Salsa(blockIn[2*i+1] ^ head[i])
    }
}
// Common prologue and epilogue for sync/async functions
function scryptInit(password, salt, _opts) {
    // Maxmem - 1GB+1KB by default
    const opts = (0, utils_js_1.checkOpts)({
        dkLen: 32,
        asyncTick: 10,
        maxmem: 1024 ** 3 + 1024,
    }, _opts);
    const { N, r, p, dkLen, asyncTick, maxmem, onProgress } = opts;
    _assert_js_1.default.number(N);
    _assert_js_1.default.number(r);
    _assert_js_1.default.number(p);
    _assert_js_1.default.number(dkLen);
    _assert_js_1.default.number(asyncTick);
    _assert_js_1.default.number(maxmem);
    if (onProgress !== undefined && typeof onProgress !== 'function')
        throw new Error('progressCb should be function');
    const blockSize = 128 * r;
    const blockSize32 = blockSize / 4;
    if (N <= 1 || (N & (N - 1)) !== 0 || N >= 2 ** (blockSize / 8) || N > 2 ** 32) {
        // NOTE: we limit N to be less than 2**32 because of 32 bit variant of Integrify function
        // There is no JS engines that allows alocate more than 4GB per single Uint8Array for now, but can change in future.
        throw new Error('Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32');
    }
    if (p < 0 || p > ((2 ** 32 - 1) * 32) / blockSize) {
        throw new Error('Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)');
    }
    if (dkLen < 0 || dkLen > (2 ** 32 - 1) * 32) {
        throw new Error('Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32');
    }
    const memUsed = blockSize * (N + p);
    if (memUsed > maxmem) {
        throw new Error(`Scrypt: parameters too large, ${memUsed} (128 * r * (N + p)) > ${maxmem} (maxmem)`);
    }
    // [B0...Bpâ1] â PBKDF2HMAC-SHA256(Passphrase, Salt, 1, blockSize*ParallelizationFactor)
    // Since it has only one iteration there is no reason to use async variant
    const B = (0, pbkdf2_js_1.pbkdf2)(sha256_js_1.sha256, password, salt, { c: 1, dkLen: blockSize * p });
    const B32 = (0, utils_js_1.u32)(B);
    // Re-used between parallel iterations. Array(iterations) of B
    const V = (0, utils_js_1.u32)(new Uint8Array(blockSize * N));
    const tmp = (0, utils_js_1.u32)(new Uint8Array(blockSize));
    let blockMixCb = () => { };
    if (onProgress) {
        const totalBlockMix = 2 * N * p;
        // Invoke callback if progress changes from 10.01 to 10.02
        // Allows to draw smooth progress bar on up to 8K screen
        const callbackPer = Math.max(Math.floor(totalBlockMix / 10000), 1);
        let blockMixCnt = 0;
        blockMixCb = () => {
            blockMixCnt++;
            if (onProgress && (!(blockMixCnt % callbackPer) || blockMixCnt === totalBlockMix))
                onProgress(blockMixCnt / totalBlockMix);
        };
    }
    return { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick };
}
function scryptOutput(password, dkLen, B, V, tmp) {
    const res = (0, pbkdf2_js_1.pbkdf2)(sha256_js_1.sha256, password, B, { c: 1, dkLen });
    B.fill(0);
    V.fill(0);
    tmp.fill(0);
    return res;
}
/**
 * Scrypt KDF from RFC 7914.
 * @param password - pass
 * @param salt - salt
 * @param opts - parameters
 * - `N` is cpu/mem work factor (power of 2 e.g. 2**18)
 * - `r` is block size (8 is common), fine-tunes sequential memory read size and performance
 * - `p` is parallelization factor (1 is common)
 * - `dkLen` is output key length in bytes e.g. 32.
 * - `asyncTick` - (default: 10) max time in ms for which async function can block execution
 * - `maxmem` - (default: `1024 ** 3 + 1024` aka 1GB+1KB). A limit that the app could use for scrypt
 * - `onProgress` - callback function that would be executed for progress report
 * @returns Derived key
 */
function scrypt(password, salt, opts) {
    const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb } = scryptInit(password, salt, opts);
    for (let pi = 0; pi < p; pi++) {
        const Pi = blockSize32 * pi;
        for (let i = 0; i < blockSize32; i++)
            V[i] = B32[Pi + i]; // V[0] = B[i]
        for (let i = 0, pos = 0; i < N - 1; i++) {
            BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);
            blockMixCb();
        }
        BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element
        blockMixCb();
        for (let i = 0; i < N; i++) {
            // First u32 of the last 64-byte block (u32 is LE)
            const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations
            for (let k = 0; k < blockSize32; k++)
                tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]
            BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])
            blockMixCb();
        }
    }
    return scryptOutput(password, dkLen, B, V, tmp);
}
exports.scrypt = scrypt;
/**
 * Scrypt KDF from RFC 7914.
 */
async function scryptAsync(password, salt, opts) {
    const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick } = scryptInit(password, salt, opts);
    for (let pi = 0; pi < p; pi++) {
        const Pi = blockSize32 * pi;
        for (let i = 0; i < blockSize32; i++)
            V[i] = B32[Pi + i]; // V[0] = B[i]
        let pos = 0;
        await (0, utils_js_1.asyncLoop)(N - 1, asyncTick, (i) => {
            BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);
            blockMixCb();
        });
        BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element
        blockMixCb();
        await (0, utils_js_1.asyncLoop)(N, asyncTick, (i) => {
            // First u32 of the last 64-byte block (u32 is LE)
            const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations
            for (let k = 0; k < blockSize32; k++)
                tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]
            BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])
            blockMixCb();
        });
    }
    return scryptOutput(password, dkLen, B, V, tmp);
}
exports.scryptAsync = scryptAsync;

},{"./_assert.js":"node_modules/@noble/hashes/_assert.js","./sha256.js":"node_modules/@noble/hashes/sha256.js","./pbkdf2.js":"node_modules/@noble/hashes/pbkdf2.js","./utils.js":"node_modules/@noble/hashes/utils.js"}],"node_modules/@polkadot/util-crypto/scrypt/defaults.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DEFAULT_PARAMS = void 0;
// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
var DEFAULT_PARAMS = {
  N: 1 << 15,
  p: 1,
  r: 8
};
exports.DEFAULT_PARAMS = DEFAULT_PARAMS;
},{}],"node_modules/@polkadot/util-crypto/scrypt/encode.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.scryptEncode = scryptEncode;

var _scrypt = require("@noble/hashes/scrypt");

var _util = require("@polkadot/util");

var _wasmCrypto = require("@polkadot/wasm-crypto");

var _asU8a = require("../random/asU8a.js");

var _defaults = require("./defaults.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
function scryptEncode(passphrase) {
  var salt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, _asU8a.randomAsU8a)();
  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _defaults.DEFAULT_PARAMS;
  var onlyJs = arguments.length > 3 ? arguments[3] : undefined;
  var u8a = (0, _util.u8aToU8a)(passphrase);
  return {
    params: params,
    password: !_util.hasBigInt || !onlyJs && (0, _wasmCrypto.isReady)() ? (0, _wasmCrypto.scrypt)(u8a, salt, Math.log2(params.N), params.r, params.p) : (0, _scrypt.scrypt)(u8a, salt, (0, _util.objectSpread)({
      dkLen: 64
    }, params)),
    salt: salt
  };
}
},{"@noble/hashes/scrypt":"node_modules/@noble/hashes/scrypt.js","@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js","../random/asU8a.js":"node_modules/@polkadot/util-crypto/random/asU8a.js","./defaults.js":"node_modules/@polkadot/util-crypto/scrypt/defaults.js"}],"node_modules/@polkadot/util-crypto/scrypt/fromU8a.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.scryptFromU8a = scryptFromU8a;

var _util = require("@polkadot/util");

var _bn = require("../bn.js");

var _defaults = require("./defaults.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
function scryptFromU8a(data) {
  var salt = data.subarray(0, 32);
  var N = (0, _util.u8aToBn)(data.subarray(32 + 0, 32 + 4), _bn.BN_LE_OPTS).toNumber();
  var p = (0, _util.u8aToBn)(data.subarray(32 + 4, 32 + 8), _bn.BN_LE_OPTS).toNumber();
  var r = (0, _util.u8aToBn)(data.subarray(32 + 8, 32 + 12), _bn.BN_LE_OPTS).toNumber(); // FIXME At this moment we assume these to be fixed params, this is not a great idea since we lose flexibility
  // and updates for greater security. However we need some protection against carefully-crafted params that can
  // eat up CPU since these are user inputs. So we need to get very clever here, but atm we only allow the defaults
  // and if no match, bail out

  if (N !== _defaults.DEFAULT_PARAMS.N || p !== _defaults.DEFAULT_PARAMS.p || r !== _defaults.DEFAULT_PARAMS.r) {
    throw new Error('Invalid injected scrypt params found');
  }

  return {
    params: {
      N: N,
      p: p,
      r: r
    },
    salt: salt
  };
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../bn.js":"node_modules/@polkadot/util-crypto/bn.js","./defaults.js":"node_modules/@polkadot/util-crypto/scrypt/defaults.js"}],"node_modules/@polkadot/util-crypto/scrypt/toU8a.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.scryptToU8a = scryptToU8a;

var _util = require("@polkadot/util");

var _bn = require("../bn.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
function scryptToU8a(salt, _ref) {
  var N = _ref.N,
      p = _ref.p,
      r = _ref.r;
  return (0, _util.u8aConcat)(salt, (0, _util.bnToU8a)(N, _bn.BN_LE_32_OPTS), (0, _util.bnToU8a)(p, _bn.BN_LE_32_OPTS), (0, _util.bnToU8a)(r, _bn.BN_LE_32_OPTS));
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../bn.js":"node_modules/@polkadot/util-crypto/bn.js"}],"node_modules/@polkadot/util-crypto/scrypt/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "scryptEncode", {
  enumerable: true,
  get: function () {
    return _encode.scryptEncode;
  }
});
Object.defineProperty(exports, "scryptFromU8a", {
  enumerable: true,
  get: function () {
    return _fromU8a.scryptFromU8a;
  }
});
Object.defineProperty(exports, "scryptToU8a", {
  enumerable: true,
  get: function () {
    return _toU8a.scryptToU8a;
  }
});

var _encode = require("./encode.js");

var _fromU8a = require("./fromU8a.js");

var _toU8a = require("./toU8a.js");
},{"./encode.js":"node_modules/@polkadot/util-crypto/scrypt/encode.js","./fromU8a.js":"node_modules/@polkadot/util-crypto/scrypt/fromU8a.js","./toU8a.js":"node_modules/@polkadot/util-crypto/scrypt/toU8a.js"}],"node_modules/@polkadot/util-crypto/json/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SCRYPT_LENGTH = exports.NONCE_LENGTH = exports.ENCODING_VERSION = exports.ENCODING_NONE = exports.ENCODING = void 0;
// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
var ENCODING = ['scrypt', 'xsalsa20-poly1305'];
exports.ENCODING = ENCODING;
var ENCODING_NONE = ['none'];
exports.ENCODING_NONE = ENCODING_NONE;
var ENCODING_VERSION = '3';
exports.ENCODING_VERSION = ENCODING_VERSION;
var NONCE_LENGTH = 24;
exports.NONCE_LENGTH = NONCE_LENGTH;
var SCRYPT_LENGTH = 32 + 3 * 4;
exports.SCRYPT_LENGTH = SCRYPT_LENGTH;
},{}],"node_modules/@polkadot/util-crypto/json/decryptData.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.jsonDecryptData = jsonDecryptData;

var _util = require("@polkadot/util");

var _index = require("../nacl/index.js");

var _index2 = require("../scrypt/index.js");

var _constants = require("./constants.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
function jsonDecryptData(encrypted, passphrase) {
  var encType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants.ENCODING;
  (0, _util.assert)(encrypted, 'No encrypted data available to decode');
  (0, _util.assert)(passphrase || !encType.includes('xsalsa20-poly1305'), 'Password required to decode encrypted data');
  var encoded = encrypted;

  if (passphrase) {
    var password;

    if (encType.includes('scrypt')) {
      var _scryptFromU8a = (0, _index2.scryptFromU8a)(encrypted),
          params = _scryptFromU8a.params,
          salt = _scryptFromU8a.salt;

      password = (0, _index2.scryptEncode)(passphrase, salt, params).password;
      encrypted = encrypted.subarray(_constants.SCRYPT_LENGTH);
    } else {
      password = (0, _util.stringToU8a)(passphrase);
    }

    encoded = (0, _index.naclDecrypt)(encrypted.subarray(_constants.NONCE_LENGTH), encrypted.subarray(0, _constants.NONCE_LENGTH), (0, _util.u8aFixLength)(password, 256, true));
  }

  (0, _util.assert)(encoded, 'Unable to decode using the supplied passphrase');
  return encoded;
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../nacl/index.js":"node_modules/@polkadot/util-crypto/nacl/index.js","../scrypt/index.js":"node_modules/@polkadot/util-crypto/scrypt/index.js","./constants.js":"node_modules/@polkadot/util-crypto/json/constants.js"}],"node_modules/@polkadot/util-crypto/json/decrypt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.jsonDecrypt = jsonDecrypt;

var _util = require("@polkadot/util");

var _index = require("../base64/index.js");

var _decryptData = require("./decryptData.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
function jsonDecrypt(_ref, passphrase) {
  var encoded = _ref.encoded,
      encoding = _ref.encoding;
  (0, _util.assert)(encoded, 'No encrypted data available to decode');
  return (0, _decryptData.jsonDecryptData)((0, _util.isHex)(encoded) ? (0, _util.hexToU8a)(encoded) : (0, _index.base64Decode)(encoded), passphrase, Array.isArray(encoding.type) ? encoding.type : [encoding.type]);
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../base64/index.js":"node_modules/@polkadot/util-crypto/base64/index.js","./decryptData.js":"node_modules/@polkadot/util-crypto/json/decryptData.js"}],"node_modules/@polkadot/util-crypto/json/encryptFormat.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.jsonEncryptFormat = jsonEncryptFormat;

var _index = require("../base64/index.js");

var _constants = require("./constants.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
function jsonEncryptFormat(encoded, contentType, isEncrypted) {
  return {
    encoded: (0, _index.base64Encode)(encoded),
    encoding: {
      content: contentType,
      type: isEncrypted ? _constants.ENCODING : _constants.ENCODING_NONE,
      version: _constants.ENCODING_VERSION
    }
  };
}
},{"../base64/index.js":"node_modules/@polkadot/util-crypto/base64/index.js","./constants.js":"node_modules/@polkadot/util-crypto/json/constants.js"}],"node_modules/@polkadot/util-crypto/json/encrypt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.jsonEncrypt = jsonEncrypt;

var _util = require("@polkadot/util");

var _index = require("../nacl/index.js");

var _index2 = require("../scrypt/index.js");

var _encryptFormat = require("./encryptFormat.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
function jsonEncrypt(data, contentType, passphrase) {
  var isEncrypted = false;
  var encoded = data;

  if (passphrase) {
    var _scryptEncode = (0, _index2.scryptEncode)(passphrase),
        params = _scryptEncode.params,
        password = _scryptEncode.password,
        salt = _scryptEncode.salt;

    var _naclEncrypt = (0, _index.naclEncrypt)(encoded, password.subarray(0, 32)),
        encrypted = _naclEncrypt.encrypted,
        nonce = _naclEncrypt.nonce;

    isEncrypted = true;
    encoded = (0, _util.u8aConcat)((0, _index2.scryptToU8a)(salt, params), nonce, encrypted);
  }

  return (0, _encryptFormat.jsonEncryptFormat)(encoded, contentType, isEncrypted);
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../nacl/index.js":"node_modules/@polkadot/util-crypto/nacl/index.js","../scrypt/index.js":"node_modules/@polkadot/util-crypto/scrypt/index.js","./encryptFormat.js":"node_modules/@polkadot/util-crypto/json/encryptFormat.js"}],"node_modules/@polkadot/util-crypto/json/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "jsonDecrypt", {
  enumerable: true,
  get: function () {
    return _decrypt.jsonDecrypt;
  }
});
Object.defineProperty(exports, "jsonDecryptData", {
  enumerable: true,
  get: function () {
    return _decryptData.jsonDecryptData;
  }
});
Object.defineProperty(exports, "jsonEncrypt", {
  enumerable: true,
  get: function () {
    return _encrypt.jsonEncrypt;
  }
});
Object.defineProperty(exports, "jsonEncryptFormat", {
  enumerable: true,
  get: function () {
    return _encryptFormat.jsonEncryptFormat;
  }
});

var _decrypt = require("./decrypt.js");

var _decryptData = require("./decryptData.js");

var _encrypt = require("./encrypt.js");

var _encryptFormat = require("./encryptFormat.js");
},{"./decrypt.js":"node_modules/@polkadot/util-crypto/json/decrypt.js","./decryptData.js":"node_modules/@polkadot/util-crypto/json/decryptData.js","./encrypt.js":"node_modules/@polkadot/util-crypto/json/encrypt.js","./encryptFormat.js":"node_modules/@polkadot/util-crypto/json/encryptFormat.js"}],"node_modules/@polkadot/util-crypto/signature/verify.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.signatureVerify = signatureVerify;

var _util = require("@polkadot/util");

var _decode = require("../address/decode.js");

var _verify = require("../ed25519/verify.js");

var _verify2 = require("../secp256k1/verify.js");

var _verify3 = require("../sr25519/verify.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var secp256k1VerifyHasher = function secp256k1VerifyHasher(hashType) {
  return function (message, signature, publicKey) {
    return (0, _verify2.secp256k1Verify)(message, signature, publicKey, hashType);
  };
};

var VERIFIERS_ECDSA = [['ecdsa', secp256k1VerifyHasher('blake2')], ['ethereum', secp256k1VerifyHasher('keccak')]];
var VERIFIERS = [['ed25519', _verify.ed25519Verify], ['sr25519', _verify3.sr25519Verify]].concat(VERIFIERS_ECDSA);
var CRYPTO_TYPES = ['ed25519', 'sr25519', 'ecdsa'];

function verifyDetect(result, _ref) {
  var message = _ref.message,
      publicKey = _ref.publicKey,
      signature = _ref.signature;
  var verifiers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : VERIFIERS;
  result.isValid = verifiers.some(function (_ref2) {
    var _ref3 = _slicedToArray(_ref2, 2),
        crypto = _ref3[0],
        verify = _ref3[1];

    try {
      if (verify(message, signature, publicKey)) {
        result.crypto = crypto;
        return true;
      }
    } catch (error) {// do nothing, result.isValid still set to false
    }

    return false;
  });
  return result;
}

function verifyMultisig(result, _ref4) {
  var message = _ref4.message,
      publicKey = _ref4.publicKey,
      signature = _ref4.signature;

  if (![0, 1, 2].includes(signature[0])) {
    throw new Error("Unknown crypto type, expected signature prefix [0..2], found ".concat(signature[0]));
  }

  var type = CRYPTO_TYPES[signature[0]] || 'none';
  result.crypto = type;

  try {
    result.isValid = {
      ecdsa: function ecdsa() {
        return verifyDetect(result, {
          message: message,
          publicKey: publicKey,
          signature: signature.subarray(1)
        }, VERIFIERS_ECDSA).isValid;
      },
      ed25519: function ed25519() {
        return (0, _verify.ed25519Verify)(message, signature.subarray(1), publicKey);
      },
      none: function none() {
        throw Error('no verify for `none` crypto type');
      },
      sr25519: function sr25519() {
        return (0, _verify3.sr25519Verify)(message, signature.subarray(1), publicKey);
      }
    }[type]();
  } catch (error) {// ignore, result.isValid still set to false
  }

  return result;
}

function getVerifyFn(signature) {
  return [0, 1, 2].includes(signature[0]) && [65, 66].includes(signature.length) ? verifyMultisig : verifyDetect;
}

function signatureVerify(message, signature, addressOrPublicKey) {
  var signatureU8a = (0, _util.u8aToU8a)(signature);

  if (![64, 65, 66].includes(signatureU8a.length)) {
    throw new Error("Invalid signature length, expected [64..66] bytes, found ".concat(signatureU8a.length));
  }

  var publicKey = (0, _decode.decodeAddress)(addressOrPublicKey);
  var input = {
    message: (0, _util.u8aToU8a)(message),
    publicKey: publicKey,
    signature: signatureU8a
  };
  var result = {
    crypto: 'none',
    isValid: false,
    isWrapped: (0, _util.u8aIsWrapped)(input.message, true),
    publicKey: publicKey
  };
  var isWrappedBytes = (0, _util.u8aIsWrapped)(input.message, false);
  var verifyFn = getVerifyFn(signatureU8a);
  verifyFn(result, input);

  if (result.crypto !== 'none' || result.isWrapped && !isWrappedBytes) {
    return result;
  }

  input.message = isWrappedBytes ? (0, _util.u8aUnwrapBytes)(input.message) : (0, _util.u8aWrapBytes)(input.message);
  return verifyFn(result, input);
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../address/decode.js":"node_modules/@polkadot/util-crypto/address/decode.js","../ed25519/verify.js":"node_modules/@polkadot/util-crypto/ed25519/verify.js","../secp256k1/verify.js":"node_modules/@polkadot/util-crypto/secp256k1/verify.js","../sr25519/verify.js":"node_modules/@polkadot/util-crypto/sr25519/verify.js"}],"node_modules/@polkadot/util-crypto/signature/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "signatureVerify", {
  enumerable: true,
  get: function () {
    return _verify.signatureVerify;
  }
});

var _verify = require("./verify.js");
},{"./verify.js":"node_modules/@polkadot/util-crypto/signature/verify.js"}],"node_modules/@polkadot/util-crypto/xxhash/xxhash64.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.xxhash64 = xxhash64;

var _util = require("@polkadot/util");

var _xBigint = require("@polkadot/x-bigint");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Adapted from https://github.com/pierrec/js-xxhash/blob/0504e76f3d31a21ae8528a7f590c7289c9e431d2/lib/xxhash64.js
//
// xxHash64 implementation in pure Javascript
// Copyright (C) 2016, Pierre Curto
// MIT license
//
// Changes made:
//   - converted to TypeScript
//   - uses native JS BigInt (no external dependencies)
//   - support only for Uint8Array inputs
//   - no constructor function, straight fill & digest
//   - update code removed, only called once, no streams
var P64_1 = (0, _xBigint.BigInt)('11400714785074694791');
var P64_2 = (0, _xBigint.BigInt)('14029467366897019727');
var P64_3 = (0, _xBigint.BigInt)('1609587929392839161');
var P64_4 = (0, _xBigint.BigInt)('9650029242287828579');
var P64_5 = (0, _xBigint.BigInt)('2870177450012600261'); // mask for a u64, all bits set

var U64 = (0, _xBigint.BigInt)('0xffffffffffffffff'); // various constants

var _7n = (0, _xBigint.BigInt)(7);

var _11n = (0, _xBigint.BigInt)(11);

var _12n = (0, _xBigint.BigInt)(12);

var _16n = (0, _xBigint.BigInt)(16);

var _18n = (0, _xBigint.BigInt)(18);

var _23n = (0, _xBigint.BigInt)(23);

var _27n = (0, _xBigint.BigInt)(27);

var _29n = (0, _xBigint.BigInt)(29);

var _31n = (0, _xBigint.BigInt)(31);

var _32n = (0, _xBigint.BigInt)(32);

var _33n = (0, _xBigint.BigInt)(33);

var _64n = (0, _xBigint.BigInt)(64);

var _256n = (0, _xBigint.BigInt)(256);

function rotl(a, b) {
  var c = a & U64;
  return (c << b | c >> _64n - b) & U64;
}

function fromU8a(u8a, p, count) {
  var bigints = new Array(count);
  var offset = 0;

  for (var i = 0; i < count; i++, offset += 2) {
    bigints[i] = (0, _xBigint.BigInt)(u8a[p + offset] | u8a[p + 1 + offset] << 8);
  }

  var result = _util._0n;

  for (var _i = count - 1; _i >= 0; _i--) {
    result = (result << _16n) + bigints[_i];
  }

  return result;
}

function toU8a(h64) {
  var result = new Uint8Array(8);

  for (var i = 7; i >= 0; i--) {
    result[i] = Number(h64 % _256n);
    h64 = h64 / _256n;
  }

  return result;
}

function state(initSeed) {
  var seed = (0, _xBigint.BigInt)(initSeed);
  return {
    seed: seed,
    u8a: new Uint8Array(32),
    u8asize: 0,
    v1: seed + P64_1 + P64_2,
    v2: seed + P64_2,
    v3: seed,
    v4: seed - P64_1
  };
}

function init(state, input) {
  if (input.length < 32) {
    state.u8a.set(input);
    state.u8asize = input.length;
    return state;
  }

  var limit = input.length - 32;
  var p = 0;

  if (limit >= 0) {
    var adjustV = function adjustV(v) {
      return P64_1 * rotl(v + P64_2 * fromU8a(input, p, 4), _31n);
    };

    do {
      state.v1 = adjustV(state.v1);
      p += 8;
      state.v2 = adjustV(state.v2);
      p += 8;
      state.v3 = adjustV(state.v3);
      p += 8;
      state.v4 = adjustV(state.v4);
      p += 8;
    } while (p <= limit);
  }

  if (p < input.length) {
    state.u8a.set(input.subarray(p, input.length));
    state.u8asize = input.length - p;
  }

  return state;
}

function xxhash64(input, initSeed) {
  var _init = init(state(initSeed), input),
      seed = _init.seed,
      u8a = _init.u8a,
      u8asize = _init.u8asize,
      v1 = _init.v1,
      v2 = _init.v2,
      v3 = _init.v3,
      v4 = _init.v4;

  var p = 0;
  var h64 = U64 & (0, _xBigint.BigInt)(input.length) + (input.length >= 32 ? ((((rotl(v1, _util._1n) + rotl(v2, _7n) + rotl(v3, _12n) + rotl(v4, _18n) ^ P64_1 * rotl(v1 * P64_2, _31n)) * P64_1 + P64_4 ^ P64_1 * rotl(v2 * P64_2, _31n)) * P64_1 + P64_4 ^ P64_1 * rotl(v3 * P64_2, _31n)) * P64_1 + P64_4 ^ P64_1 * rotl(v4 * P64_2, _31n)) * P64_1 + P64_4 : seed + P64_5);

  while (p <= u8asize - 8) {
    h64 = U64 & P64_4 + P64_1 * rotl(h64 ^ P64_1 * rotl(P64_2 * fromU8a(u8a, p, 4), _31n), _27n);
    p += 8;
  }

  if (p + 4 <= u8asize) {
    h64 = U64 & P64_3 + P64_2 * rotl(h64 ^ P64_1 * fromU8a(u8a, p, 2), _23n);
    p += 4;
  }

  while (p < u8asize) {
    h64 = U64 & P64_1 * rotl(h64 ^ P64_5 * (0, _xBigint.BigInt)(u8a[p++]), _11n);
  }

  h64 = U64 & P64_2 * (h64 ^ h64 >> _33n);
  h64 = U64 & P64_3 * (h64 ^ h64 >> _29n);
  return toU8a(U64 & (h64 ^ h64 >> _32n));
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/x-bigint":"node_modules/@polkadot/x-bigint/index.js"}],"node_modules/@polkadot/util-crypto/xxhash/asU8a.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.xxhashAsHex = void 0;
exports.xxhashAsU8a = xxhashAsU8a;

var _util = require("@polkadot/util");

var _wasmCrypto = require("@polkadot/wasm-crypto");

var _helpers = require("../helpers.js");

var _xxhash = require("./xxhash64.js");

// Copyright 2017-2022 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name xxhashAsU8a
 * @summary Creates a xxhash64 u8a from the input.
 * @description
 * From either a `string`, `Uint8Array` or a `Buffer` input, create the xxhash64 and return the result as a `Uint8Array` with the specified `bitLength`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { xxhashAsU8a } from '@polkadot/util-crypto';
 *
 * xxhashAsU8a('abc'); // => 0x44bc2cf5ad770999
 * ```
 */
function xxhashAsU8a(data) {
  var bitLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 64;
  var onlyJs = arguments.length > 2 ? arguments[2] : undefined;
  var rounds = Math.ceil(bitLength / 64);
  var u8a = (0, _util.u8aToU8a)(data);

  if (!_util.hasBigInt || !onlyJs && (0, _wasmCrypto.isReady)()) {
    return (0, _wasmCrypto.twox)(u8a, rounds);
  }

  var result = new Uint8Array(rounds * 8);

  for (var seed = 0; seed < rounds; seed++) {
    result.set((0, _xxhash.xxhash64)(u8a, seed).reverse(), seed * 8);
  }

  return result;
}
/**
 * @name xxhashAsHex
 * @description Creates a xxhash64 hex from the input.
 */


var xxhashAsHex = (0, _helpers.createAsHex)(xxhashAsU8a);
exports.xxhashAsHex = xxhashAsHex;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/wasm-crypto":"node_modules/@polkadot/wasm-crypto/index.js","../helpers.js":"node_modules/@polkadot/util-crypto/helpers.js","./xxhash64.js":"node_modules/@polkadot/util-crypto/xxhash/xxhash64.js"}],"node_modules/@polkadot/util-crypto/xxhash/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "xxhashAsHex", {
  enumerable: true,
  get: function () {
    return _asU8a.xxhashAsHex;
  }
});
Object.defineProperty(exports, "xxhashAsU8a", {
  enumerable: true,
  get: function () {
    return _asU8a.xxhashAsU8a;
  }
});

var _asU8a = require("./asU8a.js");
},{"./asU8a.js":"node_modules/@polkadot/util-crypto/xxhash/asU8a.js"}],"node_modules/@polkadot/util-crypto/bundle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  packageInfo: true
};
Object.defineProperty(exports, "packageInfo", {
  enumerable: true,
  get: function () {
    return _packageInfo.packageInfo;
  }
});

require("./bundleInit.js");

var _packageInfo = require("./packageInfo.js");

var _index = require("./address/index.js");

Object.keys(_index).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index[key];
    }
  });
});

var _index2 = require("./base32/index.js");

Object.keys(_index2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index2[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index2[key];
    }
  });
});

var _index3 = require("./base58/index.js");

Object.keys(_index3).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index3[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index3[key];
    }
  });
});

var _index4 = require("./base64/index.js");

Object.keys(_index4).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index4[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index4[key];
    }
  });
});

var _index5 = require("./blake2/index.js");

Object.keys(_index5).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index5[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index5[key];
    }
  });
});

var _crypto = require("./crypto.js");

Object.keys(_crypto).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _crypto[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _crypto[key];
    }
  });
});

var _index6 = require("./ed25519/index.js");

Object.keys(_index6).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index6[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index6[key];
    }
  });
});

var _index7 = require("./ethereum/index.js");

Object.keys(_index7).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index7[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index7[key];
    }
  });
});

var _index8 = require("./hd/index.js");

Object.keys(_index8).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index8[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index8[key];
    }
  });
});

var _index9 = require("./hmac/index.js");

Object.keys(_index9).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index9[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index9[key];
    }
  });
});

var _index10 = require("./json/index.js");

Object.keys(_index10).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index10[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index10[key];
    }
  });
});

var _index11 = require("./keccak/index.js");

Object.keys(_index11).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index11[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index11[key];
    }
  });
});

var _index12 = require("./key/index.js");

Object.keys(_index12).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index12[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index12[key];
    }
  });
});

var _index13 = require("./mnemonic/index.js");

Object.keys(_index13).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index13[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index13[key];
    }
  });
});

var _networks = require("./networks.js");

Object.keys(_networks).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _networks[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _networks[key];
    }
  });
});

var _index14 = require("./nacl/index.js");

Object.keys(_index14).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index14[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index14[key];
    }
  });
});

var _index15 = require("./pbkdf2/index.js");

Object.keys(_index15).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index15[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index15[key];
    }
  });
});

var _index16 = require("./random/index.js");

Object.keys(_index16).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index16[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index16[key];
    }
  });
});

var _index17 = require("./scrypt/index.js");

Object.keys(_index17).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index17[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index17[key];
    }
  });
});

var _index18 = require("./secp256k1/index.js");

Object.keys(_index18).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index18[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index18[key];
    }
  });
});

var _index19 = require("./sha/index.js");

Object.keys(_index19).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index19[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index19[key];
    }
  });
});

var _index20 = require("./signature/index.js");

Object.keys(_index20).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index20[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index20[key];
    }
  });
});

var _index21 = require("./sr25519/index.js");

Object.keys(_index21).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index21[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index21[key];
    }
  });
});

var _index22 = require("./xxhash/index.js");

Object.keys(_index22).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index22[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index22[key];
    }
  });
});
},{"./bundleInit.js":"node_modules/@polkadot/util-crypto/bundleInit.js","./packageInfo.js":"node_modules/@polkadot/util-crypto/packageInfo.js","./address/index.js":"node_modules/@polkadot/util-crypto/address/index.js","./base32/index.js":"node_modules/@polkadot/util-crypto/base32/index.js","./base58/index.js":"node_modules/@polkadot/util-crypto/base58/index.js","./base64/index.js":"node_modules/@polkadot/util-crypto/base64/index.js","./blake2/index.js":"node_modules/@polkadot/util-crypto/blake2/index.js","./crypto.js":"node_modules/@polkadot/util-crypto/crypto.js","./ed25519/index.js":"node_modules/@polkadot/util-crypto/ed25519/index.js","./ethereum/index.js":"node_modules/@polkadot/util-crypto/ethereum/index.js","./hd/index.js":"node_modules/@polkadot/util-crypto/hd/index.js","./hmac/index.js":"node_modules/@polkadot/util-crypto/hmac/index.js","./json/index.js":"node_modules/@polkadot/util-crypto/json/index.js","./keccak/index.js":"node_modules/@polkadot/util-crypto/keccak/index.js","./key/index.js":"node_modules/@polkadot/util-crypto/key/index.js","./mnemonic/index.js":"node_modules/@polkadot/util-crypto/mnemonic/index.js","./networks.js":"node_modules/@polkadot/util-crypto/networks.js","./nacl/index.js":"node_modules/@polkadot/util-crypto/nacl/index.js","./pbkdf2/index.js":"node_modules/@polkadot/util-crypto/pbkdf2/index.js","./random/index.js":"node_modules/@polkadot/util-crypto/random/index.js","./scrypt/index.js":"node_modules/@polkadot/util-crypto/scrypt/index.js","./secp256k1/index.js":"node_modules/@polkadot/util-crypto/secp256k1/index.js","./sha/index.js":"node_modules/@polkadot/util-crypto/sha/index.js","./signature/index.js":"node_modules/@polkadot/util-crypto/signature/index.js","./sr25519/index.js":"node_modules/@polkadot/util-crypto/sr25519/index.js","./xxhash/index.js":"node_modules/@polkadot/util-crypto/xxhash/index.js"}],"node_modules/@polkadot/util-crypto/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

require("./detectPackage.js");

var _bundle = require("./bundle.js");

Object.keys(_bundle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _bundle[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bundle[key];
    }
  });
});
},{"./detectPackage.js":"node_modules/@polkadot/util-crypto/detectPackage.js","./bundle.js":"node_modules/@polkadot/util-crypto/bundle.js"}],"node_modules/@polkadot/keyring/defaults.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DEV_SEED = exports.DEV_PHRASE = void 0;
// Copyright 2017-2022 @polkadot/keyring authors & contributors
// SPDX-License-Identifier: Apache-2.0
// default substrate dev phrase
var DEV_PHRASE = 'bottom drive obey lake curtain smoke basket hold race lonely fit walk'; // seed from the above phrase

exports.DEV_PHRASE = DEV_PHRASE;
var DEV_SEED = '0xfac7959dbfe72f052e5a0c3c8d6530f202b02fd8f9f5ca3580ec8deb7797479e';
exports.DEV_SEED = DEV_SEED;
},{}],"node_modules/@polkadot/keyring/pair/defaults.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SEED_LENGTH = exports.SEC_LENGTH = exports.SALT_LENGTH = exports.PUB_LENGTH = exports.PKCS8_HEADER = exports.PKCS8_DIVIDER = void 0;
// Copyright 2017-2022 @polkadot/keyring authors & contributors
// SPDX-License-Identifier: Apache-2.0
var PKCS8_DIVIDER = new Uint8Array([161, 35, 3, 33, 0]);
exports.PKCS8_DIVIDER = PKCS8_DIVIDER;
var PKCS8_HEADER = new Uint8Array([48, 83, 2, 1, 1, 48, 5, 6, 3, 43, 101, 112, 4, 34, 4, 32]);
exports.PKCS8_HEADER = PKCS8_HEADER;
var PUB_LENGTH = 32;
exports.PUB_LENGTH = PUB_LENGTH;
var SALT_LENGTH = 32;
exports.SALT_LENGTH = SALT_LENGTH;
var SEC_LENGTH = 64;
exports.SEC_LENGTH = SEC_LENGTH;
var SEED_LENGTH = 32;
exports.SEED_LENGTH = SEED_LENGTH;
},{}],"node_modules/@polkadot/keyring/pair/decode.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.decodePair = decodePair;

var _util = require("@polkadot/util");

var _utilCrypto = require("@polkadot/util-crypto");

var _defaults = require("./defaults.js");

// Copyright 2017-2022 @polkadot/keyring authors & contributors
// SPDX-License-Identifier: Apache-2.0
var SEED_OFFSET = _defaults.PKCS8_HEADER.length;

function decodePair(passphrase, encrypted, _encType) {
  var encType = Array.isArray(_encType) || _encType === undefined ? _encType : [_encType];
  var decrypted = (0, _utilCrypto.jsonDecryptData)(encrypted, passphrase, encType);
  var header = decrypted.subarray(0, _defaults.PKCS8_HEADER.length);
  (0, _util.assert)((0, _util.u8aEq)(header, _defaults.PKCS8_HEADER), 'Invalid Pkcs8 header found in body');
  var secretKey = decrypted.subarray(SEED_OFFSET, SEED_OFFSET + _defaults.SEC_LENGTH);
  var divOffset = SEED_OFFSET + _defaults.SEC_LENGTH;
  var divider = decrypted.subarray(divOffset, divOffset + _defaults.PKCS8_DIVIDER.length); // old-style, we have the seed here

  if (!(0, _util.u8aEq)(divider, _defaults.PKCS8_DIVIDER)) {
    divOffset = SEED_OFFSET + _defaults.SEED_LENGTH;
    secretKey = decrypted.subarray(SEED_OFFSET, divOffset);
    divider = decrypted.subarray(divOffset, divOffset + _defaults.PKCS8_DIVIDER.length);
    (0, _util.assert)((0, _util.u8aEq)(divider, _defaults.PKCS8_DIVIDER), 'Invalid Pkcs8 divider found in body');
  }

  var pubOffset = divOffset + _defaults.PKCS8_DIVIDER.length;
  var publicKey = decrypted.subarray(pubOffset, pubOffset + _defaults.PUB_LENGTH);
  return {
    publicKey: publicKey,
    secretKey: secretKey
  };
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/util-crypto":"node_modules/@polkadot/util-crypto/index.js","./defaults.js":"node_modules/@polkadot/keyring/pair/defaults.js"}],"node_modules/@polkadot/keyring/pair/encode.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.encodePair = encodePair;

var _util = require("@polkadot/util");

var _utilCrypto = require("@polkadot/util-crypto");

var _defaults = require("./defaults.js");

// Copyright 2017-2022 @polkadot/keyring authors & contributors
// SPDX-License-Identifier: Apache-2.0
function encodePair(_ref, passphrase) {
  var publicKey = _ref.publicKey,
      secretKey = _ref.secretKey;
  (0, _util.assert)(secretKey, 'Expected a valid secretKey to be passed to encode');
  var encoded = (0, _util.u8aConcat)(_defaults.PKCS8_HEADER, secretKey, _defaults.PKCS8_DIVIDER, publicKey);

  if (!passphrase) {
    return encoded;
  }

  var _scryptEncode = (0, _utilCrypto.scryptEncode)(passphrase),
      params = _scryptEncode.params,
      password = _scryptEncode.password,
      salt = _scryptEncode.salt;

  var _naclEncrypt = (0, _utilCrypto.naclEncrypt)(encoded, password.subarray(0, 32)),
      encrypted = _naclEncrypt.encrypted,
      nonce = _naclEncrypt.nonce;

  return (0, _util.u8aConcat)((0, _utilCrypto.scryptToU8a)(salt, params), nonce, encrypted);
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/util-crypto":"node_modules/@polkadot/util-crypto/index.js","./defaults.js":"node_modules/@polkadot/keyring/pair/defaults.js"}],"node_modules/@polkadot/keyring/pair/toJson.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pairToJson = pairToJson;

var _util = require("@polkadot/util");

var _utilCrypto = require("@polkadot/util-crypto");

// Copyright 2017-2022 @polkadot/keyring authors & contributors
// SPDX-License-Identifier: Apache-2.0
function pairToJson(type, _ref, encoded, isEncrypted) {
  var address = _ref.address,
      meta = _ref.meta;
  return (0, _util.objectSpread)((0, _utilCrypto.jsonEncryptFormat)(encoded, ['pkcs8', type], isEncrypted), {
    address: address,
    meta: meta
  });
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/util-crypto":"node_modules/@polkadot/util-crypto/index.js"}],"node_modules/@polkadot/keyring/pair/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createPair = createPair;

var _util = require("@polkadot/util");

var _utilCrypto = require("@polkadot/util-crypto");

var _decode = require("./decode.js");

var _encode = require("./encode.js");

var _toJson = require("./toJson.js");

// Copyright 2017-2022 @polkadot/keyring authors & contributors
// SPDX-License-Identifier: Apache-2.0
var SIG_TYPE_NONE = new Uint8Array();
var TYPE_FROM_SEED = {
  ecdsa: _utilCrypto.secp256k1PairFromSeed,
  ed25519: _utilCrypto.ed25519PairFromSeed,
  ethereum: _utilCrypto.secp256k1PairFromSeed,
  sr25519: _utilCrypto.sr25519PairFromSeed
};
var TYPE_PREFIX = {
  ecdsa: new Uint8Array([2]),
  ed25519: new Uint8Array([0]),
  ethereum: new Uint8Array([2]),
  sr25519: new Uint8Array([1])
};
var TYPE_SIGNATURE = {
  ecdsa: function ecdsa(m, p) {
    return (0, _utilCrypto.secp256k1Sign)(m, p, 'blake2');
  },
  ed25519: _utilCrypto.ed25519Sign,
  ethereum: function ethereum(m, p) {
    return (0, _utilCrypto.secp256k1Sign)(m, p, 'keccak');
  },
  sr25519: _utilCrypto.sr25519Sign
};
var TYPE_ADDRESS = {
  ecdsa: function ecdsa(p) {
    return p.length > 32 ? (0, _utilCrypto.blake2AsU8a)(p) : p;
  },
  ed25519: function ed25519(p) {
    return p;
  },
  ethereum: function ethereum(p) {
    return p.length === 20 ? p : (0, _utilCrypto.keccakAsU8a)((0, _utilCrypto.secp256k1Expand)(p));
  },
  sr25519: function sr25519(p) {
    return p;
  }
};

function isLocked(secretKey) {
  return !secretKey || (0, _util.u8aEmpty)(secretKey);
}

function vrfHash(proof, context, extra) {
  return (0, _utilCrypto.blake2AsU8a)((0, _util.u8aConcat)(context || '', extra || '', proof));
}
/**
 * @name createPair
 * @summary Creates a keyring pair object
 * @description Creates a keyring pair object with provided account public key, metadata, and encoded arguments.
 * The keyring pair stores the account state including the encoded address and associated metadata.
 *
 * It has properties whose values are functions that may be called to perform account actions:
 *
 * - `address` function retrieves the address associated with the account.
 * - `decodedPkcs8` function is called with the account passphrase and account encoded public key.
 * It decodes the encoded public key using the passphrase provided to obtain the decoded account public key
 * and associated secret key that are then available in memory, and changes the account address stored in the
 * state of the pair to correspond to the address of the decoded public key.
 * - `encodePkcs8` function when provided with the correct passphrase associated with the account pair
 * and when the secret key is in memory (when the account pair is not locked) it returns an encoded
 * public key of the account.
 * - `meta` is the metadata that is stored in the state of the pair, either when it was originally
 * created or set via `setMeta`.
 * - `publicKey` returns the public key stored in memory for the pair.
 * - `sign` may be used to return a signature by signing a provided message with the secret
 * key (if it is in memory) using Nacl.
 * - `toJson` calls another `toJson` function and provides the state of the pair,
 * it generates arguments to be passed to the other `toJson` function including an encoded public key of the account
 * that it generates using the secret key from memory (if it has been made available in memory)
 * and the optionally provided passphrase argument. It passes a third boolean argument to `toJson`
 * indicating whether the public key has been encoded or not (if a passphrase argument was provided then it is encoded).
 * The `toJson` function that it calls returns a JSON object with properties including the `address`
 * and `meta` that are assigned with the values stored in the corresponding state variables of the account pair,
 * an `encoded` property that is assigned with the encoded public key in hex format, and an `encoding`
 * property that indicates whether the public key value of the `encoded` property is encoded or not.
 */


function createPair(_ref, _ref2) {
  var toSS58 = _ref.toSS58,
      type = _ref.type;
  var publicKey = _ref2.publicKey,
      secretKey = _ref2.secretKey;
  var meta = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var encoded = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
  var encTypes = arguments.length > 4 ? arguments[4] : undefined;

  var decodePkcs8 = function decodePkcs8(passphrase, userEncoded) {
    var decoded = (0, _decode.decodePair)(passphrase, userEncoded || encoded, encTypes);

    if (decoded.secretKey.length === 64) {
      publicKey = decoded.publicKey;
      secretKey = decoded.secretKey;
    } else {
      var pair = TYPE_FROM_SEED[type](decoded.secretKey);
      publicKey = pair.publicKey;
      secretKey = pair.secretKey;
    }
  };

  var recode = function recode(passphrase) {
    isLocked(secretKey) && encoded && decodePkcs8(passphrase, encoded);
    encoded = (0, _encode.encodePair)({
      publicKey: publicKey,
      secretKey: secretKey
    }, passphrase); // re-encode, latest version

    encTypes = undefined; // swap to defaults, latest version follows

    return encoded;
  };

  var encodeAddress = function encodeAddress() {
    var raw = TYPE_ADDRESS[type](publicKey);
    return type === 'ethereum' ? (0, _utilCrypto.ethereumEncode)(raw) : toSS58(raw);
  };

  return {
    get address() {
      return encodeAddress();
    },

    get addressRaw() {
      var raw = TYPE_ADDRESS[type](publicKey);
      return type === 'ethereum' ? raw.slice(-20) : raw;
    },

    get isLocked() {
      return isLocked(secretKey);
    },

    get meta() {
      return meta;
    },

    get publicKey() {
      return publicKey;
    },

    get type() {
      return type;
    },

    // eslint-disable-next-line sort-keys
    decodePkcs8: decodePkcs8,
    decryptMessage: function decryptMessage(encryptedMessageWithNonce, senderPublicKey) {
      (0, _util.assert)(!isLocked(secretKey), 'Cannot encrypt with a locked key pair');
      (0, _util.assert)(!['ecdsa', 'ethereum'].includes(type), 'Secp256k1 not supported yet');
      var messageU8a = (0, _util.u8aToU8a)(encryptedMessageWithNonce);
      return (0, _utilCrypto.naclOpen)(messageU8a.slice(24, messageU8a.length), messageU8a.slice(0, 24), (0, _utilCrypto.convertPublicKeyToCurve25519)((0, _util.u8aToU8a)(senderPublicKey)), (0, _utilCrypto.convertSecretKeyToCurve25519)(secretKey));
    },
    derive: function derive(suri, meta) {
      (0, _util.assert)(type !== 'ethereum', 'Unable to derive on this keypair');
      (0, _util.assert)(!isLocked(secretKey), 'Cannot derive on a locked keypair');

      var _keyExtractPath = (0, _utilCrypto.keyExtractPath)(suri),
          path = _keyExtractPath.path;

      var derived = (0, _utilCrypto.keyFromPath)({
        publicKey: publicKey,
        secretKey: secretKey
      }, path, type);
      return createPair({
        toSS58: toSS58,
        type: type
      }, derived, meta, null);
    },
    encodePkcs8: function encodePkcs8(passphrase) {
      return recode(passphrase);
    },
    encryptMessage: function encryptMessage(message, recipientPublicKey, nonceIn) {
      (0, _util.assert)(!isLocked(secretKey), 'Cannot encrypt with a locked key pair');
      (0, _util.assert)(!['ecdsa', 'ethereum'].includes(type), 'Secp256k1 not supported yet');

      var _naclSeal = (0, _utilCrypto.naclSeal)((0, _util.u8aToU8a)(message), (0, _utilCrypto.convertSecretKeyToCurve25519)(secretKey), (0, _utilCrypto.convertPublicKeyToCurve25519)((0, _util.u8aToU8a)(recipientPublicKey)), nonceIn),
          nonce = _naclSeal.nonce,
          sealed = _naclSeal.sealed;

      return (0, _util.u8aConcat)(nonce, sealed);
    },
    lock: function lock() {
      secretKey = new Uint8Array();
    },
    setMeta: function setMeta(additional) {
      meta = (0, _util.objectSpread)({}, meta, additional);
    },
    sign: function sign(message) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      (0, _util.assert)(!isLocked(secretKey), 'Cannot sign with a locked key pair');
      return (0, _util.u8aConcat)(options.withType ? TYPE_PREFIX[type] : SIG_TYPE_NONE, TYPE_SIGNATURE[type]((0, _util.u8aToU8a)(message), {
        publicKey: publicKey,
        secretKey: secretKey
      }));
    },
    toJson: function toJson(passphrase) {
      // NOTE: For ecdsa and ethereum, the publicKey cannot be extracted from the address. For these
      // pass the hex-encoded publicKey through to the address portion of the JSON (before decoding)
      // unless the publicKey is already an address
      var address = ['ecdsa', 'ethereum'].includes(type) ? publicKey.length === 20 ? (0, _util.u8aToHex)(publicKey) : (0, _util.u8aToHex)((0, _utilCrypto.secp256k1Compress)(publicKey)) : encodeAddress();
      return (0, _toJson.pairToJson)(type, {
        address: address,
        meta: meta
      }, recode(passphrase), !!passphrase);
    },
    unlock: function unlock(passphrase) {
      return decodePkcs8(passphrase);
    },
    verify: function verify(message, signature, signerPublic) {
      return (0, _utilCrypto.signatureVerify)(message, signature, TYPE_ADDRESS[type]((0, _util.u8aToU8a)(signerPublic))).isValid;
    },
    vrfSign: function vrfSign(message, context, extra) {
      (0, _util.assert)(!isLocked(secretKey), 'Cannot sign with a locked key pair');

      if (type === 'sr25519') {
        return (0, _utilCrypto.sr25519VrfSign)(message, {
          secretKey: secretKey
        }, context, extra);
      }

      var proof = TYPE_SIGNATURE[type]((0, _util.u8aToU8a)(message), {
        publicKey: publicKey,
        secretKey: secretKey
      });
      return (0, _util.u8aConcat)(vrfHash(proof, context, extra), proof);
    },
    vrfVerify: function vrfVerify(message, vrfResult, signerPublic, context, extra) {
      if (type === 'sr25519') {
        return (0, _utilCrypto.sr25519VrfVerify)(message, vrfResult, publicKey, context, extra);
      }

      var result = (0, _utilCrypto.signatureVerify)(message, (0, _util.u8aConcat)(TYPE_PREFIX[type], vrfResult.subarray(32)), TYPE_ADDRESS[type]((0, _util.u8aToU8a)(signerPublic)));
      return result.isValid && (0, _util.u8aEq)(vrfResult.subarray(0, 32), vrfHash(vrfResult.subarray(32), context, extra));
    }
  };
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/util-crypto":"node_modules/@polkadot/util-crypto/index.js","./decode.js":"node_modules/@polkadot/keyring/pair/decode.js","./encode.js":"node_modules/@polkadot/keyring/pair/encode.js","./toJson.js":"node_modules/@polkadot/keyring/pair/toJson.js"}],"node_modules/@polkadot/keyring/pairs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Pairs = void 0;

var _util = require("@polkadot/util");

var _utilCrypto = require("@polkadot/util-crypto");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

var _map = /*#__PURE__*/new WeakMap();

var Pairs = /*#__PURE__*/function () {
  function Pairs() {
    _classCallCheck(this, Pairs);

    _classPrivateFieldInitSpec(this, _map, {
      writable: true,
      value: {}
    });
  }

  _createClass(Pairs, [{
    key: "add",
    value: function add(pair) {
      _classPrivateFieldGet(this, _map)[(0, _utilCrypto.decodeAddress)(pair.address).toString()] = pair;
      return pair;
    }
  }, {
    key: "all",
    value: function all() {
      return Object.values(_classPrivateFieldGet(this, _map));
    }
  }, {
    key: "get",
    value: function get(address) {
      var pair = _classPrivateFieldGet(this, _map)[(0, _utilCrypto.decodeAddress)(address).toString()];

      if (!pair) {
        throw new Error("Unable to retrieve keypair '".concat((0, _util.isU8a)(address) || (0, _util.isHex)(address) ? (0, _util.u8aToHex)((0, _util.u8aToU8a)(address)) : address, "'"));
      }

      return pair;
    }
  }, {
    key: "remove",
    value: function remove(address) {
      delete _classPrivateFieldGet(this, _map)[(0, _utilCrypto.decodeAddress)(address).toString()];
    }
  }]);

  return Pairs;
}();

exports.Pairs = Pairs;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/util-crypto":"node_modules/@polkadot/util-crypto/index.js"}],"node_modules/@polkadot/keyring/keyring.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Keyring = void 0;

var _util = require("@polkadot/util");

var _utilCrypto = require("@polkadot/util-crypto");

var _defaults = require("./defaults.js");

var _index = require("./pair/index.js");

var _pairs2 = require("./pairs.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

var PairFromSeed = {
  ecdsa: function ecdsa(seed) {
    return (0, _utilCrypto.secp256k1PairFromSeed)(seed);
  },
  ed25519: function ed25519(seed) {
    return (0, _utilCrypto.ed25519PairFromSeed)(seed);
  },
  ethereum: function ethereum(seed) {
    return (0, _utilCrypto.secp256k1PairFromSeed)(seed);
  },
  sr25519: function sr25519(seed) {
    return (0, _utilCrypto.sr25519PairFromSeed)(seed);
  }
};

function pairToPublic(_ref) {
  var publicKey = _ref.publicKey;
  return publicKey;
}
/**
 * # @polkadot/keyring
 *
 * ## Overview
 *
 * @name Keyring
 * @summary Keyring management of user accounts
 * @description Allows generation of keyring pairs from a variety of input combinations, such as
 * json object containing account address or public key, account metadata, and account encoded using
 * `addFromJson`, or by providing those values as arguments separately to `addFromAddress`,
 * or by providing the mnemonic (seed phrase) and account metadata as arguments to `addFromMnemonic`.
 * Stores the keyring pairs in a keyring pair dictionary. Removal of the keyring pairs from the keyring pair
 * dictionary is achieved using `removePair`. Retrieval of all the stored pairs via `getPairs` or perform
 * lookup of a pair for a given account address or public key using `getPair`. JSON metadata associated with
 * an account may be obtained using `toJson` accompanied by the account passphrase.
 */


var _pairs = /*#__PURE__*/new WeakMap();

var _type = /*#__PURE__*/new WeakMap();

var _ss = /*#__PURE__*/new WeakMap();

var Keyring = /*#__PURE__*/function () {
  function Keyring() {
    var _this = this;

    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, Keyring);

    _classPrivateFieldInitSpec(this, _pairs, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(this, _type, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(this, _ss, {
      writable: true,
      value: void 0
    });

    _defineProperty(this, "decodeAddress", _utilCrypto.decodeAddress);

    _defineProperty(this, "encodeAddress", function (address, ss58Format) {
      return _this.type === 'ethereum' ? (0, _utilCrypto.ethereumEncode)(address) : (0, _utilCrypto.encodeAddress)(address, ss58Format === undefined ? _classPrivateFieldGet(_this, _ss) : ss58Format);
    });

    options.type = options.type || 'ed25519';

    if (!['ecdsa', 'ethereum', 'ed25519', 'sr25519'].includes(options.type || 'undefined')) {
      throw new Error("Expected a keyring type of either 'ed25519', 'sr25519', 'ethereum' or 'ecdsa', found '".concat(options.type || 'unknown'));
    }

    _classPrivateFieldSet(this, _pairs, new _pairs2.Pairs());

    _classPrivateFieldSet(this, _ss, options.ss58Format);

    _classPrivateFieldSet(this, _type, options.type);
  }
  /**
   * @description retrieve the pairs (alias for getPairs)
   */


  _createClass(Keyring, [{
    key: "pairs",
    get: function get() {
      return this.getPairs();
    }
    /**
     * @description retrieve the publicKeys (alias for getPublicKeys)
     */

  }, {
    key: "publicKeys",
    get: function get() {
      return this.getPublicKeys();
    }
    /**
     * @description Returns the type of the keyring, ed25519, sr25519 or ecdsa
     */

  }, {
    key: "type",
    get: function get() {
      return _classPrivateFieldGet(this, _type);
    }
    /**
     * @name addPair
     * @summary Stores an account, given a keyring pair, as a Key/Value (public key, pair) in Keyring Pair Dictionary
     */

  }, {
    key: "addPair",
    value: function addPair(pair) {
      return _classPrivateFieldGet(this, _pairs).add(pair);
    }
    /**
     * @name addFromAddress
     * @summary Stores an account, given an account address, as a Key/Value (public key, pair) in Keyring Pair Dictionary
     * @description Allows user to explicitly provide separate inputs including account address or public key, and optionally
     * the associated account metadata, and the default encoded value as arguments (that may be obtained from the json file
     * of an account backup), and then generates a keyring pair from them that it passes to
     * `addPair` to stores in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.
     */

  }, {
    key: "addFromAddress",
    value: function addFromAddress(address) {
      var meta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var encoded = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
      var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this.type;
      var ignoreChecksum = arguments.length > 4 ? arguments[4] : undefined;
      var encType = arguments.length > 5 ? arguments[5] : undefined;
      var publicKey = this.decodeAddress(address, ignoreChecksum);
      return this.addPair((0, _index.createPair)({
        toSS58: this.encodeAddress,
        type: type
      }, {
        publicKey: publicKey,
        secretKey: new Uint8Array()
      }, meta, encoded, encType));
    }
    /**
     * @name addFromJson
     * @summary Stores an account, given JSON data, as a Key/Value (public key, pair) in Keyring Pair Dictionary
     * @description Allows user to provide a json object argument that contains account information (that may be obtained from the json file
     * of an account backup), and then generates a keyring pair from it that it passes to
     * `addPair` to stores in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.
     */

  }, {
    key: "addFromJson",
    value: function addFromJson(json, ignoreChecksum) {
      return this.addPair(this.createFromJson(json, ignoreChecksum));
    }
    /**
     * @name addFromMnemonic
     * @summary Stores an account, given a mnemonic, as a Key/Value (public key, pair) in Keyring Pair Dictionary
     * @description Allows user to provide a mnemonic (seed phrase that is provided when account is originally created)
     * argument and a metadata argument that contains account information (that may be obtained from the json file
     * of an account backup), and then generates a keyring pair from it that it passes to
     * `addPair` to stores in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.
     */

  }, {
    key: "addFromMnemonic",
    value: function addFromMnemonic(mnemonic) {
      var meta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.type;
      return this.addFromUri(mnemonic, meta, type);
    }
    /**
     * @name addFromPair
     * @summary Stores an account created from an explicit publicKey/secreteKey combination
     */

  }, {
    key: "addFromPair",
    value: function addFromPair(pair) {
      var meta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.type;
      return this.addPair(this.createFromPair(pair, meta, type));
    }
    /**
     * @name addFromSeed
     * @summary Stores an account, given seed data, as a Key/Value (public key, pair) in Keyring Pair Dictionary
     * @description Stores in a keyring pair dictionary the public key of the pair as a key and the pair as the associated value.
     * Allows user to provide the account seed as an argument, and then generates a keyring pair from it that it passes to
     * `addPair` to store in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.
     */

  }, {
    key: "addFromSeed",
    value: function addFromSeed(seed) {
      var meta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.type;
      return this.addPair((0, _index.createPair)({
        toSS58: this.encodeAddress,
        type: type
      }, PairFromSeed[type](seed), meta, null));
    }
    /**
     * @name addFromUri
     * @summary Creates an account via an suri
     * @description Extracts the phrase, path and password from a SURI format for specifying secret keys `<secret>/<soft-key>//<hard-key>///<password>` (the `///password` may be omitted, and `/<soft-key>` and `//<hard-key>` maybe repeated and mixed). The secret can be a hex string, mnemonic phrase or a string (to be padded)
     */

  }, {
    key: "addFromUri",
    value: function addFromUri(suri) {
      var meta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.type;
      return this.addPair(this.createFromUri(suri, meta, type));
    }
    /**
     * @name createFromJson
     * @description Creates a pair from a JSON keyfile
     */

  }, {
    key: "createFromJson",
    value: function createFromJson(_ref2, ignoreChecksum) {
      var address = _ref2.address,
          encoded = _ref2.encoded,
          _ref2$encoding = _ref2.encoding,
          content = _ref2$encoding.content,
          type = _ref2$encoding.type,
          version = _ref2$encoding.version,
          meta = _ref2.meta;

      if (version === '3' && content[0] !== 'pkcs8') {
        throw new Error("Unable to decode non-pkcs8 type, [".concat(content.join(','), "] found}"));
      }

      var cryptoType = version === '0' || !Array.isArray(content) ? this.type : content[1];
      var encType = !Array.isArray(type) ? [type] : type;

      if (!['ed25519', 'sr25519', 'ecdsa', 'ethereum'].includes(cryptoType)) {
        throw new Error("Unknown crypto type ".concat(cryptoType));
      } // Here the address and publicKey are 32 bytes and isomorphic. This is why the address field needs to be the public key for ethereum type pairs


      var publicKey = (0, _util.isHex)(address) ? (0, _util.hexToU8a)(address) : this.decodeAddress(address, ignoreChecksum);
      var decoded = (0, _util.isHex)(encoded) ? (0, _util.hexToU8a)(encoded) : (0, _utilCrypto.base64Decode)(encoded);
      return (0, _index.createPair)({
        toSS58: this.encodeAddress,
        type: cryptoType
      }, {
        publicKey: publicKey,
        secretKey: new Uint8Array()
      }, meta, decoded, encType);
    }
    /**
     * @name createFromPair
     * @summary Creates a pair from an explicit publicKey/secreteKey combination
     */

  }, {
    key: "createFromPair",
    value: function createFromPair(pair) {
      var meta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.type;
      return (0, _index.createPair)({
        toSS58: this.encodeAddress,
        type: type
      }, pair, meta, null);
    }
    /**
     * @name createFromUri
     * @summary Creates a Keypair from an suri
     * @description This creates a pair from the suri, but does not add it to the keyring
     */

  }, {
    key: "createFromUri",
    value: function createFromUri(_suri) {
      var meta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.type;
      // here we only aut-add the dev phrase if we have a hard-derived path
      var suri = _suri.startsWith('//') ? "".concat(_defaults.DEV_PHRASE).concat(_suri) : _suri;

      var _keyExtractSuri = (0, _utilCrypto.keyExtractSuri)(suri),
          derivePath = _keyExtractSuri.derivePath,
          password = _keyExtractSuri.password,
          path = _keyExtractSuri.path,
          phrase = _keyExtractSuri.phrase;

      var seed;
      var isPhraseHex = (0, _util.isHex)(phrase, 256);

      if (isPhraseHex) {
        seed = (0, _util.hexToU8a)(phrase);
      } else {
        var parts = phrase.split(' ');

        if ([12, 15, 18, 21, 24].includes(parts.length)) {
          seed = type === 'ethereum' ? (0, _utilCrypto.mnemonicToLegacySeed)(phrase, '', false, 64) : (0, _utilCrypto.mnemonicToMiniSecret)(phrase, password);
        } else {
          if (phrase.length > 32) {
            throw new Error('specified phrase is not a valid mnemonic and is invalid as a raw seed at > 32 bytes');
          }

          seed = (0, _util.stringToU8a)(phrase.padEnd(32));
        }
      }

      var derived = type === 'ethereum' ? isPhraseHex ? PairFromSeed[type](seed) // for eth, if the private key is provided as suri, it must be derived only once
      : (0, _utilCrypto.hdEthereum)(seed, derivePath.substring(1)) : (0, _utilCrypto.keyFromPath)(PairFromSeed[type](seed), path, type);
      return (0, _index.createPair)({
        toSS58: this.encodeAddress,
        type: type
      }, derived, meta, null);
    }
    /**
     * @name encodeAddress
     * @description Encodes the input into an ss58 representation
     */

  }, {
    key: "getPair",
    value:
    /**
     * @name getPair
     * @summary Retrieves an account keyring pair from the Keyring Pair Dictionary, given an account address
     * @description Returns a keyring pair value from the keyring pair dictionary by performing
     * a key lookup using the provided account address or public key (after decoding it).
     */
    function getPair(address) {
      return _classPrivateFieldGet(this, _pairs).get(address);
    }
    /**
     * @name getPairs
     * @summary Retrieves all account keyring pairs from the Keyring Pair Dictionary
     * @description Returns an array list of all the keyring pair values that are stored in the keyring pair dictionary.
     */

  }, {
    key: "getPairs",
    value: function getPairs() {
      return _classPrivateFieldGet(this, _pairs).all();
    }
    /**
     * @name getPublicKeys
     * @summary Retrieves Public Keys of all Keyring Pairs stored in the Keyring Pair Dictionary
     * @description Returns an array list of all the public keys associated with each of the keyring pair values that are stored in the keyring pair dictionary.
     */

  }, {
    key: "getPublicKeys",
    value: function getPublicKeys() {
      return _classPrivateFieldGet(this, _pairs).all().map(pairToPublic);
    }
    /**
     * @name removePair
     * @description Deletes the provided input address or public key from the stored Keyring Pair Dictionary.
     */

  }, {
    key: "removePair",
    value: function removePair(address) {
      _classPrivateFieldGet(this, _pairs).remove(address);
    }
    /**
     * @name setSS58Format;
     * @description Sets the ss58 format for the keyring
     */

  }, {
    key: "setSS58Format",
    value: function setSS58Format(ss58) {
      _classPrivateFieldSet(this, _ss, ss58);
    }
    /**
     * @name toJson
     * @summary Returns a JSON object associated with the input argument that contains metadata assocated with an account
     * @description Returns a JSON object containing the metadata associated with an account
     * when valid address or public key and when the account passphrase is provided if the account secret
     * is not already unlocked and available in memory. Note that in [Polkadot-JS Apps](https://github.com/polkadot-js/apps) the user
     * may backup their account to a JSON file that contains this information.
     */

  }, {
    key: "toJson",
    value: function toJson(address, passphrase) {
      return _classPrivateFieldGet(this, _pairs).get(address).toJson(passphrase);
    }
  }]);

  return Keyring;
}();

exports.Keyring = Keyring;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/util-crypto":"node_modules/@polkadot/util-crypto/index.js","./defaults.js":"node_modules/@polkadot/keyring/defaults.js","./pair/index.js":"node_modules/@polkadot/keyring/pair/index.js","./pairs.js":"node_modules/@polkadot/keyring/pairs.js"}],"node_modules/@polkadot/keyring/testing.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PAIRSSR25519 = exports.PAIRSETHEREUM = void 0;
exports.createTestKeyring = createTestKeyring;

var _util = require("@polkadot/util");

var _keyring = require("./keyring.js");

var _index = require("./pair/index.js");

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

// NOTE This is not great since we have the secretKey here explicitly, but a testing
// keyring is for testing - what happens is that in most cases the keyring is initialises
// before anything else. Since the sr25519 crypto is async, this creates problems with
// adding the keys when only the keyring is used.
var PAIRSSR25519 = [{
  publicKey: (0, _util.hexToU8a)('0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d'),
  secretKey: (0, _util.hexToU8a)('0x98319d4ff8a9508c4bb0cf0b5a78d760a0b2082c02775e6e82370816fedfff48925a225d97aa00682d6a59b95b18780c10d7032336e88f3442b42361f4a66011'),
  // nosemgrep
  seed: 'Alice',
  type: 'sr25519'
}, {
  publicKey: (0, _util.hexToU8a)('0xbe5ddb1579b72e84524fc29e78609e3caf42e85aa118ebfe0b0ad404b5bdd25f'),
  secretKey: (0, _util.hexToU8a)('0xe8da6c9d810e020f5e3c7f5af2dea314cbeaa0d72bc6421e92c0808a0c584a6046ab28e97c3ffc77fe12b5a4d37e8cd4afbfebbf2391ffc7cb07c0f38c023efd'),
  // nosemgrep
  seed: 'Alice//stash',
  type: 'sr25519'
}, {
  publicKey: (0, _util.hexToU8a)('0x8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48'),
  secretKey: (0, _util.hexToU8a)('0x081ff694633e255136bdb456c20a5fc8fed21f8b964c11bb17ff534ce80ebd5941ae88f85d0c1bfc37be41c904e1dfc01de8c8067b0d6d5df25dd1ac0894a325'),
  // nosemgrep
  seed: 'Bob',
  type: 'sr25519'
}, {
  publicKey: (0, _util.hexToU8a)('0xfe65717dad0447d715f660a0a58411de509b42e6efb8375f562f58a554d5860e'),
  secretKey: (0, _util.hexToU8a)('0xc006507cdfc267a21532394c49ca9b754ca71de21e15a1cdf807c7ceab6d0b6c3ed408d9d35311540dcd54931933e67cf1ea10d46f75408f82b789d9bd212fde'),
  // nosemgrep
  seed: 'Bob//stash',
  type: 'sr25519'
}, {
  publicKey: (0, _util.hexToU8a)('0x90b5ab205c6974c9ea841be688864633dc9ca8a357843eeacf2314649965fe22'),
  secretKey: (0, _util.hexToU8a)('0xa8f2d83016052e5d6d77b2f6fd5d59418922a09024cda701b3c34369ec43a7668faf12ff39cd4e5d92bb773972f41a7a5279ebc2ed92264bed8f47d344f8f18c'),
  // nosemgrep
  seed: 'Charlie',
  type: 'sr25519'
}, {
  publicKey: (0, _util.hexToU8a)('0x306721211d5404bd9da88e0204360a1a9ab8b87c66c1bc2fcdd37f3c2222cc20'),
  secretKey: (0, _util.hexToU8a)('0x20e05482ca4677e0edbc58ae9a3a59f6ed3b1a9484ba17e64d6fe8688b2b7b5d108c4487b9323b98b11fe36cb301b084e920f7b7895536809a6d62a451b25568'),
  // nosemgrep
  seed: 'Dave',
  type: 'sr25519'
}, {
  publicKey: (0, _util.hexToU8a)('0xe659a7a1628cdd93febc04a4e0646ea20e9f5f0ce097d9a05290d4a9e054df4e'),
  secretKey: (0, _util.hexToU8a)('0x683576abfd5dc35273e4264c23095a1bf21c14517bece57c7f0cc5c0ed4ce06a3dbf386b7828f348abe15d76973a72009e6ef86a5c91db2990cb36bb657c6587'),
  // nosemgrep
  seed: 'Eve',
  type: 'sr25519'
}, {
  publicKey: (0, _util.hexToU8a)('0x1cbd2d43530a44705ad088af313e18f80b53ef16b36177cd4b77b846f2a5f07c'),
  secretKey: (0, _util.hexToU8a)('0xb835c20f450079cf4f513900ae9faf8df06ad86c681884122c752a4b2bf74d4303e4f21bc6cc62bb4eeed5a9cce642c25e2d2ac1464093b50f6196d78e3a7426'),
  // nosemgrep
  seed: 'Ferdie',
  type: 'sr25519'
}];
exports.PAIRSSR25519 = PAIRSSR25519;
var PAIRSETHEREUM = [{
  name: 'Alith',
  publicKey: (0, _util.hexToU8a)('0x02509540919faacf9ab52146c9aa40db68172d83777250b28e4679176e49ccdd9f'),
  secretKey: (0, _util.hexToU8a)('0x5fb92d6e98884f76de468fa3f6278f8807c48bebc13595d45af5bdc4da702133'),
  // nosemgrep
  type: 'ethereum'
}, {
  name: 'Baltathar',
  publicKey: (0, _util.hexToU8a)('0x033bc19e36ff1673910575b6727a974a9abd80c9a875d41ab3e2648dbfb9e4b518'),
  secretKey: (0, _util.hexToU8a)('0x8075991ce870b93a8870eca0c0f91913d12f47948ca0fd25b49c6fa7cdbeee8b'),
  // nosemgrep
  type: 'ethereum'
}, {
  name: 'Charleth',
  publicKey: (0, _util.hexToU8a)('0x0234637bdc0e89b5d46543bcbf8edff329d2702bc995e27e9af4b1ba009a3c2a5e'),
  secretKey: (0, _util.hexToU8a)('0x0b6e18cafb6ed99687ec547bd28139cafdd2bffe70e6b688025de6b445aa5c5b'),
  // nosemgrep
  type: 'ethereum'
}, {
  name: 'Dorothy',
  publicKey: (0, _util.hexToU8a)('0x02a00d60b2b408c2a14c5d70cdd2c205db8985ef737a7e55ad20ea32cc9e7c417c'),
  secretKey: (0, _util.hexToU8a)('0x39539ab1876910bbf3a223d84a29e28f1cb4e2e456503e7e91ed39b2e7223d68'),
  // nosemgrep
  type: 'ethereum'
}, {
  name: 'Ethan',
  publicKey: (0, _util.hexToU8a)('0x025cdc005b752651cd3f728fb9192182acb3a9c89e19072cbd5b03f3ee1f1b3ffa'),
  secretKey: (0, _util.hexToU8a)('0x7dce9bc8babb68fec1409be38c8e1a52650206a7ed90ff956ae8a6d15eeaaef4'),
  // nosemgrep
  type: 'ethereum'
}, {
  name: 'Faith',
  publicKey: (0, _util.hexToU8a)('0x037964b6c9d546da4646ada28a99e34acaa1d14e7aba861a9055f9bd200c8abf74'),
  secretKey: (0, _util.hexToU8a)('0xb9d2ea9a615f3165812e8d44de0d24da9bbd164b65c4f0573e1ce2c8dbd9c8df'),
  // nosemgrep
  type: 'ethereum'
}];
exports.PAIRSETHEREUM = PAIRSETHEREUM;

function createMeta(name, seed) {
  if (!name && !seed) {
    throw new Error('Testing pair should have either a name or a seed');
  }

  return {
    isTesting: true,
    name: name || seed && seed.replace('//', '_').toLowerCase()
  };
}
/**
 * @name testKeyring
 * @summary Create an instance of Keyring pre-populated with locked test accounts
 * @description The test accounts (i.e. alice, bob, dave, eve, ferdie)
 * are available on the dev chain and each test account is initialized with DOT funds.
 */


function createTestKeyring() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var isDerived = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  var keyring = new _keyring.Keyring(options);
  var pairs = options.type && options.type === 'ethereum' ? PAIRSETHEREUM : PAIRSSR25519;

  var _iterator = _createForOfIteratorHelper(pairs),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var _step$value = _step.value,
          name = _step$value.name,
          publicKey = _step$value.publicKey,
          secretKey = _step$value.secretKey,
          seed = _step$value.seed,
          type = _step$value.type;
      var meta = createMeta(name, seed);
      var pair = !isDerived && !name && seed ? keyring.addFromUri(seed, meta, options.type) : keyring.addPair((0, _index.createPair)({
        toSS58: keyring.encodeAddress,
        type: type
      }, {
        publicKey: publicKey,
        secretKey: secretKey
      }, meta));

      pair.lock = function () {// we don't have lock/unlock functionality here
      };
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  return keyring;
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./keyring.js":"node_modules/@polkadot/keyring/keyring.js","./pair/index.js":"node_modules/@polkadot/keyring/pair/index.js"}],"node_modules/@polkadot/keyring/pair/nobody.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.nobody = nobody;

var _utilCrypto = require("@polkadot/util-crypto");

// Copyright 2017-2022 @polkadot/keyring authors & contributors
// SPDX-License-Identifier: Apache-2.0
var publicKey = new Uint8Array(32);
var address = (0, _utilCrypto.encodeAddress)(publicKey);
var meta = {
  isTesting: true,
  name: 'nobody'
};
var json = {
  address: address,
  encoded: '',
  encoding: {
    content: ['pkcs8', 'ed25519'],
    type: 'none',
    version: '0'
  },
  meta: meta
};
var pair = {
  address: address,
  addressRaw: publicKey,
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  decodePkcs8: function decodePkcs8(passphrase, encoded) {
    return undefined;
  },
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  decryptMessage: function decryptMessage(encryptedMessageWithNonce, senderPublicKey) {
    return null;
  },
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  derive: function derive(suri, meta) {
    return pair;
  },
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  encodePkcs8: function encodePkcs8(passphrase) {
    return new Uint8Array(0);
  },
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  encryptMessage: function encryptMessage(message, recipientPublicKey, _nonce) {
    return new Uint8Array();
  },
  isLocked: true,
  lock: function lock() {// no locking, it is always locked
  },
  meta: meta,
  publicKey: publicKey,
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  setMeta: function setMeta(meta) {
    return undefined;
  },
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  sign: function sign(message) {
    return new Uint8Array(64);
  },
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  toJson: function toJson(passphrase) {
    return json;
  },
  type: 'ed25519',
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  unlock: function unlock(passphrase) {
    return undefined;
  },
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  verify: function verify(message, signature) {
    return false;
  },
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  vrfSign: function vrfSign(message, context, extra) {
    return new Uint8Array(96);
  },
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  vrfVerify: function vrfVerify(message, vrfResult, context, extra) {
    return false;
  }
};

function nobody() {
  return pair;
}
},{"@polkadot/util-crypto":"node_modules/@polkadot/util-crypto/index.js"}],"node_modules/@polkadot/keyring/testingPairs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createTestPairs = createTestPairs;

var _nobody = require("./pair/nobody.js");

var _testing = require("./testing.js");

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function createTestPairs(options) {
  var isDerived = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  var keyring = (0, _testing.createTestKeyring)(options, isDerived);
  var pairs = keyring.getPairs();
  var map = {
    nobody: (0, _nobody.nobody)()
  };

  var _iterator = _createForOfIteratorHelper(pairs),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var p = _step.value;
      map[p.meta.name] = p;
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  return map;
}
},{"./pair/nobody.js":"node_modules/@polkadot/keyring/pair/nobody.js","./testing.js":"node_modules/@polkadot/keyring/testing.js"}],"node_modules/@polkadot/keyring/bundle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  Keyring: true,
  decodeAddress: true,
  encodeAddress: true,
  setSS58Format: true,
  createPair: true,
  packageInfo: true,
  createTestKeyring: true,
  createTestPairs: true
};
Object.defineProperty(exports, "Keyring", {
  enumerable: true,
  get: function () {
    return _keyring.Keyring;
  }
});
Object.defineProperty(exports, "createPair", {
  enumerable: true,
  get: function () {
    return _index.createPair;
  }
});
Object.defineProperty(exports, "createTestKeyring", {
  enumerable: true,
  get: function () {
    return _testing.createTestKeyring;
  }
});
Object.defineProperty(exports, "createTestPairs", {
  enumerable: true,
  get: function () {
    return _testingPairs.createTestPairs;
  }
});
Object.defineProperty(exports, "decodeAddress", {
  enumerable: true,
  get: function () {
    return _utilCrypto.decodeAddress;
  }
});
Object.defineProperty(exports, "encodeAddress", {
  enumerable: true,
  get: function () {
    return _utilCrypto.encodeAddress;
  }
});
Object.defineProperty(exports, "packageInfo", {
  enumerable: true,
  get: function () {
    return _packageInfo.packageInfo;
  }
});
Object.defineProperty(exports, "setSS58Format", {
  enumerable: true,
  get: function () {
    return _utilCrypto.setSS58Format;
  }
});

var _keyring = require("./keyring.js");

var _utilCrypto = require("@polkadot/util-crypto");

var _defaults = require("./defaults.js");

Object.keys(_defaults).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _defaults[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _defaults[key];
    }
  });
});

var _index = require("./pair/index.js");

var _packageInfo = require("./packageInfo.js");

var _testing = require("./testing.js");

var _testingPairs = require("./testingPairs.js");
},{"./keyring.js":"node_modules/@polkadot/keyring/keyring.js","@polkadot/util-crypto":"node_modules/@polkadot/util-crypto/index.js","./defaults.js":"node_modules/@polkadot/keyring/defaults.js","./pair/index.js":"node_modules/@polkadot/keyring/pair/index.js","./packageInfo.js":"node_modules/@polkadot/keyring/packageInfo.js","./testing.js":"node_modules/@polkadot/keyring/testing.js","./testingPairs.js":"node_modules/@polkadot/keyring/testingPairs.js"}],"node_modules/@polkadot/keyring/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {};
exports.default = void 0;

require("./detectPackage.js");

var _bundle = require("./bundle.js");

Object.keys(_bundle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _bundle[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bundle[key];
    }
  });
});
// Copyright 2017-2022 @polkadot/keyring authors & contributors
// SPDX-License-Identifier: Apache-2.0
var _default = _bundle.Keyring;
exports.default = _default;
},{"./detectPackage.js":"node_modules/@polkadot/keyring/detectPackage.js","./bundle.js":"node_modules/@polkadot/keyring/bundle.js"}],"node_modules/@polkadot/rpc-provider/detectOther.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _packageInfo = require("@polkadot/types/packageInfo");

// Copyright 2017-2022 @polkadot/rpc-provider authors & contributors
// SPDX-License-Identifier: Apache-2.0
var _default = [_packageInfo.packageInfo];
exports.default = _default;
},{"@polkadot/types/packageInfo":"node_modules/@polkadot/types/packageInfo.js"}],"node_modules/@polkadot/rpc-provider/detectPackage.js":[function(require,module,exports) {
"use strict";

var _util = require("@polkadot/util");

var _detectOther = _interopRequireDefault(require("./detectOther.js"));

var _packageInfo = require("./packageInfo.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/rpc-provider authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
(0, _util.detectPackage)(_packageInfo.packageInfo, null, _detectOther.default);
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./detectOther.js":"node_modules/@polkadot/rpc-provider/detectOther.js","./packageInfo.js":"node_modules/@polkadot/rpc-provider/packageInfo.js"}],"node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _classPrivateFieldBase;

function _classPrivateFieldBase(receiver, privateKey) {
  if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {
    throw new TypeError("attempted to use private field on non-instance");
  }

  return receiver;
}
},{}],"node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _classPrivateFieldKey;
var id = 0;

function _classPrivateFieldKey(name) {
  return "__private_" + id++ + "_" + name;
}
},{}],"node_modules/@polkadot/x-fetch/cjs/packageInfo.js":[function(require,module,exports) {
var __dirname = "C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\x-fetch\\cjs";
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packageInfo = void 0;
// Copyright 2017-2022 @polkadot/x-fetch authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
const packageInfo = {
  name: '@polkadot/x-fetch',
  path: typeof __dirname === 'string' ? __dirname : 'auto',
  type: 'cjs',
  version: '9.7.2'
};
exports.packageInfo = packageInfo;
},{}],"node_modules/@polkadot/x-fetch/cjs/browser.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fetch = void 0;
Object.defineProperty(exports, "packageInfo", {
  enumerable: true,
  get: function () {
    return _packageInfo.packageInfo;
  }
});

var _xGlobal = require("@polkadot/x-global");

var _packageInfo = require("./packageInfo");

// Copyright 2017-2022 @polkadot/x-fetch authors & contributors
// SPDX-License-Identifier: Apache-2.0
const fetch = _xGlobal.xglobal.fetch;
exports.fetch = fetch;
},{"@polkadot/x-global":"node_modules/@polkadot/x-global/index.js","./packageInfo":"node_modules/@polkadot/x-fetch/cjs/packageInfo.js"}],"node_modules/@polkadot/rpc-provider/coder/error.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _function = require("@polkadot/util/is/function");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var UNKNOWN = -99999;

function extend(that, name, value) {
  Object.defineProperty(that, name, {
    configurable: true,
    enumerable: false,
    value: value
  });
}
/**
 * @name RpcError
 * @summary Extension to the basic JS Error.
 * @description
 * The built-in JavaScript Error class is extended by adding a code to allow for Error categorization. In addition to the normal `stack`, `message`, the numeric `code` and `data` (any types) parameters are available on the object.
 * @example
 * <BR>
 *
 * ```javascript
 * const { RpcError } from '@polkadot/util');
 *
 * throw new RpcError('some message', RpcError.CODES.METHOD_NOT_FOUND); // => error.code = -32601
 * ```
 */


var RpcError = /*#__PURE__*/function (_Error) {
  _inherits(RpcError, _Error);

  var _super = _createSuper(RpcError);

  function RpcError() {
    var _this;

    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
    var code = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : UNKNOWN;
    var data = arguments.length > 2 ? arguments[2] : undefined;

    _classCallCheck(this, RpcError);

    _this = _super.call(this);
    extend(_assertThisInitialized(_this), 'message', String(message));
    extend(_assertThisInitialized(_this), 'name', _this.constructor.name);
    extend(_assertThisInitialized(_this), 'data', data);
    extend(_assertThisInitialized(_this), 'code', code);

    if ((0, _function.isFunction)(Error.captureStackTrace)) {
      Error.captureStackTrace(_assertThisInitialized(_this), _this.constructor);
    } else {
      var _Error2 = new Error(message),
          stack = _Error2.stack;

      stack && extend(_assertThisInitialized(_this), 'stack', stack);
    }

    return _this;
  }

  return _createClass(RpcError);
}( /*#__PURE__*/_wrapNativeSuper(Error));

exports.default = RpcError;

_defineProperty(RpcError, "CODES", {
  ASSERT: -90009,
  INVALID_JSONRPC: -99998,
  METHOD_NOT_FOUND: -32601,
  // Rust client
  UNKNOWN: UNKNOWN
});
},{"@polkadot/util/is/function":"node_modules/@polkadot/util/is/function.js"}],"node_modules/@polkadot/rpc-provider/coder/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RpcCoder = void 0;

var _util = require("@polkadot/util");

var _error = _interopRequireDefault(require("./error.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function formatErrorData(data) {
  if ((0, _util.isUndefined)(data)) {
    return '';
  }

  var formatted = ": ".concat((0, _util.isString)(data) ? data.replace(/Error\("/g, '').replace(/\("/g, '(').replace(/"\)/g, ')').replace(/\(/g, ', ').replace(/\)/g, '') : (0, _util.stringify)(data)); // We need some sort of cut-off here since these can be very large and
  // very nested, pick a number and trim the result display to it

  return formatted.length <= 256 ? formatted : "".concat(formatted.substring(0, 255), "\u2026");
}

function checkError(error) {
  if (error) {
    var code = error.code,
        data = error.data,
        message = error.message;
    throw new _error.default("".concat(code, ": ").concat(message).concat(formatErrorData(data)), code, data);
  }
}
/** @internal */


var _id = /*#__PURE__*/new WeakMap();

var RpcCoder = /*#__PURE__*/function () {
  function RpcCoder() {
    _classCallCheck(this, RpcCoder);

    _classPrivateFieldInitSpec(this, _id, {
      writable: true,
      value: 0
    });
  }

  _createClass(RpcCoder, [{
    key: "decodeResponse",
    value: function decodeResponse(response) {
      if (!response || response.jsonrpc !== '2.0') {
        throw new Error('Invalid jsonrpc field in decoded object');
      }

      var isSubscription = !(0, _util.isUndefined)(response.params) && !(0, _util.isUndefined)(response.method);

      if (!(0, _util.isNumber)(response.id) && (!isSubscription || !(0, _util.isNumber)(response.params.subscription) && !(0, _util.isString)(response.params.subscription))) {
        throw new Error('Invalid id field in decoded object');
      }

      checkError(response.error);

      if (response.result === undefined && !isSubscription) {
        throw new Error('No result found in jsonrpc response');
      }

      if (isSubscription) {
        checkError(response.params.error);
        return response.params.result;
      }

      return response.result;
    }
  }, {
    key: "encodeJson",
    value: function encodeJson(method, params) {
      var _this$encodeObject = this.encodeObject(method, params),
          _this$encodeObject2 = _slicedToArray(_this$encodeObject, 2),
          id = _this$encodeObject2[0],
          data = _this$encodeObject2[1];

      return [id, (0, _util.stringify)(data)];
    }
  }, {
    key: "encodeObject",
    value: function encodeObject(method, params) {
      var _this$id;

      var id = _classPrivateFieldSet(this, _id, (_this$id = _classPrivateFieldGet(this, _id), ++_this$id));

      return [id, {
        id: id,
        jsonrpc: '2.0',
        method: method,
        params: params
      }];
    }
  }]);

  return RpcCoder;
}();

exports.RpcCoder = RpcCoder;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./error.js":"node_modules/@polkadot/rpc-provider/coder/error.js"}],"node_modules/@polkadot/rpc-provider/defaults.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/rpc-provider authors & contributors
// SPDX-License-Identifier: Apache-2.0
var HTTP_URL = 'http://127.0.0.1:9933';
var WS_URL = 'ws://127.0.0.1:9944';
var _default = {
  HTTP_URL: HTTP_URL,
  WS_URL: WS_URL
};
exports.default = _default;
},{}],"node_modules/@polkadot/rpc-provider/lru.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LRUCache = void 0;

var _classPrivateFieldLooseBase2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/classPrivateFieldLooseBase"));

var _classPrivateFieldLooseKey2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/classPrivateFieldLooseKey"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// Copyright 2017-2022 @polkadot/rpc-provider authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Assuming all 1.5MB responses, we apply a default allowing for 192MB
// cache space (depending on the historic queries this would vary, metadata
// for Kusama/Polkadot/Substrate falls between 600-750K, 2x for estimate)
var DEFAULT_CAPACITY = 128;

var LRUNode = /*#__PURE__*/_createClass(function LRUNode(key) {
  _classCallCheck(this, LRUNode);

  this.key = key;
  this.next = this.prev = this;
}); // https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU


var _data = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("data");

var _refs = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("refs");

var _length = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("length");

var _head = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("head");

var _tail = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("tail");

var _toHead = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("toHead");

var LRUCache = /*#__PURE__*/function () {
  function LRUCache() {
    var capacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_CAPACITY;

    _classCallCheck(this, LRUCache);

    Object.defineProperty(this, _toHead, {
      value: _toHead2
    });
    this.capacity = void 0;
    Object.defineProperty(this, _data, {
      writable: true,
      value: new Map()
    });
    Object.defineProperty(this, _refs, {
      writable: true,
      value: new Map()
    });
    Object.defineProperty(this, _length, {
      writable: true,
      value: 0
    });
    Object.defineProperty(this, _head, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _tail, {
      writable: true,
      value: void 0
    });
    this.capacity = capacity;
    (0, _classPrivateFieldLooseBase2.default)(this, _head)[_head] = (0, _classPrivateFieldLooseBase2.default)(this, _tail)[_tail] = new LRUNode('<empty>');
  }

  _createClass(LRUCache, [{
    key: "length",
    get: function get() {
      return (0, _classPrivateFieldLooseBase2.default)(this, _length)[_length];
    }
  }, {
    key: "lengthData",
    get: function get() {
      return (0, _classPrivateFieldLooseBase2.default)(this, _data)[_data].size;
    }
  }, {
    key: "lengthRefs",
    get: function get() {
      return (0, _classPrivateFieldLooseBase2.default)(this, _refs)[_refs].size;
    }
  }, {
    key: "entries",
    value: function entries() {
      var keys = this.keys();
      var entries = new Array(keys.length);

      for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        entries[i] = [key, (0, _classPrivateFieldLooseBase2.default)(this, _data)[_data].get(key)];
      }

      return entries;
    }
  }, {
    key: "keys",
    value: function keys() {
      var keys = [];

      if ((0, _classPrivateFieldLooseBase2.default)(this, _length)[_length]) {
        var curr = (0, _classPrivateFieldLooseBase2.default)(this, _head)[_head];

        while (curr !== (0, _classPrivateFieldLooseBase2.default)(this, _tail)[_tail]) {
          keys.push(curr.key);
          curr = curr.next;
        }

        keys.push(curr.key);
      }

      return keys;
    }
  }, {
    key: "get",
    value: function get(key) {
      var data = (0, _classPrivateFieldLooseBase2.default)(this, _data)[_data].get(key);

      if (data) {
        (0, _classPrivateFieldLooseBase2.default)(this, _toHead)[_toHead](key);

        return data;
      }

      return null;
    }
  }, {
    key: "set",
    value: function set(key, value) {
      if ((0, _classPrivateFieldLooseBase2.default)(this, _data)[_data].has(key)) {
        (0, _classPrivateFieldLooseBase2.default)(this, _toHead)[_toHead](key);
      } else {
        var node = new LRUNode(key);

        (0, _classPrivateFieldLooseBase2.default)(this, _refs)[_refs].set(node.key, node);

        if (this.length === 0) {
          (0, _classPrivateFieldLooseBase2.default)(this, _head)[_head] = (0, _classPrivateFieldLooseBase2.default)(this, _tail)[_tail] = node;
        } else {
          (0, _classPrivateFieldLooseBase2.default)(this, _head)[_head].prev = node;
          node.next = (0, _classPrivateFieldLooseBase2.default)(this, _head)[_head];
          (0, _classPrivateFieldLooseBase2.default)(this, _head)[_head] = node;
        }

        if ((0, _classPrivateFieldLooseBase2.default)(this, _length)[_length] === this.capacity) {
          (0, _classPrivateFieldLooseBase2.default)(this, _data)[_data].delete((0, _classPrivateFieldLooseBase2.default)(this, _tail)[_tail].key);

          (0, _classPrivateFieldLooseBase2.default)(this, _refs)[_refs].delete((0, _classPrivateFieldLooseBase2.default)(this, _tail)[_tail].key);

          (0, _classPrivateFieldLooseBase2.default)(this, _tail)[_tail] = (0, _classPrivateFieldLooseBase2.default)(this, _tail)[_tail].prev;
          (0, _classPrivateFieldLooseBase2.default)(this, _tail)[_tail].next = (0, _classPrivateFieldLooseBase2.default)(this, _head)[_head];
        } else {
          (0, _classPrivateFieldLooseBase2.default)(this, _length)[_length] += 1;
        }
      }

      (0, _classPrivateFieldLooseBase2.default)(this, _data)[_data].set(key, value);
    }
  }]);

  return LRUCache;
}();

exports.LRUCache = LRUCache;

function _toHead2(key) {
  var ref = (0, _classPrivateFieldLooseBase2.default)(this, _refs)[_refs].get(key);

  if (ref && ref !== (0, _classPrivateFieldLooseBase2.default)(this, _head)[_head]) {
    ref.prev.next = ref.next;
    ref.next.prev = ref.prev;
    ref.next = (0, _classPrivateFieldLooseBase2.default)(this, _head)[_head];
    (0, _classPrivateFieldLooseBase2.default)(this, _head)[_head].prev = ref;
    (0, _classPrivateFieldLooseBase2.default)(this, _head)[_head] = ref;
  }
}
},{"@babel/runtime/helpers/esm/classPrivateFieldLooseBase":"node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js","@babel/runtime/helpers/esm/classPrivateFieldLooseKey":"node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js"}],"node_modules/@polkadot/rpc-provider/http/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HttpProvider = void 0;

var _classPrivateFieldLooseBase2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/classPrivateFieldLooseBase"));

var _classPrivateFieldLooseKey2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/classPrivateFieldLooseKey"));

var _util = require("@polkadot/util");

var _xFetch = require("@polkadot/x-fetch");

var _index = require("../coder/index.js");

var _defaults = _interopRequireDefault(require("../defaults.js"));

var _lru = require("../lru.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var ERROR_SUBSCRIBE = 'HTTP Provider does not have subscriptions, use WebSockets instead';
var l = (0, _util.logger)('api-http');
/**
 * # @polkadot/rpc-provider
 *
 * @name HttpProvider
 *
 * @description The HTTP Provider allows sending requests using HTTP to a HTTP RPC server TCP port. It does not support subscriptions so you won't be able to listen to events such as new blocks or balance changes. It is usually preferable using the [[WsProvider]].
 *
 * @example
 * <BR>
 *
 * ```javascript
 * import Api from '@polkadot/api/promise';
 * import { HttpProvider } from '@polkadot/rpc-provider';
 *
 * const provider = new HttpProvider('http://127.0.0.1:9933');
 * const api = new Api(provider);
 * ```
 *
 * @see [[WsProvider]]
 */

var _callCache = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("callCache");

var _coder = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("coder");

var _endpoint = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("endpoint");

var _headers = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("headers");

var _stats = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("stats");

var _send = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("send");

var HttpProvider = /*#__PURE__*/function () {
  /**
   * @param {string} endpoint The endpoint url starting with http://
   */
  function HttpProvider() {
    var endpoint = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _defaults.default.HTTP_URL;
    var headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, HttpProvider);

    Object.defineProperty(this, _send, {
      value: _send2
    });
    Object.defineProperty(this, _callCache, {
      writable: true,
      value: new _lru.LRUCache()
    });
    Object.defineProperty(this, _coder, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _endpoint, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _headers, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _stats, {
      writable: true,
      value: void 0
    });

    if (!/^(https|http):\/\//.test(endpoint)) {
      throw new Error("Endpoint should start with 'http://' or 'https://', received '".concat(endpoint, "'"));
    }

    (0, _classPrivateFieldLooseBase2.default)(this, _coder)[_coder] = new _index.RpcCoder();
    (0, _classPrivateFieldLooseBase2.default)(this, _endpoint)[_endpoint] = endpoint;
    (0, _classPrivateFieldLooseBase2.default)(this, _headers)[_headers] = headers;
    (0, _classPrivateFieldLooseBase2.default)(this, _stats)[_stats] = {
      active: {
        requests: 0,
        subscriptions: 0
      },
      total: {
        bytesRecv: 0,
        bytesSent: 0,
        cached: 0,
        errors: 0,
        requests: 0,
        subscriptions: 0,
        timeout: 0
      }
    };
  }
  /**
   * @summary `true` when this provider supports subscriptions
   */


  _createClass(HttpProvider, [{
    key: "hasSubscriptions",
    get: function get() {
      return false;
    }
    /**
     * @description Returns a clone of the object
     */

  }, {
    key: "clone",
    value: function clone() {
      return new HttpProvider((0, _classPrivateFieldLooseBase2.default)(this, _endpoint)[_endpoint], (0, _classPrivateFieldLooseBase2.default)(this, _headers)[_headers]);
    }
    /**
     * @description Manually connect from the connection
     */

  }, {
    key: "connect",
    value: function () {
      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function connect() {
        return _connect.apply(this, arguments);
      }

      return connect;
    }()
    /**
     * @description Manually disconnect from the connection
     */

  }, {
    key: "disconnect",
    value: function () {
      var _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function disconnect() {
        return _disconnect.apply(this, arguments);
      }

      return disconnect;
    }()
    /**
     * @description Returns the connection stats
     */

  }, {
    key: "stats",
    get: function get() {
      return (0, _classPrivateFieldLooseBase2.default)(this, _stats)[_stats];
    }
    /**
     * @summary Whether the node is connected or not.
     * @return {boolean} true if connected
     */

  }, {
    key: "isConnected",
    get: function get() {
      return true;
    }
    /**
     * @summary Events are not supported with the HttpProvider, see [[WsProvider]].
     * @description HTTP Provider does not have 'on' emitters. WebSockets should be used instead.
     */
    // eslint-disable-next-line @typescript-eslint/no-unused-vars

  }, {
    key: "on",
    value: function on(type, sub) {
      l.error('HTTP Provider does not have \'on\' emitters, use WebSockets instead');
      return function () {// noop
      };
    }
    /**
     * @summary Send HTTP POST Request with Body to configured HTTP Endpoint.
     */

  }, {
    key: "send",
    value: function () {
      var _send3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(method, params, isCacheable) {
        var _classPrivateFieldLoo, _classPrivateFieldLoo2, body, resultPromise;

        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                (0, _classPrivateFieldLooseBase2.default)(this, _stats)[_stats].total.requests++;
                _classPrivateFieldLoo = (0, _classPrivateFieldLooseBase2.default)(this, _coder)[_coder].encodeJson(method, params), _classPrivateFieldLoo2 = _slicedToArray(_classPrivateFieldLoo, 2), body = _classPrivateFieldLoo2[1];
                resultPromise = isCacheable ? (0, _classPrivateFieldLooseBase2.default)(this, _callCache)[_callCache].get(body) : null;

                if (!resultPromise) {
                  resultPromise = (0, _classPrivateFieldLooseBase2.default)(this, _send)[_send](body);

                  if (isCacheable) {
                    (0, _classPrivateFieldLooseBase2.default)(this, _callCache)[_callCache].set(body, resultPromise);
                  }
                } else {
                  (0, _classPrivateFieldLooseBase2.default)(this, _stats)[_stats].total.cached++;
                }

                return _context3.abrupt("return", resultPromise);

              case 5:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function send(_x, _x2, _x3) {
        return _send3.apply(this, arguments);
      }

      return send;
    }()
    /**
     * @summary Subscriptions are not supported with the HttpProvider, see [[WsProvider]].
     */
    // eslint-disable-next-line @typescript-eslint/no-unused-vars,@typescript-eslint/require-await

  }, {
    key: "subscribe",
    value: function () {
      var _subscribe = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(types, method, params, cb) {
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                l.error(ERROR_SUBSCRIBE);
                throw new Error(ERROR_SUBSCRIBE);

              case 2:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));

      function subscribe(_x4, _x5, _x6, _x7) {
        return _subscribe.apply(this, arguments);
      }

      return subscribe;
    }()
    /**
     * @summary Subscriptions are not supported with the HttpProvider, see [[WsProvider]].
     */
    // eslint-disable-next-line @typescript-eslint/no-unused-vars,@typescript-eslint/require-await

  }, {
    key: "unsubscribe",
    value: function () {
      var _unsubscribe = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(type, method, id) {
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                l.error(ERROR_SUBSCRIBE);
                throw new Error(ERROR_SUBSCRIBE);

              case 2:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5);
      }));

      function unsubscribe(_x8, _x9, _x10) {
        return _unsubscribe.apply(this, arguments);
      }

      return unsubscribe;
    }()
  }]);

  return HttpProvider;
}();

exports.HttpProvider = HttpProvider;

function _send2(_x11) {
  return _send4.apply(this, arguments);
}

function _send4() {
  _send4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(body) {
    var response, result, decoded;
    return _regeneratorRuntime().wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            (0, _classPrivateFieldLooseBase2.default)(this, _stats)[_stats].active.requests++;
            (0, _classPrivateFieldLooseBase2.default)(this, _stats)[_stats].total.bytesSent += body.length;
            _context6.prev = 2;
            _context6.next = 5;
            return (0, _xFetch.fetch)((0, _classPrivateFieldLooseBase2.default)(this, _endpoint)[_endpoint], {
              body: body,
              headers: _objectSpread({
                Accept: 'application/json',
                'Content-Length': "".concat(body.length),
                'Content-Type': 'application/json'
              }, (0, _classPrivateFieldLooseBase2.default)(this, _headers)[_headers]),
              method: 'POST'
            });

          case 5:
            response = _context6.sent;

            if (response.ok) {
              _context6.next = 8;
              break;
            }

            throw new Error("[".concat(response.status, "]: ").concat(response.statusText));

          case 8:
            _context6.next = 10;
            return response.text();

          case 10:
            result = _context6.sent;
            (0, _classPrivateFieldLooseBase2.default)(this, _stats)[_stats].total.bytesRecv += result.length;
            decoded = (0, _classPrivateFieldLooseBase2.default)(this, _coder)[_coder].decodeResponse(JSON.parse(result));
            (0, _classPrivateFieldLooseBase2.default)(this, _stats)[_stats].active.requests--;
            return _context6.abrupt("return", decoded);

          case 17:
            _context6.prev = 17;
            _context6.t0 = _context6["catch"](2);
            (0, _classPrivateFieldLooseBase2.default)(this, _stats)[_stats].active.requests--;
            (0, _classPrivateFieldLooseBase2.default)(this, _stats)[_stats].total.errors++;
            throw _context6.t0;

          case 22:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6, this, [[2, 17]]);
  }));
  return _send4.apply(this, arguments);
}
},{"@babel/runtime/helpers/esm/classPrivateFieldLooseBase":"node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js","@babel/runtime/helpers/esm/classPrivateFieldLooseKey":"node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js","@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/x-fetch":"node_modules/@polkadot/x-fetch/cjs/browser.js","../coder/index.js":"node_modules/@polkadot/rpc-provider/coder/index.js","../defaults.js":"node_modules/@polkadot/rpc-provider/defaults.js","../lru.js":"node_modules/@polkadot/rpc-provider/lru.js"}],"node_modules/eventemitter3/index.js":[function(require,module,exports) {
'use strict';

var has = Object.prototype.hasOwnProperty
  , prefix = '~';

/**
 * Constructor to create a storage for our `EE` objects.
 * An `Events` instance is a plain object whose properties are event names.
 *
 * @constructor
 * @private
 */
function Events() {}

//
// We try to not inherit from `Object.prototype`. In some engines creating an
// instance in this way is faster than calling `Object.create(null)` directly.
// If `Object.create(null)` is not supported we prefix the event names with a
// character to make sure that the built-in object properties are not
// overridden or used as an attack vector.
//
if (Object.create) {
  Events.prototype = Object.create(null);

  //
  // This hack is needed because the `__proto__` property is still inherited in
  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.
  //
  if (!new Events().__proto__) prefix = false;
}

/**
 * Representation of a single event listener.
 *
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} [once=false] Specify if the listener is a one-time listener.
 * @constructor
 * @private
 */
function EE(fn, context, once) {
  this.fn = fn;
  this.context = context;
  this.once = once || false;
}

/**
 * Add a listener for a given event.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} once Specify if the listener is a one-time listener.
 * @returns {EventEmitter}
 * @private
 */
function addListener(emitter, event, fn, context, once) {
  if (typeof fn !== 'function') {
    throw new TypeError('The listener must be a function');
  }

  var listener = new EE(fn, context || emitter, once)
    , evt = prefix ? prefix + event : event;

  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;
  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);
  else emitter._events[evt] = [emitter._events[evt], listener];

  return emitter;
}

/**
 * Clear event by name.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} evt The Event name.
 * @private
 */
function clearEvent(emitter, evt) {
  if (--emitter._eventsCount === 0) emitter._events = new Events();
  else delete emitter._events[evt];
}

/**
 * Minimal `EventEmitter` interface that is molded against the Node.js
 * `EventEmitter` interface.
 *
 * @constructor
 * @public
 */
function EventEmitter() {
  this._events = new Events();
  this._eventsCount = 0;
}

/**
 * Return an array listing the events for which the emitter has registered
 * listeners.
 *
 * @returns {Array}
 * @public
 */
EventEmitter.prototype.eventNames = function eventNames() {
  var names = []
    , events
    , name;

  if (this._eventsCount === 0) return names;

  for (name in (events = this._events)) {
    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);
  }

  if (Object.getOwnPropertySymbols) {
    return names.concat(Object.getOwnPropertySymbols(events));
  }

  return names;
};

/**
 * Return the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Array} The registered listeners.
 * @public
 */
EventEmitter.prototype.listeners = function listeners(event) {
  var evt = prefix ? prefix + event : event
    , handlers = this._events[evt];

  if (!handlers) return [];
  if (handlers.fn) return [handlers.fn];

  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {
    ee[i] = handlers[i].fn;
  }

  return ee;
};

/**
 * Return the number of listeners listening to a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Number} The number of listeners.
 * @public
 */
EventEmitter.prototype.listenerCount = function listenerCount(event) {
  var evt = prefix ? prefix + event : event
    , listeners = this._events[evt];

  if (!listeners) return 0;
  if (listeners.fn) return 1;
  return listeners.length;
};

/**
 * Calls each of the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Boolean} `true` if the event had listeners, else `false`.
 * @public
 */
EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
  var evt = prefix ? prefix + event : event;

  if (!this._events[evt]) return false;

  var listeners = this._events[evt]
    , len = arguments.length
    , args
    , i;

  if (listeners.fn) {
    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);

    switch (len) {
      case 1: return listeners.fn.call(listeners.context), true;
      case 2: return listeners.fn.call(listeners.context, a1), true;
      case 3: return listeners.fn.call(listeners.context, a1, a2), true;
      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;
      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
    }

    for (i = 1, args = new Array(len -1); i < len; i++) {
      args[i - 1] = arguments[i];
    }

    listeners.fn.apply(listeners.context, args);
  } else {
    var length = listeners.length
      , j;

    for (i = 0; i < length; i++) {
      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);

      switch (len) {
        case 1: listeners[i].fn.call(listeners[i].context); break;
        case 2: listeners[i].fn.call(listeners[i].context, a1); break;
        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;
        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;
        default:
          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {
            args[j - 1] = arguments[j];
          }

          listeners[i].fn.apply(listeners[i].context, args);
      }
    }
  }

  return true;
};

/**
 * Add a listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.on = function on(event, fn, context) {
  return addListener(this, event, fn, context, false);
};

/**
 * Add a one-time listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.once = function once(event, fn, context) {
  return addListener(this, event, fn, context, true);
};

/**
 * Remove the listeners of a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn Only remove the listeners that match this function.
 * @param {*} context Only remove the listeners that have this context.
 * @param {Boolean} once Only remove one-time listeners.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
  var evt = prefix ? prefix + event : event;

  if (!this._events[evt]) return this;
  if (!fn) {
    clearEvent(this, evt);
    return this;
  }

  var listeners = this._events[evt];

  if (listeners.fn) {
    if (
      listeners.fn === fn &&
      (!once || listeners.once) &&
      (!context || listeners.context === context)
    ) {
      clearEvent(this, evt);
    }
  } else {
    for (var i = 0, events = [], length = listeners.length; i < length; i++) {
      if (
        listeners[i].fn !== fn ||
        (once && !listeners[i].once) ||
        (context && listeners[i].context !== context)
      ) {
        events.push(listeners[i]);
      }
    }

    //
    // Reset the array, or remove it completely if we have no more listeners.
    //
    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;
    else clearEvent(this, evt);
  }

  return this;
};

/**
 * Remove all listeners, or those of the specified event.
 *
 * @param {(String|Symbol)} [event] The event name.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
  var evt;

  if (event) {
    evt = prefix ? prefix + event : event;
    if (this._events[evt]) clearEvent(this, evt);
  } else {
    this._events = new Events();
    this._eventsCount = 0;
  }

  return this;
};

//
// Alias methods names because people roll like that.
//
EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.addListener = EventEmitter.prototype.on;

//
// Expose the prefix.
//
EventEmitter.prefixed = prefix;

//
// Allow `EventEmitter` to be imported as module namespace.
//
EventEmitter.EventEmitter = EventEmitter;

//
// Expose the module.
//
if ('undefined' !== typeof module) {
  module.exports = EventEmitter;
}

},{}],"node_modules/@polkadot/x-ws/cjs/packageInfo.js":[function(require,module,exports) {
var __dirname = "C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\x-ws\\cjs";
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packageInfo = void 0;
// Copyright 2017-2022 @polkadot/x-ws authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
const packageInfo = {
  name: '@polkadot/x-ws',
  path: typeof __dirname === 'string' ? __dirname : 'auto',
  type: 'cjs',
  version: '9.7.2'
};
exports.packageInfo = packageInfo;
},{}],"node_modules/@polkadot/x-ws/cjs/browser.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WebSocket = void 0;
Object.defineProperty(exports, "packageInfo", {
  enumerable: true,
  get: function () {
    return _packageInfo.packageInfo;
  }
});

var _xGlobal = require("@polkadot/x-global");

var _packageInfo = require("./packageInfo");

// Copyright 2017-2022 @polkadot/x-ws authors & contributors
// SPDX-License-Identifier: Apache-2.0
const WebSocket = _xGlobal.xglobal.WebSocket;
exports.WebSocket = WebSocket;
},{"@polkadot/x-global":"node_modules/@polkadot/x-global/index.js","./packageInfo":"node_modules/@polkadot/x-ws/cjs/packageInfo.js"}],"node_modules/@polkadot/rpc-provider/ws/errors.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getWSErrorString = getWSErrorString;
// Copyright 2017-2022 @polkadot/rpc-provider authors & contributors
// SPDX-License-Identifier: Apache-2.0
// from https://stackoverflow.com/questions/19304157/getting-the-reason-why-websockets-closed-with-close-code-1006
var known = {
  1000: 'Normal Closure',
  1001: 'Going Away',
  1002: 'Protocol Error',
  1003: 'Unsupported Data',
  1004: '(For future)',
  1005: 'No Status Received',
  1006: 'Abnormal Closure',
  1007: 'Invalid frame payload data',
  1008: 'Policy Violation',
  1009: 'Message too big',
  1010: 'Missing Extension',
  1011: 'Internal Error',
  1012: 'Service Restart',
  1013: 'Try Again Later',
  1014: 'Bad Gateway',
  1015: 'TLS Handshake'
};

function getUnmapped(code) {
  if (code <= 1999) {
    return '(For WebSocket standard)';
  } else if (code <= 2999) {
    return '(For WebSocket extensions)';
  } else if (code <= 3999) {
    return '(For libraries and frameworks)';
  } else if (code <= 4999) {
    return '(For applications)';
  }
}

function getWSErrorString(code) {
  if (code >= 0 && code <= 999) {
    return '(Unused)';
  }

  return known[code] || getUnmapped(code) || '(Unknown)';
}
},{}],"node_modules/@polkadot/rpc-provider/ws/index.js":[function(require,module,exports) {
var define;
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WsProvider = void 0;

var _classPrivateFieldLooseBase2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/classPrivateFieldLooseBase"));

var _classPrivateFieldLooseKey2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/classPrivateFieldLooseKey"));

var _eventemitter2 = _interopRequireDefault(require("eventemitter3"));

var _util = require("@polkadot/util");

var _xGlobal = require("@polkadot/x-global");

var _xWs = require("@polkadot/x-ws");

var _index = require("../coder/index.js");

var _defaults = _interopRequireDefault(require("../defaults.js"));

var _lru = require("../lru.js");

var _errors = require("./errors.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var ALIASES = {
  chain_finalisedHead: 'chain_finalizedHead',
  chain_subscribeFinalisedHeads: 'chain_subscribeFinalizedHeads',
  chain_unsubscribeFinalisedHeads: 'chain_unsubscribeFinalizedHeads'
};
var RETRY_DELAY = 2500;
var DEFAULT_TIMEOUT_MS = 60 * 1000;
var TIMEOUT_INTERVAL = 5000;
var MEGABYTE = 1024 * 1024;
var l = (0, _util.logger)('api-ws');

function eraseRecord(record, cb) {
  Object.keys(record).forEach(function (key) {
    if (cb) {
      cb(record[key]);
    }

    delete record[key];
  });
}
/**
 * # @polkadot/rpc-provider/ws
 *
 * @name WsProvider
 *
 * @description The WebSocket Provider allows sending requests using WebSocket to a WebSocket RPC server TCP port. Unlike the [[HttpProvider]], it does support subscriptions and allows listening to events such as new blocks or balance changes.
 *
 * @example
 * <BR>
 *
 * ```javascript
 * import Api from '@polkadot/api/promise';
 * import { WsProvider } from '@polkadot/rpc-provider/ws';
 *
 * const provider = new WsProvider('ws://127.0.0.1:9944');
 * const api = new Api(provider);
 * ```
 *
 * @see [[HttpProvider]]
 */


var _callCache = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("callCache");

var _coder = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("coder");

var _endpoints = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("endpoints");

var _headers = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("headers");

var _eventemitter = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("eventemitter");

var _handlers = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("handlers");

var _isReadyPromise = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("isReadyPromise");

var _stats = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("stats");

var _waitingForId = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("waitingForId");

var _autoConnectMs = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("autoConnectMs");

var _endpointIndex = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("endpointIndex");

var _isConnected = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("isConnected");

var _subscriptions = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("subscriptions");

var _timeoutId = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("timeoutId");

var _websocket = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("websocket");

var _timeout = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("timeout");

var _send = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("send");

var _emit = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("emit");

var _onSocketClose = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("onSocketClose");

var _onSocketError = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("onSocketError");

var _onSocketMessage = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("onSocketMessage");

var _onSocketMessageResult = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("onSocketMessageResult");

var _onSocketMessageSubscribe = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("onSocketMessageSubscribe");

var _onSocketOpen = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("onSocketOpen");

var _resubscribe = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("resubscribe");

var _timeoutHandlers = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("timeoutHandlers");

var WsProvider = /*#__PURE__*/function () {
  /**
   * @param {string | string[]}  endpoint    The endpoint url. Usually `ws://ip:9944` or `wss://ip:9944`, may provide an array of endpoint strings.
   * @param {boolean} autoConnect Whether to connect automatically or not.
   * @param {number} [timeout] Custom timeout value
   */
  function WsProvider() {
    var _this = this;

    var endpoint = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _defaults.default.WS_URL;
    var autoConnectMs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : RETRY_DELAY;
    var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var timeout = arguments.length > 3 ? arguments[3] : undefined;

    _classCallCheck(this, WsProvider);

    Object.defineProperty(this, _send, {
      value: _send2
    });
    Object.defineProperty(this, _callCache, {
      writable: true,
      value: new _lru.LRUCache()
    });
    Object.defineProperty(this, _coder, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _endpoints, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _headers, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _eventemitter, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _handlers, {
      writable: true,
      value: {}
    });
    Object.defineProperty(this, _isReadyPromise, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _stats, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _waitingForId, {
      writable: true,
      value: {}
    });
    Object.defineProperty(this, _autoConnectMs, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _endpointIndex, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _isConnected, {
      writable: true,
      value: false
    });
    Object.defineProperty(this, _subscriptions, {
      writable: true,
      value: {}
    });
    Object.defineProperty(this, _timeoutId, {
      writable: true,
      value: null
    });
    Object.defineProperty(this, _websocket, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _timeout, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _emit, {
      writable: true,
      value: function value(type) {
        var _classPrivateFieldLoo;

        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        (_classPrivateFieldLoo = (0, _classPrivateFieldLooseBase2.default)(_this, _eventemitter)[_eventemitter]).emit.apply(_classPrivateFieldLoo, [type].concat(args));
      }
    });
    Object.defineProperty(this, _onSocketClose, {
      writable: true,
      value: function value(event) {
        var error = new Error("disconnected from ".concat((0, _classPrivateFieldLooseBase2.default)(_this, _endpoints)[_endpoints][(0, _classPrivateFieldLooseBase2.default)(_this, _endpointIndex)[_endpointIndex]], ": ").concat(event.code, ":: ").concat(event.reason || (0, _errors.getWSErrorString)(event.code)));

        if ((0, _classPrivateFieldLooseBase2.default)(_this, _autoConnectMs)[_autoConnectMs] > 0) {
          l.error(error.message);
        }

        (0, _classPrivateFieldLooseBase2.default)(_this, _isConnected)[_isConnected] = false;

        if ((0, _classPrivateFieldLooseBase2.default)(_this, _websocket)[_websocket]) {
          (0, _classPrivateFieldLooseBase2.default)(_this, _websocket)[_websocket].onclose = null;
          (0, _classPrivateFieldLooseBase2.default)(_this, _websocket)[_websocket].onerror = null;
          (0, _classPrivateFieldLooseBase2.default)(_this, _websocket)[_websocket].onmessage = null;
          (0, _classPrivateFieldLooseBase2.default)(_this, _websocket)[_websocket].onopen = null;
          (0, _classPrivateFieldLooseBase2.default)(_this, _websocket)[_websocket] = null;
        }

        if ((0, _classPrivateFieldLooseBase2.default)(_this, _timeoutId)[_timeoutId]) {
          clearInterval((0, _classPrivateFieldLooseBase2.default)(_this, _timeoutId)[_timeoutId]);
          (0, _classPrivateFieldLooseBase2.default)(_this, _timeoutId)[_timeoutId] = null;
        }

        (0, _classPrivateFieldLooseBase2.default)(_this, _emit)[_emit]('disconnected'); // reject all hanging requests


        eraseRecord((0, _classPrivateFieldLooseBase2.default)(_this, _handlers)[_handlers], function (h) {
          try {
            h.callback(error, undefined);
          } catch (err) {
            // does not throw
            l.error(err);
          }
        });
        eraseRecord((0, _classPrivateFieldLooseBase2.default)(_this, _waitingForId)[_waitingForId]);

        if ((0, _classPrivateFieldLooseBase2.default)(_this, _autoConnectMs)[_autoConnectMs] > 0) {
          setTimeout(function () {
            _this.connectWithRetry().catch(function () {// does not throw
            });
          }, (0, _classPrivateFieldLooseBase2.default)(_this, _autoConnectMs)[_autoConnectMs]);
        }
      }
    });
    Object.defineProperty(this, _onSocketError, {
      writable: true,
      value: function value(error) {
        l.debug(function () {
          return ['socket error', error];
        });

        (0, _classPrivateFieldLooseBase2.default)(_this, _emit)[_emit]('error', error);
      }
    });
    Object.defineProperty(this, _onSocketMessage, {
      writable: true,
      value: function value(message) {
        l.debug(function () {
          return ['received', message.data];
        });
        (0, _classPrivateFieldLooseBase2.default)(_this, _stats)[_stats].total.bytesRecv += message.data.length;
        var response = JSON.parse(message.data);
        return (0, _util.isUndefined)(response.method) ? (0, _classPrivateFieldLooseBase2.default)(_this, _onSocketMessageResult)[_onSocketMessageResult](response) : (0, _classPrivateFieldLooseBase2.default)(_this, _onSocketMessageSubscribe)[_onSocketMessageSubscribe](response);
      }
    });
    Object.defineProperty(this, _onSocketMessageResult, {
      writable: true,
      value: function value(response) {
        var handler = (0, _classPrivateFieldLooseBase2.default)(_this, _handlers)[_handlers][response.id];

        if (!handler) {
          l.debug(function () {
            return "Unable to find handler for id=".concat(response.id);
          });
          return;
        }

        try {
          var method = handler.method,
              params = handler.params,
              subscription = handler.subscription;

          var result = (0, _classPrivateFieldLooseBase2.default)(_this, _coder)[_coder].decodeResponse(response); // first send the result - in case of subs, we may have an update
          // immediately if we have some queued results already


          handler.callback(null, result);

          if (subscription) {
            var subId = "".concat(subscription.type, "::").concat(result);
            (0, _classPrivateFieldLooseBase2.default)(_this, _subscriptions)[_subscriptions][subId] = (0, _util.objectSpread)({}, subscription, {
              method: method,
              params: params
            }); // if we have a result waiting for this subscription already

            if ((0, _classPrivateFieldLooseBase2.default)(_this, _waitingForId)[_waitingForId][subId]) {
              (0, _classPrivateFieldLooseBase2.default)(_this, _onSocketMessageSubscribe)[_onSocketMessageSubscribe]((0, _classPrivateFieldLooseBase2.default)(_this, _waitingForId)[_waitingForId][subId]);
            }
          }
        } catch (error) {
          (0, _classPrivateFieldLooseBase2.default)(_this, _stats)[_stats].total.errors++;
          handler.callback(error, undefined);
        }

        delete (0, _classPrivateFieldLooseBase2.default)(_this, _handlers)[_handlers][response.id];
      }
    });
    Object.defineProperty(this, _onSocketMessageSubscribe, {
      writable: true,
      value: function value(response) {
        var method = ALIASES[response.method] || response.method || 'invalid';
        var subId = "".concat(method, "::").concat(response.params.subscription);

        var handler = (0, _classPrivateFieldLooseBase2.default)(_this, _subscriptions)[_subscriptions][subId];

        if (!handler) {
          // store the JSON, we could have out-of-order subid coming in
          (0, _classPrivateFieldLooseBase2.default)(_this, _waitingForId)[_waitingForId][subId] = response;
          l.debug(function () {
            return "Unable to find handler for subscription=".concat(subId);
          });
          return;
        } // housekeeping


        delete (0, _classPrivateFieldLooseBase2.default)(_this, _waitingForId)[_waitingForId][subId];

        try {
          var result = (0, _classPrivateFieldLooseBase2.default)(_this, _coder)[_coder].decodeResponse(response);

          handler.callback(null, result);
        } catch (error) {
          (0, _classPrivateFieldLooseBase2.default)(_this, _stats)[_stats].total.errors++;
          handler.callback(error, undefined);
        }
      }
    });
    Object.defineProperty(this, _onSocketOpen, {
      writable: true,
      value: function value() {
        if ((0, _classPrivateFieldLooseBase2.default)(_this, _websocket)[_websocket] === null) {
          throw new Error('WebSocket cannot be null in onOpen');
        }

        l.debug(function () {
          return ['connected to', (0, _classPrivateFieldLooseBase2.default)(_this, _endpoints)[_endpoints][(0, _classPrivateFieldLooseBase2.default)(_this, _endpointIndex)[_endpointIndex]]];
        });
        (0, _classPrivateFieldLooseBase2.default)(_this, _isConnected)[_isConnected] = true;

        (0, _classPrivateFieldLooseBase2.default)(_this, _emit)[_emit]('connected');

        (0, _classPrivateFieldLooseBase2.default)(_this, _resubscribe)[_resubscribe]();

        return true;
      }
    });
    Object.defineProperty(this, _resubscribe, {
      writable: true,
      value: function value() {
        var subscriptions = (0, _classPrivateFieldLooseBase2.default)(_this, _subscriptions)[_subscriptions];

        (0, _classPrivateFieldLooseBase2.default)(_this, _subscriptions)[_subscriptions] = {};
        Promise.all(Object.keys(subscriptions).map( /*#__PURE__*/function () {
          var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(id) {
            var _subscriptions$id, callback, method, params, type;

            return _regeneratorRuntime().wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    _subscriptions$id = subscriptions[id], callback = _subscriptions$id.callback, method = _subscriptions$id.method, params = _subscriptions$id.params, type = _subscriptions$id.type; // only re-create subscriptions which are not in author (only area where
                    // transactions are created, i.e. submissions such as 'author_submitAndWatchExtrinsic'
                    // are not included (and will not be re-broadcast)

                    if (!type.startsWith('author_')) {
                      _context.next = 3;
                      break;
                    }

                    return _context.abrupt("return");

                  case 3:
                    _context.prev = 3;
                    _context.next = 6;
                    return _this.subscribe(type, method, params, callback);

                  case 6:
                    _context.next = 11;
                    break;

                  case 8:
                    _context.prev = 8;
                    _context.t0 = _context["catch"](3);
                    l.error(_context.t0);

                  case 11:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee, null, [[3, 8]]);
          }));

          return function (_x) {
            return _ref.apply(this, arguments);
          };
        }())).catch(l.error);
      }
    });
    Object.defineProperty(this, _timeoutHandlers, {
      writable: true,
      value: function value() {
        var now = Date.now();
        var ids = Object.keys((0, _classPrivateFieldLooseBase2.default)(_this, _handlers)[_handlers]);

        for (var i = 0; i < ids.length; i++) {
          var handler = (0, _classPrivateFieldLooseBase2.default)(_this, _handlers)[_handlers][ids[i]];

          if (now - handler.start > (0, _classPrivateFieldLooseBase2.default)(_this, _timeout)[_timeout]) {
            try {
              handler.callback(new Error("No response received from RPC endpoint in ".concat((0, _classPrivateFieldLooseBase2.default)(_this, _timeout)[_timeout] / 1000, "s")), undefined);
            } catch (_unused) {// ignore
            }

            (0, _classPrivateFieldLooseBase2.default)(_this, _stats)[_stats].total.timeout++;
            delete (0, _classPrivateFieldLooseBase2.default)(_this, _handlers)[_handlers][ids[i]];
          }
        }
      }
    });
    var endpoints = Array.isArray(endpoint) ? endpoint : [endpoint];

    if (endpoints.length === 0) {
      throw new Error('WsProvider requires at least one Endpoint');
    }

    endpoints.forEach(function (endpoint) {
      if (!/^(wss|ws):\/\//.test(endpoint)) {
        throw new Error("Endpoint should start with 'ws://', received '".concat(endpoint, "'"));
      }
    });
    (0, _classPrivateFieldLooseBase2.default)(this, _eventemitter)[_eventemitter] = new _eventemitter2.default();
    (0, _classPrivateFieldLooseBase2.default)(this, _autoConnectMs)[_autoConnectMs] = autoConnectMs || 0;
    (0, _classPrivateFieldLooseBase2.default)(this, _coder)[_coder] = new _index.RpcCoder();
    (0, _classPrivateFieldLooseBase2.default)(this, _endpointIndex)[_endpointIndex] = -1;
    (0, _classPrivateFieldLooseBase2.default)(this, _endpoints)[_endpoints] = endpoints;
    (0, _classPrivateFieldLooseBase2.default)(this, _headers)[_headers] = headers;
    (0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket] = null;
    (0, _classPrivateFieldLooseBase2.default)(this, _stats)[_stats] = {
      active: {
        requests: 0,
        subscriptions: 0
      },
      total: {
        bytesRecv: 0,
        bytesSent: 0,
        cached: 0,
        errors: 0,
        requests: 0,
        subscriptions: 0,
        timeout: 0
      }
    };
    (0, _classPrivateFieldLooseBase2.default)(this, _timeout)[_timeout] = timeout || DEFAULT_TIMEOUT_MS;

    if (autoConnectMs > 0) {
      this.connectWithRetry().catch(function () {// does not throw
      });
    }

    (0, _classPrivateFieldLooseBase2.default)(this, _isReadyPromise)[_isReadyPromise] = new Promise(function (resolve) {
      (0, _classPrivateFieldLooseBase2.default)(_this, _eventemitter)[_eventemitter].once('connected', function () {
        resolve(_this);
      });
    });
  }
  /**
   * @summary `true` when this provider supports subscriptions
   */


  _createClass(WsProvider, [{
    key: "hasSubscriptions",
    get: function get() {
      return true;
    }
    /**
     * @summary Whether the node is connected or not.
     * @return {boolean} true if connected
     */

  }, {
    key: "isConnected",
    get: function get() {
      return (0, _classPrivateFieldLooseBase2.default)(this, _isConnected)[_isConnected];
    }
    /**
     * @description Promise that resolves the first time we are connected and loaded
     */

  }, {
    key: "isReady",
    get: function get() {
      return (0, _classPrivateFieldLooseBase2.default)(this, _isReadyPromise)[_isReadyPromise];
    }
    /**
     * @description Returns a clone of the object
     */

  }, {
    key: "clone",
    value: function clone() {
      return new WsProvider((0, _classPrivateFieldLooseBase2.default)(this, _endpoints)[_endpoints]);
    }
    /**
     * @summary Manually connect
     * @description The [[WsProvider]] connects automatically by default, however if you decided otherwise, you may
     * connect manually using this method.
     */
    // eslint-disable-next-line @typescript-eslint/require-await

  }, {
    key: "connect",
    value: function () {
      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
        var _this2 = this;

        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.prev = 0;
                (0, _classPrivateFieldLooseBase2.default)(this, _endpointIndex)[_endpointIndex] = ((0, _classPrivateFieldLooseBase2.default)(this, _endpointIndex)[_endpointIndex] + 1) % (0, _classPrivateFieldLooseBase2.default)(this, _endpoints)[_endpoints].length;
                (0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket] = typeof _xGlobal.xglobal.WebSocket !== 'undefined' && (0, _util.isChildClass)(_xGlobal.xglobal.WebSocket, _xWs.WebSocket) ? new _xWs.WebSocket((0, _classPrivateFieldLooseBase2.default)(this, _endpoints)[_endpoints][(0, _classPrivateFieldLooseBase2.default)(this, _endpointIndex)[_endpointIndex]]) // eslint-disable-next-line @typescript-eslint/ban-ts-comment
                // @ts-ignore - WS may be an instance of w3cwebsocket, which supports headers
                : new _xWs.WebSocket((0, _classPrivateFieldLooseBase2.default)(this, _endpoints)[_endpoints][(0, _classPrivateFieldLooseBase2.default)(this, _endpointIndex)[_endpointIndex]], undefined, undefined, (0, _classPrivateFieldLooseBase2.default)(this, _headers)[_headers], undefined, {
                  // default: true
                  fragmentOutgoingMessages: true,
                  // default: 16K (bump, the Node has issues with too many fragments, e.g. on setCode)
                  fragmentationThreshold: 1 * MEGABYTE,
                  // default: 1MiB (also align with maxReceivedMessageSize)
                  maxReceivedFrameSize: 24 * MEGABYTE,
                  // default: 8MB (however Polkadot api.query.staking.erasStakers.entries(356) is over that, 16M is ok there)
                  maxReceivedMessageSize: 24 * MEGABYTE
                });
                (0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket].onclose = (0, _classPrivateFieldLooseBase2.default)(this, _onSocketClose)[_onSocketClose];
                (0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket].onerror = (0, _classPrivateFieldLooseBase2.default)(this, _onSocketError)[_onSocketError];
                (0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket].onmessage = (0, _classPrivateFieldLooseBase2.default)(this, _onSocketMessage)[_onSocketMessage];
                (0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket].onopen = (0, _classPrivateFieldLooseBase2.default)(this, _onSocketOpen)[_onSocketOpen]; // timeout any handlers that have not had a response

                (0, _classPrivateFieldLooseBase2.default)(this, _timeoutId)[_timeoutId] = setInterval(function () {
                  return (0, _classPrivateFieldLooseBase2.default)(_this2, _timeoutHandlers)[_timeoutHandlers]();
                }, TIMEOUT_INTERVAL);
                _context2.next = 15;
                break;

              case 10:
                _context2.prev = 10;
                _context2.t0 = _context2["catch"](0);
                l.error(_context2.t0);

                (0, _classPrivateFieldLooseBase2.default)(this, _emit)[_emit]('error', _context2.t0);

                throw _context2.t0;

              case 15:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this, [[0, 10]]);
      }));

      function connect() {
        return _connect.apply(this, arguments);
      }

      return connect;
    }()
    /**
     * @description Connect, never throwing an error, but rather forcing a retry
     */

  }, {
    key: "connectWithRetry",
    value: function () {
      var _connectWithRetry = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
        var _this3 = this;

        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                if (!((0, _classPrivateFieldLooseBase2.default)(this, _autoConnectMs)[_autoConnectMs] > 0)) {
                  _context3.next = 9;
                  break;
                }

                _context3.prev = 1;
                _context3.next = 4;
                return this.connect();

              case 4:
                _context3.next = 9;
                break;

              case 6:
                _context3.prev = 6;
                _context3.t0 = _context3["catch"](1);
                setTimeout(function () {
                  _this3.connectWithRetry().catch(function () {// does not throw
                  });
                }, (0, _classPrivateFieldLooseBase2.default)(this, _autoConnectMs)[_autoConnectMs]);

              case 9:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this, [[1, 6]]);
      }));

      function connectWithRetry() {
        return _connectWithRetry.apply(this, arguments);
      }

      return connectWithRetry;
    }()
    /**
     * @description Manually disconnect from the connection, clearing auto-connect logic
     */
    // eslint-disable-next-line @typescript-eslint/require-await

  }, {
    key: "disconnect",
    value: function () {
      var _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                // switch off autoConnect, we are in manual mode now
                (0, _classPrivateFieldLooseBase2.default)(this, _autoConnectMs)[_autoConnectMs] = 0;
                _context4.prev = 1;

                if ((0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket]) {
                  // 1000 - Normal closure; the connection successfully completed
                  (0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket].close(1000);
                }

                _context4.next = 10;
                break;

              case 5:
                _context4.prev = 5;
                _context4.t0 = _context4["catch"](1);
                l.error(_context4.t0);

                (0, _classPrivateFieldLooseBase2.default)(this, _emit)[_emit]('error', _context4.t0);

                throw _context4.t0;

              case 10:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this, [[1, 5]]);
      }));

      function disconnect() {
        return _disconnect.apply(this, arguments);
      }

      return disconnect;
    }()
    /**
     * @description Returns the connection stats
     */

  }, {
    key: "stats",
    get: function get() {
      return {
        active: {
          requests: Object.keys((0, _classPrivateFieldLooseBase2.default)(this, _handlers)[_handlers]).length,
          subscriptions: Object.keys((0, _classPrivateFieldLooseBase2.default)(this, _subscriptions)[_subscriptions]).length
        },
        total: (0, _classPrivateFieldLooseBase2.default)(this, _stats)[_stats].total
      };
    }
    /**
     * @summary Listens on events after having subscribed using the [[subscribe]] function.
     * @param  {ProviderInterfaceEmitted} type Event
     * @param  {ProviderInterfaceEmitCb}  sub  Callback
     * @return unsubscribe function
     */

  }, {
    key: "on",
    value: function on(type, sub) {
      var _this4 = this;

      (0, _classPrivateFieldLooseBase2.default)(this, _eventemitter)[_eventemitter].on(type, sub);

      return function () {
        (0, _classPrivateFieldLooseBase2.default)(_this4, _eventemitter)[_eventemitter].removeListener(type, sub);
      };
    }
    /**
     * @summary Send JSON data using WebSockets to configured HTTP Endpoint or queue.
     * @param method The RPC methods to execute
     * @param params Encoded parameters as applicable for the method
     * @param subscription Subscription details (internally used)
     */

  }, {
    key: "send",
    value: function send(method, params, isCacheable, subscription) {
      (0, _classPrivateFieldLooseBase2.default)(this, _stats)[_stats].total.requests++;

      var _classPrivateFieldLoo2 = (0, _classPrivateFieldLooseBase2.default)(this, _coder)[_coder].encodeJson(method, params),
          _classPrivateFieldLoo3 = _slicedToArray(_classPrivateFieldLoo2, 2),
          id = _classPrivateFieldLoo3[0],
          body = _classPrivateFieldLoo3[1];

      var resultPromise = isCacheable ? (0, _classPrivateFieldLooseBase2.default)(this, _callCache)[_callCache].get(body) : null;

      if (!resultPromise) {
        resultPromise = (0, _classPrivateFieldLooseBase2.default)(this, _send)[_send](id, body, method, params, subscription);

        if (isCacheable) {
          (0, _classPrivateFieldLooseBase2.default)(this, _callCache)[_callCache].set(body, resultPromise);
        }
      } else {
        (0, _classPrivateFieldLooseBase2.default)(this, _stats)[_stats].total.cached++;
      }

      return resultPromise;
    }
    /**
     * @name subscribe
     * @summary Allows subscribing to a specific event.
     *
     * @example
     * <BR>
     *
     * ```javascript
     * const provider = new WsProvider('ws://127.0.0.1:9944');
     * const rpc = new Rpc(provider);
     *
     * rpc.state.subscribeStorage([[storage.system.account, <Address>]], (_, values) => {
     *   console.log(values)
     * }).then((subscriptionId) => {
     *   console.log('balance changes subscription id: ', subscriptionId)
     * })
     * ```
     */

  }, {
    key: "subscribe",
    value: function subscribe(type, method, params, callback) {
      (0, _classPrivateFieldLooseBase2.default)(this, _stats)[_stats].total.subscriptions++; // subscriptions are not cached, LRU applies to .at(<blockHash>) only

      return this.send(method, params, false, {
        callback: callback,
        type: type
      });
    }
    /**
     * @summary Allows unsubscribing to subscriptions made with [[subscribe]].
     */

  }, {
    key: "unsubscribe",
    value: function () {
      var _unsubscribe = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(type, method, id) {
        var subscription;
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                subscription = "".concat(type, "::").concat(id); // FIXME This now could happen with re-subscriptions. The issue is that with a re-sub
                // the assigned id now does not match what the API user originally received. It has
                // a slight complication in solving - since we cannot rely on the send id, but rather
                // need to find the actual subscription id to map it

                if (!(0, _util.isUndefined)((0, _classPrivateFieldLooseBase2.default)(this, _subscriptions)[_subscriptions][subscription])) {
                  _context5.next = 4;
                  break;
                }

                l.debug(function () {
                  return "Unable to find active subscription=".concat(subscription);
                });
                return _context5.abrupt("return", false);

              case 4:
                delete (0, _classPrivateFieldLooseBase2.default)(this, _subscriptions)[_subscriptions][subscription];
                _context5.prev = 5;
                return _context5.abrupt("return", this.isConnected && !(0, _util.isNull)((0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket]) ? this.send(method, [id]) : true);

              case 9:
                _context5.prev = 9;
                _context5.t0 = _context5["catch"](5);
                return _context5.abrupt("return", false);

              case 12:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this, [[5, 9]]);
      }));

      function unsubscribe(_x2, _x3, _x4) {
        return _unsubscribe.apply(this, arguments);
      }

      return unsubscribe;
    }()
  }]);

  return WsProvider;
}();

exports.WsProvider = WsProvider;

function _send2(_x5, _x6, _x7, _x8, _x9) {
  return _send3.apply(this, arguments);
}

function _send3() {
  _send3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(id, body, method, params, subscription) {
    var _this5 = this;

    return _regeneratorRuntime().wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            return _context6.abrupt("return", new Promise(function (resolve, reject) {
              try {
                if (!_this5.isConnected || (0, _classPrivateFieldLooseBase2.default)(_this5, _websocket)[_websocket] === null) {
                  throw new Error('WebSocket is not connected');
                }

                var callback = function callback(error, result) {
                  error ? reject(error) : resolve(result);
                };

                l.debug(function () {
                  return ['calling', method, body];
                });
                (0, _classPrivateFieldLooseBase2.default)(_this5, _handlers)[_handlers][id] = {
                  callback: callback,
                  method: method,
                  params: params,
                  start: Date.now(),
                  subscription: subscription
                };
                (0, _classPrivateFieldLooseBase2.default)(_this5, _stats)[_stats].total.bytesSent += body.length;

                (0, _classPrivateFieldLooseBase2.default)(_this5, _websocket)[_websocket].send(body);
              } catch (error) {
                (0, _classPrivateFieldLooseBase2.default)(_this5, _stats)[_stats].total.errors++;
                reject(error);
              }
            }));

          case 1:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6);
  }));
  return _send3.apply(this, arguments);
}
},{"@babel/runtime/helpers/esm/classPrivateFieldLooseBase":"node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js","@babel/runtime/helpers/esm/classPrivateFieldLooseKey":"node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js","eventemitter3":"node_modules/eventemitter3/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/x-global":"node_modules/@polkadot/x-global/index.js","@polkadot/x-ws":"node_modules/@polkadot/x-ws/cjs/browser.js","../coder/index.js":"node_modules/@polkadot/rpc-provider/coder/index.js","../defaults.js":"node_modules/@polkadot/rpc-provider/defaults.js","../lru.js":"node_modules/@polkadot/rpc-provider/lru.js","./errors.js":"node_modules/@polkadot/rpc-provider/ws/errors.js"}],"node_modules/@polkadot/rpc-provider/bundle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "HttpProvider", {
  enumerable: true,
  get: function () {
    return _index.HttpProvider;
  }
});
Object.defineProperty(exports, "WsProvider", {
  enumerable: true,
  get: function () {
    return _index2.WsProvider;
  }
});
Object.defineProperty(exports, "packageInfo", {
  enumerable: true,
  get: function () {
    return _packageInfo.packageInfo;
  }
});

var _index = require("./http/index.js");

var _packageInfo = require("./packageInfo.js");

var _index2 = require("./ws/index.js");
},{"./http/index.js":"node_modules/@polkadot/rpc-provider/http/index.js","./packageInfo.js":"node_modules/@polkadot/rpc-provider/packageInfo.js","./ws/index.js":"node_modules/@polkadot/rpc-provider/ws/index.js"}],"node_modules/@polkadot/rpc-provider/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

require("./detectPackage.js");

var _bundle = require("./bundle.js");

Object.keys(_bundle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _bundle[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bundle[key];
    }
  });
});
},{"./detectPackage.js":"node_modules/@polkadot/rpc-provider/detectPackage.js","./bundle.js":"node_modules/@polkadot/rpc-provider/bundle.js"}],"node_modules/tslib/tslib.es6.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.__assign = void 0;
exports.__asyncDelegator = __asyncDelegator;
exports.__asyncGenerator = __asyncGenerator;
exports.__asyncValues = __asyncValues;
exports.__await = __await;
exports.__awaiter = __awaiter;
exports.__classPrivateFieldGet = __classPrivateFieldGet;
exports.__classPrivateFieldIn = __classPrivateFieldIn;
exports.__classPrivateFieldSet = __classPrivateFieldSet;
exports.__createBinding = void 0;
exports.__decorate = __decorate;
exports.__exportStar = __exportStar;
exports.__extends = __extends;
exports.__generator = __generator;
exports.__importDefault = __importDefault;
exports.__importStar = __importStar;
exports.__makeTemplateObject = __makeTemplateObject;
exports.__metadata = __metadata;
exports.__param = __param;
exports.__read = __read;
exports.__rest = __rest;
exports.__spread = __spread;
exports.__spreadArray = __spreadArray;
exports.__spreadArrays = __spreadArrays;
exports.__values = __values;

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

/* global Reflect, Promise */
var extendStatics = function (d, b) {
  extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
  };

  return extendStatics(d, b);
};

function __extends(d, b) {
  if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
  extendStatics(d, b);

  function __() {
    this.constructor = d;
  }

  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function () {
  exports.__assign = __assign = Object.assign || function __assign(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

exports.__assign = __assign;

function __rest(s, e) {
  var t = {};

  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
}

function __decorate(decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
  return function (target, key) {
    decorator(target, key, paramIndex);
  };
}

function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}

function __generator(thisArg, body) {
  var _ = {
    label: 0,
    sent: function () {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];

      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;

        case 4:
          _.label++;
          return {
            value: op[1],
            done: false
          };

        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;

        case 7:
          op = _.ops.pop();

          _.trys.pop();

          continue;

        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }

          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }

          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }

          if (t && _.label < t[2]) {
            _.label = t[2];

            _.ops.push(op);

            break;
          }

          if (t[2]) _.ops.pop();

          _.trys.pop();

          continue;
      }

      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
}

var __createBinding = Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  var desc = Object.getOwnPropertyDescriptor(m, k);

  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
    desc = {
      enumerable: true,
      get: function () {
        return m[k];
      }
    };
  }

  Object.defineProperty(o, k2, desc);
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
};

exports.__createBinding = __createBinding;

function __exportStar(m, o) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}

function __values(o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function () {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
}
/** @deprecated */


function __spread() {
  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));

  return ar;
}
/** @deprecated */


function __spreadArrays() {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;

  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];

  return r;
}

function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
    if (ar || !(i in from)) {
      if (!ar) ar = Array.prototype.slice.call(from, 0, i);
      ar[i] = from[i];
    }
  }
  return to.concat(ar || Array.prototype.slice.call(from));
}

function __await(v) {
  return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g = generator.apply(thisArg, _arguments || []),
      i,
      q = [];
  return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    return this;
  }, i;

  function verb(n) {
    if (g[n]) i[n] = function (v) {
      return new Promise(function (a, b) {
        q.push([n, v, a, b]) > 1 || resume(n, v);
      });
    };
  }

  function resume(n, v) {
    try {
      step(g[n](v));
    } catch (e) {
      settle(q[0][3], e);
    }
  }

  function step(r) {
    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
  }

  function fulfill(value) {
    resume("next", value);
  }

  function reject(value) {
    resume("throw", value);
  }

  function settle(f, v) {
    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
  }
}

function __asyncDelegator(o) {
  var i, p;
  return i = {}, verb("next"), verb("throw", function (e) {
    throw e;
  }), verb("return"), i[Symbol.iterator] = function () {
    return this;
  }, i;

  function verb(n, f) {
    i[n] = o[n] ? function (v) {
      return (p = !p) ? {
        value: __await(o[n](v)),
        done: n === "return"
      } : f ? f(v) : v;
    } : f;
  }
}

function __asyncValues(o) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m = o[Symbol.asyncIterator],
      i;
  return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    return this;
  }, i);

  function verb(n) {
    i[n] = o[n] && function (v) {
      return new Promise(function (resolve, reject) {
        v = o[n](v), settle(resolve, reject, v.done, v.value);
      });
    };
  }

  function settle(resolve, reject, d, v) {
    Promise.resolve(v).then(function (v) {
      resolve({
        value: v,
        done: d
      });
    }, reject);
  }
}

function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", {
      value: raw
    });
  } else {
    cooked.raw = raw;
  }

  return cooked;
}

;

var __setModuleDefault = Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
};

function __importStar(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
}

function __importDefault(mod) {
  return mod && mod.__esModule ? mod : {
    default: mod
  };
}

function __classPrivateFieldGet(receiver, state, kind, f) {
  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
  return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}

function __classPrivateFieldSet(receiver, state, value, kind, f) {
  if (kind === "m") throw new TypeError("Private method is not writable");
  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
  return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
}

function __classPrivateFieldIn(state, receiver) {
  if (receiver === null || typeof receiver !== "object" && typeof receiver !== "function") throw new TypeError("Cannot use 'in' operator on non-object");
  return typeof state === "function" ? receiver === state : state.has(receiver);
}
},{}],"node_modules/rxjs/dist/esm5/internal/util/isFunction.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isFunction = isFunction;

function isFunction(value) {
  return typeof value === 'function';
}
},{}],"node_modules/rxjs/dist/esm5/internal/util/createErrorClass.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createErrorClass = createErrorClass;

function createErrorClass(createImpl) {
  var _super = function (instance) {
    Error.call(instance);
    instance.stack = new Error().stack;
  };

  var ctorFunc = createImpl(_super);
  ctorFunc.prototype = Object.create(Error.prototype);
  ctorFunc.prototype.constructor = ctorFunc;
  return ctorFunc;
}
},{}],"node_modules/rxjs/dist/esm5/internal/util/UnsubscriptionError.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UnsubscriptionError = void 0;

var _createErrorClass = require("./createErrorClass");

var UnsubscriptionError = (0, _createErrorClass.createErrorClass)(function (_super) {
  return function UnsubscriptionErrorImpl(errors) {
    _super(this);

    this.message = errors ? errors.length + " errors occurred during unsubscription:\n" + errors.map(function (err, i) {
      return i + 1 + ") " + err.toString();
    }).join('\n  ') : '';
    this.name = 'UnsubscriptionError';
    this.errors = errors;
  };
});
exports.UnsubscriptionError = UnsubscriptionError;
},{"./createErrorClass":"node_modules/rxjs/dist/esm5/internal/util/createErrorClass.js"}],"node_modules/rxjs/dist/esm5/internal/util/arrRemove.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.arrRemove = arrRemove;

function arrRemove(arr, item) {
  if (arr) {
    var index = arr.indexOf(item);
    0 <= index && arr.splice(index, 1);
  }
}
},{}],"node_modules/rxjs/dist/esm5/internal/Subscription.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Subscription = exports.EMPTY_SUBSCRIPTION = void 0;
exports.isSubscription = isSubscription;

var _tslib = require("tslib");

var _isFunction = require("./util/isFunction");

var _UnsubscriptionError = require("./util/UnsubscriptionError");

var _arrRemove = require("./util/arrRemove");

var Subscription = function () {
  function Subscription(initialTeardown) {
    this.initialTeardown = initialTeardown;
    this.closed = false;
    this._parentage = null;
    this._finalizers = null;
  }

  Subscription.prototype.unsubscribe = function () {
    var e_1, _a, e_2, _b;

    var errors;

    if (!this.closed) {
      this.closed = true;
      var _parentage = this._parentage;

      if (_parentage) {
        this._parentage = null;

        if (Array.isArray(_parentage)) {
          try {
            for (var _parentage_1 = (0, _tslib.__values)(_parentage), _parentage_1_1 = _parentage_1.next(); !_parentage_1_1.done; _parentage_1_1 = _parentage_1.next()) {
              var parent_1 = _parentage_1_1.value;
              parent_1.remove(this);
            }
          } catch (e_1_1) {
            e_1 = {
              error: e_1_1
            };
          } finally {
            try {
              if (_parentage_1_1 && !_parentage_1_1.done && (_a = _parentage_1.return)) _a.call(_parentage_1);
            } finally {
              if (e_1) throw e_1.error;
            }
          }
        } else {
          _parentage.remove(this);
        }
      }

      var initialFinalizer = this.initialTeardown;

      if ((0, _isFunction.isFunction)(initialFinalizer)) {
        try {
          initialFinalizer();
        } catch (e) {
          errors = e instanceof _UnsubscriptionError.UnsubscriptionError ? e.errors : [e];
        }
      }

      var _finalizers = this._finalizers;

      if (_finalizers) {
        this._finalizers = null;

        try {
          for (var _finalizers_1 = (0, _tslib.__values)(_finalizers), _finalizers_1_1 = _finalizers_1.next(); !_finalizers_1_1.done; _finalizers_1_1 = _finalizers_1.next()) {
            var finalizer = _finalizers_1_1.value;

            try {
              execFinalizer(finalizer);
            } catch (err) {
              errors = errors !== null && errors !== void 0 ? errors : [];

              if (err instanceof _UnsubscriptionError.UnsubscriptionError) {
                errors = (0, _tslib.__spreadArray)((0, _tslib.__spreadArray)([], (0, _tslib.__read)(errors)), (0, _tslib.__read)(err.errors));
              } else {
                errors.push(err);
              }
            }
          }
        } catch (e_2_1) {
          e_2 = {
            error: e_2_1
          };
        } finally {
          try {
            if (_finalizers_1_1 && !_finalizers_1_1.done && (_b = _finalizers_1.return)) _b.call(_finalizers_1);
          } finally {
            if (e_2) throw e_2.error;
          }
        }
      }

      if (errors) {
        throw new _UnsubscriptionError.UnsubscriptionError(errors);
      }
    }
  };

  Subscription.prototype.add = function (teardown) {
    var _a;

    if (teardown && teardown !== this) {
      if (this.closed) {
        execFinalizer(teardown);
      } else {
        if (teardown instanceof Subscription) {
          if (teardown.closed || teardown._hasParent(this)) {
            return;
          }

          teardown._addParent(this);
        }

        (this._finalizers = (_a = this._finalizers) !== null && _a !== void 0 ? _a : []).push(teardown);
      }
    }
  };

  Subscription.prototype._hasParent = function (parent) {
    var _parentage = this._parentage;
    return _parentage === parent || Array.isArray(_parentage) && _parentage.includes(parent);
  };

  Subscription.prototype._addParent = function (parent) {
    var _parentage = this._parentage;
    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;
  };

  Subscription.prototype._removeParent = function (parent) {
    var _parentage = this._parentage;

    if (_parentage === parent) {
      this._parentage = null;
    } else if (Array.isArray(_parentage)) {
      (0, _arrRemove.arrRemove)(_parentage, parent);
    }
  };

  Subscription.prototype.remove = function (teardown) {
    var _finalizers = this._finalizers;
    _finalizers && (0, _arrRemove.arrRemove)(_finalizers, teardown);

    if (teardown instanceof Subscription) {
      teardown._removeParent(this);
    }
  };

  Subscription.EMPTY = function () {
    var empty = new Subscription();
    empty.closed = true;
    return empty;
  }();

  return Subscription;
}();

exports.Subscription = Subscription;
var EMPTY_SUBSCRIPTION = Subscription.EMPTY;
exports.EMPTY_SUBSCRIPTION = EMPTY_SUBSCRIPTION;

function isSubscription(value) {
  return value instanceof Subscription || value && 'closed' in value && (0, _isFunction.isFunction)(value.remove) && (0, _isFunction.isFunction)(value.add) && (0, _isFunction.isFunction)(value.unsubscribe);
}

function execFinalizer(finalizer) {
  if ((0, _isFunction.isFunction)(finalizer)) {
    finalizer();
  } else {
    finalizer.unsubscribe();
  }
}
},{"tslib":"node_modules/tslib/tslib.es6.js","./util/isFunction":"node_modules/rxjs/dist/esm5/internal/util/isFunction.js","./util/UnsubscriptionError":"node_modules/rxjs/dist/esm5/internal/util/UnsubscriptionError.js","./util/arrRemove":"node_modules/rxjs/dist/esm5/internal/util/arrRemove.js"}],"node_modules/rxjs/dist/esm5/internal/config.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.config = void 0;
var config = {
  onUnhandledError: null,
  onStoppedNotification: null,
  Promise: undefined,
  useDeprecatedSynchronousErrorHandling: false,
  useDeprecatedNextContext: false
};
exports.config = config;
},{}],"node_modules/rxjs/dist/esm5/internal/scheduler/timeoutProvider.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.timeoutProvider = void 0;

var _tslib = require("tslib");

var timeoutProvider = {
  setTimeout: function (handler, timeout) {
    var args = [];

    for (var _i = 2; _i < arguments.length; _i++) {
      args[_i - 2] = arguments[_i];
    }

    var delegate = timeoutProvider.delegate;

    if (delegate === null || delegate === void 0 ? void 0 : delegate.setTimeout) {
      return delegate.setTimeout.apply(delegate, (0, _tslib.__spreadArray)([handler, timeout], (0, _tslib.__read)(args)));
    }

    return setTimeout.apply(void 0, (0, _tslib.__spreadArray)([handler, timeout], (0, _tslib.__read)(args)));
  },
  clearTimeout: function (handle) {
    var delegate = timeoutProvider.delegate;
    return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearTimeout) || clearTimeout)(handle);
  },
  delegate: undefined
};
exports.timeoutProvider = timeoutProvider;
},{"tslib":"node_modules/tslib/tslib.es6.js"}],"node_modules/rxjs/dist/esm5/internal/util/reportUnhandledError.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.reportUnhandledError = reportUnhandledError;

var _config = require("../config");

var _timeoutProvider = require("../scheduler/timeoutProvider");

function reportUnhandledError(err) {
  _timeoutProvider.timeoutProvider.setTimeout(function () {
    var onUnhandledError = _config.config.onUnhandledError;

    if (onUnhandledError) {
      onUnhandledError(err);
    } else {
      throw err;
    }
  });
}
},{"../config":"node_modules/rxjs/dist/esm5/internal/config.js","../scheduler/timeoutProvider":"node_modules/rxjs/dist/esm5/internal/scheduler/timeoutProvider.js"}],"node_modules/rxjs/dist/esm5/internal/util/noop.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.noop = noop;

function noop() {}
},{}],"node_modules/rxjs/dist/esm5/internal/NotificationFactories.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.COMPLETE_NOTIFICATION = void 0;
exports.createNotification = createNotification;
exports.errorNotification = errorNotification;
exports.nextNotification = nextNotification;

var COMPLETE_NOTIFICATION = function () {
  return createNotification('C', undefined, undefined);
}();

exports.COMPLETE_NOTIFICATION = COMPLETE_NOTIFICATION;

function errorNotification(error) {
  return createNotification('E', undefined, error);
}

function nextNotification(value) {
  return createNotification('N', value, undefined);
}

function createNotification(kind, value, error) {
  return {
    kind: kind,
    value: value,
    error: error
  };
}
},{}],"node_modules/rxjs/dist/esm5/internal/util/errorContext.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.captureError = captureError;
exports.errorContext = errorContext;

var _config = require("../config");

var context = null;

function errorContext(cb) {
  if (_config.config.useDeprecatedSynchronousErrorHandling) {
    var isRoot = !context;

    if (isRoot) {
      context = {
        errorThrown: false,
        error: null
      };
    }

    cb();

    if (isRoot) {
      var _a = context,
          errorThrown = _a.errorThrown,
          error = _a.error;
      context = null;

      if (errorThrown) {
        throw error;
      }
    }
  } else {
    cb();
  }
}

function captureError(err) {
  if (_config.config.useDeprecatedSynchronousErrorHandling && context) {
    context.errorThrown = true;
    context.error = err;
  }
}
},{"../config":"node_modules/rxjs/dist/esm5/internal/config.js"}],"node_modules/rxjs/dist/esm5/internal/Subscriber.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Subscriber = exports.SafeSubscriber = exports.EMPTY_OBSERVER = void 0;

var _tslib = require("tslib");

var _isFunction = require("./util/isFunction");

var _Subscription = require("./Subscription");

var _config = require("./config");

var _reportUnhandledError = require("./util/reportUnhandledError");

var _noop = require("./util/noop");

var _NotificationFactories = require("./NotificationFactories");

var _timeoutProvider = require("./scheduler/timeoutProvider");

var _errorContext = require("./util/errorContext");

var Subscriber = function (_super) {
  (0, _tslib.__extends)(Subscriber, _super);

  function Subscriber(destination) {
    var _this = _super.call(this) || this;

    _this.isStopped = false;

    if (destination) {
      _this.destination = destination;

      if ((0, _Subscription.isSubscription)(destination)) {
        destination.add(_this);
      }
    } else {
      _this.destination = EMPTY_OBSERVER;
    }

    return _this;
  }

  Subscriber.create = function (next, error, complete) {
    return new SafeSubscriber(next, error, complete);
  };

  Subscriber.prototype.next = function (value) {
    if (this.isStopped) {
      handleStoppedNotification((0, _NotificationFactories.nextNotification)(value), this);
    } else {
      this._next(value);
    }
  };

  Subscriber.prototype.error = function (err) {
    if (this.isStopped) {
      handleStoppedNotification((0, _NotificationFactories.errorNotification)(err), this);
    } else {
      this.isStopped = true;

      this._error(err);
    }
  };

  Subscriber.prototype.complete = function () {
    if (this.isStopped) {
      handleStoppedNotification(_NotificationFactories.COMPLETE_NOTIFICATION, this);
    } else {
      this.isStopped = true;

      this._complete();
    }
  };

  Subscriber.prototype.unsubscribe = function () {
    if (!this.closed) {
      this.isStopped = true;

      _super.prototype.unsubscribe.call(this);

      this.destination = null;
    }
  };

  Subscriber.prototype._next = function (value) {
    this.destination.next(value);
  };

  Subscriber.prototype._error = function (err) {
    try {
      this.destination.error(err);
    } finally {
      this.unsubscribe();
    }
  };

  Subscriber.prototype._complete = function () {
    try {
      this.destination.complete();
    } finally {
      this.unsubscribe();
    }
  };

  return Subscriber;
}(_Subscription.Subscription);

exports.Subscriber = Subscriber;
var _bind = Function.prototype.bind;

function bind(fn, thisArg) {
  return _bind.call(fn, thisArg);
}

var ConsumerObserver = function () {
  function ConsumerObserver(partialObserver) {
    this.partialObserver = partialObserver;
  }

  ConsumerObserver.prototype.next = function (value) {
    var partialObserver = this.partialObserver;

    if (partialObserver.next) {
      try {
        partialObserver.next(value);
      } catch (error) {
        handleUnhandledError(error);
      }
    }
  };

  ConsumerObserver.prototype.error = function (err) {
    var partialObserver = this.partialObserver;

    if (partialObserver.error) {
      try {
        partialObserver.error(err);
      } catch (error) {
        handleUnhandledError(error);
      }
    } else {
      handleUnhandledError(err);
    }
  };

  ConsumerObserver.prototype.complete = function () {
    var partialObserver = this.partialObserver;

    if (partialObserver.complete) {
      try {
        partialObserver.complete();
      } catch (error) {
        handleUnhandledError(error);
      }
    }
  };

  return ConsumerObserver;
}();

var SafeSubscriber = function (_super) {
  (0, _tslib.__extends)(SafeSubscriber, _super);

  function SafeSubscriber(observerOrNext, error, complete) {
    var _this = _super.call(this) || this;

    var partialObserver;

    if ((0, _isFunction.isFunction)(observerOrNext) || !observerOrNext) {
      partialObserver = {
        next: observerOrNext !== null && observerOrNext !== void 0 ? observerOrNext : undefined,
        error: error !== null && error !== void 0 ? error : undefined,
        complete: complete !== null && complete !== void 0 ? complete : undefined
      };
    } else {
      var context_1;

      if (_this && _config.config.useDeprecatedNextContext) {
        context_1 = Object.create(observerOrNext);

        context_1.unsubscribe = function () {
          return _this.unsubscribe();
        };

        partialObserver = {
          next: observerOrNext.next && bind(observerOrNext.next, context_1),
          error: observerOrNext.error && bind(observerOrNext.error, context_1),
          complete: observerOrNext.complete && bind(observerOrNext.complete, context_1)
        };
      } else {
        partialObserver = observerOrNext;
      }
    }

    _this.destination = new ConsumerObserver(partialObserver);
    return _this;
  }

  return SafeSubscriber;
}(Subscriber);

exports.SafeSubscriber = SafeSubscriber;

function handleUnhandledError(error) {
  if (_config.config.useDeprecatedSynchronousErrorHandling) {
    (0, _errorContext.captureError)(error);
  } else {
    (0, _reportUnhandledError.reportUnhandledError)(error);
  }
}

function defaultErrorHandler(err) {
  throw err;
}

function handleStoppedNotification(notification, subscriber) {
  var onStoppedNotification = _config.config.onStoppedNotification;
  onStoppedNotification && _timeoutProvider.timeoutProvider.setTimeout(function () {
    return onStoppedNotification(notification, subscriber);
  });
}

var EMPTY_OBSERVER = {
  closed: true,
  next: _noop.noop,
  error: defaultErrorHandler,
  complete: _noop.noop
};
exports.EMPTY_OBSERVER = EMPTY_OBSERVER;
},{"tslib":"node_modules/tslib/tslib.es6.js","./util/isFunction":"node_modules/rxjs/dist/esm5/internal/util/isFunction.js","./Subscription":"node_modules/rxjs/dist/esm5/internal/Subscription.js","./config":"node_modules/rxjs/dist/esm5/internal/config.js","./util/reportUnhandledError":"node_modules/rxjs/dist/esm5/internal/util/reportUnhandledError.js","./util/noop":"node_modules/rxjs/dist/esm5/internal/util/noop.js","./NotificationFactories":"node_modules/rxjs/dist/esm5/internal/NotificationFactories.js","./scheduler/timeoutProvider":"node_modules/rxjs/dist/esm5/internal/scheduler/timeoutProvider.js","./util/errorContext":"node_modules/rxjs/dist/esm5/internal/util/errorContext.js"}],"node_modules/rxjs/dist/esm5/internal/symbol/observable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.observable = void 0;

var observable = function () {
  return typeof Symbol === 'function' && Symbol.observable || '@@observable';
}();

exports.observable = observable;
},{}],"node_modules/rxjs/dist/esm5/internal/util/identity.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.identity = identity;

function identity(x) {
  return x;
}
},{}],"node_modules/rxjs/dist/esm5/internal/util/pipe.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pipe = pipe;
exports.pipeFromArray = pipeFromArray;

var _identity = require("./identity");

function pipe() {
  var fns = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    fns[_i] = arguments[_i];
  }

  return pipeFromArray(fns);
}

function pipeFromArray(fns) {
  if (fns.length === 0) {
    return _identity.identity;
  }

  if (fns.length === 1) {
    return fns[0];
  }

  return function piped(input) {
    return fns.reduce(function (prev, fn) {
      return fn(prev);
    }, input);
  };
}
},{"./identity":"node_modules/rxjs/dist/esm5/internal/util/identity.js"}],"node_modules/rxjs/dist/esm5/internal/Observable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Observable = void 0;

var _Subscriber = require("./Subscriber");

var _Subscription = require("./Subscription");

var _observable = require("./symbol/observable");

var _pipe = require("./util/pipe");

var _config = require("./config");

var _isFunction = require("./util/isFunction");

var _errorContext = require("./util/errorContext");

var Observable = function () {
  function Observable(subscribe) {
    if (subscribe) {
      this._subscribe = subscribe;
    }
  }

  Observable.prototype.lift = function (operator) {
    var observable = new Observable();
    observable.source = this;
    observable.operator = operator;
    return observable;
  };

  Observable.prototype.subscribe = function (observerOrNext, error, complete) {
    var _this = this;

    var subscriber = isSubscriber(observerOrNext) ? observerOrNext : new _Subscriber.SafeSubscriber(observerOrNext, error, complete);
    (0, _errorContext.errorContext)(function () {
      var _a = _this,
          operator = _a.operator,
          source = _a.source;
      subscriber.add(operator ? operator.call(subscriber, source) : source ? _this._subscribe(subscriber) : _this._trySubscribe(subscriber));
    });
    return subscriber;
  };

  Observable.prototype._trySubscribe = function (sink) {
    try {
      return this._subscribe(sink);
    } catch (err) {
      sink.error(err);
    }
  };

  Observable.prototype.forEach = function (next, promiseCtor) {
    var _this = this;

    promiseCtor = getPromiseCtor(promiseCtor);
    return new promiseCtor(function (resolve, reject) {
      var subscriber = new _Subscriber.SafeSubscriber({
        next: function (value) {
          try {
            next(value);
          } catch (err) {
            reject(err);
            subscriber.unsubscribe();
          }
        },
        error: reject,
        complete: resolve
      });

      _this.subscribe(subscriber);
    });
  };

  Observable.prototype._subscribe = function (subscriber) {
    var _a;

    return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);
  };

  Observable.prototype[_observable.observable] = function () {
    return this;
  };

  Observable.prototype.pipe = function () {
    var operations = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      operations[_i] = arguments[_i];
    }

    return (0, _pipe.pipeFromArray)(operations)(this);
  };

  Observable.prototype.toPromise = function (promiseCtor) {
    var _this = this;

    promiseCtor = getPromiseCtor(promiseCtor);
    return new promiseCtor(function (resolve, reject) {
      var value;

      _this.subscribe(function (x) {
        return value = x;
      }, function (err) {
        return reject(err);
      }, function () {
        return resolve(value);
      });
    });
  };

  Observable.create = function (subscribe) {
    return new Observable(subscribe);
  };

  return Observable;
}();

exports.Observable = Observable;

function getPromiseCtor(promiseCtor) {
  var _a;

  return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : _config.config.Promise) !== null && _a !== void 0 ? _a : Promise;
}

function isObserver(value) {
  return value && (0, _isFunction.isFunction)(value.next) && (0, _isFunction.isFunction)(value.error) && (0, _isFunction.isFunction)(value.complete);
}

function isSubscriber(value) {
  return value && value instanceof _Subscriber.Subscriber || isObserver(value) && (0, _Subscription.isSubscription)(value);
}
},{"./Subscriber":"node_modules/rxjs/dist/esm5/internal/Subscriber.js","./Subscription":"node_modules/rxjs/dist/esm5/internal/Subscription.js","./symbol/observable":"node_modules/rxjs/dist/esm5/internal/symbol/observable.js","./util/pipe":"node_modules/rxjs/dist/esm5/internal/util/pipe.js","./config":"node_modules/rxjs/dist/esm5/internal/config.js","./util/isFunction":"node_modules/rxjs/dist/esm5/internal/util/isFunction.js","./util/errorContext":"node_modules/rxjs/dist/esm5/internal/util/errorContext.js"}],"node_modules/rxjs/dist/esm5/internal/util/lift.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hasLift = hasLift;
exports.operate = operate;

var _isFunction = require("./isFunction");

function hasLift(source) {
  return (0, _isFunction.isFunction)(source === null || source === void 0 ? void 0 : source.lift);
}

function operate(init) {
  return function (source) {
    if (hasLift(source)) {
      return source.lift(function (liftedSource) {
        try {
          return init(liftedSource, this);
        } catch (err) {
          this.error(err);
        }
      });
    }

    throw new TypeError('Unable to lift unknown Observable type');
  };
}
},{"./isFunction":"node_modules/rxjs/dist/esm5/internal/util/isFunction.js"}],"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.OperatorSubscriber = void 0;
exports.createOperatorSubscriber = createOperatorSubscriber;

var _tslib = require("tslib");

var _Subscriber = require("../Subscriber");

function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {
  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);
}

var OperatorSubscriber = function (_super) {
  (0, _tslib.__extends)(OperatorSubscriber, _super);

  function OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {
    var _this = _super.call(this, destination) || this;

    _this.onFinalize = onFinalize;
    _this.shouldUnsubscribe = shouldUnsubscribe;
    _this._next = onNext ? function (value) {
      try {
        onNext(value);
      } catch (err) {
        destination.error(err);
      }
    } : _super.prototype._next;
    _this._error = onError ? function (err) {
      try {
        onError(err);
      } catch (err) {
        destination.error(err);
      } finally {
        this.unsubscribe();
      }
    } : _super.prototype._error;
    _this._complete = onComplete ? function () {
      try {
        onComplete();
      } catch (err) {
        destination.error(err);
      } finally {
        this.unsubscribe();
      }
    } : _super.prototype._complete;
    return _this;
  }

  OperatorSubscriber.prototype.unsubscribe = function () {
    var _a;

    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
      var closed_1 = this.closed;

      _super.prototype.unsubscribe.call(this);

      !closed_1 && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));
    }
  };

  return OperatorSubscriber;
}(_Subscriber.Subscriber);

exports.OperatorSubscriber = OperatorSubscriber;
},{"tslib":"node_modules/tslib/tslib.es6.js","../Subscriber":"node_modules/rxjs/dist/esm5/internal/Subscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/refCount.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.refCount = refCount;

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

function refCount() {
  return (0, _lift.operate)(function (source, subscriber) {
    var connection = null;
    source._refCount++;
    var refCounter = (0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, undefined, undefined, undefined, function () {
      if (!source || source._refCount <= 0 || 0 < --source._refCount) {
        connection = null;
        return;
      }

      var sharedConnection = source._connection;
      var conn = connection;
      connection = null;

      if (sharedConnection && (!conn || sharedConnection === conn)) {
        sharedConnection.unsubscribe();
      }

      subscriber.unsubscribe();
    });
    source.subscribe(refCounter);

    if (!refCounter.closed) {
      connection = source.connect();
    }
  });
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/observable/ConnectableObservable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ConnectableObservable = void 0;

var _tslib = require("tslib");

var _Observable = require("../Observable");

var _Subscription = require("../Subscription");

var _refCount = require("../operators/refCount");

var _OperatorSubscriber = require("../operators/OperatorSubscriber");

var _lift = require("../util/lift");

var ConnectableObservable = function (_super) {
  (0, _tslib.__extends)(ConnectableObservable, _super);

  function ConnectableObservable(source, subjectFactory) {
    var _this = _super.call(this) || this;

    _this.source = source;
    _this.subjectFactory = subjectFactory;
    _this._subject = null;
    _this._refCount = 0;
    _this._connection = null;

    if ((0, _lift.hasLift)(source)) {
      _this.lift = source.lift;
    }

    return _this;
  }

  ConnectableObservable.prototype._subscribe = function (subscriber) {
    return this.getSubject().subscribe(subscriber);
  };

  ConnectableObservable.prototype.getSubject = function () {
    var subject = this._subject;

    if (!subject || subject.isStopped) {
      this._subject = this.subjectFactory();
    }

    return this._subject;
  };

  ConnectableObservable.prototype._teardown = function () {
    this._refCount = 0;
    var _connection = this._connection;
    this._subject = this._connection = null;
    _connection === null || _connection === void 0 ? void 0 : _connection.unsubscribe();
  };

  ConnectableObservable.prototype.connect = function () {
    var _this = this;

    var connection = this._connection;

    if (!connection) {
      connection = this._connection = new _Subscription.Subscription();
      var subject_1 = this.getSubject();
      connection.add(this.source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subject_1, undefined, function () {
        _this._teardown();

        subject_1.complete();
      }, function (err) {
        _this._teardown();

        subject_1.error(err);
      }, function () {
        return _this._teardown();
      })));

      if (connection.closed) {
        this._connection = null;
        connection = _Subscription.Subscription.EMPTY;
      }
    }

    return connection;
  };

  ConnectableObservable.prototype.refCount = function () {
    return (0, _refCount.refCount)()(this);
  };

  return ConnectableObservable;
}(_Observable.Observable);

exports.ConnectableObservable = ConnectableObservable;
},{"tslib":"node_modules/tslib/tslib.es6.js","../Observable":"node_modules/rxjs/dist/esm5/internal/Observable.js","../Subscription":"node_modules/rxjs/dist/esm5/internal/Subscription.js","../operators/refCount":"node_modules/rxjs/dist/esm5/internal/operators/refCount.js","../operators/OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js"}],"node_modules/rxjs/dist/esm5/internal/scheduler/performanceTimestampProvider.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.performanceTimestampProvider = void 0;
var performanceTimestampProvider = {
  now: function () {
    return (performanceTimestampProvider.delegate || performance).now();
  },
  delegate: undefined
};
exports.performanceTimestampProvider = performanceTimestampProvider;
},{}],"node_modules/rxjs/dist/esm5/internal/scheduler/animationFrameProvider.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.animationFrameProvider = void 0;

var _tslib = require("tslib");

var _Subscription = require("../Subscription");

var animationFrameProvider = {
  schedule: function (callback) {
    var request = requestAnimationFrame;
    var cancel = cancelAnimationFrame;
    var delegate = animationFrameProvider.delegate;

    if (delegate) {
      request = delegate.requestAnimationFrame;
      cancel = delegate.cancelAnimationFrame;
    }

    var handle = request(function (timestamp) {
      cancel = undefined;
      callback(timestamp);
    });
    return new _Subscription.Subscription(function () {
      return cancel === null || cancel === void 0 ? void 0 : cancel(handle);
    });
  },
  requestAnimationFrame: function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    var delegate = animationFrameProvider.delegate;
    return ((delegate === null || delegate === void 0 ? void 0 : delegate.requestAnimationFrame) || requestAnimationFrame).apply(void 0, (0, _tslib.__spreadArray)([], (0, _tslib.__read)(args)));
  },
  cancelAnimationFrame: function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    var delegate = animationFrameProvider.delegate;
    return ((delegate === null || delegate === void 0 ? void 0 : delegate.cancelAnimationFrame) || cancelAnimationFrame).apply(void 0, (0, _tslib.__spreadArray)([], (0, _tslib.__read)(args)));
  },
  delegate: undefined
};
exports.animationFrameProvider = animationFrameProvider;
},{"tslib":"node_modules/tslib/tslib.es6.js","../Subscription":"node_modules/rxjs/dist/esm5/internal/Subscription.js"}],"node_modules/rxjs/dist/esm5/internal/observable/dom/animationFrames.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.animationFrames = animationFrames;

var _Observable = require("../../Observable");

var _Subscription = require("../../Subscription");

var _performanceTimestampProvider = require("../../scheduler/performanceTimestampProvider");

var _animationFrameProvider = require("../../scheduler/animationFrameProvider");

function animationFrames(timestampProvider) {
  return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;
}

function animationFramesFactory(timestampProvider) {
  var schedule = _animationFrameProvider.animationFrameProvider.schedule;
  return new _Observable.Observable(function (subscriber) {
    var subscription = new _Subscription.Subscription();
    var provider = timestampProvider || _performanceTimestampProvider.performanceTimestampProvider;
    var start = provider.now();

    var run = function (timestamp) {
      var now = provider.now();
      subscriber.next({
        timestamp: timestampProvider ? now : timestamp,
        elapsed: now - start
      });

      if (!subscriber.closed) {
        subscription.add(schedule(run));
      }
    };

    subscription.add(schedule(run));
    return subscription;
  });
}

var DEFAULT_ANIMATION_FRAMES = animationFramesFactory();
},{"../../Observable":"node_modules/rxjs/dist/esm5/internal/Observable.js","../../Subscription":"node_modules/rxjs/dist/esm5/internal/Subscription.js","../../scheduler/performanceTimestampProvider":"node_modules/rxjs/dist/esm5/internal/scheduler/performanceTimestampProvider.js","../../scheduler/animationFrameProvider":"node_modules/rxjs/dist/esm5/internal/scheduler/animationFrameProvider.js"}],"node_modules/rxjs/dist/esm5/internal/util/ObjectUnsubscribedError.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ObjectUnsubscribedError = void 0;

var _createErrorClass = require("./createErrorClass");

var ObjectUnsubscribedError = (0, _createErrorClass.createErrorClass)(function (_super) {
  return function ObjectUnsubscribedErrorImpl() {
    _super(this);

    this.name = 'ObjectUnsubscribedError';
    this.message = 'object unsubscribed';
  };
});
exports.ObjectUnsubscribedError = ObjectUnsubscribedError;
},{"./createErrorClass":"node_modules/rxjs/dist/esm5/internal/util/createErrorClass.js"}],"node_modules/rxjs/dist/esm5/internal/Subject.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Subject = exports.AnonymousSubject = void 0;

var _tslib = require("tslib");

var _Observable = require("./Observable");

var _Subscription = require("./Subscription");

var _ObjectUnsubscribedError = require("./util/ObjectUnsubscribedError");

var _arrRemove = require("./util/arrRemove");

var _errorContext = require("./util/errorContext");

var Subject = function (_super) {
  (0, _tslib.__extends)(Subject, _super);

  function Subject() {
    var _this = _super.call(this) || this;

    _this.closed = false;
    _this.currentObservers = null;
    _this.observers = [];
    _this.isStopped = false;
    _this.hasError = false;
    _this.thrownError = null;
    return _this;
  }

  Subject.prototype.lift = function (operator) {
    var subject = new AnonymousSubject(this, this);
    subject.operator = operator;
    return subject;
  };

  Subject.prototype._throwIfClosed = function () {
    if (this.closed) {
      throw new _ObjectUnsubscribedError.ObjectUnsubscribedError();
    }
  };

  Subject.prototype.next = function (value) {
    var _this = this;

    (0, _errorContext.errorContext)(function () {
      var e_1, _a;

      _this._throwIfClosed();

      if (!_this.isStopped) {
        if (!_this.currentObservers) {
          _this.currentObservers = Array.from(_this.observers);
        }

        try {
          for (var _b = (0, _tslib.__values)(_this.currentObservers), _c = _b.next(); !_c.done; _c = _b.next()) {
            var observer = _c.value;
            observer.next(value);
          }
        } catch (e_1_1) {
          e_1 = {
            error: e_1_1
          };
        } finally {
          try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
          } finally {
            if (e_1) throw e_1.error;
          }
        }
      }
    });
  };

  Subject.prototype.error = function (err) {
    var _this = this;

    (0, _errorContext.errorContext)(function () {
      _this._throwIfClosed();

      if (!_this.isStopped) {
        _this.hasError = _this.isStopped = true;
        _this.thrownError = err;
        var observers = _this.observers;

        while (observers.length) {
          observers.shift().error(err);
        }
      }
    });
  };

  Subject.prototype.complete = function () {
    var _this = this;

    (0, _errorContext.errorContext)(function () {
      _this._throwIfClosed();

      if (!_this.isStopped) {
        _this.isStopped = true;
        var observers = _this.observers;

        while (observers.length) {
          observers.shift().complete();
        }
      }
    });
  };

  Subject.prototype.unsubscribe = function () {
    this.isStopped = this.closed = true;
    this.observers = this.currentObservers = null;
  };

  Object.defineProperty(Subject.prototype, "observed", {
    get: function () {
      var _a;

      return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;
    },
    enumerable: false,
    configurable: true
  });

  Subject.prototype._trySubscribe = function (subscriber) {
    this._throwIfClosed();

    return _super.prototype._trySubscribe.call(this, subscriber);
  };

  Subject.prototype._subscribe = function (subscriber) {
    this._throwIfClosed();

    this._checkFinalizedStatuses(subscriber);

    return this._innerSubscribe(subscriber);
  };

  Subject.prototype._innerSubscribe = function (subscriber) {
    var _this = this;

    var _a = this,
        hasError = _a.hasError,
        isStopped = _a.isStopped,
        observers = _a.observers;

    if (hasError || isStopped) {
      return _Subscription.EMPTY_SUBSCRIPTION;
    }

    this.currentObservers = null;
    observers.push(subscriber);
    return new _Subscription.Subscription(function () {
      _this.currentObservers = null;
      (0, _arrRemove.arrRemove)(observers, subscriber);
    });
  };

  Subject.prototype._checkFinalizedStatuses = function (subscriber) {
    var _a = this,
        hasError = _a.hasError,
        thrownError = _a.thrownError,
        isStopped = _a.isStopped;

    if (hasError) {
      subscriber.error(thrownError);
    } else if (isStopped) {
      subscriber.complete();
    }
  };

  Subject.prototype.asObservable = function () {
    var observable = new _Observable.Observable();
    observable.source = this;
    return observable;
  };

  Subject.create = function (destination, source) {
    return new AnonymousSubject(destination, source);
  };

  return Subject;
}(_Observable.Observable);

exports.Subject = Subject;

var AnonymousSubject = function (_super) {
  (0, _tslib.__extends)(AnonymousSubject, _super);

  function AnonymousSubject(destination, source) {
    var _this = _super.call(this) || this;

    _this.destination = destination;
    _this.source = source;
    return _this;
  }

  AnonymousSubject.prototype.next = function (value) {
    var _a, _b;

    (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);
  };

  AnonymousSubject.prototype.error = function (err) {
    var _a, _b;

    (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);
  };

  AnonymousSubject.prototype.complete = function () {
    var _a, _b;

    (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);
  };

  AnonymousSubject.prototype._subscribe = function (subscriber) {
    var _a, _b;

    return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : _Subscription.EMPTY_SUBSCRIPTION;
  };

  return AnonymousSubject;
}(Subject);

exports.AnonymousSubject = AnonymousSubject;
},{"tslib":"node_modules/tslib/tslib.es6.js","./Observable":"node_modules/rxjs/dist/esm5/internal/Observable.js","./Subscription":"node_modules/rxjs/dist/esm5/internal/Subscription.js","./util/ObjectUnsubscribedError":"node_modules/rxjs/dist/esm5/internal/util/ObjectUnsubscribedError.js","./util/arrRemove":"node_modules/rxjs/dist/esm5/internal/util/arrRemove.js","./util/errorContext":"node_modules/rxjs/dist/esm5/internal/util/errorContext.js"}],"node_modules/rxjs/dist/esm5/internal/BehaviorSubject.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BehaviorSubject = void 0;

var _tslib = require("tslib");

var _Subject = require("./Subject");

var BehaviorSubject = function (_super) {
  (0, _tslib.__extends)(BehaviorSubject, _super);

  function BehaviorSubject(_value) {
    var _this = _super.call(this) || this;

    _this._value = _value;
    return _this;
  }

  Object.defineProperty(BehaviorSubject.prototype, "value", {
    get: function () {
      return this.getValue();
    },
    enumerable: false,
    configurable: true
  });

  BehaviorSubject.prototype._subscribe = function (subscriber) {
    var subscription = _super.prototype._subscribe.call(this, subscriber);

    !subscription.closed && subscriber.next(this._value);
    return subscription;
  };

  BehaviorSubject.prototype.getValue = function () {
    var _a = this,
        hasError = _a.hasError,
        thrownError = _a.thrownError,
        _value = _a._value;

    if (hasError) {
      throw thrownError;
    }

    this._throwIfClosed();

    return _value;
  };

  BehaviorSubject.prototype.next = function (value) {
    _super.prototype.next.call(this, this._value = value);
  };

  return BehaviorSubject;
}(_Subject.Subject);

exports.BehaviorSubject = BehaviorSubject;
},{"tslib":"node_modules/tslib/tslib.es6.js","./Subject":"node_modules/rxjs/dist/esm5/internal/Subject.js"}],"node_modules/rxjs/dist/esm5/internal/scheduler/dateTimestampProvider.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dateTimestampProvider = void 0;
var dateTimestampProvider = {
  now: function () {
    return (dateTimestampProvider.delegate || Date).now();
  },
  delegate: undefined
};
exports.dateTimestampProvider = dateTimestampProvider;
},{}],"node_modules/rxjs/dist/esm5/internal/ReplaySubject.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ReplaySubject = void 0;

var _tslib = require("tslib");

var _Subject = require("./Subject");

var _dateTimestampProvider = require("./scheduler/dateTimestampProvider");

var ReplaySubject = function (_super) {
  (0, _tslib.__extends)(ReplaySubject, _super);

  function ReplaySubject(_bufferSize, _windowTime, _timestampProvider) {
    if (_bufferSize === void 0) {
      _bufferSize = Infinity;
    }

    if (_windowTime === void 0) {
      _windowTime = Infinity;
    }

    if (_timestampProvider === void 0) {
      _timestampProvider = _dateTimestampProvider.dateTimestampProvider;
    }

    var _this = _super.call(this) || this;

    _this._bufferSize = _bufferSize;
    _this._windowTime = _windowTime;
    _this._timestampProvider = _timestampProvider;
    _this._buffer = [];
    _this._infiniteTimeWindow = true;
    _this._infiniteTimeWindow = _windowTime === Infinity;
    _this._bufferSize = Math.max(1, _bufferSize);
    _this._windowTime = Math.max(1, _windowTime);
    return _this;
  }

  ReplaySubject.prototype.next = function (value) {
    var _a = this,
        isStopped = _a.isStopped,
        _buffer = _a._buffer,
        _infiniteTimeWindow = _a._infiniteTimeWindow,
        _timestampProvider = _a._timestampProvider,
        _windowTime = _a._windowTime;

    if (!isStopped) {
      _buffer.push(value);

      !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);
    }

    this._trimBuffer();

    _super.prototype.next.call(this, value);
  };

  ReplaySubject.prototype._subscribe = function (subscriber) {
    this._throwIfClosed();

    this._trimBuffer();

    var subscription = this._innerSubscribe(subscriber);

    var _a = this,
        _infiniteTimeWindow = _a._infiniteTimeWindow,
        _buffer = _a._buffer;

    var copy = _buffer.slice();

    for (var i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {
      subscriber.next(copy[i]);
    }

    this._checkFinalizedStatuses(subscriber);

    return subscription;
  };

  ReplaySubject.prototype._trimBuffer = function () {
    var _a = this,
        _bufferSize = _a._bufferSize,
        _timestampProvider = _a._timestampProvider,
        _buffer = _a._buffer,
        _infiniteTimeWindow = _a._infiniteTimeWindow;

    var adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;
    _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);

    if (!_infiniteTimeWindow) {
      var now = _timestampProvider.now();

      var last = 0;

      for (var i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {
        last = i;
      }

      last && _buffer.splice(0, last + 1);
    }
  };

  return ReplaySubject;
}(_Subject.Subject);

exports.ReplaySubject = ReplaySubject;
},{"tslib":"node_modules/tslib/tslib.es6.js","./Subject":"node_modules/rxjs/dist/esm5/internal/Subject.js","./scheduler/dateTimestampProvider":"node_modules/rxjs/dist/esm5/internal/scheduler/dateTimestampProvider.js"}],"node_modules/rxjs/dist/esm5/internal/AsyncSubject.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AsyncSubject = void 0;

var _tslib = require("tslib");

var _Subject = require("./Subject");

var AsyncSubject = function (_super) {
  (0, _tslib.__extends)(AsyncSubject, _super);

  function AsyncSubject() {
    var _this = _super !== null && _super.apply(this, arguments) || this;

    _this._value = null;
    _this._hasValue = false;
    _this._isComplete = false;
    return _this;
  }

  AsyncSubject.prototype._checkFinalizedStatuses = function (subscriber) {
    var _a = this,
        hasError = _a.hasError,
        _hasValue = _a._hasValue,
        _value = _a._value,
        thrownError = _a.thrownError,
        isStopped = _a.isStopped,
        _isComplete = _a._isComplete;

    if (hasError) {
      subscriber.error(thrownError);
    } else if (isStopped || _isComplete) {
      _hasValue && subscriber.next(_value);
      subscriber.complete();
    }
  };

  AsyncSubject.prototype.next = function (value) {
    if (!this.isStopped) {
      this._value = value;
      this._hasValue = true;
    }
  };

  AsyncSubject.prototype.complete = function () {
    var _a = this,
        _hasValue = _a._hasValue,
        _value = _a._value,
        _isComplete = _a._isComplete;

    if (!_isComplete) {
      this._isComplete = true;
      _hasValue && _super.prototype.next.call(this, _value);

      _super.prototype.complete.call(this);
    }
  };

  return AsyncSubject;
}(_Subject.Subject);

exports.AsyncSubject = AsyncSubject;
},{"tslib":"node_modules/tslib/tslib.es6.js","./Subject":"node_modules/rxjs/dist/esm5/internal/Subject.js"}],"node_modules/rxjs/dist/esm5/internal/scheduler/Action.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Action = void 0;

var _tslib = require("tslib");

var _Subscription = require("../Subscription");

var Action = function (_super) {
  (0, _tslib.__extends)(Action, _super);

  function Action(scheduler, work) {
    return _super.call(this) || this;
  }

  Action.prototype.schedule = function (state, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    return this;
  };

  return Action;
}(_Subscription.Subscription);

exports.Action = Action;
},{"tslib":"node_modules/tslib/tslib.es6.js","../Subscription":"node_modules/rxjs/dist/esm5/internal/Subscription.js"}],"node_modules/rxjs/dist/esm5/internal/scheduler/intervalProvider.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.intervalProvider = void 0;

var _tslib = require("tslib");

var intervalProvider = {
  setInterval: function (handler, timeout) {
    var args = [];

    for (var _i = 2; _i < arguments.length; _i++) {
      args[_i - 2] = arguments[_i];
    }

    var delegate = intervalProvider.delegate;

    if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {
      return delegate.setInterval.apply(delegate, (0, _tslib.__spreadArray)([handler, timeout], (0, _tslib.__read)(args)));
    }

    return setInterval.apply(void 0, (0, _tslib.__spreadArray)([handler, timeout], (0, _tslib.__read)(args)));
  },
  clearInterval: function (handle) {
    var delegate = intervalProvider.delegate;
    return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);
  },
  delegate: undefined
};
exports.intervalProvider = intervalProvider;
},{"tslib":"node_modules/tslib/tslib.es6.js"}],"node_modules/rxjs/dist/esm5/internal/scheduler/AsyncAction.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AsyncAction = void 0;

var _tslib = require("tslib");

var _Action = require("./Action");

var _intervalProvider = require("./intervalProvider");

var _arrRemove = require("../util/arrRemove");

var AsyncAction = function (_super) {
  (0, _tslib.__extends)(AsyncAction, _super);

  function AsyncAction(scheduler, work) {
    var _this = _super.call(this, scheduler, work) || this;

    _this.scheduler = scheduler;
    _this.work = work;
    _this.pending = false;
    return _this;
  }

  AsyncAction.prototype.schedule = function (state, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    if (this.closed) {
      return this;
    }

    this.state = state;
    var id = this.id;
    var scheduler = this.scheduler;

    if (id != null) {
      this.id = this.recycleAsyncId(scheduler, id, delay);
    }

    this.pending = true;
    this.delay = delay;
    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);
    return this;
  };

  AsyncAction.prototype.requestAsyncId = function (scheduler, _id, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    return _intervalProvider.intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);
  };

  AsyncAction.prototype.recycleAsyncId = function (_scheduler, id, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    if (delay != null && this.delay === delay && this.pending === false) {
      return id;
    }

    _intervalProvider.intervalProvider.clearInterval(id);

    return undefined;
  };

  AsyncAction.prototype.execute = function (state, delay) {
    if (this.closed) {
      return new Error('executing a cancelled action');
    }

    this.pending = false;

    var error = this._execute(state, delay);

    if (error) {
      return error;
    } else if (this.pending === false && this.id != null) {
      this.id = this.recycleAsyncId(this.scheduler, this.id, null);
    }
  };

  AsyncAction.prototype._execute = function (state, _delay) {
    var errored = false;
    var errorValue;

    try {
      this.work(state);
    } catch (e) {
      errored = true;
      errorValue = e ? e : new Error('Scheduled action threw falsy error');
    }

    if (errored) {
      this.unsubscribe();
      return errorValue;
    }
  };

  AsyncAction.prototype.unsubscribe = function () {
    if (!this.closed) {
      var _a = this,
          id = _a.id,
          scheduler = _a.scheduler;

      var actions = scheduler.actions;
      this.work = this.state = this.scheduler = null;
      this.pending = false;
      (0, _arrRemove.arrRemove)(actions, this);

      if (id != null) {
        this.id = this.recycleAsyncId(scheduler, id, null);
      }

      this.delay = null;

      _super.prototype.unsubscribe.call(this);
    }
  };

  return AsyncAction;
}(_Action.Action);

exports.AsyncAction = AsyncAction;
},{"tslib":"node_modules/tslib/tslib.es6.js","./Action":"node_modules/rxjs/dist/esm5/internal/scheduler/Action.js","./intervalProvider":"node_modules/rxjs/dist/esm5/internal/scheduler/intervalProvider.js","../util/arrRemove":"node_modules/rxjs/dist/esm5/internal/util/arrRemove.js"}],"node_modules/rxjs/dist/esm5/internal/util/Immediate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TestTools = exports.Immediate = void 0;
var nextHandle = 1;
var resolved;
var activeHandles = {};

function findAndClearHandle(handle) {
  if (handle in activeHandles) {
    delete activeHandles[handle];
    return true;
  }

  return false;
}

var Immediate = {
  setImmediate: function (cb) {
    var handle = nextHandle++;
    activeHandles[handle] = true;

    if (!resolved) {
      resolved = Promise.resolve();
    }

    resolved.then(function () {
      return findAndClearHandle(handle) && cb();
    });
    return handle;
  },
  clearImmediate: function (handle) {
    findAndClearHandle(handle);
  }
};
exports.Immediate = Immediate;
var TestTools = {
  pending: function () {
    return Object.keys(activeHandles).length;
  }
};
exports.TestTools = TestTools;
},{}],"node_modules/rxjs/dist/esm5/internal/scheduler/immediateProvider.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.immediateProvider = void 0;

var _tslib = require("tslib");

var _Immediate = require("../util/Immediate");

var setImmediate = _Immediate.Immediate.setImmediate,
    clearImmediate = _Immediate.Immediate.clearImmediate;
var immediateProvider = {
  setImmediate: function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    var delegate = immediateProvider.delegate;
    return ((delegate === null || delegate === void 0 ? void 0 : delegate.setImmediate) || setImmediate).apply(void 0, (0, _tslib.__spreadArray)([], (0, _tslib.__read)(args)));
  },
  clearImmediate: function (handle) {
    var delegate = immediateProvider.delegate;
    return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearImmediate) || clearImmediate)(handle);
  },
  delegate: undefined
};
exports.immediateProvider = immediateProvider;
},{"tslib":"node_modules/tslib/tslib.es6.js","../util/Immediate":"node_modules/rxjs/dist/esm5/internal/util/Immediate.js"}],"node_modules/rxjs/dist/esm5/internal/scheduler/AsapAction.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AsapAction = void 0;

var _tslib = require("tslib");

var _AsyncAction = require("./AsyncAction");

var _immediateProvider = require("./immediateProvider");

var AsapAction = function (_super) {
  (0, _tslib.__extends)(AsapAction, _super);

  function AsapAction(scheduler, work) {
    var _this = _super.call(this, scheduler, work) || this;

    _this.scheduler = scheduler;
    _this.work = work;
    return _this;
  }

  AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    if (delay !== null && delay > 0) {
      return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
    }

    scheduler.actions.push(this);
    return scheduler._scheduled || (scheduler._scheduled = _immediateProvider.immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));
  };

  AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    if (delay != null && delay > 0 || delay == null && this.delay > 0) {
      return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
    }

    if (!scheduler.actions.some(function (action) {
      return action.id === id;
    })) {
      _immediateProvider.immediateProvider.clearImmediate(id);

      scheduler._scheduled = undefined;
    }

    return undefined;
  };

  return AsapAction;
}(_AsyncAction.AsyncAction);

exports.AsapAction = AsapAction;
},{"tslib":"node_modules/tslib/tslib.es6.js","./AsyncAction":"node_modules/rxjs/dist/esm5/internal/scheduler/AsyncAction.js","./immediateProvider":"node_modules/rxjs/dist/esm5/internal/scheduler/immediateProvider.js"}],"node_modules/rxjs/dist/esm5/internal/Scheduler.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Scheduler = void 0;

var _dateTimestampProvider = require("./scheduler/dateTimestampProvider");

var Scheduler = function () {
  function Scheduler(schedulerActionCtor, now) {
    if (now === void 0) {
      now = Scheduler.now;
    }

    this.schedulerActionCtor = schedulerActionCtor;
    this.now = now;
  }

  Scheduler.prototype.schedule = function (work, delay, state) {
    if (delay === void 0) {
      delay = 0;
    }

    return new this.schedulerActionCtor(this, work).schedule(state, delay);
  };

  Scheduler.now = _dateTimestampProvider.dateTimestampProvider.now;
  return Scheduler;
}();

exports.Scheduler = Scheduler;
},{"./scheduler/dateTimestampProvider":"node_modules/rxjs/dist/esm5/internal/scheduler/dateTimestampProvider.js"}],"node_modules/rxjs/dist/esm5/internal/scheduler/AsyncScheduler.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AsyncScheduler = void 0;

var _tslib = require("tslib");

var _Scheduler = require("../Scheduler");

var AsyncScheduler = function (_super) {
  (0, _tslib.__extends)(AsyncScheduler, _super);

  function AsyncScheduler(SchedulerAction, now) {
    if (now === void 0) {
      now = _Scheduler.Scheduler.now;
    }

    var _this = _super.call(this, SchedulerAction, now) || this;

    _this.actions = [];
    _this._active = false;
    _this._scheduled = undefined;
    return _this;
  }

  AsyncScheduler.prototype.flush = function (action) {
    var actions = this.actions;

    if (this._active) {
      actions.push(action);
      return;
    }

    var error;
    this._active = true;

    do {
      if (error = action.execute(action.state, action.delay)) {
        break;
      }
    } while (action = actions.shift());

    this._active = false;

    if (error) {
      while (action = actions.shift()) {
        action.unsubscribe();
      }

      throw error;
    }
  };

  return AsyncScheduler;
}(_Scheduler.Scheduler);

exports.AsyncScheduler = AsyncScheduler;
},{"tslib":"node_modules/tslib/tslib.es6.js","../Scheduler":"node_modules/rxjs/dist/esm5/internal/Scheduler.js"}],"node_modules/rxjs/dist/esm5/internal/scheduler/AsapScheduler.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AsapScheduler = void 0;

var _tslib = require("tslib");

var _AsyncScheduler = require("./AsyncScheduler");

var AsapScheduler = function (_super) {
  (0, _tslib.__extends)(AsapScheduler, _super);

  function AsapScheduler() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  AsapScheduler.prototype.flush = function (action) {
    this._active = true;
    var flushId = this._scheduled;
    this._scheduled = undefined;
    var actions = this.actions;
    var error;
    action = action || actions.shift();

    do {
      if (error = action.execute(action.state, action.delay)) {
        break;
      }
    } while ((action = actions[0]) && action.id === flushId && actions.shift());

    this._active = false;

    if (error) {
      while ((action = actions[0]) && action.id === flushId && actions.shift()) {
        action.unsubscribe();
      }

      throw error;
    }
  };

  return AsapScheduler;
}(_AsyncScheduler.AsyncScheduler);

exports.AsapScheduler = AsapScheduler;
},{"tslib":"node_modules/tslib/tslib.es6.js","./AsyncScheduler":"node_modules/rxjs/dist/esm5/internal/scheduler/AsyncScheduler.js"}],"node_modules/rxjs/dist/esm5/internal/scheduler/asap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.asapScheduler = exports.asap = void 0;

var _AsapAction = require("./AsapAction");

var _AsapScheduler = require("./AsapScheduler");

var asapScheduler = new _AsapScheduler.AsapScheduler(_AsapAction.AsapAction);
exports.asapScheduler = asapScheduler;
var asap = asapScheduler;
exports.asap = asap;
},{"./AsapAction":"node_modules/rxjs/dist/esm5/internal/scheduler/AsapAction.js","./AsapScheduler":"node_modules/rxjs/dist/esm5/internal/scheduler/AsapScheduler.js"}],"node_modules/rxjs/dist/esm5/internal/scheduler/async.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.asyncScheduler = exports.async = void 0;

var _AsyncAction = require("./AsyncAction");

var _AsyncScheduler = require("./AsyncScheduler");

var asyncScheduler = new _AsyncScheduler.AsyncScheduler(_AsyncAction.AsyncAction);
exports.asyncScheduler = asyncScheduler;
var async = asyncScheduler;
exports.async = async;
},{"./AsyncAction":"node_modules/rxjs/dist/esm5/internal/scheduler/AsyncAction.js","./AsyncScheduler":"node_modules/rxjs/dist/esm5/internal/scheduler/AsyncScheduler.js"}],"node_modules/rxjs/dist/esm5/internal/scheduler/QueueAction.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.QueueAction = void 0;

var _tslib = require("tslib");

var _AsyncAction = require("./AsyncAction");

var QueueAction = function (_super) {
  (0, _tslib.__extends)(QueueAction, _super);

  function QueueAction(scheduler, work) {
    var _this = _super.call(this, scheduler, work) || this;

    _this.scheduler = scheduler;
    _this.work = work;
    return _this;
  }

  QueueAction.prototype.schedule = function (state, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    if (delay > 0) {
      return _super.prototype.schedule.call(this, state, delay);
    }

    this.delay = delay;
    this.state = state;
    this.scheduler.flush(this);
    return this;
  };

  QueueAction.prototype.execute = function (state, delay) {
    return delay > 0 || this.closed ? _super.prototype.execute.call(this, state, delay) : this._execute(state, delay);
  };

  QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    if (delay != null && delay > 0 || delay == null && this.delay > 0) {
      return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
    }

    return scheduler.flush(this);
  };

  return QueueAction;
}(_AsyncAction.AsyncAction);

exports.QueueAction = QueueAction;
},{"tslib":"node_modules/tslib/tslib.es6.js","./AsyncAction":"node_modules/rxjs/dist/esm5/internal/scheduler/AsyncAction.js"}],"node_modules/rxjs/dist/esm5/internal/scheduler/QueueScheduler.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.QueueScheduler = void 0;

var _tslib = require("tslib");

var _AsyncScheduler = require("./AsyncScheduler");

var QueueScheduler = function (_super) {
  (0, _tslib.__extends)(QueueScheduler, _super);

  function QueueScheduler() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  return QueueScheduler;
}(_AsyncScheduler.AsyncScheduler);

exports.QueueScheduler = QueueScheduler;
},{"tslib":"node_modules/tslib/tslib.es6.js","./AsyncScheduler":"node_modules/rxjs/dist/esm5/internal/scheduler/AsyncScheduler.js"}],"node_modules/rxjs/dist/esm5/internal/scheduler/queue.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.queueScheduler = exports.queue = void 0;

var _QueueAction = require("./QueueAction");

var _QueueScheduler = require("./QueueScheduler");

var queueScheduler = new _QueueScheduler.QueueScheduler(_QueueAction.QueueAction);
exports.queueScheduler = queueScheduler;
var queue = queueScheduler;
exports.queue = queue;
},{"./QueueAction":"node_modules/rxjs/dist/esm5/internal/scheduler/QueueAction.js","./QueueScheduler":"node_modules/rxjs/dist/esm5/internal/scheduler/QueueScheduler.js"}],"node_modules/rxjs/dist/esm5/internal/scheduler/AnimationFrameAction.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AnimationFrameAction = void 0;

var _tslib = require("tslib");

var _AsyncAction = require("./AsyncAction");

var _animationFrameProvider = require("./animationFrameProvider");

var AnimationFrameAction = function (_super) {
  (0, _tslib.__extends)(AnimationFrameAction, _super);

  function AnimationFrameAction(scheduler, work) {
    var _this = _super.call(this, scheduler, work) || this;

    _this.scheduler = scheduler;
    _this.work = work;
    return _this;
  }

  AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    if (delay !== null && delay > 0) {
      return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
    }

    scheduler.actions.push(this);
    return scheduler._scheduled || (scheduler._scheduled = _animationFrameProvider.animationFrameProvider.requestAnimationFrame(function () {
      return scheduler.flush(undefined);
    }));
  };

  AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    if (delay != null && delay > 0 || delay == null && this.delay > 0) {
      return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
    }

    if (!scheduler.actions.some(function (action) {
      return action.id === id;
    })) {
      _animationFrameProvider.animationFrameProvider.cancelAnimationFrame(id);

      scheduler._scheduled = undefined;
    }

    return undefined;
  };

  return AnimationFrameAction;
}(_AsyncAction.AsyncAction);

exports.AnimationFrameAction = AnimationFrameAction;
},{"tslib":"node_modules/tslib/tslib.es6.js","./AsyncAction":"node_modules/rxjs/dist/esm5/internal/scheduler/AsyncAction.js","./animationFrameProvider":"node_modules/rxjs/dist/esm5/internal/scheduler/animationFrameProvider.js"}],"node_modules/rxjs/dist/esm5/internal/scheduler/AnimationFrameScheduler.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AnimationFrameScheduler = void 0;

var _tslib = require("tslib");

var _AsyncScheduler = require("./AsyncScheduler");

var AnimationFrameScheduler = function (_super) {
  (0, _tslib.__extends)(AnimationFrameScheduler, _super);

  function AnimationFrameScheduler() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  AnimationFrameScheduler.prototype.flush = function (action) {
    this._active = true;
    var flushId = this._scheduled;
    this._scheduled = undefined;
    var actions = this.actions;
    var error;
    action = action || actions.shift();

    do {
      if (error = action.execute(action.state, action.delay)) {
        break;
      }
    } while ((action = actions[0]) && action.id === flushId && actions.shift());

    this._active = false;

    if (error) {
      while ((action = actions[0]) && action.id === flushId && actions.shift()) {
        action.unsubscribe();
      }

      throw error;
    }
  };

  return AnimationFrameScheduler;
}(_AsyncScheduler.AsyncScheduler);

exports.AnimationFrameScheduler = AnimationFrameScheduler;
},{"tslib":"node_modules/tslib/tslib.es6.js","./AsyncScheduler":"node_modules/rxjs/dist/esm5/internal/scheduler/AsyncScheduler.js"}],"node_modules/rxjs/dist/esm5/internal/scheduler/animationFrame.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.animationFrameScheduler = exports.animationFrame = void 0;

var _AnimationFrameAction = require("./AnimationFrameAction");

var _AnimationFrameScheduler = require("./AnimationFrameScheduler");

var animationFrameScheduler = new _AnimationFrameScheduler.AnimationFrameScheduler(_AnimationFrameAction.AnimationFrameAction);
exports.animationFrameScheduler = animationFrameScheduler;
var animationFrame = animationFrameScheduler;
exports.animationFrame = animationFrame;
},{"./AnimationFrameAction":"node_modules/rxjs/dist/esm5/internal/scheduler/AnimationFrameAction.js","./AnimationFrameScheduler":"node_modules/rxjs/dist/esm5/internal/scheduler/AnimationFrameScheduler.js"}],"node_modules/rxjs/dist/esm5/internal/scheduler/VirtualTimeScheduler.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VirtualTimeScheduler = exports.VirtualAction = void 0;

var _tslib = require("tslib");

var _AsyncAction = require("./AsyncAction");

var _Subscription = require("../Subscription");

var _AsyncScheduler = require("./AsyncScheduler");

var VirtualTimeScheduler = function (_super) {
  (0, _tslib.__extends)(VirtualTimeScheduler, _super);

  function VirtualTimeScheduler(schedulerActionCtor, maxFrames) {
    if (schedulerActionCtor === void 0) {
      schedulerActionCtor = VirtualAction;
    }

    if (maxFrames === void 0) {
      maxFrames = Infinity;
    }

    var _this = _super.call(this, schedulerActionCtor, function () {
      return _this.frame;
    }) || this;

    _this.maxFrames = maxFrames;
    _this.frame = 0;
    _this.index = -1;
    return _this;
  }

  VirtualTimeScheduler.prototype.flush = function () {
    var _a = this,
        actions = _a.actions,
        maxFrames = _a.maxFrames;

    var error;
    var action;

    while ((action = actions[0]) && action.delay <= maxFrames) {
      actions.shift();
      this.frame = action.delay;

      if (error = action.execute(action.state, action.delay)) {
        break;
      }
    }

    if (error) {
      while (action = actions.shift()) {
        action.unsubscribe();
      }

      throw error;
    }
  };

  VirtualTimeScheduler.frameTimeFactor = 10;
  return VirtualTimeScheduler;
}(_AsyncScheduler.AsyncScheduler);

exports.VirtualTimeScheduler = VirtualTimeScheduler;

var VirtualAction = function (_super) {
  (0, _tslib.__extends)(VirtualAction, _super);

  function VirtualAction(scheduler, work, index) {
    if (index === void 0) {
      index = scheduler.index += 1;
    }

    var _this = _super.call(this, scheduler, work) || this;

    _this.scheduler = scheduler;
    _this.work = work;
    _this.index = index;
    _this.active = true;
    _this.index = scheduler.index = index;
    return _this;
  }

  VirtualAction.prototype.schedule = function (state, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    if (Number.isFinite(delay)) {
      if (!this.id) {
        return _super.prototype.schedule.call(this, state, delay);
      }

      this.active = false;
      var action = new VirtualAction(this.scheduler, this.work);
      this.add(action);
      return action.schedule(state, delay);
    } else {
      return _Subscription.Subscription.EMPTY;
    }
  };

  VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    this.delay = scheduler.frame + delay;
    var actions = scheduler.actions;
    actions.push(this);
    actions.sort(VirtualAction.sortActions);
    return true;
  };

  VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    return undefined;
  };

  VirtualAction.prototype._execute = function (state, delay) {
    if (this.active === true) {
      return _super.prototype._execute.call(this, state, delay);
    }
  };

  VirtualAction.sortActions = function (a, b) {
    if (a.delay === b.delay) {
      if (a.index === b.index) {
        return 0;
      } else if (a.index > b.index) {
        return 1;
      } else {
        return -1;
      }
    } else if (a.delay > b.delay) {
      return 1;
    } else {
      return -1;
    }
  };

  return VirtualAction;
}(_AsyncAction.AsyncAction);

exports.VirtualAction = VirtualAction;
},{"tslib":"node_modules/tslib/tslib.es6.js","./AsyncAction":"node_modules/rxjs/dist/esm5/internal/scheduler/AsyncAction.js","../Subscription":"node_modules/rxjs/dist/esm5/internal/Subscription.js","./AsyncScheduler":"node_modules/rxjs/dist/esm5/internal/scheduler/AsyncScheduler.js"}],"node_modules/rxjs/dist/esm5/internal/observable/empty.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EMPTY = void 0;
exports.empty = empty;

var _Observable = require("../Observable");

var EMPTY = new _Observable.Observable(function (subscriber) {
  return subscriber.complete();
});
exports.EMPTY = EMPTY;

function empty(scheduler) {
  return scheduler ? emptyScheduled(scheduler) : EMPTY;
}

function emptyScheduled(scheduler) {
  return new _Observable.Observable(function (subscriber) {
    return scheduler.schedule(function () {
      return subscriber.complete();
    });
  });
}
},{"../Observable":"node_modules/rxjs/dist/esm5/internal/Observable.js"}],"node_modules/rxjs/dist/esm5/internal/util/isScheduler.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isScheduler = isScheduler;

var _isFunction = require("./isFunction");

function isScheduler(value) {
  return value && (0, _isFunction.isFunction)(value.schedule);
}
},{"./isFunction":"node_modules/rxjs/dist/esm5/internal/util/isFunction.js"}],"node_modules/rxjs/dist/esm5/internal/util/args.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.popNumber = popNumber;
exports.popResultSelector = popResultSelector;
exports.popScheduler = popScheduler;

var _isFunction = require("./isFunction");

var _isScheduler = require("./isScheduler");

function last(arr) {
  return arr[arr.length - 1];
}

function popResultSelector(args) {
  return (0, _isFunction.isFunction)(last(args)) ? args.pop() : undefined;
}

function popScheduler(args) {
  return (0, _isScheduler.isScheduler)(last(args)) ? args.pop() : undefined;
}

function popNumber(args, defaultValue) {
  return typeof last(args) === 'number' ? args.pop() : defaultValue;
}
},{"./isFunction":"node_modules/rxjs/dist/esm5/internal/util/isFunction.js","./isScheduler":"node_modules/rxjs/dist/esm5/internal/util/isScheduler.js"}],"node_modules/rxjs/dist/esm5/internal/util/isArrayLike.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isArrayLike = void 0;

var isArrayLike = function (x) {
  return x && typeof x.length === 'number' && typeof x !== 'function';
};

exports.isArrayLike = isArrayLike;
},{}],"node_modules/rxjs/dist/esm5/internal/util/isPromise.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isPromise = isPromise;

var _isFunction = require("./isFunction");

function isPromise(value) {
  return (0, _isFunction.isFunction)(value === null || value === void 0 ? void 0 : value.then);
}
},{"./isFunction":"node_modules/rxjs/dist/esm5/internal/util/isFunction.js"}],"node_modules/rxjs/dist/esm5/internal/util/isInteropObservable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isInteropObservable = isInteropObservable;

var _observable = require("../symbol/observable");

var _isFunction = require("./isFunction");

function isInteropObservable(input) {
  return (0, _isFunction.isFunction)(input[_observable.observable]);
}
},{"../symbol/observable":"node_modules/rxjs/dist/esm5/internal/symbol/observable.js","./isFunction":"node_modules/rxjs/dist/esm5/internal/util/isFunction.js"}],"node_modules/rxjs/dist/esm5/internal/util/isAsyncIterable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isAsyncIterable = isAsyncIterable;

var _isFunction = require("./isFunction");

function isAsyncIterable(obj) {
  return Symbol.asyncIterator && (0, _isFunction.isFunction)(obj === null || obj === void 0 ? void 0 : obj[Symbol.asyncIterator]);
}
},{"./isFunction":"node_modules/rxjs/dist/esm5/internal/util/isFunction.js"}],"node_modules/rxjs/dist/esm5/internal/util/throwUnobservableError.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createInvalidObservableTypeError = createInvalidObservableTypeError;

function createInvalidObservableTypeError(input) {
  return new TypeError("You provided " + (input !== null && typeof input === 'object' ? 'an invalid object' : "'" + input + "'") + " where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.");
}
},{}],"node_modules/rxjs/dist/esm5/internal/symbol/iterator.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getSymbolIterator = getSymbolIterator;
exports.iterator = void 0;

function getSymbolIterator() {
  if (typeof Symbol !== 'function' || !Symbol.iterator) {
    return '@@iterator';
  }

  return Symbol.iterator;
}

var iterator = getSymbolIterator();
exports.iterator = iterator;
},{}],"node_modules/rxjs/dist/esm5/internal/util/isIterable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isIterable = isIterable;

var _iterator = require("../symbol/iterator");

var _isFunction = require("./isFunction");

function isIterable(input) {
  return (0, _isFunction.isFunction)(input === null || input === void 0 ? void 0 : input[_iterator.iterator]);
}
},{"../symbol/iterator":"node_modules/rxjs/dist/esm5/internal/symbol/iterator.js","./isFunction":"node_modules/rxjs/dist/esm5/internal/util/isFunction.js"}],"node_modules/rxjs/dist/esm5/internal/util/isReadableStreamLike.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isReadableStreamLike = isReadableStreamLike;
exports.readableStreamLikeToAsyncGenerator = readableStreamLikeToAsyncGenerator;

var _tslib = require("tslib");

var _isFunction = require("./isFunction");

function readableStreamLikeToAsyncGenerator(readableStream) {
  return (0, _tslib.__asyncGenerator)(this, arguments, function readableStreamLikeToAsyncGenerator_1() {
    var reader, _a, value, done;

    return (0, _tslib.__generator)(this, function (_b) {
      switch (_b.label) {
        case 0:
          reader = readableStream.getReader();
          _b.label = 1;

        case 1:
          _b.trys.push([1,, 9, 10]);

          _b.label = 2;

        case 2:
          if (!true) return [3, 8];
          return [4, (0, _tslib.__await)(reader.read())];

        case 3:
          _a = _b.sent(), value = _a.value, done = _a.done;
          if (!done) return [3, 5];
          return [4, (0, _tslib.__await)(void 0)];

        case 4:
          return [2, _b.sent()];

        case 5:
          return [4, (0, _tslib.__await)(value)];

        case 6:
          return [4, _b.sent()];

        case 7:
          _b.sent();

          return [3, 2];

        case 8:
          return [3, 10];

        case 9:
          reader.releaseLock();
          return [7];

        case 10:
          return [2];
      }
    });
  });
}

function isReadableStreamLike(obj) {
  return (0, _isFunction.isFunction)(obj === null || obj === void 0 ? void 0 : obj.getReader);
}
},{"tslib":"node_modules/tslib/tslib.es6.js","./isFunction":"node_modules/rxjs/dist/esm5/internal/util/isFunction.js"}],"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js":[function(require,module,exports) {

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fromArrayLike = fromArrayLike;
exports.fromAsyncIterable = fromAsyncIterable;
exports.fromInteropObservable = fromInteropObservable;
exports.fromIterable = fromIterable;
exports.fromPromise = fromPromise;
exports.fromReadableStreamLike = fromReadableStreamLike;
exports.innerFrom = innerFrom;

var _tslib = require("tslib");

var _isArrayLike = require("../util/isArrayLike");

var _isPromise = require("../util/isPromise");

var _Observable = require("../Observable");

var _isInteropObservable = require("../util/isInteropObservable");

var _isAsyncIterable = require("../util/isAsyncIterable");

var _throwUnobservableError = require("../util/throwUnobservableError");

var _isIterable = require("../util/isIterable");

var _isReadableStreamLike = require("../util/isReadableStreamLike");

var _isFunction = require("../util/isFunction");

var _reportUnhandledError = require("../util/reportUnhandledError");

var _observable = require("../symbol/observable");

function innerFrom(input) {
  if (input instanceof _Observable.Observable) {
    return input;
  }

  if (input != null) {
    if ((0, _isInteropObservable.isInteropObservable)(input)) {
      return fromInteropObservable(input);
    }

    if ((0, _isArrayLike.isArrayLike)(input)) {
      return fromArrayLike(input);
    }

    if ((0, _isPromise.isPromise)(input)) {
      return fromPromise(input);
    }

    if ((0, _isAsyncIterable.isAsyncIterable)(input)) {
      return fromAsyncIterable(input);
    }

    if ((0, _isIterable.isIterable)(input)) {
      return fromIterable(input);
    }

    if ((0, _isReadableStreamLike.isReadableStreamLike)(input)) {
      return fromReadableStreamLike(input);
    }
  }

  throw (0, _throwUnobservableError.createInvalidObservableTypeError)(input);
}

function fromInteropObservable(obj) {
  return new _Observable.Observable(function (subscriber) {
    var obs = obj[_observable.observable]();

    if ((0, _isFunction.isFunction)(obs.subscribe)) {
      return obs.subscribe(subscriber);
    }

    throw new TypeError('Provided object does not correctly implement Symbol.observable');
  });
}

function fromArrayLike(array) {
  return new _Observable.Observable(function (subscriber) {
    for (var i = 0; i < array.length && !subscriber.closed; i++) {
      subscriber.next(array[i]);
    }

    subscriber.complete();
  });
}

function fromPromise(promise) {
  return new _Observable.Observable(function (subscriber) {
    promise.then(function (value) {
      if (!subscriber.closed) {
        subscriber.next(value);
        subscriber.complete();
      }
    }, function (err) {
      return subscriber.error(err);
    }).then(null, _reportUnhandledError.reportUnhandledError);
  });
}

function fromIterable(iterable) {
  return new _Observable.Observable(function (subscriber) {
    var e_1, _a;

    try {
      for (var iterable_1 = (0, _tslib.__values)(iterable), iterable_1_1 = iterable_1.next(); !iterable_1_1.done; iterable_1_1 = iterable_1.next()) {
        var value = iterable_1_1.value;
        subscriber.next(value);

        if (subscriber.closed) {
          return;
        }
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (iterable_1_1 && !iterable_1_1.done && (_a = iterable_1.return)) _a.call(iterable_1);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    subscriber.complete();
  });
}

function fromAsyncIterable(asyncIterable) {
  return new _Observable.Observable(function (subscriber) {
    process(asyncIterable, subscriber).catch(function (err) {
      return subscriber.error(err);
    });
  });
}

function fromReadableStreamLike(readableStream) {
  return fromAsyncIterable((0, _isReadableStreamLike.readableStreamLikeToAsyncGenerator)(readableStream));
}

function process(asyncIterable, subscriber) {
  var asyncIterable_1, asyncIterable_1_1;

  var e_2, _a;

  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {
    var value, e_2_1;
    return (0, _tslib.__generator)(this, function (_b) {
      switch (_b.label) {
        case 0:
          _b.trys.push([0, 5, 6, 11]);

          asyncIterable_1 = (0, _tslib.__asyncValues)(asyncIterable);
          _b.label = 1;

        case 1:
          return [4, asyncIterable_1.next()];

        case 2:
          if (!(asyncIterable_1_1 = _b.sent(), !asyncIterable_1_1.done)) return [3, 4];
          value = asyncIterable_1_1.value;
          subscriber.next(value);

          if (subscriber.closed) {
            return [2];
          }

          _b.label = 3;

        case 3:
          return [3, 1];

        case 4:
          return [3, 11];

        case 5:
          e_2_1 = _b.sent();
          e_2 = {
            error: e_2_1
          };
          return [3, 11];

        case 6:
          _b.trys.push([6,, 9, 10]);

          if (!(asyncIterable_1_1 && !asyncIterable_1_1.done && (_a = asyncIterable_1.return))) return [3, 8];
          return [4, _a.call(asyncIterable_1)];

        case 7:
          _b.sent();

          _b.label = 8;

        case 8:
          return [3, 10];

        case 9:
          if (e_2) throw e_2.error;
          return [7];

        case 10:
          return [7];

        case 11:
          subscriber.complete();
          return [2];
      }
    });
  });
}
},{"tslib":"node_modules/tslib/tslib.es6.js","../util/isArrayLike":"node_modules/rxjs/dist/esm5/internal/util/isArrayLike.js","../util/isPromise":"node_modules/rxjs/dist/esm5/internal/util/isPromise.js","../Observable":"node_modules/rxjs/dist/esm5/internal/Observable.js","../util/isInteropObservable":"node_modules/rxjs/dist/esm5/internal/util/isInteropObservable.js","../util/isAsyncIterable":"node_modules/rxjs/dist/esm5/internal/util/isAsyncIterable.js","../util/throwUnobservableError":"node_modules/rxjs/dist/esm5/internal/util/throwUnobservableError.js","../util/isIterable":"node_modules/rxjs/dist/esm5/internal/util/isIterable.js","../util/isReadableStreamLike":"node_modules/rxjs/dist/esm5/internal/util/isReadableStreamLike.js","../util/isFunction":"node_modules/rxjs/dist/esm5/internal/util/isFunction.js","../util/reportUnhandledError":"node_modules/rxjs/dist/esm5/internal/util/reportUnhandledError.js","../symbol/observable":"node_modules/rxjs/dist/esm5/internal/symbol/observable.js","process":"node_modules/process/browser.js"}],"node_modules/rxjs/dist/esm5/internal/util/executeSchedule.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.executeSchedule = executeSchedule;

function executeSchedule(parentSubscription, scheduler, work, delay, repeat) {
  if (delay === void 0) {
    delay = 0;
  }

  if (repeat === void 0) {
    repeat = false;
  }

  var scheduleSubscription = scheduler.schedule(function () {
    work();

    if (repeat) {
      parentSubscription.add(this.schedule(null, delay));
    } else {
      this.unsubscribe();
    }
  }, delay);
  parentSubscription.add(scheduleSubscription);

  if (!repeat) {
    return scheduleSubscription;
  }
}
},{}],"node_modules/rxjs/dist/esm5/internal/operators/observeOn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.observeOn = observeOn;

var _executeSchedule = require("../util/executeSchedule");

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

function observeOn(scheduler, delay) {
  if (delay === void 0) {
    delay = 0;
  }

  return (0, _lift.operate)(function (source, subscriber) {
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      return (0, _executeSchedule.executeSchedule)(subscriber, scheduler, function () {
        return subscriber.next(value);
      }, delay);
    }, function () {
      return (0, _executeSchedule.executeSchedule)(subscriber, scheduler, function () {
        return subscriber.complete();
      }, delay);
    }, function (err) {
      return (0, _executeSchedule.executeSchedule)(subscriber, scheduler, function () {
        return subscriber.error(err);
      }, delay);
    }));
  });
}
},{"../util/executeSchedule":"node_modules/rxjs/dist/esm5/internal/util/executeSchedule.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/subscribeOn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.subscribeOn = subscribeOn;

var _lift = require("../util/lift");

function subscribeOn(scheduler, delay) {
  if (delay === void 0) {
    delay = 0;
  }

  return (0, _lift.operate)(function (source, subscriber) {
    subscriber.add(scheduler.schedule(function () {
      return source.subscribe(subscriber);
    }, delay));
  });
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js"}],"node_modules/rxjs/dist/esm5/internal/scheduled/scheduleObservable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.scheduleObservable = scheduleObservable;

var _innerFrom = require("../observable/innerFrom");

var _observeOn = require("../operators/observeOn");

var _subscribeOn = require("../operators/subscribeOn");

function scheduleObservable(input, scheduler) {
  return (0, _innerFrom.innerFrom)(input).pipe((0, _subscribeOn.subscribeOn)(scheduler), (0, _observeOn.observeOn)(scheduler));
}
},{"../observable/innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","../operators/observeOn":"node_modules/rxjs/dist/esm5/internal/operators/observeOn.js","../operators/subscribeOn":"node_modules/rxjs/dist/esm5/internal/operators/subscribeOn.js"}],"node_modules/rxjs/dist/esm5/internal/scheduled/schedulePromise.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.schedulePromise = schedulePromise;

var _innerFrom = require("../observable/innerFrom");

var _observeOn = require("../operators/observeOn");

var _subscribeOn = require("../operators/subscribeOn");

function schedulePromise(input, scheduler) {
  return (0, _innerFrom.innerFrom)(input).pipe((0, _subscribeOn.subscribeOn)(scheduler), (0, _observeOn.observeOn)(scheduler));
}
},{"../observable/innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","../operators/observeOn":"node_modules/rxjs/dist/esm5/internal/operators/observeOn.js","../operators/subscribeOn":"node_modules/rxjs/dist/esm5/internal/operators/subscribeOn.js"}],"node_modules/rxjs/dist/esm5/internal/scheduled/scheduleArray.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.scheduleArray = scheduleArray;

var _Observable = require("../Observable");

function scheduleArray(input, scheduler) {
  return new _Observable.Observable(function (subscriber) {
    var i = 0;
    return scheduler.schedule(function () {
      if (i === input.length) {
        subscriber.complete();
      } else {
        subscriber.next(input[i++]);

        if (!subscriber.closed) {
          this.schedule();
        }
      }
    });
  });
}
},{"../Observable":"node_modules/rxjs/dist/esm5/internal/Observable.js"}],"node_modules/rxjs/dist/esm5/internal/scheduled/scheduleIterable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.scheduleIterable = scheduleIterable;

var _Observable = require("../Observable");

var _iterator = require("../symbol/iterator");

var _isFunction = require("../util/isFunction");

var _executeSchedule = require("../util/executeSchedule");

function scheduleIterable(input, scheduler) {
  return new _Observable.Observable(function (subscriber) {
    var iterator;
    (0, _executeSchedule.executeSchedule)(subscriber, scheduler, function () {
      iterator = input[_iterator.iterator]();
      (0, _executeSchedule.executeSchedule)(subscriber, scheduler, function () {
        var _a;

        var value;
        var done;

        try {
          _a = iterator.next(), value = _a.value, done = _a.done;
        } catch (err) {
          subscriber.error(err);
          return;
        }

        if (done) {
          subscriber.complete();
        } else {
          subscriber.next(value);
        }
      }, 0, true);
    });
    return function () {
      return (0, _isFunction.isFunction)(iterator === null || iterator === void 0 ? void 0 : iterator.return) && iterator.return();
    };
  });
}
},{"../Observable":"node_modules/rxjs/dist/esm5/internal/Observable.js","../symbol/iterator":"node_modules/rxjs/dist/esm5/internal/symbol/iterator.js","../util/isFunction":"node_modules/rxjs/dist/esm5/internal/util/isFunction.js","../util/executeSchedule":"node_modules/rxjs/dist/esm5/internal/util/executeSchedule.js"}],"node_modules/rxjs/dist/esm5/internal/scheduled/scheduleAsyncIterable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.scheduleAsyncIterable = scheduleAsyncIterable;

var _Observable = require("../Observable");

var _executeSchedule = require("../util/executeSchedule");

function scheduleAsyncIterable(input, scheduler) {
  if (!input) {
    throw new Error('Iterable cannot be null');
  }

  return new _Observable.Observable(function (subscriber) {
    (0, _executeSchedule.executeSchedule)(subscriber, scheduler, function () {
      var iterator = input[Symbol.asyncIterator]();
      (0, _executeSchedule.executeSchedule)(subscriber, scheduler, function () {
        iterator.next().then(function (result) {
          if (result.done) {
            subscriber.complete();
          } else {
            subscriber.next(result.value);
          }
        });
      }, 0, true);
    });
  });
}
},{"../Observable":"node_modules/rxjs/dist/esm5/internal/Observable.js","../util/executeSchedule":"node_modules/rxjs/dist/esm5/internal/util/executeSchedule.js"}],"node_modules/rxjs/dist/esm5/internal/scheduled/scheduleReadableStreamLike.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.scheduleReadableStreamLike = scheduleReadableStreamLike;

var _scheduleAsyncIterable = require("./scheduleAsyncIterable");

var _isReadableStreamLike = require("../util/isReadableStreamLike");

function scheduleReadableStreamLike(input, scheduler) {
  return (0, _scheduleAsyncIterable.scheduleAsyncIterable)((0, _isReadableStreamLike.readableStreamLikeToAsyncGenerator)(input), scheduler);
}
},{"./scheduleAsyncIterable":"node_modules/rxjs/dist/esm5/internal/scheduled/scheduleAsyncIterable.js","../util/isReadableStreamLike":"node_modules/rxjs/dist/esm5/internal/util/isReadableStreamLike.js"}],"node_modules/rxjs/dist/esm5/internal/scheduled/scheduled.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.scheduled = scheduled;

var _scheduleObservable = require("./scheduleObservable");

var _schedulePromise = require("./schedulePromise");

var _scheduleArray = require("./scheduleArray");

var _scheduleIterable = require("./scheduleIterable");

var _scheduleAsyncIterable = require("./scheduleAsyncIterable");

var _isInteropObservable = require("../util/isInteropObservable");

var _isPromise = require("../util/isPromise");

var _isArrayLike = require("../util/isArrayLike");

var _isIterable = require("../util/isIterable");

var _isAsyncIterable = require("../util/isAsyncIterable");

var _throwUnobservableError = require("../util/throwUnobservableError");

var _isReadableStreamLike = require("../util/isReadableStreamLike");

var _scheduleReadableStreamLike = require("./scheduleReadableStreamLike");

function scheduled(input, scheduler) {
  if (input != null) {
    if ((0, _isInteropObservable.isInteropObservable)(input)) {
      return (0, _scheduleObservable.scheduleObservable)(input, scheduler);
    }

    if ((0, _isArrayLike.isArrayLike)(input)) {
      return (0, _scheduleArray.scheduleArray)(input, scheduler);
    }

    if ((0, _isPromise.isPromise)(input)) {
      return (0, _schedulePromise.schedulePromise)(input, scheduler);
    }

    if ((0, _isAsyncIterable.isAsyncIterable)(input)) {
      return (0, _scheduleAsyncIterable.scheduleAsyncIterable)(input, scheduler);
    }

    if ((0, _isIterable.isIterable)(input)) {
      return (0, _scheduleIterable.scheduleIterable)(input, scheduler);
    }

    if ((0, _isReadableStreamLike.isReadableStreamLike)(input)) {
      return (0, _scheduleReadableStreamLike.scheduleReadableStreamLike)(input, scheduler);
    }
  }

  throw (0, _throwUnobservableError.createInvalidObservableTypeError)(input);
}
},{"./scheduleObservable":"node_modules/rxjs/dist/esm5/internal/scheduled/scheduleObservable.js","./schedulePromise":"node_modules/rxjs/dist/esm5/internal/scheduled/schedulePromise.js","./scheduleArray":"node_modules/rxjs/dist/esm5/internal/scheduled/scheduleArray.js","./scheduleIterable":"node_modules/rxjs/dist/esm5/internal/scheduled/scheduleIterable.js","./scheduleAsyncIterable":"node_modules/rxjs/dist/esm5/internal/scheduled/scheduleAsyncIterable.js","../util/isInteropObservable":"node_modules/rxjs/dist/esm5/internal/util/isInteropObservable.js","../util/isPromise":"node_modules/rxjs/dist/esm5/internal/util/isPromise.js","../util/isArrayLike":"node_modules/rxjs/dist/esm5/internal/util/isArrayLike.js","../util/isIterable":"node_modules/rxjs/dist/esm5/internal/util/isIterable.js","../util/isAsyncIterable":"node_modules/rxjs/dist/esm5/internal/util/isAsyncIterable.js","../util/throwUnobservableError":"node_modules/rxjs/dist/esm5/internal/util/throwUnobservableError.js","../util/isReadableStreamLike":"node_modules/rxjs/dist/esm5/internal/util/isReadableStreamLike.js","./scheduleReadableStreamLike":"node_modules/rxjs/dist/esm5/internal/scheduled/scheduleReadableStreamLike.js"}],"node_modules/rxjs/dist/esm5/internal/observable/from.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.from = from;

var _scheduled = require("../scheduled/scheduled");

var _innerFrom = require("./innerFrom");

function from(input, scheduler) {
  return scheduler ? (0, _scheduled.scheduled)(input, scheduler) : (0, _innerFrom.innerFrom)(input);
}
},{"../scheduled/scheduled":"node_modules/rxjs/dist/esm5/internal/scheduled/scheduled.js","./innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"}],"node_modules/rxjs/dist/esm5/internal/observable/of.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.of = of;

var _args = require("../util/args");

var _from = require("./from");

function of() {
  var args = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }

  var scheduler = (0, _args.popScheduler)(args);
  return (0, _from.from)(args, scheduler);
}
},{"../util/args":"node_modules/rxjs/dist/esm5/internal/util/args.js","./from":"node_modules/rxjs/dist/esm5/internal/observable/from.js"}],"node_modules/rxjs/dist/esm5/internal/observable/throwError.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.throwError = throwError;

var _Observable = require("../Observable");

var _isFunction = require("../util/isFunction");

function throwError(errorOrErrorFactory, scheduler) {
  var errorFactory = (0, _isFunction.isFunction)(errorOrErrorFactory) ? errorOrErrorFactory : function () {
    return errorOrErrorFactory;
  };

  var init = function (subscriber) {
    return subscriber.error(errorFactory());
  };

  return new _Observable.Observable(scheduler ? function (subscriber) {
    return scheduler.schedule(init, 0, subscriber);
  } : init);
}
},{"../Observable":"node_modules/rxjs/dist/esm5/internal/Observable.js","../util/isFunction":"node_modules/rxjs/dist/esm5/internal/util/isFunction.js"}],"node_modules/rxjs/dist/esm5/internal/Notification.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NotificationKind = exports.Notification = void 0;
exports.observeNotification = observeNotification;

var _empty = require("./observable/empty");

var _of = require("./observable/of");

var _throwError = require("./observable/throwError");

var _isFunction = require("./util/isFunction");

var NotificationKind;
exports.NotificationKind = NotificationKind;

(function (NotificationKind) {
  NotificationKind["NEXT"] = "N";
  NotificationKind["ERROR"] = "E";
  NotificationKind["COMPLETE"] = "C";
})(NotificationKind || (exports.NotificationKind = NotificationKind = {}));

var Notification = function () {
  function Notification(kind, value, error) {
    this.kind = kind;
    this.value = value;
    this.error = error;
    this.hasValue = kind === 'N';
  }

  Notification.prototype.observe = function (observer) {
    return observeNotification(this, observer);
  };

  Notification.prototype.do = function (nextHandler, errorHandler, completeHandler) {
    var _a = this,
        kind = _a.kind,
        value = _a.value,
        error = _a.error;

    return kind === 'N' ? nextHandler === null || nextHandler === void 0 ? void 0 : nextHandler(value) : kind === 'E' ? errorHandler === null || errorHandler === void 0 ? void 0 : errorHandler(error) : completeHandler === null || completeHandler === void 0 ? void 0 : completeHandler();
  };

  Notification.prototype.accept = function (nextOrObserver, error, complete) {
    var _a;

    return (0, _isFunction.isFunction)((_a = nextOrObserver) === null || _a === void 0 ? void 0 : _a.next) ? this.observe(nextOrObserver) : this.do(nextOrObserver, error, complete);
  };

  Notification.prototype.toObservable = function () {
    var _a = this,
        kind = _a.kind,
        value = _a.value,
        error = _a.error;

    var result = kind === 'N' ? (0, _of.of)(value) : kind === 'E' ? (0, _throwError.throwError)(function () {
      return error;
    }) : kind === 'C' ? _empty.EMPTY : 0;

    if (!result) {
      throw new TypeError("Unexpected notification kind " + kind);
    }

    return result;
  };

  Notification.createNext = function (value) {
    return new Notification('N', value);
  };

  Notification.createError = function (err) {
    return new Notification('E', undefined, err);
  };

  Notification.createComplete = function () {
    return Notification.completeNotification;
  };

  Notification.completeNotification = new Notification('C');
  return Notification;
}();

exports.Notification = Notification;

function observeNotification(notification, observer) {
  var _a, _b, _c;

  var _d = notification,
      kind = _d.kind,
      value = _d.value,
      error = _d.error;

  if (typeof kind !== 'string') {
    throw new TypeError('Invalid notification, missing "kind"');
  }

  kind === 'N' ? (_a = observer.next) === null || _a === void 0 ? void 0 : _a.call(observer, value) : kind === 'E' ? (_b = observer.error) === null || _b === void 0 ? void 0 : _b.call(observer, error) : (_c = observer.complete) === null || _c === void 0 ? void 0 : _c.call(observer);
}
},{"./observable/empty":"node_modules/rxjs/dist/esm5/internal/observable/empty.js","./observable/of":"node_modules/rxjs/dist/esm5/internal/observable/of.js","./observable/throwError":"node_modules/rxjs/dist/esm5/internal/observable/throwError.js","./util/isFunction":"node_modules/rxjs/dist/esm5/internal/util/isFunction.js"}],"node_modules/rxjs/dist/esm5/internal/util/isObservable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isObservable = isObservable;

var _Observable = require("../Observable");

var _isFunction = require("./isFunction");

function isObservable(obj) {
  return !!obj && (obj instanceof _Observable.Observable || (0, _isFunction.isFunction)(obj.lift) && (0, _isFunction.isFunction)(obj.subscribe));
}
},{"../Observable":"node_modules/rxjs/dist/esm5/internal/Observable.js","./isFunction":"node_modules/rxjs/dist/esm5/internal/util/isFunction.js"}],"node_modules/rxjs/dist/esm5/internal/util/EmptyError.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EmptyError = void 0;

var _createErrorClass = require("./createErrorClass");

var EmptyError = (0, _createErrorClass.createErrorClass)(function (_super) {
  return function EmptyErrorImpl() {
    _super(this);

    this.name = 'EmptyError';
    this.message = 'no elements in sequence';
  };
});
exports.EmptyError = EmptyError;
},{"./createErrorClass":"node_modules/rxjs/dist/esm5/internal/util/createErrorClass.js"}],"node_modules/rxjs/dist/esm5/internal/lastValueFrom.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.lastValueFrom = lastValueFrom;

var _EmptyError = require("./util/EmptyError");

function lastValueFrom(source, config) {
  var hasConfig = typeof config === 'object';
  return new Promise(function (resolve, reject) {
    var _hasValue = false;

    var _value;

    source.subscribe({
      next: function (value) {
        _value = value;
        _hasValue = true;
      },
      error: reject,
      complete: function () {
        if (_hasValue) {
          resolve(_value);
        } else if (hasConfig) {
          resolve(config.defaultValue);
        } else {
          reject(new _EmptyError.EmptyError());
        }
      }
    });
  });
}
},{"./util/EmptyError":"node_modules/rxjs/dist/esm5/internal/util/EmptyError.js"}],"node_modules/rxjs/dist/esm5/internal/firstValueFrom.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.firstValueFrom = firstValueFrom;

var _EmptyError = require("./util/EmptyError");

var _Subscriber = require("./Subscriber");

function firstValueFrom(source, config) {
  var hasConfig = typeof config === 'object';
  return new Promise(function (resolve, reject) {
    var subscriber = new _Subscriber.SafeSubscriber({
      next: function (value) {
        resolve(value);
        subscriber.unsubscribe();
      },
      error: reject,
      complete: function () {
        if (hasConfig) {
          resolve(config.defaultValue);
        } else {
          reject(new _EmptyError.EmptyError());
        }
      }
    });
    source.subscribe(subscriber);
  });
}
},{"./util/EmptyError":"node_modules/rxjs/dist/esm5/internal/util/EmptyError.js","./Subscriber":"node_modules/rxjs/dist/esm5/internal/Subscriber.js"}],"node_modules/rxjs/dist/esm5/internal/util/ArgumentOutOfRangeError.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ArgumentOutOfRangeError = void 0;

var _createErrorClass = require("./createErrorClass");

var ArgumentOutOfRangeError = (0, _createErrorClass.createErrorClass)(function (_super) {
  return function ArgumentOutOfRangeErrorImpl() {
    _super(this);

    this.name = 'ArgumentOutOfRangeError';
    this.message = 'argument out of range';
  };
});
exports.ArgumentOutOfRangeError = ArgumentOutOfRangeError;
},{"./createErrorClass":"node_modules/rxjs/dist/esm5/internal/util/createErrorClass.js"}],"node_modules/rxjs/dist/esm5/internal/util/NotFoundError.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NotFoundError = void 0;

var _createErrorClass = require("./createErrorClass");

var NotFoundError = (0, _createErrorClass.createErrorClass)(function (_super) {
  return function NotFoundErrorImpl(message) {
    _super(this);

    this.name = 'NotFoundError';
    this.message = message;
  };
});
exports.NotFoundError = NotFoundError;
},{"./createErrorClass":"node_modules/rxjs/dist/esm5/internal/util/createErrorClass.js"}],"node_modules/rxjs/dist/esm5/internal/util/SequenceError.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SequenceError = void 0;

var _createErrorClass = require("./createErrorClass");

var SequenceError = (0, _createErrorClass.createErrorClass)(function (_super) {
  return function SequenceErrorImpl(message) {
    _super(this);

    this.name = 'SequenceError';
    this.message = message;
  };
});
exports.SequenceError = SequenceError;
},{"./createErrorClass":"node_modules/rxjs/dist/esm5/internal/util/createErrorClass.js"}],"node_modules/rxjs/dist/esm5/internal/util/isDate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isValidDate = isValidDate;

function isValidDate(value) {
  return value instanceof Date && !isNaN(value);
}
},{}],"node_modules/rxjs/dist/esm5/internal/operators/timeout.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TimeoutError = void 0;
exports.timeout = timeout;

var _async = require("../scheduler/async");

var _isDate = require("../util/isDate");

var _lift = require("../util/lift");

var _innerFrom = require("../observable/innerFrom");

var _createErrorClass = require("../util/createErrorClass");

var _OperatorSubscriber = require("./OperatorSubscriber");

var _executeSchedule = require("../util/executeSchedule");

var TimeoutError = (0, _createErrorClass.createErrorClass)(function (_super) {
  return function TimeoutErrorImpl(info) {
    if (info === void 0) {
      info = null;
    }

    _super(this);

    this.message = 'Timeout has occurred';
    this.name = 'TimeoutError';
    this.info = info;
  };
});
exports.TimeoutError = TimeoutError;

function timeout(config, schedulerArg) {
  var _a = (0, _isDate.isValidDate)(config) ? {
    first: config
  } : typeof config === 'number' ? {
    each: config
  } : config,
      first = _a.first,
      each = _a.each,
      _b = _a.with,
      _with = _b === void 0 ? timeoutErrorFactory : _b,
      _c = _a.scheduler,
      scheduler = _c === void 0 ? schedulerArg !== null && schedulerArg !== void 0 ? schedulerArg : _async.asyncScheduler : _c,
      _d = _a.meta,
      meta = _d === void 0 ? null : _d;

  if (first == null && each == null) {
    throw new TypeError('No timeout provided.');
  }

  return (0, _lift.operate)(function (source, subscriber) {
    var originalSourceSubscription;
    var timerSubscription;
    var lastValue = null;
    var seen = 0;

    var startTimer = function (delay) {
      timerSubscription = (0, _executeSchedule.executeSchedule)(subscriber, scheduler, function () {
        try {
          originalSourceSubscription.unsubscribe();
          (0, _innerFrom.innerFrom)(_with({
            meta: meta,
            lastValue: lastValue,
            seen: seen
          })).subscribe(subscriber);
        } catch (err) {
          subscriber.error(err);
        }
      }, delay);
    };

    originalSourceSubscription = source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      timerSubscription === null || timerSubscription === void 0 ? void 0 : timerSubscription.unsubscribe();
      seen++;
      subscriber.next(lastValue = value);
      each > 0 && startTimer(each);
    }, undefined, undefined, function () {
      if (!(timerSubscription === null || timerSubscription === void 0 ? void 0 : timerSubscription.closed)) {
        timerSubscription === null || timerSubscription === void 0 ? void 0 : timerSubscription.unsubscribe();
      }

      lastValue = null;
    }));
    !seen && startTimer(first != null ? typeof first === 'number' ? first : +first - scheduler.now() : each);
  });
}

function timeoutErrorFactory(info) {
  throw new TimeoutError(info);
}
},{"../scheduler/async":"node_modules/rxjs/dist/esm5/internal/scheduler/async.js","../util/isDate":"node_modules/rxjs/dist/esm5/internal/util/isDate.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","../observable/innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","../util/createErrorClass":"node_modules/rxjs/dist/esm5/internal/util/createErrorClass.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../util/executeSchedule":"node_modules/rxjs/dist/esm5/internal/util/executeSchedule.js"}],"node_modules/rxjs/dist/esm5/internal/operators/map.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.map = map;

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

function map(project, thisArg) {
  return (0, _lift.operate)(function (source, subscriber) {
    var index = 0;
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      subscriber.next(project.call(thisArg, value, index++));
    }));
  });
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/util/mapOneOrManyArgs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mapOneOrManyArgs = mapOneOrManyArgs;

var _tslib = require("tslib");

var _map = require("../operators/map");

var isArray = Array.isArray;

function callOrApply(fn, args) {
  return isArray(args) ? fn.apply(void 0, (0, _tslib.__spreadArray)([], (0, _tslib.__read)(args))) : fn(args);
}

function mapOneOrManyArgs(fn) {
  return (0, _map.map)(function (args) {
    return callOrApply(fn, args);
  });
}
},{"tslib":"node_modules/tslib/tslib.es6.js","../operators/map":"node_modules/rxjs/dist/esm5/internal/operators/map.js"}],"node_modules/rxjs/dist/esm5/internal/observable/bindCallbackInternals.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bindCallbackInternals = bindCallbackInternals;

var _tslib = require("tslib");

var _isScheduler = require("../util/isScheduler");

var _Observable = require("../Observable");

var _subscribeOn = require("../operators/subscribeOn");

var _mapOneOrManyArgs = require("../util/mapOneOrManyArgs");

var _observeOn = require("../operators/observeOn");

var _AsyncSubject = require("../AsyncSubject");

function bindCallbackInternals(isNodeStyle, callbackFunc, resultSelector, scheduler) {
  if (resultSelector) {
    if ((0, _isScheduler.isScheduler)(resultSelector)) {
      scheduler = resultSelector;
    } else {
      return function () {
        var args = [];

        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }

        return bindCallbackInternals(isNodeStyle, callbackFunc, scheduler).apply(this, args).pipe((0, _mapOneOrManyArgs.mapOneOrManyArgs)(resultSelector));
      };
    }
  }

  if (scheduler) {
    return function () {
      var args = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }

      return bindCallbackInternals(isNodeStyle, callbackFunc).apply(this, args).pipe((0, _subscribeOn.subscribeOn)(scheduler), (0, _observeOn.observeOn)(scheduler));
    };
  }

  return function () {
    var _this = this;

    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    var subject = new _AsyncSubject.AsyncSubject();
    var uninitialized = true;
    return new _Observable.Observable(function (subscriber) {
      var subs = subject.subscribe(subscriber);

      if (uninitialized) {
        uninitialized = false;
        var isAsync_1 = false;
        var isComplete_1 = false;
        callbackFunc.apply(_this, (0, _tslib.__spreadArray)((0, _tslib.__spreadArray)([], (0, _tslib.__read)(args)), [function () {
          var results = [];

          for (var _i = 0; _i < arguments.length; _i++) {
            results[_i] = arguments[_i];
          }

          if (isNodeStyle) {
            var err = results.shift();

            if (err != null) {
              subject.error(err);
              return;
            }
          }

          subject.next(1 < results.length ? results : results[0]);
          isComplete_1 = true;

          if (isAsync_1) {
            subject.complete();
          }
        }]));

        if (isComplete_1) {
          subject.complete();
        }

        isAsync_1 = true;
      }

      return subs;
    });
  };
}
},{"tslib":"node_modules/tslib/tslib.es6.js","../util/isScheduler":"node_modules/rxjs/dist/esm5/internal/util/isScheduler.js","../Observable":"node_modules/rxjs/dist/esm5/internal/Observable.js","../operators/subscribeOn":"node_modules/rxjs/dist/esm5/internal/operators/subscribeOn.js","../util/mapOneOrManyArgs":"node_modules/rxjs/dist/esm5/internal/util/mapOneOrManyArgs.js","../operators/observeOn":"node_modules/rxjs/dist/esm5/internal/operators/observeOn.js","../AsyncSubject":"node_modules/rxjs/dist/esm5/internal/AsyncSubject.js"}],"node_modules/rxjs/dist/esm5/internal/observable/bindCallback.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bindCallback = bindCallback;

var _bindCallbackInternals = require("./bindCallbackInternals");

function bindCallback(callbackFunc, resultSelector, scheduler) {
  return (0, _bindCallbackInternals.bindCallbackInternals)(false, callbackFunc, resultSelector, scheduler);
}
},{"./bindCallbackInternals":"node_modules/rxjs/dist/esm5/internal/observable/bindCallbackInternals.js"}],"node_modules/rxjs/dist/esm5/internal/observable/bindNodeCallback.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bindNodeCallback = bindNodeCallback;

var _bindCallbackInternals = require("./bindCallbackInternals");

function bindNodeCallback(callbackFunc, resultSelector, scheduler) {
  return (0, _bindCallbackInternals.bindCallbackInternals)(true, callbackFunc, resultSelector, scheduler);
}
},{"./bindCallbackInternals":"node_modules/rxjs/dist/esm5/internal/observable/bindCallbackInternals.js"}],"node_modules/rxjs/dist/esm5/internal/util/argsArgArrayOrObject.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.argsArgArrayOrObject = argsArgArrayOrObject;
var isArray = Array.isArray;
var getPrototypeOf = Object.getPrototypeOf,
    objectProto = Object.prototype,
    getKeys = Object.keys;

function argsArgArrayOrObject(args) {
  if (args.length === 1) {
    var first_1 = args[0];

    if (isArray(first_1)) {
      return {
        args: first_1,
        keys: null
      };
    }

    if (isPOJO(first_1)) {
      var keys = getKeys(first_1);
      return {
        args: keys.map(function (key) {
          return first_1[key];
        }),
        keys: keys
      };
    }
  }

  return {
    args: args,
    keys: null
  };
}

function isPOJO(obj) {
  return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;
}
},{}],"node_modules/rxjs/dist/esm5/internal/util/createObject.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createObject = createObject;

function createObject(keys, values) {
  return keys.reduce(function (result, key, i) {
    return result[key] = values[i], result;
  }, {});
}
},{}],"node_modules/rxjs/dist/esm5/internal/observable/combineLatest.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.combineLatest = combineLatest;
exports.combineLatestInit = combineLatestInit;

var _Observable = require("../Observable");

var _argsArgArrayOrObject = require("../util/argsArgArrayOrObject");

var _from = require("./from");

var _identity = require("../util/identity");

var _mapOneOrManyArgs = require("../util/mapOneOrManyArgs");

var _args = require("../util/args");

var _createObject = require("../util/createObject");

var _OperatorSubscriber = require("../operators/OperatorSubscriber");

var _executeSchedule = require("../util/executeSchedule");

function combineLatest() {
  var args = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }

  var scheduler = (0, _args.popScheduler)(args);
  var resultSelector = (0, _args.popResultSelector)(args);

  var _a = (0, _argsArgArrayOrObject.argsArgArrayOrObject)(args),
      observables = _a.args,
      keys = _a.keys;

  if (observables.length === 0) {
    return (0, _from.from)([], scheduler);
  }

  var result = new _Observable.Observable(combineLatestInit(observables, scheduler, keys ? function (values) {
    return (0, _createObject.createObject)(keys, values);
  } : _identity.identity));
  return resultSelector ? result.pipe((0, _mapOneOrManyArgs.mapOneOrManyArgs)(resultSelector)) : result;
}

function combineLatestInit(observables, scheduler, valueTransform) {
  if (valueTransform === void 0) {
    valueTransform = _identity.identity;
  }

  return function (subscriber) {
    maybeSchedule(scheduler, function () {
      var length = observables.length;
      var values = new Array(length);
      var active = length;
      var remainingFirstValues = length;

      var _loop_1 = function (i) {
        maybeSchedule(scheduler, function () {
          var source = (0, _from.from)(observables[i], scheduler);
          var hasFirstValue = false;
          source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
            values[i] = value;

            if (!hasFirstValue) {
              hasFirstValue = true;
              remainingFirstValues--;
            }

            if (!remainingFirstValues) {
              subscriber.next(valueTransform(values.slice()));
            }
          }, function () {
            if (! --active) {
              subscriber.complete();
            }
          }));
        }, subscriber);
      };

      for (var i = 0; i < length; i++) {
        _loop_1(i);
      }
    }, subscriber);
  };
}

function maybeSchedule(scheduler, execute, subscription) {
  if (scheduler) {
    (0, _executeSchedule.executeSchedule)(subscription, scheduler, execute);
  } else {
    execute();
  }
}
},{"../Observable":"node_modules/rxjs/dist/esm5/internal/Observable.js","../util/argsArgArrayOrObject":"node_modules/rxjs/dist/esm5/internal/util/argsArgArrayOrObject.js","./from":"node_modules/rxjs/dist/esm5/internal/observable/from.js","../util/identity":"node_modules/rxjs/dist/esm5/internal/util/identity.js","../util/mapOneOrManyArgs":"node_modules/rxjs/dist/esm5/internal/util/mapOneOrManyArgs.js","../util/args":"node_modules/rxjs/dist/esm5/internal/util/args.js","../util/createObject":"node_modules/rxjs/dist/esm5/internal/util/createObject.js","../operators/OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../util/executeSchedule":"node_modules/rxjs/dist/esm5/internal/util/executeSchedule.js"}],"node_modules/rxjs/dist/esm5/internal/operators/mergeInternals.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mergeInternals = mergeInternals;

var _innerFrom = require("../observable/innerFrom");

var _executeSchedule = require("../util/executeSchedule");

var _OperatorSubscriber = require("./OperatorSubscriber");

function mergeInternals(source, subscriber, project, concurrent, onBeforeNext, expand, innerSubScheduler, additionalFinalizer) {
  var buffer = [];
  var active = 0;
  var index = 0;
  var isComplete = false;

  var checkComplete = function () {
    if (isComplete && !buffer.length && !active) {
      subscriber.complete();
    }
  };

  var outerNext = function (value) {
    return active < concurrent ? doInnerSub(value) : buffer.push(value);
  };

  var doInnerSub = function (value) {
    expand && subscriber.next(value);
    active++;
    var innerComplete = false;
    (0, _innerFrom.innerFrom)(project(value, index++)).subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (innerValue) {
      onBeforeNext === null || onBeforeNext === void 0 ? void 0 : onBeforeNext(innerValue);

      if (expand) {
        outerNext(innerValue);
      } else {
        subscriber.next(innerValue);
      }
    }, function () {
      innerComplete = true;
    }, undefined, function () {
      if (innerComplete) {
        try {
          active--;

          var _loop_1 = function () {
            var bufferedValue = buffer.shift();

            if (innerSubScheduler) {
              (0, _executeSchedule.executeSchedule)(subscriber, innerSubScheduler, function () {
                return doInnerSub(bufferedValue);
              });
            } else {
              doInnerSub(bufferedValue);
            }
          };

          while (buffer.length && active < concurrent) {
            _loop_1();
          }

          checkComplete();
        } catch (err) {
          subscriber.error(err);
        }
      }
    }));
  };

  source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, outerNext, function () {
    isComplete = true;
    checkComplete();
  }));
  return function () {
    additionalFinalizer === null || additionalFinalizer === void 0 ? void 0 : additionalFinalizer();
  };
}
},{"../observable/innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","../util/executeSchedule":"node_modules/rxjs/dist/esm5/internal/util/executeSchedule.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mergeMap = mergeMap;

var _map = require("./map");

var _innerFrom = require("../observable/innerFrom");

var _lift = require("../util/lift");

var _mergeInternals = require("./mergeInternals");

var _isFunction = require("../util/isFunction");

function mergeMap(project, resultSelector, concurrent) {
  if (concurrent === void 0) {
    concurrent = Infinity;
  }

  if ((0, _isFunction.isFunction)(resultSelector)) {
    return mergeMap(function (a, i) {
      return (0, _map.map)(function (b, ii) {
        return resultSelector(a, b, i, ii);
      })((0, _innerFrom.innerFrom)(project(a, i)));
    }, concurrent);
  } else if (typeof resultSelector === 'number') {
    concurrent = resultSelector;
  }

  return (0, _lift.operate)(function (source, subscriber) {
    return (0, _mergeInternals.mergeInternals)(source, subscriber, project, concurrent);
  });
}
},{"./map":"node_modules/rxjs/dist/esm5/internal/operators/map.js","../observable/innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./mergeInternals":"node_modules/rxjs/dist/esm5/internal/operators/mergeInternals.js","../util/isFunction":"node_modules/rxjs/dist/esm5/internal/util/isFunction.js"}],"node_modules/rxjs/dist/esm5/internal/operators/mergeAll.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mergeAll = mergeAll;

var _mergeMap = require("./mergeMap");

var _identity = require("../util/identity");

function mergeAll(concurrent) {
  if (concurrent === void 0) {
    concurrent = Infinity;
  }

  return (0, _mergeMap.mergeMap)(_identity.identity, concurrent);
}
},{"./mergeMap":"node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js","../util/identity":"node_modules/rxjs/dist/esm5/internal/util/identity.js"}],"node_modules/rxjs/dist/esm5/internal/operators/concatAll.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.concatAll = concatAll;

var _mergeAll = require("./mergeAll");

function concatAll() {
  return (0, _mergeAll.mergeAll)(1);
}
},{"./mergeAll":"node_modules/rxjs/dist/esm5/internal/operators/mergeAll.js"}],"node_modules/rxjs/dist/esm5/internal/observable/concat.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.concat = concat;

var _concatAll = require("../operators/concatAll");

var _args = require("../util/args");

var _from = require("./from");

function concat() {
  var args = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }

  return (0, _concatAll.concatAll)()((0, _from.from)(args, (0, _args.popScheduler)(args)));
}
},{"../operators/concatAll":"node_modules/rxjs/dist/esm5/internal/operators/concatAll.js","../util/args":"node_modules/rxjs/dist/esm5/internal/util/args.js","./from":"node_modules/rxjs/dist/esm5/internal/observable/from.js"}],"node_modules/rxjs/dist/esm5/internal/observable/defer.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defer = defer;

var _Observable = require("../Observable");

var _innerFrom = require("./innerFrom");

function defer(observableFactory) {
  return new _Observable.Observable(function (subscriber) {
    (0, _innerFrom.innerFrom)(observableFactory()).subscribe(subscriber);
  });
}
},{"../Observable":"node_modules/rxjs/dist/esm5/internal/Observable.js","./innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"}],"node_modules/rxjs/dist/esm5/internal/observable/connectable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.connectable = connectable;

var _Subject = require("../Subject");

var _Observable = require("../Observable");

var _defer = require("./defer");

var DEFAULT_CONFIG = {
  connector: function () {
    return new _Subject.Subject();
  },
  resetOnDisconnect: true
};

function connectable(source, config) {
  if (config === void 0) {
    config = DEFAULT_CONFIG;
  }

  var connection = null;
  var connector = config.connector,
      _a = config.resetOnDisconnect,
      resetOnDisconnect = _a === void 0 ? true : _a;
  var subject = connector();
  var result = new _Observable.Observable(function (subscriber) {
    return subject.subscribe(subscriber);
  });

  result.connect = function () {
    if (!connection || connection.closed) {
      connection = (0, _defer.defer)(function () {
        return source;
      }).subscribe(subject);

      if (resetOnDisconnect) {
        connection.add(function () {
          return subject = connector();
        });
      }
    }

    return connection;
  };

  return result;
}
},{"../Subject":"node_modules/rxjs/dist/esm5/internal/Subject.js","../Observable":"node_modules/rxjs/dist/esm5/internal/Observable.js","./defer":"node_modules/rxjs/dist/esm5/internal/observable/defer.js"}],"node_modules/rxjs/dist/esm5/internal/observable/forkJoin.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.forkJoin = forkJoin;

var _Observable = require("../Observable");

var _argsArgArrayOrObject = require("../util/argsArgArrayOrObject");

var _innerFrom = require("./innerFrom");

var _args = require("../util/args");

var _OperatorSubscriber = require("../operators/OperatorSubscriber");

var _mapOneOrManyArgs = require("../util/mapOneOrManyArgs");

var _createObject = require("../util/createObject");

function forkJoin() {
  var args = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }

  var resultSelector = (0, _args.popResultSelector)(args);

  var _a = (0, _argsArgArrayOrObject.argsArgArrayOrObject)(args),
      sources = _a.args,
      keys = _a.keys;

  var result = new _Observable.Observable(function (subscriber) {
    var length = sources.length;

    if (!length) {
      subscriber.complete();
      return;
    }

    var values = new Array(length);
    var remainingCompletions = length;
    var remainingEmissions = length;

    var _loop_1 = function (sourceIndex) {
      var hasValue = false;
      (0, _innerFrom.innerFrom)(sources[sourceIndex]).subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
        if (!hasValue) {
          hasValue = true;
          remainingEmissions--;
        }

        values[sourceIndex] = value;
      }, function () {
        return remainingCompletions--;
      }, undefined, function () {
        if (!remainingCompletions || !hasValue) {
          if (!remainingEmissions) {
            subscriber.next(keys ? (0, _createObject.createObject)(keys, values) : values);
          }

          subscriber.complete();
        }
      }));
    };

    for (var sourceIndex = 0; sourceIndex < length; sourceIndex++) {
      _loop_1(sourceIndex);
    }
  });
  return resultSelector ? result.pipe((0, _mapOneOrManyArgs.mapOneOrManyArgs)(resultSelector)) : result;
}
},{"../Observable":"node_modules/rxjs/dist/esm5/internal/Observable.js","../util/argsArgArrayOrObject":"node_modules/rxjs/dist/esm5/internal/util/argsArgArrayOrObject.js","./innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","../util/args":"node_modules/rxjs/dist/esm5/internal/util/args.js","../operators/OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../util/mapOneOrManyArgs":"node_modules/rxjs/dist/esm5/internal/util/mapOneOrManyArgs.js","../util/createObject":"node_modules/rxjs/dist/esm5/internal/util/createObject.js"}],"node_modules/rxjs/dist/esm5/internal/observable/fromEvent.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fromEvent = fromEvent;

var _tslib = require("tslib");

var _innerFrom = require("../observable/innerFrom");

var _Observable = require("../Observable");

var _mergeMap = require("../operators/mergeMap");

var _isArrayLike = require("../util/isArrayLike");

var _isFunction = require("../util/isFunction");

var _mapOneOrManyArgs = require("../util/mapOneOrManyArgs");

var nodeEventEmitterMethods = ['addListener', 'removeListener'];
var eventTargetMethods = ['addEventListener', 'removeEventListener'];
var jqueryMethods = ['on', 'off'];

function fromEvent(target, eventName, options, resultSelector) {
  if ((0, _isFunction.isFunction)(options)) {
    resultSelector = options;
    options = undefined;
  }

  if (resultSelector) {
    return fromEvent(target, eventName, options).pipe((0, _mapOneOrManyArgs.mapOneOrManyArgs)(resultSelector));
  }

  var _a = (0, _tslib.__read)(isEventTarget(target) ? eventTargetMethods.map(function (methodName) {
    return function (handler) {
      return target[methodName](eventName, handler, options);
    };
  }) : isNodeStyleEventEmitter(target) ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName)) : isJQueryStyleEventEmitter(target) ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName)) : [], 2),
      add = _a[0],
      remove = _a[1];

  if (!add) {
    if ((0, _isArrayLike.isArrayLike)(target)) {
      return (0, _mergeMap.mergeMap)(function (subTarget) {
        return fromEvent(subTarget, eventName, options);
      })((0, _innerFrom.innerFrom)(target));
    }
  }

  if (!add) {
    throw new TypeError('Invalid event target');
  }

  return new _Observable.Observable(function (subscriber) {
    var handler = function () {
      var args = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }

      return subscriber.next(1 < args.length ? args : args[0]);
    };

    add(handler);
    return function () {
      return remove(handler);
    };
  });
}

function toCommonHandlerRegistry(target, eventName) {
  return function (methodName) {
    return function (handler) {
      return target[methodName](eventName, handler);
    };
  };
}

function isNodeStyleEventEmitter(target) {
  return (0, _isFunction.isFunction)(target.addListener) && (0, _isFunction.isFunction)(target.removeListener);
}

function isJQueryStyleEventEmitter(target) {
  return (0, _isFunction.isFunction)(target.on) && (0, _isFunction.isFunction)(target.off);
}

function isEventTarget(target) {
  return (0, _isFunction.isFunction)(target.addEventListener) && (0, _isFunction.isFunction)(target.removeEventListener);
}
},{"tslib":"node_modules/tslib/tslib.es6.js","../observable/innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","../Observable":"node_modules/rxjs/dist/esm5/internal/Observable.js","../operators/mergeMap":"node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js","../util/isArrayLike":"node_modules/rxjs/dist/esm5/internal/util/isArrayLike.js","../util/isFunction":"node_modules/rxjs/dist/esm5/internal/util/isFunction.js","../util/mapOneOrManyArgs":"node_modules/rxjs/dist/esm5/internal/util/mapOneOrManyArgs.js"}],"node_modules/rxjs/dist/esm5/internal/observable/fromEventPattern.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fromEventPattern = fromEventPattern;

var _Observable = require("../Observable");

var _isFunction = require("../util/isFunction");

var _mapOneOrManyArgs = require("../util/mapOneOrManyArgs");

function fromEventPattern(addHandler, removeHandler, resultSelector) {
  if (resultSelector) {
    return fromEventPattern(addHandler, removeHandler).pipe((0, _mapOneOrManyArgs.mapOneOrManyArgs)(resultSelector));
  }

  return new _Observable.Observable(function (subscriber) {
    var handler = function () {
      var e = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        e[_i] = arguments[_i];
      }

      return subscriber.next(e.length === 1 ? e[0] : e);
    };

    var retValue = addHandler(handler);
    return (0, _isFunction.isFunction)(removeHandler) ? function () {
      return removeHandler(handler, retValue);
    } : undefined;
  });
}
},{"../Observable":"node_modules/rxjs/dist/esm5/internal/Observable.js","../util/isFunction":"node_modules/rxjs/dist/esm5/internal/util/isFunction.js","../util/mapOneOrManyArgs":"node_modules/rxjs/dist/esm5/internal/util/mapOneOrManyArgs.js"}],"node_modules/rxjs/dist/esm5/internal/observable/generate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.generate = generate;

var _tslib = require("tslib");

var _identity = require("../util/identity");

var _isScheduler = require("../util/isScheduler");

var _defer = require("./defer");

var _scheduleIterable = require("../scheduled/scheduleIterable");

function generate(initialStateOrOptions, condition, iterate, resultSelectorOrScheduler, scheduler) {
  var _a, _b;

  var resultSelector;
  var initialState;

  if (arguments.length === 1) {
    _a = initialStateOrOptions, initialState = _a.initialState, condition = _a.condition, iterate = _a.iterate, _b = _a.resultSelector, resultSelector = _b === void 0 ? _identity.identity : _b, scheduler = _a.scheduler;
  } else {
    initialState = initialStateOrOptions;

    if (!resultSelectorOrScheduler || (0, _isScheduler.isScheduler)(resultSelectorOrScheduler)) {
      resultSelector = _identity.identity;
      scheduler = resultSelectorOrScheduler;
    } else {
      resultSelector = resultSelectorOrScheduler;
    }
  }

  function gen() {
    var state;
    return (0, _tslib.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          state = initialState;
          _a.label = 1;

        case 1:
          if (!(!condition || condition(state))) return [3, 4];
          return [4, resultSelector(state)];

        case 2:
          _a.sent();

          _a.label = 3;

        case 3:
          state = iterate(state);
          return [3, 1];

        case 4:
          return [2];
      }
    });
  }

  return (0, _defer.defer)(scheduler ? function () {
    return (0, _scheduleIterable.scheduleIterable)(gen(), scheduler);
  } : gen);
}
},{"tslib":"node_modules/tslib/tslib.es6.js","../util/identity":"node_modules/rxjs/dist/esm5/internal/util/identity.js","../util/isScheduler":"node_modules/rxjs/dist/esm5/internal/util/isScheduler.js","./defer":"node_modules/rxjs/dist/esm5/internal/observable/defer.js","../scheduled/scheduleIterable":"node_modules/rxjs/dist/esm5/internal/scheduled/scheduleIterable.js"}],"node_modules/rxjs/dist/esm5/internal/observable/iif.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.iif = iif;

var _defer = require("./defer");

function iif(condition, trueResult, falseResult) {
  return (0, _defer.defer)(function () {
    return condition() ? trueResult : falseResult;
  });
}
},{"./defer":"node_modules/rxjs/dist/esm5/internal/observable/defer.js"}],"node_modules/rxjs/dist/esm5/internal/observable/timer.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.timer = timer;

var _Observable = require("../Observable");

var _async = require("../scheduler/async");

var _isScheduler = require("../util/isScheduler");

var _isDate = require("../util/isDate");

function timer(dueTime, intervalOrScheduler, scheduler) {
  if (dueTime === void 0) {
    dueTime = 0;
  }

  if (scheduler === void 0) {
    scheduler = _async.async;
  }

  var intervalDuration = -1;

  if (intervalOrScheduler != null) {
    if ((0, _isScheduler.isScheduler)(intervalOrScheduler)) {
      scheduler = intervalOrScheduler;
    } else {
      intervalDuration = intervalOrScheduler;
    }
  }

  return new _Observable.Observable(function (subscriber) {
    var due = (0, _isDate.isValidDate)(dueTime) ? +dueTime - scheduler.now() : dueTime;

    if (due < 0) {
      due = 0;
    }

    var n = 0;
    return scheduler.schedule(function () {
      if (!subscriber.closed) {
        subscriber.next(n++);

        if (0 <= intervalDuration) {
          this.schedule(undefined, intervalDuration);
        } else {
          subscriber.complete();
        }
      }
    }, due);
  });
}
},{"../Observable":"node_modules/rxjs/dist/esm5/internal/Observable.js","../scheduler/async":"node_modules/rxjs/dist/esm5/internal/scheduler/async.js","../util/isScheduler":"node_modules/rxjs/dist/esm5/internal/util/isScheduler.js","../util/isDate":"node_modules/rxjs/dist/esm5/internal/util/isDate.js"}],"node_modules/rxjs/dist/esm5/internal/observable/interval.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.interval = interval;

var _async = require("../scheduler/async");

var _timer = require("./timer");

function interval(period, scheduler) {
  if (period === void 0) {
    period = 0;
  }

  if (scheduler === void 0) {
    scheduler = _async.asyncScheduler;
  }

  if (period < 0) {
    period = 0;
  }

  return (0, _timer.timer)(period, period, scheduler);
}
},{"../scheduler/async":"node_modules/rxjs/dist/esm5/internal/scheduler/async.js","./timer":"node_modules/rxjs/dist/esm5/internal/observable/timer.js"}],"node_modules/rxjs/dist/esm5/internal/observable/merge.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.merge = merge;

var _mergeAll = require("../operators/mergeAll");

var _innerFrom = require("./innerFrom");

var _empty = require("./empty");

var _args = require("../util/args");

var _from = require("./from");

function merge() {
  var args = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }

  var scheduler = (0, _args.popScheduler)(args);
  var concurrent = (0, _args.popNumber)(args, Infinity);
  var sources = args;
  return !sources.length ? _empty.EMPTY : sources.length === 1 ? (0, _innerFrom.innerFrom)(sources[0]) : (0, _mergeAll.mergeAll)(concurrent)((0, _from.from)(sources, scheduler));
}
},{"../operators/mergeAll":"node_modules/rxjs/dist/esm5/internal/operators/mergeAll.js","./innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","./empty":"node_modules/rxjs/dist/esm5/internal/observable/empty.js","../util/args":"node_modules/rxjs/dist/esm5/internal/util/args.js","./from":"node_modules/rxjs/dist/esm5/internal/observable/from.js"}],"node_modules/rxjs/dist/esm5/internal/observable/never.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NEVER = void 0;
exports.never = never;

var _Observable = require("../Observable");

var _noop = require("../util/noop");

var NEVER = new _Observable.Observable(_noop.noop);
exports.NEVER = NEVER;

function never() {
  return NEVER;
}
},{"../Observable":"node_modules/rxjs/dist/esm5/internal/Observable.js","../util/noop":"node_modules/rxjs/dist/esm5/internal/util/noop.js"}],"node_modules/rxjs/dist/esm5/internal/util/argsOrArgArray.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.argsOrArgArray = argsOrArgArray;
var isArray = Array.isArray;

function argsOrArgArray(args) {
  return args.length === 1 && isArray(args[0]) ? args[0] : args;
}
},{}],"node_modules/rxjs/dist/esm5/internal/operators/onErrorResumeNext.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.onErrorResumeNext = onErrorResumeNext;

var _tslib = require("tslib");

var _lift = require("../util/lift");

var _innerFrom = require("../observable/innerFrom");

var _argsOrArgArray = require("../util/argsOrArgArray");

var _OperatorSubscriber = require("./OperatorSubscriber");

var _noop = require("../util/noop");

function onErrorResumeNext() {
  var sources = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    sources[_i] = arguments[_i];
  }

  var nextSources = (0, _argsOrArgArray.argsOrArgArray)(sources);
  return (0, _lift.operate)(function (source, subscriber) {
    var remaining = (0, _tslib.__spreadArray)([source], (0, _tslib.__read)(nextSources));

    var subscribeNext = function () {
      if (!subscriber.closed) {
        if (remaining.length > 0) {
          var nextSource = void 0;

          try {
            nextSource = (0, _innerFrom.innerFrom)(remaining.shift());
          } catch (err) {
            subscribeNext();
            return;
          }

          var innerSub = (0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, undefined, _noop.noop, _noop.noop);
          nextSource.subscribe(innerSub);
          innerSub.add(subscribeNext);
        } else {
          subscriber.complete();
        }
      }
    };

    subscribeNext();
  });
}
},{"tslib":"node_modules/tslib/tslib.es6.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","../observable/innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","../util/argsOrArgArray":"node_modules/rxjs/dist/esm5/internal/util/argsOrArgArray.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../util/noop":"node_modules/rxjs/dist/esm5/internal/util/noop.js"}],"node_modules/rxjs/dist/esm5/internal/observable/onErrorResumeNext.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.onErrorResumeNext = onErrorResumeNext;

var _empty = require("./empty");

var _onErrorResumeNext = require("../operators/onErrorResumeNext");

var _argsOrArgArray = require("../util/argsOrArgArray");

function onErrorResumeNext() {
  var sources = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    sources[_i] = arguments[_i];
  }

  return (0, _onErrorResumeNext.onErrorResumeNext)((0, _argsOrArgArray.argsOrArgArray)(sources))(_empty.EMPTY);
}
},{"./empty":"node_modules/rxjs/dist/esm5/internal/observable/empty.js","../operators/onErrorResumeNext":"node_modules/rxjs/dist/esm5/internal/operators/onErrorResumeNext.js","../util/argsOrArgArray":"node_modules/rxjs/dist/esm5/internal/util/argsOrArgArray.js"}],"node_modules/rxjs/dist/esm5/internal/observable/pairs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pairs = pairs;

var _from = require("./from");

function pairs(obj, scheduler) {
  return (0, _from.from)(Object.entries(obj), scheduler);
}
},{"./from":"node_modules/rxjs/dist/esm5/internal/observable/from.js"}],"node_modules/rxjs/dist/esm5/internal/util/not.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.not = not;

function not(pred, thisArg) {
  return function (value, index) {
    return !pred.call(thisArg, value, index);
  };
}
},{}],"node_modules/rxjs/dist/esm5/internal/operators/filter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.filter = filter;

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

function filter(predicate, thisArg) {
  return (0, _lift.operate)(function (source, subscriber) {
    var index = 0;
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      return predicate.call(thisArg, value, index++) && subscriber.next(value);
    }));
  });
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/observable/partition.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.partition = partition;

var _not = require("../util/not");

var _filter = require("../operators/filter");

var _innerFrom = require("./innerFrom");

function partition(source, predicate, thisArg) {
  return [(0, _filter.filter)(predicate, thisArg)((0, _innerFrom.innerFrom)(source)), (0, _filter.filter)((0, _not.not)(predicate, thisArg))((0, _innerFrom.innerFrom)(source))];
}
},{"../util/not":"node_modules/rxjs/dist/esm5/internal/util/not.js","../operators/filter":"node_modules/rxjs/dist/esm5/internal/operators/filter.js","./innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"}],"node_modules/rxjs/dist/esm5/internal/observable/race.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.race = race;
exports.raceInit = raceInit;

var _Observable = require("../Observable");

var _innerFrom = require("./innerFrom");

var _argsOrArgArray = require("../util/argsOrArgArray");

var _OperatorSubscriber = require("../operators/OperatorSubscriber");

function race() {
  var sources = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    sources[_i] = arguments[_i];
  }

  sources = (0, _argsOrArgArray.argsOrArgArray)(sources);
  return sources.length === 1 ? (0, _innerFrom.innerFrom)(sources[0]) : new _Observable.Observable(raceInit(sources));
}

function raceInit(sources) {
  return function (subscriber) {
    var subscriptions = [];

    var _loop_1 = function (i) {
      subscriptions.push((0, _innerFrom.innerFrom)(sources[i]).subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
        if (subscriptions) {
          for (var s = 0; s < subscriptions.length; s++) {
            s !== i && subscriptions[s].unsubscribe();
          }

          subscriptions = null;
        }

        subscriber.next(value);
      })));
    };

    for (var i = 0; subscriptions && !subscriber.closed && i < sources.length; i++) {
      _loop_1(i);
    }
  };
}
},{"../Observable":"node_modules/rxjs/dist/esm5/internal/Observable.js","./innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","../util/argsOrArgArray":"node_modules/rxjs/dist/esm5/internal/util/argsOrArgArray.js","../operators/OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/observable/range.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.range = range;

var _Observable = require("../Observable");

var _empty = require("./empty");

function range(start, count, scheduler) {
  if (count == null) {
    count = start;
    start = 0;
  }

  if (count <= 0) {
    return _empty.EMPTY;
  }

  var end = count + start;
  return new _Observable.Observable(scheduler ? function (subscriber) {
    var n = start;
    return scheduler.schedule(function () {
      if (n < end) {
        subscriber.next(n++);
        this.schedule();
      } else {
        subscriber.complete();
      }
    });
  } : function (subscriber) {
    var n = start;

    while (n < end && !subscriber.closed) {
      subscriber.next(n++);
    }

    subscriber.complete();
  });
}
},{"../Observable":"node_modules/rxjs/dist/esm5/internal/Observable.js","./empty":"node_modules/rxjs/dist/esm5/internal/observable/empty.js"}],"node_modules/rxjs/dist/esm5/internal/observable/using.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.using = using;

var _Observable = require("../Observable");

var _innerFrom = require("./innerFrom");

var _empty = require("./empty");

function using(resourceFactory, observableFactory) {
  return new _Observable.Observable(function (subscriber) {
    var resource = resourceFactory();
    var result = observableFactory(resource);
    var source = result ? (0, _innerFrom.innerFrom)(result) : _empty.EMPTY;
    source.subscribe(subscriber);
    return function () {
      if (resource) {
        resource.unsubscribe();
      }
    };
  });
}
},{"../Observable":"node_modules/rxjs/dist/esm5/internal/Observable.js","./innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","./empty":"node_modules/rxjs/dist/esm5/internal/observable/empty.js"}],"node_modules/rxjs/dist/esm5/internal/observable/zip.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.zip = zip;

var _tslib = require("tslib");

var _Observable = require("../Observable");

var _innerFrom = require("./innerFrom");

var _argsOrArgArray = require("../util/argsOrArgArray");

var _empty = require("./empty");

var _OperatorSubscriber = require("../operators/OperatorSubscriber");

var _args = require("../util/args");

function zip() {
  var args = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }

  var resultSelector = (0, _args.popResultSelector)(args);
  var sources = (0, _argsOrArgArray.argsOrArgArray)(args);
  return sources.length ? new _Observable.Observable(function (subscriber) {
    var buffers = sources.map(function () {
      return [];
    });
    var completed = sources.map(function () {
      return false;
    });
    subscriber.add(function () {
      buffers = completed = null;
    });

    var _loop_1 = function (sourceIndex) {
      (0, _innerFrom.innerFrom)(sources[sourceIndex]).subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
        buffers[sourceIndex].push(value);

        if (buffers.every(function (buffer) {
          return buffer.length;
        })) {
          var result = buffers.map(function (buffer) {
            return buffer.shift();
          });
          subscriber.next(resultSelector ? resultSelector.apply(void 0, (0, _tslib.__spreadArray)([], (0, _tslib.__read)(result))) : result);

          if (buffers.some(function (buffer, i) {
            return !buffer.length && completed[i];
          })) {
            subscriber.complete();
          }
        }
      }, function () {
        completed[sourceIndex] = true;
        !buffers[sourceIndex].length && subscriber.complete();
      }));
    };

    for (var sourceIndex = 0; !subscriber.closed && sourceIndex < sources.length; sourceIndex++) {
      _loop_1(sourceIndex);
    }

    return function () {
      buffers = completed = null;
    };
  }) : _empty.EMPTY;
}
},{"tslib":"node_modules/tslib/tslib.es6.js","../Observable":"node_modules/rxjs/dist/esm5/internal/Observable.js","./innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","../util/argsOrArgArray":"node_modules/rxjs/dist/esm5/internal/util/argsOrArgArray.js","./empty":"node_modules/rxjs/dist/esm5/internal/observable/empty.js","../operators/OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../util/args":"node_modules/rxjs/dist/esm5/internal/util/args.js"}],"node_modules/rxjs/dist/esm5/internal/types.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"node_modules/rxjs/dist/esm5/internal/operators/audit.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.audit = audit;

var _lift = require("../util/lift");

var _innerFrom = require("../observable/innerFrom");

var _OperatorSubscriber = require("./OperatorSubscriber");

function audit(durationSelector) {
  return (0, _lift.operate)(function (source, subscriber) {
    var hasValue = false;
    var lastValue = null;
    var durationSubscriber = null;
    var isComplete = false;

    var endDuration = function () {
      durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();
      durationSubscriber = null;

      if (hasValue) {
        hasValue = false;
        var value = lastValue;
        lastValue = null;
        subscriber.next(value);
      }

      isComplete && subscriber.complete();
    };

    var cleanupDuration = function () {
      durationSubscriber = null;
      isComplete && subscriber.complete();
    };

    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      hasValue = true;
      lastValue = value;

      if (!durationSubscriber) {
        (0, _innerFrom.innerFrom)(durationSelector(value)).subscribe(durationSubscriber = (0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, endDuration, cleanupDuration));
      }
    }, function () {
      isComplete = true;
      (!hasValue || !durationSubscriber || durationSubscriber.closed) && subscriber.complete();
    }));
  });
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","../observable/innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/auditTime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.auditTime = auditTime;

var _async = require("../scheduler/async");

var _audit = require("./audit");

var _timer = require("../observable/timer");

function auditTime(duration, scheduler) {
  if (scheduler === void 0) {
    scheduler = _async.asyncScheduler;
  }

  return (0, _audit.audit)(function () {
    return (0, _timer.timer)(duration, scheduler);
  });
}
},{"../scheduler/async":"node_modules/rxjs/dist/esm5/internal/scheduler/async.js","./audit":"node_modules/rxjs/dist/esm5/internal/operators/audit.js","../observable/timer":"node_modules/rxjs/dist/esm5/internal/observable/timer.js"}],"node_modules/rxjs/dist/esm5/internal/operators/buffer.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.buffer = buffer;

var _lift = require("../util/lift");

var _noop = require("../util/noop");

var _OperatorSubscriber = require("./OperatorSubscriber");

function buffer(closingNotifier) {
  return (0, _lift.operate)(function (source, subscriber) {
    var currentBuffer = [];
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      return currentBuffer.push(value);
    }, function () {
      subscriber.next(currentBuffer);
      subscriber.complete();
    }));
    closingNotifier.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function () {
      var b = currentBuffer;
      currentBuffer = [];
      subscriber.next(b);
    }, _noop.noop));
    return function () {
      currentBuffer = null;
    };
  });
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","../util/noop":"node_modules/rxjs/dist/esm5/internal/util/noop.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/bufferCount.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bufferCount = bufferCount;

var _tslib = require("tslib");

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

var _arrRemove = require("../util/arrRemove");

function bufferCount(bufferSize, startBufferEvery) {
  if (startBufferEvery === void 0) {
    startBufferEvery = null;
  }

  startBufferEvery = startBufferEvery !== null && startBufferEvery !== void 0 ? startBufferEvery : bufferSize;
  return (0, _lift.operate)(function (source, subscriber) {
    var buffers = [];
    var count = 0;
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      var e_1, _a, e_2, _b;

      var toEmit = null;

      if (count++ % startBufferEvery === 0) {
        buffers.push([]);
      }

      try {
        for (var buffers_1 = (0, _tslib.__values)(buffers), buffers_1_1 = buffers_1.next(); !buffers_1_1.done; buffers_1_1 = buffers_1.next()) {
          var buffer = buffers_1_1.value;
          buffer.push(value);

          if (bufferSize <= buffer.length) {
            toEmit = toEmit !== null && toEmit !== void 0 ? toEmit : [];
            toEmit.push(buffer);
          }
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (buffers_1_1 && !buffers_1_1.done && (_a = buffers_1.return)) _a.call(buffers_1);
        } finally {
          if (e_1) throw e_1.error;
        }
      }

      if (toEmit) {
        try {
          for (var toEmit_1 = (0, _tslib.__values)(toEmit), toEmit_1_1 = toEmit_1.next(); !toEmit_1_1.done; toEmit_1_1 = toEmit_1.next()) {
            var buffer = toEmit_1_1.value;
            (0, _arrRemove.arrRemove)(buffers, buffer);
            subscriber.next(buffer);
          }
        } catch (e_2_1) {
          e_2 = {
            error: e_2_1
          };
        } finally {
          try {
            if (toEmit_1_1 && !toEmit_1_1.done && (_b = toEmit_1.return)) _b.call(toEmit_1);
          } finally {
            if (e_2) throw e_2.error;
          }
        }
      }
    }, function () {
      var e_3, _a;

      try {
        for (var buffers_2 = (0, _tslib.__values)(buffers), buffers_2_1 = buffers_2.next(); !buffers_2_1.done; buffers_2_1 = buffers_2.next()) {
          var buffer = buffers_2_1.value;
          subscriber.next(buffer);
        }
      } catch (e_3_1) {
        e_3 = {
          error: e_3_1
        };
      } finally {
        try {
          if (buffers_2_1 && !buffers_2_1.done && (_a = buffers_2.return)) _a.call(buffers_2);
        } finally {
          if (e_3) throw e_3.error;
        }
      }

      subscriber.complete();
    }, undefined, function () {
      buffers = null;
    }));
  });
}
},{"tslib":"node_modules/tslib/tslib.es6.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../util/arrRemove":"node_modules/rxjs/dist/esm5/internal/util/arrRemove.js"}],"node_modules/rxjs/dist/esm5/internal/operators/bufferTime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bufferTime = bufferTime;

var _tslib = require("tslib");

var _Subscription = require("../Subscription");

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

var _arrRemove = require("../util/arrRemove");

var _async = require("../scheduler/async");

var _args = require("../util/args");

var _executeSchedule = require("../util/executeSchedule");

function bufferTime(bufferTimeSpan) {
  var _a, _b;

  var otherArgs = [];

  for (var _i = 1; _i < arguments.length; _i++) {
    otherArgs[_i - 1] = arguments[_i];
  }

  var scheduler = (_a = (0, _args.popScheduler)(otherArgs)) !== null && _a !== void 0 ? _a : _async.asyncScheduler;
  var bufferCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;
  var maxBufferSize = otherArgs[1] || Infinity;
  return (0, _lift.operate)(function (source, subscriber) {
    var bufferRecords = [];
    var restartOnEmit = false;

    var emit = function (record) {
      var buffer = record.buffer,
          subs = record.subs;
      subs.unsubscribe();
      (0, _arrRemove.arrRemove)(bufferRecords, record);
      subscriber.next(buffer);
      restartOnEmit && startBuffer();
    };

    var startBuffer = function () {
      if (bufferRecords) {
        var subs = new _Subscription.Subscription();
        subscriber.add(subs);
        var buffer = [];
        var record_1 = {
          buffer: buffer,
          subs: subs
        };
        bufferRecords.push(record_1);
        (0, _executeSchedule.executeSchedule)(subs, scheduler, function () {
          return emit(record_1);
        }, bufferTimeSpan);
      }
    };

    if (bufferCreationInterval !== null && bufferCreationInterval >= 0) {
      (0, _executeSchedule.executeSchedule)(subscriber, scheduler, startBuffer, bufferCreationInterval, true);
    } else {
      restartOnEmit = true;
    }

    startBuffer();
    var bufferTimeSubscriber = (0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      var e_1, _a;

      var recordsCopy = bufferRecords.slice();

      try {
        for (var recordsCopy_1 = (0, _tslib.__values)(recordsCopy), recordsCopy_1_1 = recordsCopy_1.next(); !recordsCopy_1_1.done; recordsCopy_1_1 = recordsCopy_1.next()) {
          var record = recordsCopy_1_1.value;
          var buffer = record.buffer;
          buffer.push(value);
          maxBufferSize <= buffer.length && emit(record);
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (recordsCopy_1_1 && !recordsCopy_1_1.done && (_a = recordsCopy_1.return)) _a.call(recordsCopy_1);
        } finally {
          if (e_1) throw e_1.error;
        }
      }
    }, function () {
      while (bufferRecords === null || bufferRecords === void 0 ? void 0 : bufferRecords.length) {
        subscriber.next(bufferRecords.shift().buffer);
      }

      bufferTimeSubscriber === null || bufferTimeSubscriber === void 0 ? void 0 : bufferTimeSubscriber.unsubscribe();
      subscriber.complete();
      subscriber.unsubscribe();
    }, undefined, function () {
      return bufferRecords = null;
    });
    source.subscribe(bufferTimeSubscriber);
  });
}
},{"tslib":"node_modules/tslib/tslib.es6.js","../Subscription":"node_modules/rxjs/dist/esm5/internal/Subscription.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../util/arrRemove":"node_modules/rxjs/dist/esm5/internal/util/arrRemove.js","../scheduler/async":"node_modules/rxjs/dist/esm5/internal/scheduler/async.js","../util/args":"node_modules/rxjs/dist/esm5/internal/util/args.js","../util/executeSchedule":"node_modules/rxjs/dist/esm5/internal/util/executeSchedule.js"}],"node_modules/rxjs/dist/esm5/internal/operators/bufferToggle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bufferToggle = bufferToggle;

var _tslib = require("tslib");

var _Subscription = require("../Subscription");

var _lift = require("../util/lift");

var _innerFrom = require("../observable/innerFrom");

var _OperatorSubscriber = require("./OperatorSubscriber");

var _noop = require("../util/noop");

var _arrRemove = require("../util/arrRemove");

function bufferToggle(openings, closingSelector) {
  return (0, _lift.operate)(function (source, subscriber) {
    var buffers = [];
    (0, _innerFrom.innerFrom)(openings).subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (openValue) {
      var buffer = [];
      buffers.push(buffer);
      var closingSubscription = new _Subscription.Subscription();

      var emitBuffer = function () {
        (0, _arrRemove.arrRemove)(buffers, buffer);
        subscriber.next(buffer);
        closingSubscription.unsubscribe();
      };

      closingSubscription.add((0, _innerFrom.innerFrom)(closingSelector(openValue)).subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, emitBuffer, _noop.noop)));
    }, _noop.noop));
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      var e_1, _a;

      try {
        for (var buffers_1 = (0, _tslib.__values)(buffers), buffers_1_1 = buffers_1.next(); !buffers_1_1.done; buffers_1_1 = buffers_1.next()) {
          var buffer = buffers_1_1.value;
          buffer.push(value);
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (buffers_1_1 && !buffers_1_1.done && (_a = buffers_1.return)) _a.call(buffers_1);
        } finally {
          if (e_1) throw e_1.error;
        }
      }
    }, function () {
      while (buffers.length > 0) {
        subscriber.next(buffers.shift());
      }

      subscriber.complete();
    }));
  });
}
},{"tslib":"node_modules/tslib/tslib.es6.js","../Subscription":"node_modules/rxjs/dist/esm5/internal/Subscription.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","../observable/innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../util/noop":"node_modules/rxjs/dist/esm5/internal/util/noop.js","../util/arrRemove":"node_modules/rxjs/dist/esm5/internal/util/arrRemove.js"}],"node_modules/rxjs/dist/esm5/internal/operators/bufferWhen.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bufferWhen = bufferWhen;

var _lift = require("../util/lift");

var _noop = require("../util/noop");

var _OperatorSubscriber = require("./OperatorSubscriber");

var _innerFrom = require("../observable/innerFrom");

function bufferWhen(closingSelector) {
  return (0, _lift.operate)(function (source, subscriber) {
    var buffer = null;
    var closingSubscriber = null;

    var openBuffer = function () {
      closingSubscriber === null || closingSubscriber === void 0 ? void 0 : closingSubscriber.unsubscribe();
      var b = buffer;
      buffer = [];
      b && subscriber.next(b);
      (0, _innerFrom.innerFrom)(closingSelector()).subscribe(closingSubscriber = (0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, openBuffer, _noop.noop));
    };

    openBuffer();
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      return buffer === null || buffer === void 0 ? void 0 : buffer.push(value);
    }, function () {
      buffer && subscriber.next(buffer);
      subscriber.complete();
    }, undefined, function () {
      return buffer = closingSubscriber = null;
    }));
  });
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","../util/noop":"node_modules/rxjs/dist/esm5/internal/util/noop.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../observable/innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"}],"node_modules/rxjs/dist/esm5/internal/operators/catchError.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.catchError = catchError;

var _innerFrom = require("../observable/innerFrom");

var _OperatorSubscriber = require("./OperatorSubscriber");

var _lift = require("../util/lift");

function catchError(selector) {
  return (0, _lift.operate)(function (source, subscriber) {
    var innerSub = null;
    var syncUnsub = false;
    var handledResult;
    innerSub = source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, undefined, undefined, function (err) {
      handledResult = (0, _innerFrom.innerFrom)(selector(err, catchError(selector)(source)));

      if (innerSub) {
        innerSub.unsubscribe();
        innerSub = null;
        handledResult.subscribe(subscriber);
      } else {
        syncUnsub = true;
      }
    }));

    if (syncUnsub) {
      innerSub.unsubscribe();
      innerSub = null;
      handledResult.subscribe(subscriber);
    }
  });
}
},{"../observable/innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js"}],"node_modules/rxjs/dist/esm5/internal/operators/scanInternals.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.scanInternals = scanInternals;

var _OperatorSubscriber = require("./OperatorSubscriber");

function scanInternals(accumulator, seed, hasSeed, emitOnNext, emitBeforeComplete) {
  return function (source, subscriber) {
    var hasState = hasSeed;
    var state = seed;
    var index = 0;
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      var i = index++;
      state = hasState ? accumulator(state, value, i) : (hasState = true, value);
      emitOnNext && subscriber.next(state);
    }, emitBeforeComplete && function () {
      hasState && subscriber.next(state);
      subscriber.complete();
    }));
  };
}
},{"./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/reduce.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.reduce = reduce;

var _scanInternals = require("./scanInternals");

var _lift = require("../util/lift");

function reduce(accumulator, seed) {
  return (0, _lift.operate)((0, _scanInternals.scanInternals)(accumulator, seed, arguments.length >= 2, false, true));
}
},{"./scanInternals":"node_modules/rxjs/dist/esm5/internal/operators/scanInternals.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js"}],"node_modules/rxjs/dist/esm5/internal/operators/toArray.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toArray = toArray;

var _reduce = require("./reduce");

var _lift = require("../util/lift");

var arrReducer = function (arr, value) {
  return arr.push(value), arr;
};

function toArray() {
  return (0, _lift.operate)(function (source, subscriber) {
    (0, _reduce.reduce)(arrReducer, [])(source).subscribe(subscriber);
  });
}
},{"./reduce":"node_modules/rxjs/dist/esm5/internal/operators/reduce.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js"}],"node_modules/rxjs/dist/esm5/internal/operators/joinAllInternals.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.joinAllInternals = joinAllInternals;

var _identity = require("../util/identity");

var _mapOneOrManyArgs = require("../util/mapOneOrManyArgs");

var _pipe = require("../util/pipe");

var _mergeMap = require("./mergeMap");

var _toArray = require("./toArray");

function joinAllInternals(joinFn, project) {
  return (0, _pipe.pipe)((0, _toArray.toArray)(), (0, _mergeMap.mergeMap)(function (sources) {
    return joinFn(sources);
  }), project ? (0, _mapOneOrManyArgs.mapOneOrManyArgs)(project) : _identity.identity);
}
},{"../util/identity":"node_modules/rxjs/dist/esm5/internal/util/identity.js","../util/mapOneOrManyArgs":"node_modules/rxjs/dist/esm5/internal/util/mapOneOrManyArgs.js","../util/pipe":"node_modules/rxjs/dist/esm5/internal/util/pipe.js","./mergeMap":"node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js","./toArray":"node_modules/rxjs/dist/esm5/internal/operators/toArray.js"}],"node_modules/rxjs/dist/esm5/internal/operators/combineLatestAll.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.combineLatestAll = combineLatestAll;

var _combineLatest = require("../observable/combineLatest");

var _joinAllInternals = require("./joinAllInternals");

function combineLatestAll(project) {
  return (0, _joinAllInternals.joinAllInternals)(_combineLatest.combineLatest, project);
}
},{"../observable/combineLatest":"node_modules/rxjs/dist/esm5/internal/observable/combineLatest.js","./joinAllInternals":"node_modules/rxjs/dist/esm5/internal/operators/joinAllInternals.js"}],"node_modules/rxjs/dist/esm5/internal/operators/combineAll.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.combineAll = void 0;

var _combineLatestAll = require("./combineLatestAll");

var combineAll = _combineLatestAll.combineLatestAll;
exports.combineAll = combineAll;
},{"./combineLatestAll":"node_modules/rxjs/dist/esm5/internal/operators/combineLatestAll.js"}],"node_modules/rxjs/dist/esm5/internal/operators/combineLatest.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.combineLatest = combineLatest;

var _tslib = require("tslib");

var _combineLatest = require("../observable/combineLatest");

var _lift = require("../util/lift");

var _argsOrArgArray = require("../util/argsOrArgArray");

var _mapOneOrManyArgs = require("../util/mapOneOrManyArgs");

var _pipe = require("../util/pipe");

var _args = require("../util/args");

function combineLatest() {
  var args = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }

  var resultSelector = (0, _args.popResultSelector)(args);
  return resultSelector ? (0, _pipe.pipe)(combineLatest.apply(void 0, (0, _tslib.__spreadArray)([], (0, _tslib.__read)(args))), (0, _mapOneOrManyArgs.mapOneOrManyArgs)(resultSelector)) : (0, _lift.operate)(function (source, subscriber) {
    (0, _combineLatest.combineLatestInit)((0, _tslib.__spreadArray)([source], (0, _tslib.__read)((0, _argsOrArgArray.argsOrArgArray)(args))))(subscriber);
  });
}
},{"tslib":"node_modules/tslib/tslib.es6.js","../observable/combineLatest":"node_modules/rxjs/dist/esm5/internal/observable/combineLatest.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","../util/argsOrArgArray":"node_modules/rxjs/dist/esm5/internal/util/argsOrArgArray.js","../util/mapOneOrManyArgs":"node_modules/rxjs/dist/esm5/internal/util/mapOneOrManyArgs.js","../util/pipe":"node_modules/rxjs/dist/esm5/internal/util/pipe.js","../util/args":"node_modules/rxjs/dist/esm5/internal/util/args.js"}],"node_modules/rxjs/dist/esm5/internal/operators/combineLatestWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.combineLatestWith = combineLatestWith;

var _tslib = require("tslib");

var _combineLatest = require("./combineLatest");

function combineLatestWith() {
  var otherSources = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    otherSources[_i] = arguments[_i];
  }

  return _combineLatest.combineLatest.apply(void 0, (0, _tslib.__spreadArray)([], (0, _tslib.__read)(otherSources)));
}
},{"tslib":"node_modules/tslib/tslib.es6.js","./combineLatest":"node_modules/rxjs/dist/esm5/internal/operators/combineLatest.js"}],"node_modules/rxjs/dist/esm5/internal/operators/concatMap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.concatMap = concatMap;

var _mergeMap = require("./mergeMap");

var _isFunction = require("../util/isFunction");

function concatMap(project, resultSelector) {
  return (0, _isFunction.isFunction)(resultSelector) ? (0, _mergeMap.mergeMap)(project, resultSelector, 1) : (0, _mergeMap.mergeMap)(project, 1);
}
},{"./mergeMap":"node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js","../util/isFunction":"node_modules/rxjs/dist/esm5/internal/util/isFunction.js"}],"node_modules/rxjs/dist/esm5/internal/operators/concatMapTo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.concatMapTo = concatMapTo;

var _concatMap = require("./concatMap");

var _isFunction = require("../util/isFunction");

function concatMapTo(innerObservable, resultSelector) {
  return (0, _isFunction.isFunction)(resultSelector) ? (0, _concatMap.concatMap)(function () {
    return innerObservable;
  }, resultSelector) : (0, _concatMap.concatMap)(function () {
    return innerObservable;
  });
}
},{"./concatMap":"node_modules/rxjs/dist/esm5/internal/operators/concatMap.js","../util/isFunction":"node_modules/rxjs/dist/esm5/internal/util/isFunction.js"}],"node_modules/rxjs/dist/esm5/internal/operators/concat.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.concat = concat;

var _tslib = require("tslib");

var _lift = require("../util/lift");

var _concatAll = require("./concatAll");

var _args = require("../util/args");

var _from = require("../observable/from");

function concat() {
  var args = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }

  var scheduler = (0, _args.popScheduler)(args);
  return (0, _lift.operate)(function (source, subscriber) {
    (0, _concatAll.concatAll)()((0, _from.from)((0, _tslib.__spreadArray)([source], (0, _tslib.__read)(args)), scheduler)).subscribe(subscriber);
  });
}
},{"tslib":"node_modules/tslib/tslib.es6.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./concatAll":"node_modules/rxjs/dist/esm5/internal/operators/concatAll.js","../util/args":"node_modules/rxjs/dist/esm5/internal/util/args.js","../observable/from":"node_modules/rxjs/dist/esm5/internal/observable/from.js"}],"node_modules/rxjs/dist/esm5/internal/operators/concatWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.concatWith = concatWith;

var _tslib = require("tslib");

var _concat = require("./concat");

function concatWith() {
  var otherSources = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    otherSources[_i] = arguments[_i];
  }

  return _concat.concat.apply(void 0, (0, _tslib.__spreadArray)([], (0, _tslib.__read)(otherSources)));
}
},{"tslib":"node_modules/tslib/tslib.es6.js","./concat":"node_modules/rxjs/dist/esm5/internal/operators/concat.js"}],"node_modules/rxjs/dist/esm5/internal/observable/fromSubscribable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fromSubscribable = fromSubscribable;

var _Observable = require("../Observable");

function fromSubscribable(subscribable) {
  return new _Observable.Observable(function (subscriber) {
    return subscribable.subscribe(subscriber);
  });
}
},{"../Observable":"node_modules/rxjs/dist/esm5/internal/Observable.js"}],"node_modules/rxjs/dist/esm5/internal/operators/connect.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.connect = connect;

var _Subject = require("../Subject");

var _from = require("../observable/from");

var _lift = require("../util/lift");

var _fromSubscribable = require("../observable/fromSubscribable");

var DEFAULT_CONFIG = {
  connector: function () {
    return new _Subject.Subject();
  }
};

function connect(selector, config) {
  if (config === void 0) {
    config = DEFAULT_CONFIG;
  }

  var connector = config.connector;
  return (0, _lift.operate)(function (source, subscriber) {
    var subject = connector();
    (0, _from.from)(selector((0, _fromSubscribable.fromSubscribable)(subject))).subscribe(subscriber);
    subscriber.add(source.subscribe(subject));
  });
}
},{"../Subject":"node_modules/rxjs/dist/esm5/internal/Subject.js","../observable/from":"node_modules/rxjs/dist/esm5/internal/observable/from.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","../observable/fromSubscribable":"node_modules/rxjs/dist/esm5/internal/observable/fromSubscribable.js"}],"node_modules/rxjs/dist/esm5/internal/operators/count.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.count = count;

var _reduce = require("./reduce");

function count(predicate) {
  return (0, _reduce.reduce)(function (total, value, i) {
    return !predicate || predicate(value, i) ? total + 1 : total;
  }, 0);
}
},{"./reduce":"node_modules/rxjs/dist/esm5/internal/operators/reduce.js"}],"node_modules/rxjs/dist/esm5/internal/operators/debounce.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.debounce = debounce;

var _lift = require("../util/lift");

var _noop = require("../util/noop");

var _OperatorSubscriber = require("./OperatorSubscriber");

var _innerFrom = require("../observable/innerFrom");

function debounce(durationSelector) {
  return (0, _lift.operate)(function (source, subscriber) {
    var hasValue = false;
    var lastValue = null;
    var durationSubscriber = null;

    var emit = function () {
      durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();
      durationSubscriber = null;

      if (hasValue) {
        hasValue = false;
        var value = lastValue;
        lastValue = null;
        subscriber.next(value);
      }
    };

    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();
      hasValue = true;
      lastValue = value;
      durationSubscriber = (0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, emit, _noop.noop);
      (0, _innerFrom.innerFrom)(durationSelector(value)).subscribe(durationSubscriber);
    }, function () {
      emit();
      subscriber.complete();
    }, undefined, function () {
      lastValue = durationSubscriber = null;
    }));
  });
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","../util/noop":"node_modules/rxjs/dist/esm5/internal/util/noop.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../observable/innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"}],"node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.debounceTime = debounceTime;

var _async = require("../scheduler/async");

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

function debounceTime(dueTime, scheduler) {
  if (scheduler === void 0) {
    scheduler = _async.asyncScheduler;
  }

  return (0, _lift.operate)(function (source, subscriber) {
    var activeTask = null;
    var lastValue = null;
    var lastTime = null;

    var emit = function () {
      if (activeTask) {
        activeTask.unsubscribe();
        activeTask = null;
        var value = lastValue;
        lastValue = null;
        subscriber.next(value);
      }
    };

    function emitWhenIdle() {
      var targetTime = lastTime + dueTime;
      var now = scheduler.now();

      if (now < targetTime) {
        activeTask = this.schedule(undefined, targetTime - now);
        subscriber.add(activeTask);
        return;
      }

      emit();
    }

    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      lastValue = value;
      lastTime = scheduler.now();

      if (!activeTask) {
        activeTask = scheduler.schedule(emitWhenIdle, dueTime);
        subscriber.add(activeTask);
      }
    }, function () {
      emit();
      subscriber.complete();
    }, undefined, function () {
      lastValue = activeTask = null;
    }));
  });
}
},{"../scheduler/async":"node_modules/rxjs/dist/esm5/internal/scheduler/async.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/defaultIfEmpty.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultIfEmpty = defaultIfEmpty;

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

function defaultIfEmpty(defaultValue) {
  return (0, _lift.operate)(function (source, subscriber) {
    var hasValue = false;
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      hasValue = true;
      subscriber.next(value);
    }, function () {
      if (!hasValue) {
        subscriber.next(defaultValue);
      }

      subscriber.complete();
    }));
  });
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/take.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.take = take;

var _empty = require("../observable/empty");

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

function take(count) {
  return count <= 0 ? function () {
    return _empty.EMPTY;
  } : (0, _lift.operate)(function (source, subscriber) {
    var seen = 0;
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      if (++seen <= count) {
        subscriber.next(value);

        if (count <= seen) {
          subscriber.complete();
        }
      }
    }));
  });
}
},{"../observable/empty":"node_modules/rxjs/dist/esm5/internal/observable/empty.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/ignoreElements.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ignoreElements = ignoreElements;

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

var _noop = require("../util/noop");

function ignoreElements() {
  return (0, _lift.operate)(function (source, subscriber) {
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, _noop.noop));
  });
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../util/noop":"node_modules/rxjs/dist/esm5/internal/util/noop.js"}],"node_modules/rxjs/dist/esm5/internal/operators/mapTo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mapTo = mapTo;

var _map = require("./map");

function mapTo(value) {
  return (0, _map.map)(function () {
    return value;
  });
}
},{"./map":"node_modules/rxjs/dist/esm5/internal/operators/map.js"}],"node_modules/rxjs/dist/esm5/internal/operators/delayWhen.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.delayWhen = delayWhen;

var _concat = require("../observable/concat");

var _take = require("./take");

var _ignoreElements = require("./ignoreElements");

var _mapTo = require("./mapTo");

var _mergeMap = require("./mergeMap");

function delayWhen(delayDurationSelector, subscriptionDelay) {
  if (subscriptionDelay) {
    return function (source) {
      return (0, _concat.concat)(subscriptionDelay.pipe((0, _take.take)(1), (0, _ignoreElements.ignoreElements)()), source.pipe(delayWhen(delayDurationSelector)));
    };
  }

  return (0, _mergeMap.mergeMap)(function (value, index) {
    return delayDurationSelector(value, index).pipe((0, _take.take)(1), (0, _mapTo.mapTo)(value));
  });
}
},{"../observable/concat":"node_modules/rxjs/dist/esm5/internal/observable/concat.js","./take":"node_modules/rxjs/dist/esm5/internal/operators/take.js","./ignoreElements":"node_modules/rxjs/dist/esm5/internal/operators/ignoreElements.js","./mapTo":"node_modules/rxjs/dist/esm5/internal/operators/mapTo.js","./mergeMap":"node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js"}],"node_modules/rxjs/dist/esm5/internal/operators/delay.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.delay = delay;

var _async = require("../scheduler/async");

var _delayWhen = require("./delayWhen");

var _timer = require("../observable/timer");

function delay(due, scheduler) {
  if (scheduler === void 0) {
    scheduler = _async.asyncScheduler;
  }

  var duration = (0, _timer.timer)(due, scheduler);
  return (0, _delayWhen.delayWhen)(function () {
    return duration;
  });
}
},{"../scheduler/async":"node_modules/rxjs/dist/esm5/internal/scheduler/async.js","./delayWhen":"node_modules/rxjs/dist/esm5/internal/operators/delayWhen.js","../observable/timer":"node_modules/rxjs/dist/esm5/internal/observable/timer.js"}],"node_modules/rxjs/dist/esm5/internal/operators/dematerialize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dematerialize = dematerialize;

var _Notification = require("../Notification");

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

function dematerialize() {
  return (0, _lift.operate)(function (source, subscriber) {
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (notification) {
      return (0, _Notification.observeNotification)(notification, subscriber);
    }));
  });
}
},{"../Notification":"node_modules/rxjs/dist/esm5/internal/Notification.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/distinct.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.distinct = distinct;

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

var _noop = require("../util/noop");

function distinct(keySelector, flushes) {
  return (0, _lift.operate)(function (source, subscriber) {
    var distinctKeys = new Set();
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      var key = keySelector ? keySelector(value) : value;

      if (!distinctKeys.has(key)) {
        distinctKeys.add(key);
        subscriber.next(value);
      }
    }));
    flushes === null || flushes === void 0 ? void 0 : flushes.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function () {
      return distinctKeys.clear();
    }, _noop.noop));
  });
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../util/noop":"node_modules/rxjs/dist/esm5/internal/util/noop.js"}],"node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.distinctUntilChanged = distinctUntilChanged;

var _identity = require("../util/identity");

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

function distinctUntilChanged(comparator, keySelector) {
  if (keySelector === void 0) {
    keySelector = _identity.identity;
  }

  comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;
  return (0, _lift.operate)(function (source, subscriber) {
    var previousKey;
    var first = true;
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      var currentKey = keySelector(value);

      if (first || !comparator(previousKey, currentKey)) {
        first = false;
        previousKey = currentKey;
        subscriber.next(value);
      }
    }));
  });
}

function defaultCompare(a, b) {
  return a === b;
}
},{"../util/identity":"node_modules/rxjs/dist/esm5/internal/util/identity.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/distinctUntilKeyChanged.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.distinctUntilKeyChanged = distinctUntilKeyChanged;

var _distinctUntilChanged = require("./distinctUntilChanged");

function distinctUntilKeyChanged(key, compare) {
  return (0, _distinctUntilChanged.distinctUntilChanged)(function (x, y) {
    return compare ? compare(x[key], y[key]) : x[key] === y[key];
  });
}
},{"./distinctUntilChanged":"node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js"}],"node_modules/rxjs/dist/esm5/internal/operators/throwIfEmpty.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.throwIfEmpty = throwIfEmpty;

var _EmptyError = require("../util/EmptyError");

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

function throwIfEmpty(errorFactory) {
  if (errorFactory === void 0) {
    errorFactory = defaultErrorFactory;
  }

  return (0, _lift.operate)(function (source, subscriber) {
    var hasValue = false;
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      hasValue = true;
      subscriber.next(value);
    }, function () {
      return hasValue ? subscriber.complete() : subscriber.error(errorFactory());
    }));
  });
}

function defaultErrorFactory() {
  return new _EmptyError.EmptyError();
}
},{"../util/EmptyError":"node_modules/rxjs/dist/esm5/internal/util/EmptyError.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/elementAt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.elementAt = elementAt;

var _ArgumentOutOfRangeError = require("../util/ArgumentOutOfRangeError");

var _filter = require("./filter");

var _throwIfEmpty = require("./throwIfEmpty");

var _defaultIfEmpty = require("./defaultIfEmpty");

var _take = require("./take");

function elementAt(index, defaultValue) {
  if (index < 0) {
    throw new _ArgumentOutOfRangeError.ArgumentOutOfRangeError();
  }

  var hasDefaultValue = arguments.length >= 2;
  return function (source) {
    return source.pipe((0, _filter.filter)(function (v, i) {
      return i === index;
    }), (0, _take.take)(1), hasDefaultValue ? (0, _defaultIfEmpty.defaultIfEmpty)(defaultValue) : (0, _throwIfEmpty.throwIfEmpty)(function () {
      return new _ArgumentOutOfRangeError.ArgumentOutOfRangeError();
    }));
  };
}
},{"../util/ArgumentOutOfRangeError":"node_modules/rxjs/dist/esm5/internal/util/ArgumentOutOfRangeError.js","./filter":"node_modules/rxjs/dist/esm5/internal/operators/filter.js","./throwIfEmpty":"node_modules/rxjs/dist/esm5/internal/operators/throwIfEmpty.js","./defaultIfEmpty":"node_modules/rxjs/dist/esm5/internal/operators/defaultIfEmpty.js","./take":"node_modules/rxjs/dist/esm5/internal/operators/take.js"}],"node_modules/rxjs/dist/esm5/internal/operators/endWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.endWith = endWith;

var _tslib = require("tslib");

var _concat = require("../observable/concat");

var _of = require("../observable/of");

function endWith() {
  var values = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    values[_i] = arguments[_i];
  }

  return function (source) {
    return (0, _concat.concat)(source, _of.of.apply(void 0, (0, _tslib.__spreadArray)([], (0, _tslib.__read)(values))));
  };
}
},{"tslib":"node_modules/tslib/tslib.es6.js","../observable/concat":"node_modules/rxjs/dist/esm5/internal/observable/concat.js","../observable/of":"node_modules/rxjs/dist/esm5/internal/observable/of.js"}],"node_modules/rxjs/dist/esm5/internal/operators/every.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.every = every;

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

function every(predicate, thisArg) {
  return (0, _lift.operate)(function (source, subscriber) {
    var index = 0;
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      if (!predicate.call(thisArg, value, index++, source)) {
        subscriber.next(false);
        subscriber.complete();
      }
    }, function () {
      subscriber.next(true);
      subscriber.complete();
    }));
  });
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/exhaustAll.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.exhaustAll = exhaustAll;

var _lift = require("../util/lift");

var _innerFrom = require("../observable/innerFrom");

var _OperatorSubscriber = require("./OperatorSubscriber");

function exhaustAll() {
  return (0, _lift.operate)(function (source, subscriber) {
    var isComplete = false;
    var innerSub = null;
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (inner) {
      if (!innerSub) {
        innerSub = (0, _innerFrom.innerFrom)(inner).subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, undefined, function () {
          innerSub = null;
          isComplete && subscriber.complete();
        }));
      }
    }, function () {
      isComplete = true;
      !innerSub && subscriber.complete();
    }));
  });
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","../observable/innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/exhaust.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.exhaust = void 0;

var _exhaustAll = require("./exhaustAll");

var exhaust = _exhaustAll.exhaustAll;
exports.exhaust = exhaust;
},{"./exhaustAll":"node_modules/rxjs/dist/esm5/internal/operators/exhaustAll.js"}],"node_modules/rxjs/dist/esm5/internal/operators/exhaustMap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.exhaustMap = exhaustMap;

var _map = require("./map");

var _innerFrom = require("../observable/innerFrom");

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

function exhaustMap(project, resultSelector) {
  if (resultSelector) {
    return function (source) {
      return source.pipe(exhaustMap(function (a, i) {
        return (0, _innerFrom.innerFrom)(project(a, i)).pipe((0, _map.map)(function (b, ii) {
          return resultSelector(a, b, i, ii);
        }));
      }));
    };
  }

  return (0, _lift.operate)(function (source, subscriber) {
    var index = 0;
    var innerSub = null;
    var isComplete = false;
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (outerValue) {
      if (!innerSub) {
        innerSub = (0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, undefined, function () {
          innerSub = null;
          isComplete && subscriber.complete();
        });
        (0, _innerFrom.innerFrom)(project(outerValue, index++)).subscribe(innerSub);
      }
    }, function () {
      isComplete = true;
      !innerSub && subscriber.complete();
    }));
  });
}
},{"./map":"node_modules/rxjs/dist/esm5/internal/operators/map.js","../observable/innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/expand.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.expand = expand;

var _lift = require("../util/lift");

var _mergeInternals = require("./mergeInternals");

function expand(project, concurrent, scheduler) {
  if (concurrent === void 0) {
    concurrent = Infinity;
  }

  concurrent = (concurrent || 0) < 1 ? Infinity : concurrent;
  return (0, _lift.operate)(function (source, subscriber) {
    return (0, _mergeInternals.mergeInternals)(source, subscriber, project, concurrent, undefined, true, scheduler);
  });
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./mergeInternals":"node_modules/rxjs/dist/esm5/internal/operators/mergeInternals.js"}],"node_modules/rxjs/dist/esm5/internal/operators/finalize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.finalize = finalize;

var _lift = require("../util/lift");

function finalize(callback) {
  return (0, _lift.operate)(function (source, subscriber) {
    try {
      source.subscribe(subscriber);
    } finally {
      subscriber.add(callback);
    }
  });
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js"}],"node_modules/rxjs/dist/esm5/internal/operators/find.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createFind = createFind;
exports.find = find;

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

function find(predicate, thisArg) {
  return (0, _lift.operate)(createFind(predicate, thisArg, 'value'));
}

function createFind(predicate, thisArg, emit) {
  var findIndex = emit === 'index';
  return function (source, subscriber) {
    var index = 0;
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      var i = index++;

      if (predicate.call(thisArg, value, i, source)) {
        subscriber.next(findIndex ? i : value);
        subscriber.complete();
      }
    }, function () {
      subscriber.next(findIndex ? -1 : undefined);
      subscriber.complete();
    }));
  };
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/findIndex.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.findIndex = findIndex;

var _lift = require("../util/lift");

var _find = require("./find");

function findIndex(predicate, thisArg) {
  return (0, _lift.operate)((0, _find.createFind)(predicate, thisArg, 'index'));
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./find":"node_modules/rxjs/dist/esm5/internal/operators/find.js"}],"node_modules/rxjs/dist/esm5/internal/operators/first.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.first = first;

var _EmptyError = require("../util/EmptyError");

var _filter = require("./filter");

var _take = require("./take");

var _defaultIfEmpty = require("./defaultIfEmpty");

var _throwIfEmpty = require("./throwIfEmpty");

var _identity = require("../util/identity");

function first(predicate, defaultValue) {
  var hasDefaultValue = arguments.length >= 2;
  return function (source) {
    return source.pipe(predicate ? (0, _filter.filter)(function (v, i) {
      return predicate(v, i, source);
    }) : _identity.identity, (0, _take.take)(1), hasDefaultValue ? (0, _defaultIfEmpty.defaultIfEmpty)(defaultValue) : (0, _throwIfEmpty.throwIfEmpty)(function () {
      return new _EmptyError.EmptyError();
    }));
  };
}
},{"../util/EmptyError":"node_modules/rxjs/dist/esm5/internal/util/EmptyError.js","./filter":"node_modules/rxjs/dist/esm5/internal/operators/filter.js","./take":"node_modules/rxjs/dist/esm5/internal/operators/take.js","./defaultIfEmpty":"node_modules/rxjs/dist/esm5/internal/operators/defaultIfEmpty.js","./throwIfEmpty":"node_modules/rxjs/dist/esm5/internal/operators/throwIfEmpty.js","../util/identity":"node_modules/rxjs/dist/esm5/internal/util/identity.js"}],"node_modules/rxjs/dist/esm5/internal/operators/groupBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.groupBy = groupBy;

var _Observable = require("../Observable");

var _innerFrom = require("../observable/innerFrom");

var _Subject = require("../Subject");

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

function groupBy(keySelector, elementOrOptions, duration, connector) {
  return (0, _lift.operate)(function (source, subscriber) {
    var element;

    if (!elementOrOptions || typeof elementOrOptions === 'function') {
      element = elementOrOptions;
    } else {
      duration = elementOrOptions.duration, element = elementOrOptions.element, connector = elementOrOptions.connector;
    }

    var groups = new Map();

    var notify = function (cb) {
      groups.forEach(cb);
      cb(subscriber);
    };

    var handleError = function (err) {
      return notify(function (consumer) {
        return consumer.error(err);
      });
    };

    var activeGroups = 0;
    var teardownAttempted = false;
    var groupBySourceSubscriber = new _OperatorSubscriber.OperatorSubscriber(subscriber, function (value) {
      try {
        var key_1 = keySelector(value);
        var group_1 = groups.get(key_1);

        if (!group_1) {
          groups.set(key_1, group_1 = connector ? connector() : new _Subject.Subject());
          var grouped = createGroupedObservable(key_1, group_1);
          subscriber.next(grouped);

          if (duration) {
            var durationSubscriber_1 = (0, _OperatorSubscriber.createOperatorSubscriber)(group_1, function () {
              group_1.complete();
              durationSubscriber_1 === null || durationSubscriber_1 === void 0 ? void 0 : durationSubscriber_1.unsubscribe();
            }, undefined, undefined, function () {
              return groups.delete(key_1);
            });
            groupBySourceSubscriber.add((0, _innerFrom.innerFrom)(duration(grouped)).subscribe(durationSubscriber_1));
          }
        }

        group_1.next(element ? element(value) : value);
      } catch (err) {
        handleError(err);
      }
    }, function () {
      return notify(function (consumer) {
        return consumer.complete();
      });
    }, handleError, function () {
      return groups.clear();
    }, function () {
      teardownAttempted = true;
      return activeGroups === 0;
    });
    source.subscribe(groupBySourceSubscriber);

    function createGroupedObservable(key, groupSubject) {
      var result = new _Observable.Observable(function (groupSubscriber) {
        activeGroups++;
        var innerSub = groupSubject.subscribe(groupSubscriber);
        return function () {
          innerSub.unsubscribe();
          --activeGroups === 0 && teardownAttempted && groupBySourceSubscriber.unsubscribe();
        };
      });
      result.key = key;
      return result;
    }
  });
}
},{"../Observable":"node_modules/rxjs/dist/esm5/internal/Observable.js","../observable/innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","../Subject":"node_modules/rxjs/dist/esm5/internal/Subject.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/isEmpty.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isEmpty = isEmpty;

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

function isEmpty() {
  return (0, _lift.operate)(function (source, subscriber) {
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function () {
      subscriber.next(false);
      subscriber.complete();
    }, function () {
      subscriber.next(true);
      subscriber.complete();
    }));
  });
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/takeLast.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.takeLast = takeLast;

var _tslib = require("tslib");

var _empty = require("../observable/empty");

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

function takeLast(count) {
  return count <= 0 ? function () {
    return _empty.EMPTY;
  } : (0, _lift.operate)(function (source, subscriber) {
    var buffer = [];
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      buffer.push(value);
      count < buffer.length && buffer.shift();
    }, function () {
      var e_1, _a;

      try {
        for (var buffer_1 = (0, _tslib.__values)(buffer), buffer_1_1 = buffer_1.next(); !buffer_1_1.done; buffer_1_1 = buffer_1.next()) {
          var value = buffer_1_1.value;
          subscriber.next(value);
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (buffer_1_1 && !buffer_1_1.done && (_a = buffer_1.return)) _a.call(buffer_1);
        } finally {
          if (e_1) throw e_1.error;
        }
      }

      subscriber.complete();
    }, undefined, function () {
      buffer = null;
    }));
  });
}
},{"tslib":"node_modules/tslib/tslib.es6.js","../observable/empty":"node_modules/rxjs/dist/esm5/internal/observable/empty.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/last.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.last = last;

var _EmptyError = require("../util/EmptyError");

var _filter = require("./filter");

var _takeLast = require("./takeLast");

var _throwIfEmpty = require("./throwIfEmpty");

var _defaultIfEmpty = require("./defaultIfEmpty");

var _identity = require("../util/identity");

function last(predicate, defaultValue) {
  var hasDefaultValue = arguments.length >= 2;
  return function (source) {
    return source.pipe(predicate ? (0, _filter.filter)(function (v, i) {
      return predicate(v, i, source);
    }) : _identity.identity, (0, _takeLast.takeLast)(1), hasDefaultValue ? (0, _defaultIfEmpty.defaultIfEmpty)(defaultValue) : (0, _throwIfEmpty.throwIfEmpty)(function () {
      return new _EmptyError.EmptyError();
    }));
  };
}
},{"../util/EmptyError":"node_modules/rxjs/dist/esm5/internal/util/EmptyError.js","./filter":"node_modules/rxjs/dist/esm5/internal/operators/filter.js","./takeLast":"node_modules/rxjs/dist/esm5/internal/operators/takeLast.js","./throwIfEmpty":"node_modules/rxjs/dist/esm5/internal/operators/throwIfEmpty.js","./defaultIfEmpty":"node_modules/rxjs/dist/esm5/internal/operators/defaultIfEmpty.js","../util/identity":"node_modules/rxjs/dist/esm5/internal/util/identity.js"}],"node_modules/rxjs/dist/esm5/internal/operators/materialize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.materialize = materialize;

var _Notification = require("../Notification");

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

function materialize() {
  return (0, _lift.operate)(function (source, subscriber) {
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      subscriber.next(_Notification.Notification.createNext(value));
    }, function () {
      subscriber.next(_Notification.Notification.createComplete());
      subscriber.complete();
    }, function (err) {
      subscriber.next(_Notification.Notification.createError(err));
      subscriber.complete();
    }));
  });
}
},{"../Notification":"node_modules/rxjs/dist/esm5/internal/Notification.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/max.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.max = max;

var _reduce = require("./reduce");

var _isFunction = require("../util/isFunction");

function max(comparer) {
  return (0, _reduce.reduce)((0, _isFunction.isFunction)(comparer) ? function (x, y) {
    return comparer(x, y) > 0 ? x : y;
  } : function (x, y) {
    return x > y ? x : y;
  });
}
},{"./reduce":"node_modules/rxjs/dist/esm5/internal/operators/reduce.js","../util/isFunction":"node_modules/rxjs/dist/esm5/internal/util/isFunction.js"}],"node_modules/rxjs/dist/esm5/internal/operators/flatMap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.flatMap = void 0;

var _mergeMap = require("./mergeMap");

var flatMap = _mergeMap.mergeMap;
exports.flatMap = flatMap;
},{"./mergeMap":"node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js"}],"node_modules/rxjs/dist/esm5/internal/operators/mergeMapTo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mergeMapTo = mergeMapTo;

var _mergeMap = require("./mergeMap");

var _isFunction = require("../util/isFunction");

function mergeMapTo(innerObservable, resultSelector, concurrent) {
  if (concurrent === void 0) {
    concurrent = Infinity;
  }

  if ((0, _isFunction.isFunction)(resultSelector)) {
    return (0, _mergeMap.mergeMap)(function () {
      return innerObservable;
    }, resultSelector, concurrent);
  }

  if (typeof resultSelector === 'number') {
    concurrent = resultSelector;
  }

  return (0, _mergeMap.mergeMap)(function () {
    return innerObservable;
  }, concurrent);
}
},{"./mergeMap":"node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js","../util/isFunction":"node_modules/rxjs/dist/esm5/internal/util/isFunction.js"}],"node_modules/rxjs/dist/esm5/internal/operators/mergeScan.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mergeScan = mergeScan;

var _lift = require("../util/lift");

var _mergeInternals = require("./mergeInternals");

function mergeScan(accumulator, seed, concurrent) {
  if (concurrent === void 0) {
    concurrent = Infinity;
  }

  return (0, _lift.operate)(function (source, subscriber) {
    var state = seed;
    return (0, _mergeInternals.mergeInternals)(source, subscriber, function (value, index) {
      return accumulator(state, value, index);
    }, concurrent, function (value) {
      state = value;
    }, false, undefined, function () {
      return state = null;
    });
  });
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./mergeInternals":"node_modules/rxjs/dist/esm5/internal/operators/mergeInternals.js"}],"node_modules/rxjs/dist/esm5/internal/operators/merge.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.merge = merge;

var _tslib = require("tslib");

var _lift = require("../util/lift");

var _argsOrArgArray = require("../util/argsOrArgArray");

var _mergeAll = require("./mergeAll");

var _args = require("../util/args");

var _from = require("../observable/from");

function merge() {
  var args = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }

  var scheduler = (0, _args.popScheduler)(args);
  var concurrent = (0, _args.popNumber)(args, Infinity);
  args = (0, _argsOrArgArray.argsOrArgArray)(args);
  return (0, _lift.operate)(function (source, subscriber) {
    (0, _mergeAll.mergeAll)(concurrent)((0, _from.from)((0, _tslib.__spreadArray)([source], (0, _tslib.__read)(args)), scheduler)).subscribe(subscriber);
  });
}
},{"tslib":"node_modules/tslib/tslib.es6.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","../util/argsOrArgArray":"node_modules/rxjs/dist/esm5/internal/util/argsOrArgArray.js","./mergeAll":"node_modules/rxjs/dist/esm5/internal/operators/mergeAll.js","../util/args":"node_modules/rxjs/dist/esm5/internal/util/args.js","../observable/from":"node_modules/rxjs/dist/esm5/internal/observable/from.js"}],"node_modules/rxjs/dist/esm5/internal/operators/mergeWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mergeWith = mergeWith;

var _tslib = require("tslib");

var _merge = require("./merge");

function mergeWith() {
  var otherSources = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    otherSources[_i] = arguments[_i];
  }

  return _merge.merge.apply(void 0, (0, _tslib.__spreadArray)([], (0, _tslib.__read)(otherSources)));
}
},{"tslib":"node_modules/tslib/tslib.es6.js","./merge":"node_modules/rxjs/dist/esm5/internal/operators/merge.js"}],"node_modules/rxjs/dist/esm5/internal/operators/min.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.min = min;

var _reduce = require("./reduce");

var _isFunction = require("../util/isFunction");

function min(comparer) {
  return (0, _reduce.reduce)((0, _isFunction.isFunction)(comparer) ? function (x, y) {
    return comparer(x, y) < 0 ? x : y;
  } : function (x, y) {
    return x < y ? x : y;
  });
}
},{"./reduce":"node_modules/rxjs/dist/esm5/internal/operators/reduce.js","../util/isFunction":"node_modules/rxjs/dist/esm5/internal/util/isFunction.js"}],"node_modules/rxjs/dist/esm5/internal/operators/multicast.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.multicast = multicast;

var _ConnectableObservable = require("../observable/ConnectableObservable");

var _isFunction = require("../util/isFunction");

var _connect = require("./connect");

function multicast(subjectOrSubjectFactory, selector) {
  var subjectFactory = (0, _isFunction.isFunction)(subjectOrSubjectFactory) ? subjectOrSubjectFactory : function () {
    return subjectOrSubjectFactory;
  };

  if ((0, _isFunction.isFunction)(selector)) {
    return (0, _connect.connect)(selector, {
      connector: subjectFactory
    });
  }

  return function (source) {
    return new _ConnectableObservable.ConnectableObservable(source, subjectFactory);
  };
}
},{"../observable/ConnectableObservable":"node_modules/rxjs/dist/esm5/internal/observable/ConnectableObservable.js","../util/isFunction":"node_modules/rxjs/dist/esm5/internal/util/isFunction.js","./connect":"node_modules/rxjs/dist/esm5/internal/operators/connect.js"}],"node_modules/rxjs/dist/esm5/internal/operators/pairwise.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pairwise = pairwise;

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

function pairwise() {
  return (0, _lift.operate)(function (source, subscriber) {
    var prev;
    var hasPrev = false;
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      var p = prev;
      prev = value;
      hasPrev && subscriber.next([p, value]);
      hasPrev = true;
    }));
  });
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/pluck.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pluck = pluck;

var _map = require("./map");

function pluck() {
  var properties = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    properties[_i] = arguments[_i];
  }

  var length = properties.length;

  if (length === 0) {
    throw new Error('list of properties cannot be empty.');
  }

  return (0, _map.map)(function (x) {
    var currentProp = x;

    for (var i = 0; i < length; i++) {
      var p = currentProp === null || currentProp === void 0 ? void 0 : currentProp[properties[i]];

      if (typeof p !== 'undefined') {
        currentProp = p;
      } else {
        return undefined;
      }
    }

    return currentProp;
  });
}
},{"./map":"node_modules/rxjs/dist/esm5/internal/operators/map.js"}],"node_modules/rxjs/dist/esm5/internal/operators/publish.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.publish = publish;

var _Subject = require("../Subject");

var _multicast = require("./multicast");

var _connect = require("./connect");

function publish(selector) {
  return selector ? function (source) {
    return (0, _connect.connect)(selector)(source);
  } : function (source) {
    return (0, _multicast.multicast)(new _Subject.Subject())(source);
  };
}
},{"../Subject":"node_modules/rxjs/dist/esm5/internal/Subject.js","./multicast":"node_modules/rxjs/dist/esm5/internal/operators/multicast.js","./connect":"node_modules/rxjs/dist/esm5/internal/operators/connect.js"}],"node_modules/rxjs/dist/esm5/internal/operators/publishBehavior.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.publishBehavior = publishBehavior;

var _BehaviorSubject = require("../BehaviorSubject");

var _ConnectableObservable = require("../observable/ConnectableObservable");

function publishBehavior(initialValue) {
  return function (source) {
    var subject = new _BehaviorSubject.BehaviorSubject(initialValue);
    return new _ConnectableObservable.ConnectableObservable(source, function () {
      return subject;
    });
  };
}
},{"../BehaviorSubject":"node_modules/rxjs/dist/esm5/internal/BehaviorSubject.js","../observable/ConnectableObservable":"node_modules/rxjs/dist/esm5/internal/observable/ConnectableObservable.js"}],"node_modules/rxjs/dist/esm5/internal/operators/publishLast.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.publishLast = publishLast;

var _AsyncSubject = require("../AsyncSubject");

var _ConnectableObservable = require("../observable/ConnectableObservable");

function publishLast() {
  return function (source) {
    var subject = new _AsyncSubject.AsyncSubject();
    return new _ConnectableObservable.ConnectableObservable(source, function () {
      return subject;
    });
  };
}
},{"../AsyncSubject":"node_modules/rxjs/dist/esm5/internal/AsyncSubject.js","../observable/ConnectableObservable":"node_modules/rxjs/dist/esm5/internal/observable/ConnectableObservable.js"}],"node_modules/rxjs/dist/esm5/internal/operators/publishReplay.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.publishReplay = publishReplay;

var _ReplaySubject = require("../ReplaySubject");

var _multicast = require("./multicast");

var _isFunction = require("../util/isFunction");

function publishReplay(bufferSize, windowTime, selectorOrScheduler, timestampProvider) {
  if (selectorOrScheduler && !(0, _isFunction.isFunction)(selectorOrScheduler)) {
    timestampProvider = selectorOrScheduler;
  }

  var selector = (0, _isFunction.isFunction)(selectorOrScheduler) ? selectorOrScheduler : undefined;
  return function (source) {
    return (0, _multicast.multicast)(new _ReplaySubject.ReplaySubject(bufferSize, windowTime, timestampProvider), selector)(source);
  };
}
},{"../ReplaySubject":"node_modules/rxjs/dist/esm5/internal/ReplaySubject.js","./multicast":"node_modules/rxjs/dist/esm5/internal/operators/multicast.js","../util/isFunction":"node_modules/rxjs/dist/esm5/internal/util/isFunction.js"}],"node_modules/rxjs/dist/esm5/internal/operators/raceWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.raceWith = raceWith;

var _tslib = require("tslib");

var _race = require("../observable/race");

var _lift = require("../util/lift");

var _identity = require("../util/identity");

function raceWith() {
  var otherSources = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    otherSources[_i] = arguments[_i];
  }

  return !otherSources.length ? _identity.identity : (0, _lift.operate)(function (source, subscriber) {
    (0, _race.raceInit)((0, _tslib.__spreadArray)([source], (0, _tslib.__read)(otherSources)))(subscriber);
  });
}
},{"tslib":"node_modules/tslib/tslib.es6.js","../observable/race":"node_modules/rxjs/dist/esm5/internal/observable/race.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","../util/identity":"node_modules/rxjs/dist/esm5/internal/util/identity.js"}],"node_modules/rxjs/dist/esm5/internal/operators/repeat.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.repeat = repeat;

var _empty = require("../observable/empty");

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

var _innerFrom = require("../observable/innerFrom");

var _timer = require("../observable/timer");

function repeat(countOrConfig) {
  var _a;

  var count = Infinity;
  var delay;

  if (countOrConfig != null) {
    if (typeof countOrConfig === 'object') {
      _a = countOrConfig.count, count = _a === void 0 ? Infinity : _a, delay = countOrConfig.delay;
    } else {
      count = countOrConfig;
    }
  }

  return count <= 0 ? function () {
    return _empty.EMPTY;
  } : (0, _lift.operate)(function (source, subscriber) {
    var soFar = 0;
    var sourceSub;

    var resubscribe = function () {
      sourceSub === null || sourceSub === void 0 ? void 0 : sourceSub.unsubscribe();
      sourceSub = null;

      if (delay != null) {
        var notifier = typeof delay === 'number' ? (0, _timer.timer)(delay) : (0, _innerFrom.innerFrom)(delay(soFar));
        var notifierSubscriber_1 = (0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function () {
          notifierSubscriber_1.unsubscribe();
          subscribeToSource();
        });
        notifier.subscribe(notifierSubscriber_1);
      } else {
        subscribeToSource();
      }
    };

    var subscribeToSource = function () {
      var syncUnsub = false;
      sourceSub = source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, undefined, function () {
        if (++soFar < count) {
          if (sourceSub) {
            resubscribe();
          } else {
            syncUnsub = true;
          }
        } else {
          subscriber.complete();
        }
      }));

      if (syncUnsub) {
        resubscribe();
      }
    };

    subscribeToSource();
  });
}
},{"../observable/empty":"node_modules/rxjs/dist/esm5/internal/observable/empty.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../observable/innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","../observable/timer":"node_modules/rxjs/dist/esm5/internal/observable/timer.js"}],"node_modules/rxjs/dist/esm5/internal/operators/repeatWhen.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.repeatWhen = repeatWhen;

var _Subject = require("../Subject");

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

function repeatWhen(notifier) {
  return (0, _lift.operate)(function (source, subscriber) {
    var innerSub;
    var syncResub = false;
    var completions$;
    var isNotifierComplete = false;
    var isMainComplete = false;

    var checkComplete = function () {
      return isMainComplete && isNotifierComplete && (subscriber.complete(), true);
    };

    var getCompletionSubject = function () {
      if (!completions$) {
        completions$ = new _Subject.Subject();
        notifier(completions$).subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function () {
          if (innerSub) {
            subscribeForRepeatWhen();
          } else {
            syncResub = true;
          }
        }, function () {
          isNotifierComplete = true;
          checkComplete();
        }));
      }

      return completions$;
    };

    var subscribeForRepeatWhen = function () {
      isMainComplete = false;
      innerSub = source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, undefined, function () {
        isMainComplete = true;
        !checkComplete() && getCompletionSubject().next();
      }));

      if (syncResub) {
        innerSub.unsubscribe();
        innerSub = null;
        syncResub = false;
        subscribeForRepeatWhen();
      }
    };

    subscribeForRepeatWhen();
  });
}
},{"../Subject":"node_modules/rxjs/dist/esm5/internal/Subject.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/retry.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.retry = retry;

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

var _identity = require("../util/identity");

var _timer = require("../observable/timer");

var _innerFrom = require("../observable/innerFrom");

function retry(configOrCount) {
  if (configOrCount === void 0) {
    configOrCount = Infinity;
  }

  var config;

  if (configOrCount && typeof configOrCount === 'object') {
    config = configOrCount;
  } else {
    config = {
      count: configOrCount
    };
  }

  var _a = config.count,
      count = _a === void 0 ? Infinity : _a,
      delay = config.delay,
      _b = config.resetOnSuccess,
      resetOnSuccess = _b === void 0 ? false : _b;
  return count <= 0 ? _identity.identity : (0, _lift.operate)(function (source, subscriber) {
    var soFar = 0;
    var innerSub;

    var subscribeForRetry = function () {
      var syncUnsub = false;
      innerSub = source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
        if (resetOnSuccess) {
          soFar = 0;
        }

        subscriber.next(value);
      }, undefined, function (err) {
        if (soFar++ < count) {
          var resub_1 = function () {
            if (innerSub) {
              innerSub.unsubscribe();
              innerSub = null;
              subscribeForRetry();
            } else {
              syncUnsub = true;
            }
          };

          if (delay != null) {
            var notifier = typeof delay === 'number' ? (0, _timer.timer)(delay) : (0, _innerFrom.innerFrom)(delay(err, soFar));
            var notifierSubscriber_1 = (0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function () {
              notifierSubscriber_1.unsubscribe();
              resub_1();
            }, function () {
              subscriber.complete();
            });
            notifier.subscribe(notifierSubscriber_1);
          } else {
            resub_1();
          }
        } else {
          subscriber.error(err);
        }
      }));

      if (syncUnsub) {
        innerSub.unsubscribe();
        innerSub = null;
        subscribeForRetry();
      }
    };

    subscribeForRetry();
  });
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../util/identity":"node_modules/rxjs/dist/esm5/internal/util/identity.js","../observable/timer":"node_modules/rxjs/dist/esm5/internal/observable/timer.js","../observable/innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"}],"node_modules/rxjs/dist/esm5/internal/operators/retryWhen.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.retryWhen = retryWhen;

var _Subject = require("../Subject");

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

function retryWhen(notifier) {
  return (0, _lift.operate)(function (source, subscriber) {
    var innerSub;
    var syncResub = false;
    var errors$;

    var subscribeForRetryWhen = function () {
      innerSub = source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, undefined, undefined, function (err) {
        if (!errors$) {
          errors$ = new _Subject.Subject();
          notifier(errors$).subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function () {
            return innerSub ? subscribeForRetryWhen() : syncResub = true;
          }));
        }

        if (errors$) {
          errors$.next(err);
        }
      }));

      if (syncResub) {
        innerSub.unsubscribe();
        innerSub = null;
        syncResub = false;
        subscribeForRetryWhen();
      }
    };

    subscribeForRetryWhen();
  });
}
},{"../Subject":"node_modules/rxjs/dist/esm5/internal/Subject.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/sample.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sample = sample;

var _lift = require("../util/lift");

var _noop = require("../util/noop");

var _OperatorSubscriber = require("./OperatorSubscriber");

function sample(notifier) {
  return (0, _lift.operate)(function (source, subscriber) {
    var hasValue = false;
    var lastValue = null;
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      hasValue = true;
      lastValue = value;
    }));
    notifier.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function () {
      if (hasValue) {
        hasValue = false;
        var value = lastValue;
        lastValue = null;
        subscriber.next(value);
      }
    }, _noop.noop));
  });
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","../util/noop":"node_modules/rxjs/dist/esm5/internal/util/noop.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/sampleTime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sampleTime = sampleTime;

var _async = require("../scheduler/async");

var _sample = require("./sample");

var _interval = require("../observable/interval");

function sampleTime(period, scheduler) {
  if (scheduler === void 0) {
    scheduler = _async.asyncScheduler;
  }

  return (0, _sample.sample)((0, _interval.interval)(period, scheduler));
}
},{"../scheduler/async":"node_modules/rxjs/dist/esm5/internal/scheduler/async.js","./sample":"node_modules/rxjs/dist/esm5/internal/operators/sample.js","../observable/interval":"node_modules/rxjs/dist/esm5/internal/observable/interval.js"}],"node_modules/rxjs/dist/esm5/internal/operators/scan.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.scan = scan;

var _lift = require("../util/lift");

var _scanInternals = require("./scanInternals");

function scan(accumulator, seed) {
  return (0, _lift.operate)((0, _scanInternals.scanInternals)(accumulator, seed, arguments.length >= 2, true));
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./scanInternals":"node_modules/rxjs/dist/esm5/internal/operators/scanInternals.js"}],"node_modules/rxjs/dist/esm5/internal/operators/sequenceEqual.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sequenceEqual = sequenceEqual;

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

function sequenceEqual(compareTo, comparator) {
  if (comparator === void 0) {
    comparator = function (a, b) {
      return a === b;
    };
  }

  return (0, _lift.operate)(function (source, subscriber) {
    var aState = createState();
    var bState = createState();

    var emit = function (isEqual) {
      subscriber.next(isEqual);
      subscriber.complete();
    };

    var createSubscriber = function (selfState, otherState) {
      var sequenceEqualSubscriber = (0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (a) {
        var buffer = otherState.buffer,
            complete = otherState.complete;

        if (buffer.length === 0) {
          complete ? emit(false) : selfState.buffer.push(a);
        } else {
          !comparator(a, buffer.shift()) && emit(false);
        }
      }, function () {
        selfState.complete = true;
        var complete = otherState.complete,
            buffer = otherState.buffer;
        complete && emit(buffer.length === 0);
        sequenceEqualSubscriber === null || sequenceEqualSubscriber === void 0 ? void 0 : sequenceEqualSubscriber.unsubscribe();
      });
      return sequenceEqualSubscriber;
    };

    source.subscribe(createSubscriber(aState, bState));
    compareTo.subscribe(createSubscriber(bState, aState));
  });
}

function createState() {
  return {
    buffer: [],
    complete: false
  };
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/share.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.share = share;

var _tslib = require("tslib");

var _from = require("../observable/from");

var _take = require("../operators/take");

var _Subject = require("../Subject");

var _Subscriber = require("../Subscriber");

var _lift = require("../util/lift");

function share(options) {
  if (options === void 0) {
    options = {};
  }

  var _a = options.connector,
      connector = _a === void 0 ? function () {
    return new _Subject.Subject();
  } : _a,
      _b = options.resetOnError,
      resetOnError = _b === void 0 ? true : _b,
      _c = options.resetOnComplete,
      resetOnComplete = _c === void 0 ? true : _c,
      _d = options.resetOnRefCountZero,
      resetOnRefCountZero = _d === void 0 ? true : _d;
  return function (wrapperSource) {
    var connection = null;
    var resetConnection = null;
    var subject = null;
    var refCount = 0;
    var hasCompleted = false;
    var hasErrored = false;

    var cancelReset = function () {
      resetConnection === null || resetConnection === void 0 ? void 0 : resetConnection.unsubscribe();
      resetConnection = null;
    };

    var reset = function () {
      cancelReset();
      connection = subject = null;
      hasCompleted = hasErrored = false;
    };

    var resetAndUnsubscribe = function () {
      var conn = connection;
      reset();
      conn === null || conn === void 0 ? void 0 : conn.unsubscribe();
    };

    return (0, _lift.operate)(function (source, subscriber) {
      refCount++;

      if (!hasErrored && !hasCompleted) {
        cancelReset();
      }

      var dest = subject = subject !== null && subject !== void 0 ? subject : connector();
      subscriber.add(function () {
        refCount--;

        if (refCount === 0 && !hasErrored && !hasCompleted) {
          resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);
        }
      });
      dest.subscribe(subscriber);

      if (!connection) {
        connection = new _Subscriber.SafeSubscriber({
          next: function (value) {
            return dest.next(value);
          },
          error: function (err) {
            hasErrored = true;
            cancelReset();
            resetConnection = handleReset(reset, resetOnError, err);
            dest.error(err);
          },
          complete: function () {
            hasCompleted = true;
            cancelReset();
            resetConnection = handleReset(reset, resetOnComplete);
            dest.complete();
          }
        });
        (0, _from.from)(source).subscribe(connection);
      }
    })(wrapperSource);
  };
}

function handleReset(reset, on) {
  var args = [];

  for (var _i = 2; _i < arguments.length; _i++) {
    args[_i - 2] = arguments[_i];
  }

  if (on === true) {
    reset();
    return null;
  }

  if (on === false) {
    return null;
  }

  return on.apply(void 0, (0, _tslib.__spreadArray)([], (0, _tslib.__read)(args))).pipe((0, _take.take)(1)).subscribe(function () {
    return reset();
  });
}
},{"tslib":"node_modules/tslib/tslib.es6.js","../observable/from":"node_modules/rxjs/dist/esm5/internal/observable/from.js","../operators/take":"node_modules/rxjs/dist/esm5/internal/operators/take.js","../Subject":"node_modules/rxjs/dist/esm5/internal/Subject.js","../Subscriber":"node_modules/rxjs/dist/esm5/internal/Subscriber.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js"}],"node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.shareReplay = shareReplay;

var _ReplaySubject = require("../ReplaySubject");

var _share = require("./share");

function shareReplay(configOrBufferSize, windowTime, scheduler) {
  var _a, _b, _c;

  var bufferSize;
  var refCount = false;

  if (configOrBufferSize && typeof configOrBufferSize === 'object') {
    _a = configOrBufferSize.bufferSize, bufferSize = _a === void 0 ? Infinity : _a, _b = configOrBufferSize.windowTime, windowTime = _b === void 0 ? Infinity : _b, _c = configOrBufferSize.refCount, refCount = _c === void 0 ? false : _c, scheduler = configOrBufferSize.scheduler;
  } else {
    bufferSize = configOrBufferSize !== null && configOrBufferSize !== void 0 ? configOrBufferSize : Infinity;
  }

  return (0, _share.share)({
    connector: function () {
      return new _ReplaySubject.ReplaySubject(bufferSize, windowTime, scheduler);
    },
    resetOnError: true,
    resetOnComplete: false,
    resetOnRefCountZero: refCount
  });
}
},{"../ReplaySubject":"node_modules/rxjs/dist/esm5/internal/ReplaySubject.js","./share":"node_modules/rxjs/dist/esm5/internal/operators/share.js"}],"node_modules/rxjs/dist/esm5/internal/operators/single.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.single = single;

var _EmptyError = require("../util/EmptyError");

var _SequenceError = require("../util/SequenceError");

var _NotFoundError = require("../util/NotFoundError");

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

function single(predicate) {
  return (0, _lift.operate)(function (source, subscriber) {
    var hasValue = false;
    var singleValue;
    var seenValue = false;
    var index = 0;
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      seenValue = true;

      if (!predicate || predicate(value, index++, source)) {
        hasValue && subscriber.error(new _SequenceError.SequenceError('Too many matching values'));
        hasValue = true;
        singleValue = value;
      }
    }, function () {
      if (hasValue) {
        subscriber.next(singleValue);
        subscriber.complete();
      } else {
        subscriber.error(seenValue ? new _NotFoundError.NotFoundError('No matching values') : new _EmptyError.EmptyError());
      }
    }));
  });
}
},{"../util/EmptyError":"node_modules/rxjs/dist/esm5/internal/util/EmptyError.js","../util/SequenceError":"node_modules/rxjs/dist/esm5/internal/util/SequenceError.js","../util/NotFoundError":"node_modules/rxjs/dist/esm5/internal/util/NotFoundError.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/skip.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.skip = skip;

var _filter = require("./filter");

function skip(count) {
  return (0, _filter.filter)(function (_, index) {
    return count <= index;
  });
}
},{"./filter":"node_modules/rxjs/dist/esm5/internal/operators/filter.js"}],"node_modules/rxjs/dist/esm5/internal/operators/skipLast.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.skipLast = skipLast;

var _identity = require("../util/identity");

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

function skipLast(skipCount) {
  return skipCount <= 0 ? _identity.identity : (0, _lift.operate)(function (source, subscriber) {
    var ring = new Array(skipCount);
    var seen = 0;
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      var valueIndex = seen++;

      if (valueIndex < skipCount) {
        ring[valueIndex] = value;
      } else {
        var index = valueIndex % skipCount;
        var oldValue = ring[index];
        ring[index] = value;
        subscriber.next(oldValue);
      }
    }));
    return function () {
      ring = null;
    };
  });
}
},{"../util/identity":"node_modules/rxjs/dist/esm5/internal/util/identity.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/skipUntil.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.skipUntil = skipUntil;

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

var _innerFrom = require("../observable/innerFrom");

var _noop = require("../util/noop");

function skipUntil(notifier) {
  return (0, _lift.operate)(function (source, subscriber) {
    var taking = false;
    var skipSubscriber = (0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function () {
      skipSubscriber === null || skipSubscriber === void 0 ? void 0 : skipSubscriber.unsubscribe();
      taking = true;
    }, _noop.noop);
    (0, _innerFrom.innerFrom)(notifier).subscribe(skipSubscriber);
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      return taking && subscriber.next(value);
    }));
  });
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../observable/innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","../util/noop":"node_modules/rxjs/dist/esm5/internal/util/noop.js"}],"node_modules/rxjs/dist/esm5/internal/operators/skipWhile.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.skipWhile = skipWhile;

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

function skipWhile(predicate) {
  return (0, _lift.operate)(function (source, subscriber) {
    var taking = false;
    var index = 0;
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      return (taking || (taking = !predicate(value, index++))) && subscriber.next(value);
    }));
  });
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/startWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.startWith = startWith;

var _concat = require("../observable/concat");

var _args = require("../util/args");

var _lift = require("../util/lift");

function startWith() {
  var values = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    values[_i] = arguments[_i];
  }

  var scheduler = (0, _args.popScheduler)(values);
  return (0, _lift.operate)(function (source, subscriber) {
    (scheduler ? (0, _concat.concat)(values, source, scheduler) : (0, _concat.concat)(values, source)).subscribe(subscriber);
  });
}
},{"../observable/concat":"node_modules/rxjs/dist/esm5/internal/observable/concat.js","../util/args":"node_modules/rxjs/dist/esm5/internal/util/args.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js"}],"node_modules/rxjs/dist/esm5/internal/operators/switchMap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.switchMap = switchMap;

var _innerFrom = require("../observable/innerFrom");

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

function switchMap(project, resultSelector) {
  return (0, _lift.operate)(function (source, subscriber) {
    var innerSubscriber = null;
    var index = 0;
    var isComplete = false;

    var checkComplete = function () {
      return isComplete && !innerSubscriber && subscriber.complete();
    };

    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      innerSubscriber === null || innerSubscriber === void 0 ? void 0 : innerSubscriber.unsubscribe();
      var innerIndex = 0;
      var outerIndex = index++;
      (0, _innerFrom.innerFrom)(project(value, outerIndex)).subscribe(innerSubscriber = (0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (innerValue) {
        return subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue);
      }, function () {
        innerSubscriber = null;
        checkComplete();
      }));
    }, function () {
      isComplete = true;
      checkComplete();
    }));
  });
}
},{"../observable/innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/switchAll.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.switchAll = switchAll;

var _switchMap = require("./switchMap");

var _identity = require("../util/identity");

function switchAll() {
  return (0, _switchMap.switchMap)(_identity.identity);
}
},{"./switchMap":"node_modules/rxjs/dist/esm5/internal/operators/switchMap.js","../util/identity":"node_modules/rxjs/dist/esm5/internal/util/identity.js"}],"node_modules/rxjs/dist/esm5/internal/operators/switchMapTo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.switchMapTo = switchMapTo;

var _switchMap = require("./switchMap");

var _isFunction = require("../util/isFunction");

function switchMapTo(innerObservable, resultSelector) {
  return (0, _isFunction.isFunction)(resultSelector) ? (0, _switchMap.switchMap)(function () {
    return innerObservable;
  }, resultSelector) : (0, _switchMap.switchMap)(function () {
    return innerObservable;
  });
}
},{"./switchMap":"node_modules/rxjs/dist/esm5/internal/operators/switchMap.js","../util/isFunction":"node_modules/rxjs/dist/esm5/internal/util/isFunction.js"}],"node_modules/rxjs/dist/esm5/internal/operators/switchScan.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.switchScan = switchScan;

var _switchMap = require("./switchMap");

var _lift = require("../util/lift");

function switchScan(accumulator, seed) {
  return (0, _lift.operate)(function (source, subscriber) {
    var state = seed;
    (0, _switchMap.switchMap)(function (value, index) {
      return accumulator(state, value, index);
    }, function (_, innerValue) {
      return state = innerValue, innerValue;
    })(source).subscribe(subscriber);
    return function () {
      state = null;
    };
  });
}
},{"./switchMap":"node_modules/rxjs/dist/esm5/internal/operators/switchMap.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js"}],"node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.takeUntil = takeUntil;

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

var _innerFrom = require("../observable/innerFrom");

var _noop = require("../util/noop");

function takeUntil(notifier) {
  return (0, _lift.operate)(function (source, subscriber) {
    (0, _innerFrom.innerFrom)(notifier).subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function () {
      return subscriber.complete();
    }, _noop.noop));
    !subscriber.closed && source.subscribe(subscriber);
  });
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../observable/innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","../util/noop":"node_modules/rxjs/dist/esm5/internal/util/noop.js"}],"node_modules/rxjs/dist/esm5/internal/operators/takeWhile.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.takeWhile = takeWhile;

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

function takeWhile(predicate, inclusive) {
  if (inclusive === void 0) {
    inclusive = false;
  }

  return (0, _lift.operate)(function (source, subscriber) {
    var index = 0;
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      var result = predicate(value, index++);
      (result || inclusive) && subscriber.next(value);
      !result && subscriber.complete();
    }));
  });
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/tap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tap = tap;

var _isFunction = require("../util/isFunction");

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

var _identity = require("../util/identity");

function tap(observerOrNext, error, complete) {
  var tapObserver = (0, _isFunction.isFunction)(observerOrNext) || error || complete ? {
    next: observerOrNext,
    error: error,
    complete: complete
  } : observerOrNext;
  return tapObserver ? (0, _lift.operate)(function (source, subscriber) {
    var _a;

    (_a = tapObserver.subscribe) === null || _a === void 0 ? void 0 : _a.call(tapObserver);
    var isUnsub = true;
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      var _a;

      (_a = tapObserver.next) === null || _a === void 0 ? void 0 : _a.call(tapObserver, value);
      subscriber.next(value);
    }, function () {
      var _a;

      isUnsub = false;
      (_a = tapObserver.complete) === null || _a === void 0 ? void 0 : _a.call(tapObserver);
      subscriber.complete();
    }, function (err) {
      var _a;

      isUnsub = false;
      (_a = tapObserver.error) === null || _a === void 0 ? void 0 : _a.call(tapObserver, err);
      subscriber.error(err);
    }, function () {
      var _a, _b;

      if (isUnsub) {
        (_a = tapObserver.unsubscribe) === null || _a === void 0 ? void 0 : _a.call(tapObserver);
      }

      (_b = tapObserver.finalize) === null || _b === void 0 ? void 0 : _b.call(tapObserver);
    }));
  }) : _identity.identity;
}
},{"../util/isFunction":"node_modules/rxjs/dist/esm5/internal/util/isFunction.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../util/identity":"node_modules/rxjs/dist/esm5/internal/util/identity.js"}],"node_modules/rxjs/dist/esm5/internal/operators/throttle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultThrottleConfig = void 0;
exports.throttle = throttle;

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

var _innerFrom = require("../observable/innerFrom");

var defaultThrottleConfig = {
  leading: true,
  trailing: false
};
exports.defaultThrottleConfig = defaultThrottleConfig;

function throttle(durationSelector, config) {
  if (config === void 0) {
    config = defaultThrottleConfig;
  }

  return (0, _lift.operate)(function (source, subscriber) {
    var leading = config.leading,
        trailing = config.trailing;
    var hasValue = false;
    var sendValue = null;
    var throttled = null;
    var isComplete = false;

    var endThrottling = function () {
      throttled === null || throttled === void 0 ? void 0 : throttled.unsubscribe();
      throttled = null;

      if (trailing) {
        send();
        isComplete && subscriber.complete();
      }
    };

    var cleanupThrottling = function () {
      throttled = null;
      isComplete && subscriber.complete();
    };

    var startThrottle = function (value) {
      return throttled = (0, _innerFrom.innerFrom)(durationSelector(value)).subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, endThrottling, cleanupThrottling));
    };

    var send = function () {
      if (hasValue) {
        hasValue = false;
        var value = sendValue;
        sendValue = null;
        subscriber.next(value);
        !isComplete && startThrottle(value);
      }
    };

    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      hasValue = true;
      sendValue = value;
      !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));
    }, function () {
      isComplete = true;
      !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();
    }));
  });
}
},{"../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../observable/innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"}],"node_modules/rxjs/dist/esm5/internal/operators/throttleTime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.throttleTime = throttleTime;

var _async = require("../scheduler/async");

var _throttle = require("./throttle");

var _timer = require("../observable/timer");

function throttleTime(duration, scheduler, config) {
  if (scheduler === void 0) {
    scheduler = _async.asyncScheduler;
  }

  if (config === void 0) {
    config = _throttle.defaultThrottleConfig;
  }

  var duration$ = (0, _timer.timer)(duration, scheduler);
  return (0, _throttle.throttle)(function () {
    return duration$;
  }, config);
}
},{"../scheduler/async":"node_modules/rxjs/dist/esm5/internal/scheduler/async.js","./throttle":"node_modules/rxjs/dist/esm5/internal/operators/throttle.js","../observable/timer":"node_modules/rxjs/dist/esm5/internal/observable/timer.js"}],"node_modules/rxjs/dist/esm5/internal/operators/timeInterval.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TimeInterval = void 0;
exports.timeInterval = timeInterval;

var _async = require("../scheduler/async");

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

function timeInterval(scheduler) {
  if (scheduler === void 0) {
    scheduler = _async.asyncScheduler;
  }

  return (0, _lift.operate)(function (source, subscriber) {
    var last = scheduler.now();
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      var now = scheduler.now();
      var interval = now - last;
      last = now;
      subscriber.next(new TimeInterval(value, interval));
    }));
  });
}

var TimeInterval = function () {
  function TimeInterval(value, interval) {
    this.value = value;
    this.interval = interval;
  }

  return TimeInterval;
}();

exports.TimeInterval = TimeInterval;
},{"../scheduler/async":"node_modules/rxjs/dist/esm5/internal/scheduler/async.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/timeoutWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.timeoutWith = timeoutWith;

var _async = require("../scheduler/async");

var _isDate = require("../util/isDate");

var _timeout = require("./timeout");

function timeoutWith(due, withObservable, scheduler) {
  var first;
  var each;

  var _with;

  scheduler = scheduler !== null && scheduler !== void 0 ? scheduler : _async.async;

  if ((0, _isDate.isValidDate)(due)) {
    first = due;
  } else if (typeof due === 'number') {
    each = due;
  }

  if (withObservable) {
    _with = function () {
      return withObservable;
    };
  } else {
    throw new TypeError('No observable provided to switch to');
  }

  if (first == null && each == null) {
    throw new TypeError('No timeout provided.');
  }

  return (0, _timeout.timeout)({
    first: first,
    each: each,
    scheduler: scheduler,
    with: _with
  });
}
},{"../scheduler/async":"node_modules/rxjs/dist/esm5/internal/scheduler/async.js","../util/isDate":"node_modules/rxjs/dist/esm5/internal/util/isDate.js","./timeout":"node_modules/rxjs/dist/esm5/internal/operators/timeout.js"}],"node_modules/rxjs/dist/esm5/internal/operators/timestamp.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.timestamp = timestamp;

var _dateTimestampProvider = require("../scheduler/dateTimestampProvider");

var _map = require("./map");

function timestamp(timestampProvider) {
  if (timestampProvider === void 0) {
    timestampProvider = _dateTimestampProvider.dateTimestampProvider;
  }

  return (0, _map.map)(function (value) {
    return {
      value: value,
      timestamp: timestampProvider.now()
    };
  });
}
},{"../scheduler/dateTimestampProvider":"node_modules/rxjs/dist/esm5/internal/scheduler/dateTimestampProvider.js","./map":"node_modules/rxjs/dist/esm5/internal/operators/map.js"}],"node_modules/rxjs/dist/esm5/internal/operators/window.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.window = window;

var _Subject = require("../Subject");

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

var _noop = require("../util/noop");

function window(windowBoundaries) {
  return (0, _lift.operate)(function (source, subscriber) {
    var windowSubject = new _Subject.Subject();
    subscriber.next(windowSubject.asObservable());

    var errorHandler = function (err) {
      windowSubject.error(err);
      subscriber.error(err);
    };

    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      return windowSubject === null || windowSubject === void 0 ? void 0 : windowSubject.next(value);
    }, function () {
      windowSubject.complete();
      subscriber.complete();
    }, errorHandler));
    windowBoundaries.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function () {
      windowSubject.complete();
      subscriber.next(windowSubject = new _Subject.Subject());
    }, _noop.noop, errorHandler));
    return function () {
      windowSubject === null || windowSubject === void 0 ? void 0 : windowSubject.unsubscribe();
      windowSubject = null;
    };
  });
}
},{"../Subject":"node_modules/rxjs/dist/esm5/internal/Subject.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../util/noop":"node_modules/rxjs/dist/esm5/internal/util/noop.js"}],"node_modules/rxjs/dist/esm5/internal/operators/windowCount.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.windowCount = windowCount;

var _tslib = require("tslib");

var _Subject = require("../Subject");

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

function windowCount(windowSize, startWindowEvery) {
  if (startWindowEvery === void 0) {
    startWindowEvery = 0;
  }

  var startEvery = startWindowEvery > 0 ? startWindowEvery : windowSize;
  return (0, _lift.operate)(function (source, subscriber) {
    var windows = [new _Subject.Subject()];
    var starts = [];
    var count = 0;
    subscriber.next(windows[0].asObservable());
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      var e_1, _a;

      try {
        for (var windows_1 = (0, _tslib.__values)(windows), windows_1_1 = windows_1.next(); !windows_1_1.done; windows_1_1 = windows_1.next()) {
          var window_1 = windows_1_1.value;
          window_1.next(value);
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (windows_1_1 && !windows_1_1.done && (_a = windows_1.return)) _a.call(windows_1);
        } finally {
          if (e_1) throw e_1.error;
        }
      }

      var c = count - windowSize + 1;

      if (c >= 0 && c % startEvery === 0) {
        windows.shift().complete();
      }

      if (++count % startEvery === 0) {
        var window_2 = new _Subject.Subject();
        windows.push(window_2);
        subscriber.next(window_2.asObservable());
      }
    }, function () {
      while (windows.length > 0) {
        windows.shift().complete();
      }

      subscriber.complete();
    }, function (err) {
      while (windows.length > 0) {
        windows.shift().error(err);
      }

      subscriber.error(err);
    }, function () {
      starts = null;
      windows = null;
    }));
  });
}
},{"tslib":"node_modules/tslib/tslib.es6.js","../Subject":"node_modules/rxjs/dist/esm5/internal/Subject.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"node_modules/rxjs/dist/esm5/internal/operators/windowTime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.windowTime = windowTime;

var _Subject = require("../Subject");

var _async = require("../scheduler/async");

var _Subscription = require("../Subscription");

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

var _arrRemove = require("../util/arrRemove");

var _args = require("../util/args");

var _executeSchedule = require("../util/executeSchedule");

function windowTime(windowTimeSpan) {
  var _a, _b;

  var otherArgs = [];

  for (var _i = 1; _i < arguments.length; _i++) {
    otherArgs[_i - 1] = arguments[_i];
  }

  var scheduler = (_a = (0, _args.popScheduler)(otherArgs)) !== null && _a !== void 0 ? _a : _async.asyncScheduler;
  var windowCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;
  var maxWindowSize = otherArgs[1] || Infinity;
  return (0, _lift.operate)(function (source, subscriber) {
    var windowRecords = [];
    var restartOnClose = false;

    var closeWindow = function (record) {
      var window = record.window,
          subs = record.subs;
      window.complete();
      subs.unsubscribe();
      (0, _arrRemove.arrRemove)(windowRecords, record);
      restartOnClose && startWindow();
    };

    var startWindow = function () {
      if (windowRecords) {
        var subs = new _Subscription.Subscription();
        subscriber.add(subs);
        var window_1 = new _Subject.Subject();
        var record_1 = {
          window: window_1,
          subs: subs,
          seen: 0
        };
        windowRecords.push(record_1);
        subscriber.next(window_1.asObservable());
        (0, _executeSchedule.executeSchedule)(subs, scheduler, function () {
          return closeWindow(record_1);
        }, windowTimeSpan);
      }
    };

    if (windowCreationInterval !== null && windowCreationInterval >= 0) {
      (0, _executeSchedule.executeSchedule)(subscriber, scheduler, startWindow, windowCreationInterval, true);
    } else {
      restartOnClose = true;
    }

    startWindow();

    var loop = function (cb) {
      return windowRecords.slice().forEach(cb);
    };

    var terminate = function (cb) {
      loop(function (_a) {
        var window = _a.window;
        return cb(window);
      });
      cb(subscriber);
      subscriber.unsubscribe();
    };

    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      loop(function (record) {
        record.window.next(value);
        maxWindowSize <= ++record.seen && closeWindow(record);
      });
    }, function () {
      return terminate(function (consumer) {
        return consumer.complete();
      });
    }, function (err) {
      return terminate(function (consumer) {
        return consumer.error(err);
      });
    }));
    return function () {
      windowRecords = null;
    };
  });
}
},{"../Subject":"node_modules/rxjs/dist/esm5/internal/Subject.js","../scheduler/async":"node_modules/rxjs/dist/esm5/internal/scheduler/async.js","../Subscription":"node_modules/rxjs/dist/esm5/internal/Subscription.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../util/arrRemove":"node_modules/rxjs/dist/esm5/internal/util/arrRemove.js","../util/args":"node_modules/rxjs/dist/esm5/internal/util/args.js","../util/executeSchedule":"node_modules/rxjs/dist/esm5/internal/util/executeSchedule.js"}],"node_modules/rxjs/dist/esm5/internal/operators/windowToggle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.windowToggle = windowToggle;

var _tslib = require("tslib");

var _Subject = require("../Subject");

var _Subscription = require("../Subscription");

var _lift = require("../util/lift");

var _innerFrom = require("../observable/innerFrom");

var _OperatorSubscriber = require("./OperatorSubscriber");

var _noop = require("../util/noop");

var _arrRemove = require("../util/arrRemove");

function windowToggle(openings, closingSelector) {
  return (0, _lift.operate)(function (source, subscriber) {
    var windows = [];

    var handleError = function (err) {
      while (0 < windows.length) {
        windows.shift().error(err);
      }

      subscriber.error(err);
    };

    (0, _innerFrom.innerFrom)(openings).subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (openValue) {
      var window = new _Subject.Subject();
      windows.push(window);
      var closingSubscription = new _Subscription.Subscription();

      var closeWindow = function () {
        (0, _arrRemove.arrRemove)(windows, window);
        window.complete();
        closingSubscription.unsubscribe();
      };

      var closingNotifier;

      try {
        closingNotifier = (0, _innerFrom.innerFrom)(closingSelector(openValue));
      } catch (err) {
        handleError(err);
        return;
      }

      subscriber.next(window.asObservable());
      closingSubscription.add(closingNotifier.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, closeWindow, _noop.noop, handleError)));
    }, _noop.noop));
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      var e_1, _a;

      var windowsCopy = windows.slice();

      try {
        for (var windowsCopy_1 = (0, _tslib.__values)(windowsCopy), windowsCopy_1_1 = windowsCopy_1.next(); !windowsCopy_1_1.done; windowsCopy_1_1 = windowsCopy_1.next()) {
          var window_1 = windowsCopy_1_1.value;
          window_1.next(value);
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (windowsCopy_1_1 && !windowsCopy_1_1.done && (_a = windowsCopy_1.return)) _a.call(windowsCopy_1);
        } finally {
          if (e_1) throw e_1.error;
        }
      }
    }, function () {
      while (0 < windows.length) {
        windows.shift().complete();
      }

      subscriber.complete();
    }, handleError, function () {
      while (0 < windows.length) {
        windows.shift().unsubscribe();
      }
    }));
  });
}
},{"tslib":"node_modules/tslib/tslib.es6.js","../Subject":"node_modules/rxjs/dist/esm5/internal/Subject.js","../Subscription":"node_modules/rxjs/dist/esm5/internal/Subscription.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","../observable/innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../util/noop":"node_modules/rxjs/dist/esm5/internal/util/noop.js","../util/arrRemove":"node_modules/rxjs/dist/esm5/internal/util/arrRemove.js"}],"node_modules/rxjs/dist/esm5/internal/operators/windowWhen.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.windowWhen = windowWhen;

var _Subject = require("../Subject");

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

var _innerFrom = require("../observable/innerFrom");

function windowWhen(closingSelector) {
  return (0, _lift.operate)(function (source, subscriber) {
    var window;
    var closingSubscriber;

    var handleError = function (err) {
      window.error(err);
      subscriber.error(err);
    };

    var openWindow = function () {
      closingSubscriber === null || closingSubscriber === void 0 ? void 0 : closingSubscriber.unsubscribe();
      window === null || window === void 0 ? void 0 : window.complete();
      window = new _Subject.Subject();
      subscriber.next(window.asObservable());
      var closingNotifier;

      try {
        closingNotifier = (0, _innerFrom.innerFrom)(closingSelector());
      } catch (err) {
        handleError(err);
        return;
      }

      closingNotifier.subscribe(closingSubscriber = (0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, openWindow, openWindow, handleError));
    };

    openWindow();
    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      return window.next(value);
    }, function () {
      window.complete();
      subscriber.complete();
    }, handleError, function () {
      closingSubscriber === null || closingSubscriber === void 0 ? void 0 : closingSubscriber.unsubscribe();
      window = null;
    }));
  });
}
},{"../Subject":"node_modules/rxjs/dist/esm5/internal/Subject.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../observable/innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"}],"node_modules/rxjs/dist/esm5/internal/operators/withLatestFrom.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.withLatestFrom = withLatestFrom;

var _tslib = require("tslib");

var _lift = require("../util/lift");

var _OperatorSubscriber = require("./OperatorSubscriber");

var _innerFrom = require("../observable/innerFrom");

var _identity = require("../util/identity");

var _noop = require("../util/noop");

var _args = require("../util/args");

function withLatestFrom() {
  var inputs = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    inputs[_i] = arguments[_i];
  }

  var project = (0, _args.popResultSelector)(inputs);
  return (0, _lift.operate)(function (source, subscriber) {
    var len = inputs.length;
    var otherValues = new Array(len);
    var hasValue = inputs.map(function () {
      return false;
    });
    var ready = false;

    var _loop_1 = function (i) {
      (0, _innerFrom.innerFrom)(inputs[i]).subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
        otherValues[i] = value;

        if (!ready && !hasValue[i]) {
          hasValue[i] = true;
          (ready = hasValue.every(_identity.identity)) && (hasValue = null);
        }
      }, _noop.noop));
    };

    for (var i = 0; i < len; i++) {
      _loop_1(i);
    }

    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {
      if (ready) {
        var values = (0, _tslib.__spreadArray)([value], (0, _tslib.__read)(otherValues));
        subscriber.next(project ? project.apply(void 0, (0, _tslib.__spreadArray)([], (0, _tslib.__read)(values))) : values);
      }
    }));
  });
}
},{"tslib":"node_modules/tslib/tslib.es6.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js","./OperatorSubscriber":"node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../observable/innerFrom":"node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","../util/identity":"node_modules/rxjs/dist/esm5/internal/util/identity.js","../util/noop":"node_modules/rxjs/dist/esm5/internal/util/noop.js","../util/args":"node_modules/rxjs/dist/esm5/internal/util/args.js"}],"node_modules/rxjs/dist/esm5/internal/operators/zipAll.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.zipAll = zipAll;

var _zip = require("../observable/zip");

var _joinAllInternals = require("./joinAllInternals");

function zipAll(project) {
  return (0, _joinAllInternals.joinAllInternals)(_zip.zip, project);
}
},{"../observable/zip":"node_modules/rxjs/dist/esm5/internal/observable/zip.js","./joinAllInternals":"node_modules/rxjs/dist/esm5/internal/operators/joinAllInternals.js"}],"node_modules/rxjs/dist/esm5/internal/operators/zip.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.zip = zip;

var _tslib = require("tslib");

var _zip = require("../observable/zip");

var _lift = require("../util/lift");

function zip() {
  var sources = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    sources[_i] = arguments[_i];
  }

  return (0, _lift.operate)(function (source, subscriber) {
    _zip.zip.apply(void 0, (0, _tslib.__spreadArray)([source], (0, _tslib.__read)(sources))).subscribe(subscriber);
  });
}
},{"tslib":"node_modules/tslib/tslib.es6.js","../observable/zip":"node_modules/rxjs/dist/esm5/internal/observable/zip.js","../util/lift":"node_modules/rxjs/dist/esm5/internal/util/lift.js"}],"node_modules/rxjs/dist/esm5/internal/operators/zipWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.zipWith = zipWith;

var _tslib = require("tslib");

var _zip = require("./zip");

function zipWith() {
  var otherInputs = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    otherInputs[_i] = arguments[_i];
  }

  return _zip.zip.apply(void 0, (0, _tslib.__spreadArray)([], (0, _tslib.__read)(otherInputs)));
}
},{"tslib":"node_modules/tslib/tslib.es6.js","./zip":"node_modules/rxjs/dist/esm5/internal/operators/zip.js"}],"node_modules/rxjs/dist/esm5/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  Observable: true,
  ConnectableObservable: true,
  observable: true,
  animationFrames: true,
  Subject: true,
  BehaviorSubject: true,
  ReplaySubject: true,
  AsyncSubject: true,
  asap: true,
  asapScheduler: true,
  async: true,
  asyncScheduler: true,
  queue: true,
  queueScheduler: true,
  animationFrame: true,
  animationFrameScheduler: true,
  VirtualTimeScheduler: true,
  VirtualAction: true,
  Scheduler: true,
  Subscription: true,
  Subscriber: true,
  Notification: true,
  NotificationKind: true,
  pipe: true,
  noop: true,
  identity: true,
  isObservable: true,
  lastValueFrom: true,
  firstValueFrom: true,
  ArgumentOutOfRangeError: true,
  EmptyError: true,
  NotFoundError: true,
  ObjectUnsubscribedError: true,
  SequenceError: true,
  TimeoutError: true,
  timeout: true,
  UnsubscriptionError: true,
  bindCallback: true,
  bindNodeCallback: true,
  combineLatest: true,
  concat: true,
  connectable: true,
  defer: true,
  empty: true,
  EMPTY: true,
  forkJoin: true,
  from: true,
  fromEvent: true,
  fromEventPattern: true,
  generate: true,
  iif: true,
  interval: true,
  merge: true,
  never: true,
  NEVER: true,
  of: true,
  onErrorResumeNext: true,
  pairs: true,
  partition: true,
  race: true,
  range: true,
  throwError: true,
  timer: true,
  using: true,
  zip: true,
  scheduled: true,
  config: true,
  audit: true,
  auditTime: true,
  buffer: true,
  bufferCount: true,
  bufferTime: true,
  bufferToggle: true,
  bufferWhen: true,
  catchError: true,
  combineAll: true,
  combineLatestAll: true,
  combineLatestWith: true,
  concatAll: true,
  concatMap: true,
  concatMapTo: true,
  concatWith: true,
  connect: true,
  count: true,
  debounce: true,
  debounceTime: true,
  defaultIfEmpty: true,
  delay: true,
  delayWhen: true,
  dematerialize: true,
  distinct: true,
  distinctUntilChanged: true,
  distinctUntilKeyChanged: true,
  elementAt: true,
  endWith: true,
  every: true,
  exhaust: true,
  exhaustAll: true,
  exhaustMap: true,
  expand: true,
  filter: true,
  finalize: true,
  find: true,
  findIndex: true,
  first: true,
  groupBy: true,
  ignoreElements: true,
  isEmpty: true,
  last: true,
  map: true,
  mapTo: true,
  materialize: true,
  max: true,
  mergeAll: true,
  flatMap: true,
  mergeMap: true,
  mergeMapTo: true,
  mergeScan: true,
  mergeWith: true,
  min: true,
  multicast: true,
  observeOn: true,
  pairwise: true,
  pluck: true,
  publish: true,
  publishBehavior: true,
  publishLast: true,
  publishReplay: true,
  raceWith: true,
  reduce: true,
  repeat: true,
  repeatWhen: true,
  retry: true,
  retryWhen: true,
  refCount: true,
  sample: true,
  sampleTime: true,
  scan: true,
  sequenceEqual: true,
  share: true,
  shareReplay: true,
  single: true,
  skip: true,
  skipLast: true,
  skipUntil: true,
  skipWhile: true,
  startWith: true,
  subscribeOn: true,
  switchAll: true,
  switchMap: true,
  switchMapTo: true,
  switchScan: true,
  take: true,
  takeLast: true,
  takeUntil: true,
  takeWhile: true,
  tap: true,
  throttle: true,
  throttleTime: true,
  throwIfEmpty: true,
  timeInterval: true,
  timeoutWith: true,
  timestamp: true,
  toArray: true,
  window: true,
  windowCount: true,
  windowTime: true,
  windowToggle: true,
  windowWhen: true,
  withLatestFrom: true,
  zipAll: true,
  zipWith: true
};
Object.defineProperty(exports, "ArgumentOutOfRangeError", {
  enumerable: true,
  get: function () {
    return _ArgumentOutOfRangeError.ArgumentOutOfRangeError;
  }
});
Object.defineProperty(exports, "AsyncSubject", {
  enumerable: true,
  get: function () {
    return _AsyncSubject.AsyncSubject;
  }
});
Object.defineProperty(exports, "BehaviorSubject", {
  enumerable: true,
  get: function () {
    return _BehaviorSubject.BehaviorSubject;
  }
});
Object.defineProperty(exports, "ConnectableObservable", {
  enumerable: true,
  get: function () {
    return _ConnectableObservable.ConnectableObservable;
  }
});
Object.defineProperty(exports, "EMPTY", {
  enumerable: true,
  get: function () {
    return _empty.EMPTY;
  }
});
Object.defineProperty(exports, "EmptyError", {
  enumerable: true,
  get: function () {
    return _EmptyError.EmptyError;
  }
});
Object.defineProperty(exports, "NEVER", {
  enumerable: true,
  get: function () {
    return _never.NEVER;
  }
});
Object.defineProperty(exports, "NotFoundError", {
  enumerable: true,
  get: function () {
    return _NotFoundError.NotFoundError;
  }
});
Object.defineProperty(exports, "Notification", {
  enumerable: true,
  get: function () {
    return _Notification.Notification;
  }
});
Object.defineProperty(exports, "NotificationKind", {
  enumerable: true,
  get: function () {
    return _Notification.NotificationKind;
  }
});
Object.defineProperty(exports, "ObjectUnsubscribedError", {
  enumerable: true,
  get: function () {
    return _ObjectUnsubscribedError.ObjectUnsubscribedError;
  }
});
Object.defineProperty(exports, "Observable", {
  enumerable: true,
  get: function () {
    return _Observable.Observable;
  }
});
Object.defineProperty(exports, "ReplaySubject", {
  enumerable: true,
  get: function () {
    return _ReplaySubject.ReplaySubject;
  }
});
Object.defineProperty(exports, "Scheduler", {
  enumerable: true,
  get: function () {
    return _Scheduler.Scheduler;
  }
});
Object.defineProperty(exports, "SequenceError", {
  enumerable: true,
  get: function () {
    return _SequenceError.SequenceError;
  }
});
Object.defineProperty(exports, "Subject", {
  enumerable: true,
  get: function () {
    return _Subject.Subject;
  }
});
Object.defineProperty(exports, "Subscriber", {
  enumerable: true,
  get: function () {
    return _Subscriber.Subscriber;
  }
});
Object.defineProperty(exports, "Subscription", {
  enumerable: true,
  get: function () {
    return _Subscription.Subscription;
  }
});
Object.defineProperty(exports, "TimeoutError", {
  enumerable: true,
  get: function () {
    return _timeout.TimeoutError;
  }
});
Object.defineProperty(exports, "UnsubscriptionError", {
  enumerable: true,
  get: function () {
    return _UnsubscriptionError.UnsubscriptionError;
  }
});
Object.defineProperty(exports, "VirtualAction", {
  enumerable: true,
  get: function () {
    return _VirtualTimeScheduler.VirtualAction;
  }
});
Object.defineProperty(exports, "VirtualTimeScheduler", {
  enumerable: true,
  get: function () {
    return _VirtualTimeScheduler.VirtualTimeScheduler;
  }
});
Object.defineProperty(exports, "animationFrame", {
  enumerable: true,
  get: function () {
    return _animationFrame.animationFrame;
  }
});
Object.defineProperty(exports, "animationFrameScheduler", {
  enumerable: true,
  get: function () {
    return _animationFrame.animationFrameScheduler;
  }
});
Object.defineProperty(exports, "animationFrames", {
  enumerable: true,
  get: function () {
    return _animationFrames.animationFrames;
  }
});
Object.defineProperty(exports, "asap", {
  enumerable: true,
  get: function () {
    return _asap.asap;
  }
});
Object.defineProperty(exports, "asapScheduler", {
  enumerable: true,
  get: function () {
    return _asap.asapScheduler;
  }
});
Object.defineProperty(exports, "async", {
  enumerable: true,
  get: function () {
    return _async.async;
  }
});
Object.defineProperty(exports, "asyncScheduler", {
  enumerable: true,
  get: function () {
    return _async.asyncScheduler;
  }
});
Object.defineProperty(exports, "audit", {
  enumerable: true,
  get: function () {
    return _audit.audit;
  }
});
Object.defineProperty(exports, "auditTime", {
  enumerable: true,
  get: function () {
    return _auditTime.auditTime;
  }
});
Object.defineProperty(exports, "bindCallback", {
  enumerable: true,
  get: function () {
    return _bindCallback.bindCallback;
  }
});
Object.defineProperty(exports, "bindNodeCallback", {
  enumerable: true,
  get: function () {
    return _bindNodeCallback.bindNodeCallback;
  }
});
Object.defineProperty(exports, "buffer", {
  enumerable: true,
  get: function () {
    return _buffer.buffer;
  }
});
Object.defineProperty(exports, "bufferCount", {
  enumerable: true,
  get: function () {
    return _bufferCount.bufferCount;
  }
});
Object.defineProperty(exports, "bufferTime", {
  enumerable: true,
  get: function () {
    return _bufferTime.bufferTime;
  }
});
Object.defineProperty(exports, "bufferToggle", {
  enumerable: true,
  get: function () {
    return _bufferToggle.bufferToggle;
  }
});
Object.defineProperty(exports, "bufferWhen", {
  enumerable: true,
  get: function () {
    return _bufferWhen.bufferWhen;
  }
});
Object.defineProperty(exports, "catchError", {
  enumerable: true,
  get: function () {
    return _catchError.catchError;
  }
});
Object.defineProperty(exports, "combineAll", {
  enumerable: true,
  get: function () {
    return _combineAll.combineAll;
  }
});
Object.defineProperty(exports, "combineLatest", {
  enumerable: true,
  get: function () {
    return _combineLatest.combineLatest;
  }
});
Object.defineProperty(exports, "combineLatestAll", {
  enumerable: true,
  get: function () {
    return _combineLatestAll.combineLatestAll;
  }
});
Object.defineProperty(exports, "combineLatestWith", {
  enumerable: true,
  get: function () {
    return _combineLatestWith.combineLatestWith;
  }
});
Object.defineProperty(exports, "concat", {
  enumerable: true,
  get: function () {
    return _concat.concat;
  }
});
Object.defineProperty(exports, "concatAll", {
  enumerable: true,
  get: function () {
    return _concatAll.concatAll;
  }
});
Object.defineProperty(exports, "concatMap", {
  enumerable: true,
  get: function () {
    return _concatMap.concatMap;
  }
});
Object.defineProperty(exports, "concatMapTo", {
  enumerable: true,
  get: function () {
    return _concatMapTo.concatMapTo;
  }
});
Object.defineProperty(exports, "concatWith", {
  enumerable: true,
  get: function () {
    return _concatWith.concatWith;
  }
});
Object.defineProperty(exports, "config", {
  enumerable: true,
  get: function () {
    return _config.config;
  }
});
Object.defineProperty(exports, "connect", {
  enumerable: true,
  get: function () {
    return _connect.connect;
  }
});
Object.defineProperty(exports, "connectable", {
  enumerable: true,
  get: function () {
    return _connectable.connectable;
  }
});
Object.defineProperty(exports, "count", {
  enumerable: true,
  get: function () {
    return _count.count;
  }
});
Object.defineProperty(exports, "debounce", {
  enumerable: true,
  get: function () {
    return _debounce.debounce;
  }
});
Object.defineProperty(exports, "debounceTime", {
  enumerable: true,
  get: function () {
    return _debounceTime.debounceTime;
  }
});
Object.defineProperty(exports, "defaultIfEmpty", {
  enumerable: true,
  get: function () {
    return _defaultIfEmpty.defaultIfEmpty;
  }
});
Object.defineProperty(exports, "defer", {
  enumerable: true,
  get: function () {
    return _defer.defer;
  }
});
Object.defineProperty(exports, "delay", {
  enumerable: true,
  get: function () {
    return _delay.delay;
  }
});
Object.defineProperty(exports, "delayWhen", {
  enumerable: true,
  get: function () {
    return _delayWhen.delayWhen;
  }
});
Object.defineProperty(exports, "dematerialize", {
  enumerable: true,
  get: function () {
    return _dematerialize.dematerialize;
  }
});
Object.defineProperty(exports, "distinct", {
  enumerable: true,
  get: function () {
    return _distinct.distinct;
  }
});
Object.defineProperty(exports, "distinctUntilChanged", {
  enumerable: true,
  get: function () {
    return _distinctUntilChanged.distinctUntilChanged;
  }
});
Object.defineProperty(exports, "distinctUntilKeyChanged", {
  enumerable: true,
  get: function () {
    return _distinctUntilKeyChanged.distinctUntilKeyChanged;
  }
});
Object.defineProperty(exports, "elementAt", {
  enumerable: true,
  get: function () {
    return _elementAt.elementAt;
  }
});
Object.defineProperty(exports, "empty", {
  enumerable: true,
  get: function () {
    return _empty.empty;
  }
});
Object.defineProperty(exports, "endWith", {
  enumerable: true,
  get: function () {
    return _endWith.endWith;
  }
});
Object.defineProperty(exports, "every", {
  enumerable: true,
  get: function () {
    return _every.every;
  }
});
Object.defineProperty(exports, "exhaust", {
  enumerable: true,
  get: function () {
    return _exhaust.exhaust;
  }
});
Object.defineProperty(exports, "exhaustAll", {
  enumerable: true,
  get: function () {
    return _exhaustAll.exhaustAll;
  }
});
Object.defineProperty(exports, "exhaustMap", {
  enumerable: true,
  get: function () {
    return _exhaustMap.exhaustMap;
  }
});
Object.defineProperty(exports, "expand", {
  enumerable: true,
  get: function () {
    return _expand.expand;
  }
});
Object.defineProperty(exports, "filter", {
  enumerable: true,
  get: function () {
    return _filter.filter;
  }
});
Object.defineProperty(exports, "finalize", {
  enumerable: true,
  get: function () {
    return _finalize.finalize;
  }
});
Object.defineProperty(exports, "find", {
  enumerable: true,
  get: function () {
    return _find.find;
  }
});
Object.defineProperty(exports, "findIndex", {
  enumerable: true,
  get: function () {
    return _findIndex.findIndex;
  }
});
Object.defineProperty(exports, "first", {
  enumerable: true,
  get: function () {
    return _first.first;
  }
});
Object.defineProperty(exports, "firstValueFrom", {
  enumerable: true,
  get: function () {
    return _firstValueFrom.firstValueFrom;
  }
});
Object.defineProperty(exports, "flatMap", {
  enumerable: true,
  get: function () {
    return _flatMap.flatMap;
  }
});
Object.defineProperty(exports, "forkJoin", {
  enumerable: true,
  get: function () {
    return _forkJoin.forkJoin;
  }
});
Object.defineProperty(exports, "from", {
  enumerable: true,
  get: function () {
    return _from.from;
  }
});
Object.defineProperty(exports, "fromEvent", {
  enumerable: true,
  get: function () {
    return _fromEvent.fromEvent;
  }
});
Object.defineProperty(exports, "fromEventPattern", {
  enumerable: true,
  get: function () {
    return _fromEventPattern.fromEventPattern;
  }
});
Object.defineProperty(exports, "generate", {
  enumerable: true,
  get: function () {
    return _generate.generate;
  }
});
Object.defineProperty(exports, "groupBy", {
  enumerable: true,
  get: function () {
    return _groupBy.groupBy;
  }
});
Object.defineProperty(exports, "identity", {
  enumerable: true,
  get: function () {
    return _identity.identity;
  }
});
Object.defineProperty(exports, "ignoreElements", {
  enumerable: true,
  get: function () {
    return _ignoreElements.ignoreElements;
  }
});
Object.defineProperty(exports, "iif", {
  enumerable: true,
  get: function () {
    return _iif.iif;
  }
});
Object.defineProperty(exports, "interval", {
  enumerable: true,
  get: function () {
    return _interval.interval;
  }
});
Object.defineProperty(exports, "isEmpty", {
  enumerable: true,
  get: function () {
    return _isEmpty.isEmpty;
  }
});
Object.defineProperty(exports, "isObservable", {
  enumerable: true,
  get: function () {
    return _isObservable.isObservable;
  }
});
Object.defineProperty(exports, "last", {
  enumerable: true,
  get: function () {
    return _last.last;
  }
});
Object.defineProperty(exports, "lastValueFrom", {
  enumerable: true,
  get: function () {
    return _lastValueFrom.lastValueFrom;
  }
});
Object.defineProperty(exports, "map", {
  enumerable: true,
  get: function () {
    return _map.map;
  }
});
Object.defineProperty(exports, "mapTo", {
  enumerable: true,
  get: function () {
    return _mapTo.mapTo;
  }
});
Object.defineProperty(exports, "materialize", {
  enumerable: true,
  get: function () {
    return _materialize.materialize;
  }
});
Object.defineProperty(exports, "max", {
  enumerable: true,
  get: function () {
    return _max.max;
  }
});
Object.defineProperty(exports, "merge", {
  enumerable: true,
  get: function () {
    return _merge.merge;
  }
});
Object.defineProperty(exports, "mergeAll", {
  enumerable: true,
  get: function () {
    return _mergeAll.mergeAll;
  }
});
Object.defineProperty(exports, "mergeMap", {
  enumerable: true,
  get: function () {
    return _mergeMap.mergeMap;
  }
});
Object.defineProperty(exports, "mergeMapTo", {
  enumerable: true,
  get: function () {
    return _mergeMapTo.mergeMapTo;
  }
});
Object.defineProperty(exports, "mergeScan", {
  enumerable: true,
  get: function () {
    return _mergeScan.mergeScan;
  }
});
Object.defineProperty(exports, "mergeWith", {
  enumerable: true,
  get: function () {
    return _mergeWith.mergeWith;
  }
});
Object.defineProperty(exports, "min", {
  enumerable: true,
  get: function () {
    return _min.min;
  }
});
Object.defineProperty(exports, "multicast", {
  enumerable: true,
  get: function () {
    return _multicast.multicast;
  }
});
Object.defineProperty(exports, "never", {
  enumerable: true,
  get: function () {
    return _never.never;
  }
});
Object.defineProperty(exports, "noop", {
  enumerable: true,
  get: function () {
    return _noop.noop;
  }
});
Object.defineProperty(exports, "observable", {
  enumerable: true,
  get: function () {
    return _observable.observable;
  }
});
Object.defineProperty(exports, "observeOn", {
  enumerable: true,
  get: function () {
    return _observeOn.observeOn;
  }
});
Object.defineProperty(exports, "of", {
  enumerable: true,
  get: function () {
    return _of.of;
  }
});
Object.defineProperty(exports, "onErrorResumeNext", {
  enumerable: true,
  get: function () {
    return _onErrorResumeNext.onErrorResumeNext;
  }
});
Object.defineProperty(exports, "pairs", {
  enumerable: true,
  get: function () {
    return _pairs.pairs;
  }
});
Object.defineProperty(exports, "pairwise", {
  enumerable: true,
  get: function () {
    return _pairwise.pairwise;
  }
});
Object.defineProperty(exports, "partition", {
  enumerable: true,
  get: function () {
    return _partition.partition;
  }
});
Object.defineProperty(exports, "pipe", {
  enumerable: true,
  get: function () {
    return _pipe.pipe;
  }
});
Object.defineProperty(exports, "pluck", {
  enumerable: true,
  get: function () {
    return _pluck.pluck;
  }
});
Object.defineProperty(exports, "publish", {
  enumerable: true,
  get: function () {
    return _publish.publish;
  }
});
Object.defineProperty(exports, "publishBehavior", {
  enumerable: true,
  get: function () {
    return _publishBehavior.publishBehavior;
  }
});
Object.defineProperty(exports, "publishLast", {
  enumerable: true,
  get: function () {
    return _publishLast.publishLast;
  }
});
Object.defineProperty(exports, "publishReplay", {
  enumerable: true,
  get: function () {
    return _publishReplay.publishReplay;
  }
});
Object.defineProperty(exports, "queue", {
  enumerable: true,
  get: function () {
    return _queue.queue;
  }
});
Object.defineProperty(exports, "queueScheduler", {
  enumerable: true,
  get: function () {
    return _queue.queueScheduler;
  }
});
Object.defineProperty(exports, "race", {
  enumerable: true,
  get: function () {
    return _race.race;
  }
});
Object.defineProperty(exports, "raceWith", {
  enumerable: true,
  get: function () {
    return _raceWith.raceWith;
  }
});
Object.defineProperty(exports, "range", {
  enumerable: true,
  get: function () {
    return _range.range;
  }
});
Object.defineProperty(exports, "reduce", {
  enumerable: true,
  get: function () {
    return _reduce.reduce;
  }
});
Object.defineProperty(exports, "refCount", {
  enumerable: true,
  get: function () {
    return _refCount.refCount;
  }
});
Object.defineProperty(exports, "repeat", {
  enumerable: true,
  get: function () {
    return _repeat.repeat;
  }
});
Object.defineProperty(exports, "repeatWhen", {
  enumerable: true,
  get: function () {
    return _repeatWhen.repeatWhen;
  }
});
Object.defineProperty(exports, "retry", {
  enumerable: true,
  get: function () {
    return _retry.retry;
  }
});
Object.defineProperty(exports, "retryWhen", {
  enumerable: true,
  get: function () {
    return _retryWhen.retryWhen;
  }
});
Object.defineProperty(exports, "sample", {
  enumerable: true,
  get: function () {
    return _sample.sample;
  }
});
Object.defineProperty(exports, "sampleTime", {
  enumerable: true,
  get: function () {
    return _sampleTime.sampleTime;
  }
});
Object.defineProperty(exports, "scan", {
  enumerable: true,
  get: function () {
    return _scan.scan;
  }
});
Object.defineProperty(exports, "scheduled", {
  enumerable: true,
  get: function () {
    return _scheduled.scheduled;
  }
});
Object.defineProperty(exports, "sequenceEqual", {
  enumerable: true,
  get: function () {
    return _sequenceEqual.sequenceEqual;
  }
});
Object.defineProperty(exports, "share", {
  enumerable: true,
  get: function () {
    return _share.share;
  }
});
Object.defineProperty(exports, "shareReplay", {
  enumerable: true,
  get: function () {
    return _shareReplay.shareReplay;
  }
});
Object.defineProperty(exports, "single", {
  enumerable: true,
  get: function () {
    return _single.single;
  }
});
Object.defineProperty(exports, "skip", {
  enumerable: true,
  get: function () {
    return _skip.skip;
  }
});
Object.defineProperty(exports, "skipLast", {
  enumerable: true,
  get: function () {
    return _skipLast.skipLast;
  }
});
Object.defineProperty(exports, "skipUntil", {
  enumerable: true,
  get: function () {
    return _skipUntil.skipUntil;
  }
});
Object.defineProperty(exports, "skipWhile", {
  enumerable: true,
  get: function () {
    return _skipWhile.skipWhile;
  }
});
Object.defineProperty(exports, "startWith", {
  enumerable: true,
  get: function () {
    return _startWith.startWith;
  }
});
Object.defineProperty(exports, "subscribeOn", {
  enumerable: true,
  get: function () {
    return _subscribeOn.subscribeOn;
  }
});
Object.defineProperty(exports, "switchAll", {
  enumerable: true,
  get: function () {
    return _switchAll.switchAll;
  }
});
Object.defineProperty(exports, "switchMap", {
  enumerable: true,
  get: function () {
    return _switchMap.switchMap;
  }
});
Object.defineProperty(exports, "switchMapTo", {
  enumerable: true,
  get: function () {
    return _switchMapTo.switchMapTo;
  }
});
Object.defineProperty(exports, "switchScan", {
  enumerable: true,
  get: function () {
    return _switchScan.switchScan;
  }
});
Object.defineProperty(exports, "take", {
  enumerable: true,
  get: function () {
    return _take.take;
  }
});
Object.defineProperty(exports, "takeLast", {
  enumerable: true,
  get: function () {
    return _takeLast.takeLast;
  }
});
Object.defineProperty(exports, "takeUntil", {
  enumerable: true,
  get: function () {
    return _takeUntil.takeUntil;
  }
});
Object.defineProperty(exports, "takeWhile", {
  enumerable: true,
  get: function () {
    return _takeWhile.takeWhile;
  }
});
Object.defineProperty(exports, "tap", {
  enumerable: true,
  get: function () {
    return _tap.tap;
  }
});
Object.defineProperty(exports, "throttle", {
  enumerable: true,
  get: function () {
    return _throttle.throttle;
  }
});
Object.defineProperty(exports, "throttleTime", {
  enumerable: true,
  get: function () {
    return _throttleTime.throttleTime;
  }
});
Object.defineProperty(exports, "throwError", {
  enumerable: true,
  get: function () {
    return _throwError.throwError;
  }
});
Object.defineProperty(exports, "throwIfEmpty", {
  enumerable: true,
  get: function () {
    return _throwIfEmpty.throwIfEmpty;
  }
});
Object.defineProperty(exports, "timeInterval", {
  enumerable: true,
  get: function () {
    return _timeInterval.timeInterval;
  }
});
Object.defineProperty(exports, "timeout", {
  enumerable: true,
  get: function () {
    return _timeout.timeout;
  }
});
Object.defineProperty(exports, "timeoutWith", {
  enumerable: true,
  get: function () {
    return _timeoutWith.timeoutWith;
  }
});
Object.defineProperty(exports, "timer", {
  enumerable: true,
  get: function () {
    return _timer.timer;
  }
});
Object.defineProperty(exports, "timestamp", {
  enumerable: true,
  get: function () {
    return _timestamp.timestamp;
  }
});
Object.defineProperty(exports, "toArray", {
  enumerable: true,
  get: function () {
    return _toArray.toArray;
  }
});
Object.defineProperty(exports, "using", {
  enumerable: true,
  get: function () {
    return _using.using;
  }
});
Object.defineProperty(exports, "window", {
  enumerable: true,
  get: function () {
    return _window.window;
  }
});
Object.defineProperty(exports, "windowCount", {
  enumerable: true,
  get: function () {
    return _windowCount.windowCount;
  }
});
Object.defineProperty(exports, "windowTime", {
  enumerable: true,
  get: function () {
    return _windowTime.windowTime;
  }
});
Object.defineProperty(exports, "windowToggle", {
  enumerable: true,
  get: function () {
    return _windowToggle.windowToggle;
  }
});
Object.defineProperty(exports, "windowWhen", {
  enumerable: true,
  get: function () {
    return _windowWhen.windowWhen;
  }
});
Object.defineProperty(exports, "withLatestFrom", {
  enumerable: true,
  get: function () {
    return _withLatestFrom.withLatestFrom;
  }
});
Object.defineProperty(exports, "zip", {
  enumerable: true,
  get: function () {
    return _zip.zip;
  }
});
Object.defineProperty(exports, "zipAll", {
  enumerable: true,
  get: function () {
    return _zipAll.zipAll;
  }
});
Object.defineProperty(exports, "zipWith", {
  enumerable: true,
  get: function () {
    return _zipWith.zipWith;
  }
});

var _Observable = require("./internal/Observable");

var _ConnectableObservable = require("./internal/observable/ConnectableObservable");

var _observable = require("./internal/symbol/observable");

var _animationFrames = require("./internal/observable/dom/animationFrames");

var _Subject = require("./internal/Subject");

var _BehaviorSubject = require("./internal/BehaviorSubject");

var _ReplaySubject = require("./internal/ReplaySubject");

var _AsyncSubject = require("./internal/AsyncSubject");

var _asap = require("./internal/scheduler/asap");

var _async = require("./internal/scheduler/async");

var _queue = require("./internal/scheduler/queue");

var _animationFrame = require("./internal/scheduler/animationFrame");

var _VirtualTimeScheduler = require("./internal/scheduler/VirtualTimeScheduler");

var _Scheduler = require("./internal/Scheduler");

var _Subscription = require("./internal/Subscription");

var _Subscriber = require("./internal/Subscriber");

var _Notification = require("./internal/Notification");

var _pipe = require("./internal/util/pipe");

var _noop = require("./internal/util/noop");

var _identity = require("./internal/util/identity");

var _isObservable = require("./internal/util/isObservable");

var _lastValueFrom = require("./internal/lastValueFrom");

var _firstValueFrom = require("./internal/firstValueFrom");

var _ArgumentOutOfRangeError = require("./internal/util/ArgumentOutOfRangeError");

var _EmptyError = require("./internal/util/EmptyError");

var _NotFoundError = require("./internal/util/NotFoundError");

var _ObjectUnsubscribedError = require("./internal/util/ObjectUnsubscribedError");

var _SequenceError = require("./internal/util/SequenceError");

var _timeout = require("./internal/operators/timeout");

var _UnsubscriptionError = require("./internal/util/UnsubscriptionError");

var _bindCallback = require("./internal/observable/bindCallback");

var _bindNodeCallback = require("./internal/observable/bindNodeCallback");

var _combineLatest = require("./internal/observable/combineLatest");

var _concat = require("./internal/observable/concat");

var _connectable = require("./internal/observable/connectable");

var _defer = require("./internal/observable/defer");

var _empty = require("./internal/observable/empty");

var _forkJoin = require("./internal/observable/forkJoin");

var _from = require("./internal/observable/from");

var _fromEvent = require("./internal/observable/fromEvent");

var _fromEventPattern = require("./internal/observable/fromEventPattern");

var _generate = require("./internal/observable/generate");

var _iif = require("./internal/observable/iif");

var _interval = require("./internal/observable/interval");

var _merge = require("./internal/observable/merge");

var _never = require("./internal/observable/never");

var _of = require("./internal/observable/of");

var _onErrorResumeNext = require("./internal/observable/onErrorResumeNext");

var _pairs = require("./internal/observable/pairs");

var _partition = require("./internal/observable/partition");

var _race = require("./internal/observable/race");

var _range = require("./internal/observable/range");

var _throwError = require("./internal/observable/throwError");

var _timer = require("./internal/observable/timer");

var _using = require("./internal/observable/using");

var _zip = require("./internal/observable/zip");

var _scheduled = require("./internal/scheduled/scheduled");

var _types = require("./internal/types");

Object.keys(_types).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _types[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _types[key];
    }
  });
});

var _config = require("./internal/config");

var _audit = require("./internal/operators/audit");

var _auditTime = require("./internal/operators/auditTime");

var _buffer = require("./internal/operators/buffer");

var _bufferCount = require("./internal/operators/bufferCount");

var _bufferTime = require("./internal/operators/bufferTime");

var _bufferToggle = require("./internal/operators/bufferToggle");

var _bufferWhen = require("./internal/operators/bufferWhen");

var _catchError = require("./internal/operators/catchError");

var _combineAll = require("./internal/operators/combineAll");

var _combineLatestAll = require("./internal/operators/combineLatestAll");

var _combineLatestWith = require("./internal/operators/combineLatestWith");

var _concatAll = require("./internal/operators/concatAll");

var _concatMap = require("./internal/operators/concatMap");

var _concatMapTo = require("./internal/operators/concatMapTo");

var _concatWith = require("./internal/operators/concatWith");

var _connect = require("./internal/operators/connect");

var _count = require("./internal/operators/count");

var _debounce = require("./internal/operators/debounce");

var _debounceTime = require("./internal/operators/debounceTime");

var _defaultIfEmpty = require("./internal/operators/defaultIfEmpty");

var _delay = require("./internal/operators/delay");

var _delayWhen = require("./internal/operators/delayWhen");

var _dematerialize = require("./internal/operators/dematerialize");

var _distinct = require("./internal/operators/distinct");

var _distinctUntilChanged = require("./internal/operators/distinctUntilChanged");

var _distinctUntilKeyChanged = require("./internal/operators/distinctUntilKeyChanged");

var _elementAt = require("./internal/operators/elementAt");

var _endWith = require("./internal/operators/endWith");

var _every = require("./internal/operators/every");

var _exhaust = require("./internal/operators/exhaust");

var _exhaustAll = require("./internal/operators/exhaustAll");

var _exhaustMap = require("./internal/operators/exhaustMap");

var _expand = require("./internal/operators/expand");

var _filter = require("./internal/operators/filter");

var _finalize = require("./internal/operators/finalize");

var _find = require("./internal/operators/find");

var _findIndex = require("./internal/operators/findIndex");

var _first = require("./internal/operators/first");

var _groupBy = require("./internal/operators/groupBy");

var _ignoreElements = require("./internal/operators/ignoreElements");

var _isEmpty = require("./internal/operators/isEmpty");

var _last = require("./internal/operators/last");

var _map = require("./internal/operators/map");

var _mapTo = require("./internal/operators/mapTo");

var _materialize = require("./internal/operators/materialize");

var _max = require("./internal/operators/max");

var _mergeAll = require("./internal/operators/mergeAll");

var _flatMap = require("./internal/operators/flatMap");

var _mergeMap = require("./internal/operators/mergeMap");

var _mergeMapTo = require("./internal/operators/mergeMapTo");

var _mergeScan = require("./internal/operators/mergeScan");

var _mergeWith = require("./internal/operators/mergeWith");

var _min = require("./internal/operators/min");

var _multicast = require("./internal/operators/multicast");

var _observeOn = require("./internal/operators/observeOn");

var _pairwise = require("./internal/operators/pairwise");

var _pluck = require("./internal/operators/pluck");

var _publish = require("./internal/operators/publish");

var _publishBehavior = require("./internal/operators/publishBehavior");

var _publishLast = require("./internal/operators/publishLast");

var _publishReplay = require("./internal/operators/publishReplay");

var _raceWith = require("./internal/operators/raceWith");

var _reduce = require("./internal/operators/reduce");

var _repeat = require("./internal/operators/repeat");

var _repeatWhen = require("./internal/operators/repeatWhen");

var _retry = require("./internal/operators/retry");

var _retryWhen = require("./internal/operators/retryWhen");

var _refCount = require("./internal/operators/refCount");

var _sample = require("./internal/operators/sample");

var _sampleTime = require("./internal/operators/sampleTime");

var _scan = require("./internal/operators/scan");

var _sequenceEqual = require("./internal/operators/sequenceEqual");

var _share = require("./internal/operators/share");

var _shareReplay = require("./internal/operators/shareReplay");

var _single = require("./internal/operators/single");

var _skip = require("./internal/operators/skip");

var _skipLast = require("./internal/operators/skipLast");

var _skipUntil = require("./internal/operators/skipUntil");

var _skipWhile = require("./internal/operators/skipWhile");

var _startWith = require("./internal/operators/startWith");

var _subscribeOn = require("./internal/operators/subscribeOn");

var _switchAll = require("./internal/operators/switchAll");

var _switchMap = require("./internal/operators/switchMap");

var _switchMapTo = require("./internal/operators/switchMapTo");

var _switchScan = require("./internal/operators/switchScan");

var _take = require("./internal/operators/take");

var _takeLast = require("./internal/operators/takeLast");

var _takeUntil = require("./internal/operators/takeUntil");

var _takeWhile = require("./internal/operators/takeWhile");

var _tap = require("./internal/operators/tap");

var _throttle = require("./internal/operators/throttle");

var _throttleTime = require("./internal/operators/throttleTime");

var _throwIfEmpty = require("./internal/operators/throwIfEmpty");

var _timeInterval = require("./internal/operators/timeInterval");

var _timeoutWith = require("./internal/operators/timeoutWith");

var _timestamp = require("./internal/operators/timestamp");

var _toArray = require("./internal/operators/toArray");

var _window = require("./internal/operators/window");

var _windowCount = require("./internal/operators/windowCount");

var _windowTime = require("./internal/operators/windowTime");

var _windowToggle = require("./internal/operators/windowToggle");

var _windowWhen = require("./internal/operators/windowWhen");

var _withLatestFrom = require("./internal/operators/withLatestFrom");

var _zipAll = require("./internal/operators/zipAll");

var _zipWith = require("./internal/operators/zipWith");
},{"./internal/Observable":"node_modules/rxjs/dist/esm5/internal/Observable.js","./internal/observable/ConnectableObservable":"node_modules/rxjs/dist/esm5/internal/observable/ConnectableObservable.js","./internal/symbol/observable":"node_modules/rxjs/dist/esm5/internal/symbol/observable.js","./internal/observable/dom/animationFrames":"node_modules/rxjs/dist/esm5/internal/observable/dom/animationFrames.js","./internal/Subject":"node_modules/rxjs/dist/esm5/internal/Subject.js","./internal/BehaviorSubject":"node_modules/rxjs/dist/esm5/internal/BehaviorSubject.js","./internal/ReplaySubject":"node_modules/rxjs/dist/esm5/internal/ReplaySubject.js","./internal/AsyncSubject":"node_modules/rxjs/dist/esm5/internal/AsyncSubject.js","./internal/scheduler/asap":"node_modules/rxjs/dist/esm5/internal/scheduler/asap.js","./internal/scheduler/async":"node_modules/rxjs/dist/esm5/internal/scheduler/async.js","./internal/scheduler/queue":"node_modules/rxjs/dist/esm5/internal/scheduler/queue.js","./internal/scheduler/animationFrame":"node_modules/rxjs/dist/esm5/internal/scheduler/animationFrame.js","./internal/scheduler/VirtualTimeScheduler":"node_modules/rxjs/dist/esm5/internal/scheduler/VirtualTimeScheduler.js","./internal/Scheduler":"node_modules/rxjs/dist/esm5/internal/Scheduler.js","./internal/Subscription":"node_modules/rxjs/dist/esm5/internal/Subscription.js","./internal/Subscriber":"node_modules/rxjs/dist/esm5/internal/Subscriber.js","./internal/Notification":"node_modules/rxjs/dist/esm5/internal/Notification.js","./internal/util/pipe":"node_modules/rxjs/dist/esm5/internal/util/pipe.js","./internal/util/noop":"node_modules/rxjs/dist/esm5/internal/util/noop.js","./internal/util/identity":"node_modules/rxjs/dist/esm5/internal/util/identity.js","./internal/util/isObservable":"node_modules/rxjs/dist/esm5/internal/util/isObservable.js","./internal/lastValueFrom":"node_modules/rxjs/dist/esm5/internal/lastValueFrom.js","./internal/firstValueFrom":"node_modules/rxjs/dist/esm5/internal/firstValueFrom.js","./internal/util/ArgumentOutOfRangeError":"node_modules/rxjs/dist/esm5/internal/util/ArgumentOutOfRangeError.js","./internal/util/EmptyError":"node_modules/rxjs/dist/esm5/internal/util/EmptyError.js","./internal/util/NotFoundError":"node_modules/rxjs/dist/esm5/internal/util/NotFoundError.js","./internal/util/ObjectUnsubscribedError":"node_modules/rxjs/dist/esm5/internal/util/ObjectUnsubscribedError.js","./internal/util/SequenceError":"node_modules/rxjs/dist/esm5/internal/util/SequenceError.js","./internal/operators/timeout":"node_modules/rxjs/dist/esm5/internal/operators/timeout.js","./internal/util/UnsubscriptionError":"node_modules/rxjs/dist/esm5/internal/util/UnsubscriptionError.js","./internal/observable/bindCallback":"node_modules/rxjs/dist/esm5/internal/observable/bindCallback.js","./internal/observable/bindNodeCallback":"node_modules/rxjs/dist/esm5/internal/observable/bindNodeCallback.js","./internal/observable/combineLatest":"node_modules/rxjs/dist/esm5/internal/observable/combineLatest.js","./internal/observable/concat":"node_modules/rxjs/dist/esm5/internal/observable/concat.js","./internal/observable/connectable":"node_modules/rxjs/dist/esm5/internal/observable/connectable.js","./internal/observable/defer":"node_modules/rxjs/dist/esm5/internal/observable/defer.js","./internal/observable/empty":"node_modules/rxjs/dist/esm5/internal/observable/empty.js","./internal/observable/forkJoin":"node_modules/rxjs/dist/esm5/internal/observable/forkJoin.js","./internal/observable/from":"node_modules/rxjs/dist/esm5/internal/observable/from.js","./internal/observable/fromEvent":"node_modules/rxjs/dist/esm5/internal/observable/fromEvent.js","./internal/observable/fromEventPattern":"node_modules/rxjs/dist/esm5/internal/observable/fromEventPattern.js","./internal/observable/generate":"node_modules/rxjs/dist/esm5/internal/observable/generate.js","./internal/observable/iif":"node_modules/rxjs/dist/esm5/internal/observable/iif.js","./internal/observable/interval":"node_modules/rxjs/dist/esm5/internal/observable/interval.js","./internal/observable/merge":"node_modules/rxjs/dist/esm5/internal/observable/merge.js","./internal/observable/never":"node_modules/rxjs/dist/esm5/internal/observable/never.js","./internal/observable/of":"node_modules/rxjs/dist/esm5/internal/observable/of.js","./internal/observable/onErrorResumeNext":"node_modules/rxjs/dist/esm5/internal/observable/onErrorResumeNext.js","./internal/observable/pairs":"node_modules/rxjs/dist/esm5/internal/observable/pairs.js","./internal/observable/partition":"node_modules/rxjs/dist/esm5/internal/observable/partition.js","./internal/observable/race":"node_modules/rxjs/dist/esm5/internal/observable/race.js","./internal/observable/range":"node_modules/rxjs/dist/esm5/internal/observable/range.js","./internal/observable/throwError":"node_modules/rxjs/dist/esm5/internal/observable/throwError.js","./internal/observable/timer":"node_modules/rxjs/dist/esm5/internal/observable/timer.js","./internal/observable/using":"node_modules/rxjs/dist/esm5/internal/observable/using.js","./internal/observable/zip":"node_modules/rxjs/dist/esm5/internal/observable/zip.js","./internal/scheduled/scheduled":"node_modules/rxjs/dist/esm5/internal/scheduled/scheduled.js","./internal/types":"node_modules/rxjs/dist/esm5/internal/types.js","./internal/config":"node_modules/rxjs/dist/esm5/internal/config.js","./internal/operators/audit":"node_modules/rxjs/dist/esm5/internal/operators/audit.js","./internal/operators/auditTime":"node_modules/rxjs/dist/esm5/internal/operators/auditTime.js","./internal/operators/buffer":"node_modules/rxjs/dist/esm5/internal/operators/buffer.js","./internal/operators/bufferCount":"node_modules/rxjs/dist/esm5/internal/operators/bufferCount.js","./internal/operators/bufferTime":"node_modules/rxjs/dist/esm5/internal/operators/bufferTime.js","./internal/operators/bufferToggle":"node_modules/rxjs/dist/esm5/internal/operators/bufferToggle.js","./internal/operators/bufferWhen":"node_modules/rxjs/dist/esm5/internal/operators/bufferWhen.js","./internal/operators/catchError":"node_modules/rxjs/dist/esm5/internal/operators/catchError.js","./internal/operators/combineAll":"node_modules/rxjs/dist/esm5/internal/operators/combineAll.js","./internal/operators/combineLatestAll":"node_modules/rxjs/dist/esm5/internal/operators/combineLatestAll.js","./internal/operators/combineLatestWith":"node_modules/rxjs/dist/esm5/internal/operators/combineLatestWith.js","./internal/operators/concatAll":"node_modules/rxjs/dist/esm5/internal/operators/concatAll.js","./internal/operators/concatMap":"node_modules/rxjs/dist/esm5/internal/operators/concatMap.js","./internal/operators/concatMapTo":"node_modules/rxjs/dist/esm5/internal/operators/concatMapTo.js","./internal/operators/concatWith":"node_modules/rxjs/dist/esm5/internal/operators/concatWith.js","./internal/operators/connect":"node_modules/rxjs/dist/esm5/internal/operators/connect.js","./internal/operators/count":"node_modules/rxjs/dist/esm5/internal/operators/count.js","./internal/operators/debounce":"node_modules/rxjs/dist/esm5/internal/operators/debounce.js","./internal/operators/debounceTime":"node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js","./internal/operators/defaultIfEmpty":"node_modules/rxjs/dist/esm5/internal/operators/defaultIfEmpty.js","./internal/operators/delay":"node_modules/rxjs/dist/esm5/internal/operators/delay.js","./internal/operators/delayWhen":"node_modules/rxjs/dist/esm5/internal/operators/delayWhen.js","./internal/operators/dematerialize":"node_modules/rxjs/dist/esm5/internal/operators/dematerialize.js","./internal/operators/distinct":"node_modules/rxjs/dist/esm5/internal/operators/distinct.js","./internal/operators/distinctUntilChanged":"node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js","./internal/operators/distinctUntilKeyChanged":"node_modules/rxjs/dist/esm5/internal/operators/distinctUntilKeyChanged.js","./internal/operators/elementAt":"node_modules/rxjs/dist/esm5/internal/operators/elementAt.js","./internal/operators/endWith":"node_modules/rxjs/dist/esm5/internal/operators/endWith.js","./internal/operators/every":"node_modules/rxjs/dist/esm5/internal/operators/every.js","./internal/operators/exhaust":"node_modules/rxjs/dist/esm5/internal/operators/exhaust.js","./internal/operators/exhaustAll":"node_modules/rxjs/dist/esm5/internal/operators/exhaustAll.js","./internal/operators/exhaustMap":"node_modules/rxjs/dist/esm5/internal/operators/exhaustMap.js","./internal/operators/expand":"node_modules/rxjs/dist/esm5/internal/operators/expand.js","./internal/operators/filter":"node_modules/rxjs/dist/esm5/internal/operators/filter.js","./internal/operators/finalize":"node_modules/rxjs/dist/esm5/internal/operators/finalize.js","./internal/operators/find":"node_modules/rxjs/dist/esm5/internal/operators/find.js","./internal/operators/findIndex":"node_modules/rxjs/dist/esm5/internal/operators/findIndex.js","./internal/operators/first":"node_modules/rxjs/dist/esm5/internal/operators/first.js","./internal/operators/groupBy":"node_modules/rxjs/dist/esm5/internal/operators/groupBy.js","./internal/operators/ignoreElements":"node_modules/rxjs/dist/esm5/internal/operators/ignoreElements.js","./internal/operators/isEmpty":"node_modules/rxjs/dist/esm5/internal/operators/isEmpty.js","./internal/operators/last":"node_modules/rxjs/dist/esm5/internal/operators/last.js","./internal/operators/map":"node_modules/rxjs/dist/esm5/internal/operators/map.js","./internal/operators/mapTo":"node_modules/rxjs/dist/esm5/internal/operators/mapTo.js","./internal/operators/materialize":"node_modules/rxjs/dist/esm5/internal/operators/materialize.js","./internal/operators/max":"node_modules/rxjs/dist/esm5/internal/operators/max.js","./internal/operators/mergeAll":"node_modules/rxjs/dist/esm5/internal/operators/mergeAll.js","./internal/operators/flatMap":"node_modules/rxjs/dist/esm5/internal/operators/flatMap.js","./internal/operators/mergeMap":"node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js","./internal/operators/mergeMapTo":"node_modules/rxjs/dist/esm5/internal/operators/mergeMapTo.js","./internal/operators/mergeScan":"node_modules/rxjs/dist/esm5/internal/operators/mergeScan.js","./internal/operators/mergeWith":"node_modules/rxjs/dist/esm5/internal/operators/mergeWith.js","./internal/operators/min":"node_modules/rxjs/dist/esm5/internal/operators/min.js","./internal/operators/multicast":"node_modules/rxjs/dist/esm5/internal/operators/multicast.js","./internal/operators/observeOn":"node_modules/rxjs/dist/esm5/internal/operators/observeOn.js","./internal/operators/pairwise":"node_modules/rxjs/dist/esm5/internal/operators/pairwise.js","./internal/operators/pluck":"node_modules/rxjs/dist/esm5/internal/operators/pluck.js","./internal/operators/publish":"node_modules/rxjs/dist/esm5/internal/operators/publish.js","./internal/operators/publishBehavior":"node_modules/rxjs/dist/esm5/internal/operators/publishBehavior.js","./internal/operators/publishLast":"node_modules/rxjs/dist/esm5/internal/operators/publishLast.js","./internal/operators/publishReplay":"node_modules/rxjs/dist/esm5/internal/operators/publishReplay.js","./internal/operators/raceWith":"node_modules/rxjs/dist/esm5/internal/operators/raceWith.js","./internal/operators/reduce":"node_modules/rxjs/dist/esm5/internal/operators/reduce.js","./internal/operators/repeat":"node_modules/rxjs/dist/esm5/internal/operators/repeat.js","./internal/operators/repeatWhen":"node_modules/rxjs/dist/esm5/internal/operators/repeatWhen.js","./internal/operators/retry":"node_modules/rxjs/dist/esm5/internal/operators/retry.js","./internal/operators/retryWhen":"node_modules/rxjs/dist/esm5/internal/operators/retryWhen.js","./internal/operators/refCount":"node_modules/rxjs/dist/esm5/internal/operators/refCount.js","./internal/operators/sample":"node_modules/rxjs/dist/esm5/internal/operators/sample.js","./internal/operators/sampleTime":"node_modules/rxjs/dist/esm5/internal/operators/sampleTime.js","./internal/operators/scan":"node_modules/rxjs/dist/esm5/internal/operators/scan.js","./internal/operators/sequenceEqual":"node_modules/rxjs/dist/esm5/internal/operators/sequenceEqual.js","./internal/operators/share":"node_modules/rxjs/dist/esm5/internal/operators/share.js","./internal/operators/shareReplay":"node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js","./internal/operators/single":"node_modules/rxjs/dist/esm5/internal/operators/single.js","./internal/operators/skip":"node_modules/rxjs/dist/esm5/internal/operators/skip.js","./internal/operators/skipLast":"node_modules/rxjs/dist/esm5/internal/operators/skipLast.js","./internal/operators/skipUntil":"node_modules/rxjs/dist/esm5/internal/operators/skipUntil.js","./internal/operators/skipWhile":"node_modules/rxjs/dist/esm5/internal/operators/skipWhile.js","./internal/operators/startWith":"node_modules/rxjs/dist/esm5/internal/operators/startWith.js","./internal/operators/subscribeOn":"node_modules/rxjs/dist/esm5/internal/operators/subscribeOn.js","./internal/operators/switchAll":"node_modules/rxjs/dist/esm5/internal/operators/switchAll.js","./internal/operators/switchMap":"node_modules/rxjs/dist/esm5/internal/operators/switchMap.js","./internal/operators/switchMapTo":"node_modules/rxjs/dist/esm5/internal/operators/switchMapTo.js","./internal/operators/switchScan":"node_modules/rxjs/dist/esm5/internal/operators/switchScan.js","./internal/operators/take":"node_modules/rxjs/dist/esm5/internal/operators/take.js","./internal/operators/takeLast":"node_modules/rxjs/dist/esm5/internal/operators/takeLast.js","./internal/operators/takeUntil":"node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js","./internal/operators/takeWhile":"node_modules/rxjs/dist/esm5/internal/operators/takeWhile.js","./internal/operators/tap":"node_modules/rxjs/dist/esm5/internal/operators/tap.js","./internal/operators/throttle":"node_modules/rxjs/dist/esm5/internal/operators/throttle.js","./internal/operators/throttleTime":"node_modules/rxjs/dist/esm5/internal/operators/throttleTime.js","./internal/operators/throwIfEmpty":"node_modules/rxjs/dist/esm5/internal/operators/throwIfEmpty.js","./internal/operators/timeInterval":"node_modules/rxjs/dist/esm5/internal/operators/timeInterval.js","./internal/operators/timeoutWith":"node_modules/rxjs/dist/esm5/internal/operators/timeoutWith.js","./internal/operators/timestamp":"node_modules/rxjs/dist/esm5/internal/operators/timestamp.js","./internal/operators/toArray":"node_modules/rxjs/dist/esm5/internal/operators/toArray.js","./internal/operators/window":"node_modules/rxjs/dist/esm5/internal/operators/window.js","./internal/operators/windowCount":"node_modules/rxjs/dist/esm5/internal/operators/windowCount.js","./internal/operators/windowTime":"node_modules/rxjs/dist/esm5/internal/operators/windowTime.js","./internal/operators/windowToggle":"node_modules/rxjs/dist/esm5/internal/operators/windowToggle.js","./internal/operators/windowWhen":"node_modules/rxjs/dist/esm5/internal/operators/windowWhen.js","./internal/operators/withLatestFrom":"node_modules/rxjs/dist/esm5/internal/operators/withLatestFrom.js","./internal/operators/zipAll":"node_modules/rxjs/dist/esm5/internal/operators/zipAll.js","./internal/operators/zipWith":"node_modules/rxjs/dist/esm5/internal/operators/zipWith.js"}],"node_modules/@polkadot/api-derive/detectOther.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Empty template, auto-generated by @polkadot/dev
var _default = [];
exports.default = _default;
},{}],"node_modules/@polkadot/api-derive/detectPackage.js":[function(require,module,exports) {
"use strict";

var _util = require("@polkadot/util");

var _detectOther = _interopRequireDefault(require("./detectOther.js"));

var _packageInfo = require("./packageInfo.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
(0, _util.detectPackage)(_packageInfo.packageInfo, null, _detectOther.default);
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./detectOther.js":"node_modules/@polkadot/api-derive/detectOther.js","./packageInfo.js":"node_modules/@polkadot/api-derive/packageInfo.js"}],"node_modules/@polkadot/rpc-core/detectOther.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _packageInfo = require("@polkadot/rpc-provider/packageInfo");

var _packageInfo2 = require("@polkadot/types/packageInfo");

// Copyright 2017-2022 @polkadot/rpc-core authors & contributors
// SPDX-License-Identifier: Apache-2.0
var _default = [_packageInfo.packageInfo, _packageInfo2.packageInfo];
exports.default = _default;
},{"@polkadot/rpc-provider/packageInfo":"node_modules/@polkadot/rpc-provider/packageInfo.js","@polkadot/types/packageInfo":"node_modules/@polkadot/types/packageInfo.js"}],"node_modules/@polkadot/rpc-core/detectPackage.js":[function(require,module,exports) {
"use strict";

var _util = require("@polkadot/util");

var _detectOther = _interopRequireDefault(require("./detectOther.js"));

var _packageInfo = require("./packageInfo.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/rpc-core authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
(0, _util.detectPackage)(_packageInfo.packageInfo, null, _detectOther.default);
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./detectOther.js":"node_modules/@polkadot/rpc-core/detectOther.js","./packageInfo.js":"node_modules/@polkadot/rpc-core/packageInfo.js"}],"node_modules/@polkadot/types-codec/packageInfo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packageInfo = void 0;
// Copyright 2017-2022 @polkadot/types-codec authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
var packageInfo = {
  name: '@polkadot/types-codec',
  path: import.meta && import.meta.url ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto',
  type: 'esm',
  version: '8.11.2'
};
exports.packageInfo = packageInfo;
},{}],"node_modules/@polkadot/types-create/packageInfo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packageInfo = void 0;
// Copyright 2017-2022 @polkadot/types-create authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
var packageInfo = {
  name: '@polkadot/types-create',
  path: import.meta && import.meta.url ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto',
  type: 'esm',
  version: '8.11.2'
};
exports.packageInfo = packageInfo;
},{}],"node_modules/@polkadot/types/detectOther.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _packageInfo = require("@polkadot/types-codec/packageInfo");

var _packageInfo2 = require("@polkadot/types-create/packageInfo");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var _default = [_packageInfo.packageInfo, _packageInfo2.packageInfo];
exports.default = _default;
},{"@polkadot/types-codec/packageInfo":"node_modules/@polkadot/types-codec/packageInfo.js","@polkadot/types-create/packageInfo":"node_modules/@polkadot/types-create/packageInfo.js"}],"node_modules/@polkadot/types/detectPackage.js":[function(require,module,exports) {
"use strict";

var _util = require("@polkadot/util");

var _detectOther = _interopRequireDefault(require("./detectOther.js"));

var _packageInfo = require("./packageInfo.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
(0, _util.detectPackage)(_packageInfo.packageInfo, null, _detectOther.default);
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./detectOther.js":"node_modules/@polkadot/types/detectOther.js","./packageInfo.js":"node_modules/@polkadot/types/packageInfo.js"}],"node_modules/@polkadot/types/interfaces/metadata/hashers.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AllHashers = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var AllHashers = {
  Blake2_128: null,
  // eslint-disable-line camelcase
  Blake2_256: null,
  // eslint-disable-line camelcase
  Blake2_128Concat: null,
  // eslint-disable-line camelcase
  Twox128: null,
  Twox256: null,
  Twox64Concat: null,
  // new in v11
  Identity: null
};
exports.AllHashers = AllHashers;
},{}],"node_modules/@polkadot/types/interfaces/metadata/runtime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.runtime = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var runtime = {
  Metadata: [{
    methods: {
      metadata: {
        description: 'Returns the metadata of a runtime',
        params: [],
        type: 'OpaqueMetadata'
      }
    },
    version: 1
  }]
};
exports.runtime = runtime;
},{}],"node_modules/@polkadot/types/interfaces/metadata/v9.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.v9 = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var v9 = {
  // v9
  ErrorMetadataV9: {
    name: 'Text',
    docs: 'Vec<Text>'
  },
  EventMetadataV9: {
    name: 'Text',
    args: 'Vec<Type>',
    docs: 'Vec<Text>'
  },
  FunctionArgumentMetadataV9: {
    name: 'Text',
    type: 'Type'
  },
  FunctionMetadataV9: {
    name: 'Text',
    args: 'Vec<FunctionArgumentMetadataV9>',
    docs: 'Vec<Text>'
  },
  MetadataV9: {
    modules: 'Vec<ModuleMetadataV9>'
  },
  ModuleConstantMetadataV9: {
    name: 'Text',
    type: 'Type',
    value: 'Bytes',
    docs: 'Vec<Text>'
  },
  ModuleMetadataV9: {
    name: 'Text',
    storage: 'Option<StorageMetadataV9>',
    calls: 'Option<Vec<FunctionMetadataV9>>',
    events: 'Option<Vec<EventMetadataV9>>',
    constants: 'Vec<ModuleConstantMetadataV9>',
    errors: 'Vec<ErrorMetadataV9>'
  },
  StorageEntryMetadataV9: {
    name: 'Text',
    modifier: 'StorageEntryModifierV9',
    type: 'StorageEntryTypeV9',
    fallback: 'Bytes',
    docs: 'Vec<Text>'
  },
  StorageEntryModifierV9: {
    _enum: ['Optional', 'Default', 'Required']
  },
  StorageEntryTypeV9: {
    _enum: {
      Plain: 'Type',
      Map: {
        hasher: 'StorageHasherV9',
        key: 'Type',
        value: 'Type',
        linked: 'bool'
      },
      DoubleMap: {
        hasher: 'StorageHasherV9',
        key1: 'Type',
        key2: 'Type',
        value: 'Type',
        key2Hasher: 'StorageHasherV9'
      }
    }
  },
  StorageHasherV9: {
    _enum: {
      Blake2_128: null,
      // eslint-disable-line camelcase
      Blake2_256: null,
      // eslint-disable-line camelcase
      Twox128: null,
      Twox256: null,
      Twox64Concat: null
    }
  },
  StorageMetadataV9: {
    prefix: 'Text',
    items: 'Vec<StorageEntryMetadataV9>'
  }
};
exports.v9 = v9;
},{}],"node_modules/@polkadot/types/interfaces/metadata/v10.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.v10 = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var v10 = {
  // v10
  ErrorMetadataV10: 'ErrorMetadataV9',
  EventMetadataV10: 'EventMetadataV9',
  FunctionArgumentMetadataV10: 'FunctionArgumentMetadataV9',
  FunctionMetadataV10: 'FunctionMetadataV9',
  MetadataV10: {
    modules: 'Vec<ModuleMetadataV10>'
  },
  ModuleConstantMetadataV10: 'ModuleConstantMetadataV9',
  ModuleMetadataV10: {
    name: 'Text',
    storage: 'Option<StorageMetadataV10>',
    calls: 'Option<Vec<FunctionMetadataV10>>',
    events: 'Option<Vec<EventMetadataV10>>',
    constants: 'Vec<ModuleConstantMetadataV10>',
    errors: 'Vec<ErrorMetadataV10>'
  },
  StorageEntryModifierV10: 'StorageEntryModifierV9',
  StorageEntryMetadataV10: {
    name: 'Text',
    modifier: 'StorageEntryModifierV10',
    type: 'StorageEntryTypeV10',
    fallback: 'Bytes',
    docs: 'Vec<Text>'
  },
  StorageEntryTypeV10: {
    _enum: {
      Plain: 'Type',
      Map: {
        hasher: 'StorageHasherV10',
        key: 'Type',
        value: 'Type',
        linked: 'bool'
      },
      DoubleMap: {
        hasher: 'StorageHasherV10',
        key1: 'Type',
        key2: 'Type',
        value: 'Type',
        key2Hasher: 'StorageHasherV10'
      }
    }
  },
  StorageMetadataV10: {
    prefix: 'Text',
    items: 'Vec<StorageEntryMetadataV10>'
  },
  StorageHasherV10: {
    _enum: {
      Blake2_128: null,
      // eslint-disable-line camelcase
      Blake2_256: null,
      // eslint-disable-line camelcase
      Blake2_128Concat: null,
      // eslint-disable-line camelcase
      Twox128: null,
      Twox256: null,
      Twox64Concat: null
    }
  }
};
exports.v10 = v10;
},{}],"node_modules/@polkadot/types/interfaces/metadata/v11.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.v11 = void 0;

var _hashers = require("./hashers.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var v11 = {
  // v11
  ErrorMetadataV11: 'ErrorMetadataV10',
  EventMetadataV11: 'EventMetadataV10',
  ExtrinsicMetadataV11: {
    version: 'u8',
    signedExtensions: 'Vec<Text>'
  },
  FunctionArgumentMetadataV11: 'FunctionArgumentMetadataV10',
  FunctionMetadataV11: 'FunctionMetadataV10',
  MetadataV11: {
    modules: 'Vec<ModuleMetadataV11>',
    extrinsic: 'ExtrinsicMetadataV11'
  },
  ModuleConstantMetadataV11: 'ModuleConstantMetadataV10',
  ModuleMetadataV11: {
    name: 'Text',
    storage: 'Option<StorageMetadataV11>',
    calls: 'Option<Vec<FunctionMetadataV11>>',
    events: 'Option<Vec<EventMetadataV11>>',
    constants: 'Vec<ModuleConstantMetadataV11>',
    errors: 'Vec<ErrorMetadataV11>'
  },
  StorageEntryModifierV11: 'StorageEntryModifierV10',
  StorageEntryMetadataV11: {
    name: 'Text',
    modifier: 'StorageEntryModifierV11',
    type: 'StorageEntryTypeV11',
    fallback: 'Bytes',
    docs: 'Vec<Text>'
  },
  StorageEntryTypeV11: {
    _enum: {
      Plain: 'Type',
      Map: {
        hasher: 'StorageHasherV11',
        key: 'Type',
        value: 'Type',
        linked: 'bool'
      },
      DoubleMap: {
        hasher: 'StorageHasherV11',
        key1: 'Type',
        key2: 'Type',
        value: 'Type',
        key2Hasher: 'StorageHasherV11'
      }
    }
  },
  StorageMetadataV11: {
    prefix: 'Text',
    items: 'Vec<StorageEntryMetadataV11>'
  },
  StorageHasherV11: {
    _enum: _hashers.AllHashers
  }
};
exports.v11 = v11;
},{"./hashers.js":"node_modules/@polkadot/types/interfaces/metadata/hashers.js"}],"node_modules/@polkadot/types/interfaces/metadata/v12.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.v12 = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var v12 = {
  // v12
  ErrorMetadataV12: 'ErrorMetadataV11',
  EventMetadataV12: 'EventMetadataV11',
  ExtrinsicMetadataV12: 'ExtrinsicMetadataV11',
  FunctionArgumentMetadataV12: 'FunctionArgumentMetadataV11',
  FunctionMetadataV12: 'FunctionMetadataV11',
  MetadataV12: {
    modules: 'Vec<ModuleMetadataV12>',
    extrinsic: 'ExtrinsicMetadataV12'
  },
  ModuleConstantMetadataV12: 'ModuleConstantMetadataV11',
  ModuleMetadataV12: {
    name: 'Text',
    storage: 'Option<StorageMetadataV12>',
    calls: 'Option<Vec<FunctionMetadataV12>>',
    events: 'Option<Vec<EventMetadataV12>>',
    constants: 'Vec<ModuleConstantMetadataV12>',
    errors: 'Vec<ErrorMetadataV12>',
    index: 'u8'
  },
  StorageEntryModifierV12: 'StorageEntryModifierV11',
  StorageEntryMetadataV12: 'StorageEntryMetadataV11',
  StorageEntryTypeV12: 'StorageEntryTypeV11',
  StorageMetadataV12: 'StorageMetadataV11',
  StorageHasherV12: 'StorageHasherV11'
};
exports.v12 = v12;
},{}],"node_modules/@polkadot/types/interfaces/metadata/v13.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.v13 = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var v13 = {
  // v13
  ErrorMetadataV13: 'ErrorMetadataV12',
  EventMetadataV13: 'EventMetadataV12',
  ExtrinsicMetadataV13: 'ExtrinsicMetadataV12',
  FunctionArgumentMetadataV13: 'FunctionArgumentMetadataV12',
  FunctionMetadataV13: 'FunctionMetadataV12',
  MetadataV13: {
    modules: 'Vec<ModuleMetadataV13>',
    extrinsic: 'ExtrinsicMetadataV13'
  },
  ModuleConstantMetadataV13: 'ModuleConstantMetadataV12',
  ModuleMetadataV13: {
    name: 'Text',
    storage: 'Option<StorageMetadataV13>',
    calls: 'Option<Vec<FunctionMetadataV13>>',
    events: 'Option<Vec<EventMetadataV13>>',
    constants: 'Vec<ModuleConstantMetadataV13>',
    errors: 'Vec<ErrorMetadataV13>',
    index: 'u8'
  },
  StorageEntryModifierV13: 'StorageEntryModifierV12',
  StorageEntryMetadataV13: {
    name: 'Text',
    modifier: 'StorageEntryModifierV13',
    type: 'StorageEntryTypeV13',
    fallback: 'Bytes',
    docs: 'Vec<Text>'
  },
  StorageEntryTypeV13: {
    _enum: {
      Plain: 'Type',
      Map: {
        hasher: 'StorageHasherV13',
        key: 'Type',
        value: 'Type',
        linked: 'bool'
      },
      DoubleMap: {
        hasher: 'StorageHasherV13',
        key1: 'Type',
        key2: 'Type',
        value: 'Type',
        key2Hasher: 'StorageHasherV13'
      },
      NMap: {
        keyVec: 'Vec<Type>',
        hashers: 'Vec<StorageHasherV13>',
        value: 'Type'
      }
    }
  },
  StorageMetadataV13: {
    prefix: 'Text',
    items: 'Vec<StorageEntryMetadataV13>'
  },
  StorageHasherV13: 'StorageHasherV12'
};
exports.v13 = v13;
},{}],"node_modules/@polkadot/types/interfaces/scaleInfo/v1.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.v1 = exports.Si1Variant = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var Si1Variant = {
  name: 'Text',
  fields: 'Vec<Si1Field>',
  index: 'u8',
  docs: 'Vec<Text>'
};
exports.Si1Variant = Si1Variant;
var v1 = {
  Si1Field: {
    name: 'Option<Text>',
    type: 'Si1LookupTypeId',
    typeName: 'Option<Text>',
    docs: 'Vec<Text>'
  },
  Si1LookupTypeId: 'Compact<u32>',
  Si1Path: 'Si0Path',
  Si1Type: {
    path: 'Si1Path',
    params: 'Vec<Si1TypeParameter>',
    def: 'Si1TypeDef',
    docs: 'Vec<Text>'
  },
  Si1TypeDef: {
    _enum: {
      Composite: 'Si1TypeDefComposite',
      Variant: 'Si1TypeDefVariant',
      Sequence: 'Si1TypeDefSequence',
      Array: 'Si1TypeDefArray',
      Tuple: 'Si1TypeDefTuple',
      Primitive: 'Si1TypeDefPrimitive',
      Compact: 'Si1TypeDefCompact',
      BitSequence: 'Si1TypeDefBitSequence',
      // NOTE: This is specific to the implementation for pre-v14 metadata
      // compatibility (always keep this as the last entry in the enum)
      HistoricMetaCompat: 'Type'
    }
  },
  Si1TypeDefArray: {
    len: 'u32',
    type: 'Si1LookupTypeId'
  },
  Si1TypeDefBitSequence: {
    bitStoreType: 'Si1LookupTypeId',
    bitOrderType: 'Si1LookupTypeId'
  },
  Si1TypeDefCompact: {
    type: 'Si1LookupTypeId'
  },
  Si1TypeDefComposite: {
    fields: 'Vec<Si1Field>'
  },
  Si1TypeDefPrimitive: 'Si0TypeDefPrimitive',
  Si1TypeDefSequence: {
    type: 'Si1LookupTypeId'
  },
  Si1TypeDefTuple: 'Vec<Si1LookupTypeId>',
  Si1TypeParameter: {
    name: 'Text',
    type: 'Option<Si1LookupTypeId>'
  },
  Si1TypeDefVariant: {
    variants: 'Vec<Si1Variant>'
  },
  Si1Variant: Si1Variant
};
exports.v1 = v1;
},{}],"node_modules/@polkadot/types/interfaces/metadata/v14.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.v14 = void 0;

var _util = require("@polkadot/util");

var _v = require("../scaleInfo/v1.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var v14 = {
  // registry
  PortableTypeV14: {
    id: 'Si1LookupTypeId',
    type: 'Si1Type'
  },
  // compatibility with earlier layouts, i.e. don't break previous users
  ErrorMetadataV14: (0, _util.objectSpread)({}, _v.Si1Variant, {
    args: 'Vec<Type>'
  }),
  EventMetadataV14: (0, _util.objectSpread)({}, _v.Si1Variant, {
    args: 'Vec<Type>'
  }),
  FunctionArgumentMetadataV14: {
    name: 'Text',
    type: 'Type',
    typeName: 'Option<Type>'
  },
  FunctionMetadataV14: (0, _util.objectSpread)({}, _v.Si1Variant, {
    args: 'Vec<FunctionArgumentMetadataV14>'
  }),
  // V14
  ExtrinsicMetadataV14: {
    type: 'SiLookupTypeId',
    version: 'u8',
    signedExtensions: 'Vec<SignedExtensionMetadataV14>'
  },
  MetadataV14: {
    lookup: 'PortableRegistry',
    pallets: 'Vec<PalletMetadataV14>',
    extrinsic: 'ExtrinsicMetadataV14',
    type: 'SiLookupTypeId'
  },
  PalletCallMetadataV14: {
    type: 'SiLookupTypeId'
  },
  PalletConstantMetadataV14: {
    name: 'Text',
    type: 'SiLookupTypeId',
    value: 'Bytes',
    docs: 'Vec<Text>'
  },
  PalletErrorMetadataV14: {
    type: 'SiLookupTypeId'
  },
  PalletEventMetadataV14: {
    type: 'SiLookupTypeId'
  },
  PalletMetadataV14: {
    name: 'Text',
    storage: 'Option<PalletStorageMetadataV14>',
    calls: 'Option<PalletCallMetadataV14>',
    events: 'Option<PalletEventMetadataV14>',
    constants: 'Vec<PalletConstantMetadataV14>',
    errors: 'Option<PalletErrorMetadataV14>',
    index: 'u8'
  },
  PalletStorageMetadataV14: {
    prefix: 'Text',
    // NOTE: Renamed from entries
    items: 'Vec<StorageEntryMetadataV14>'
  },
  SignedExtensionMetadataV14: {
    identifier: 'Text',
    type: 'SiLookupTypeId',
    additionalSigned: 'SiLookupTypeId'
  },
  StorageEntryMetadataV14: {
    name: 'Text',
    modifier: 'StorageEntryModifierV14',
    type: 'StorageEntryTypeV14',
    fallback: 'Bytes',
    docs: 'Vec<Text>'
  },
  StorageEntryModifierV14: 'StorageEntryModifierV13',
  StorageEntryTypeV14: {
    _enum: {
      Plain: 'SiLookupTypeId',
      Map: {
        hashers: 'Vec<StorageHasherV14>',
        key: 'SiLookupTypeId',
        // NOTE: Renamed from "keys"
        value: 'SiLookupTypeId'
      }
    }
  },
  StorageHasherV14: 'StorageHasherV13'
};
exports.v14 = v14;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../scaleInfo/v1.js":"node_modules/@polkadot/types/interfaces/scaleInfo/v1.js"}],"node_modules/@polkadot/types/interfaces/metadata/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "AllHashers", {
  enumerable: true,
  get: function () {
    return _hashers.AllHashers;
  }
});
exports.default = void 0;

var _util = require("@polkadot/util");

var _hashers = require("./hashers.js");

var _runtime = require("./runtime.js");

var _v = require("./v9.js");

var _v2 = require("./v10.js");

var _v3 = require("./v11.js");

var _v4 = require("./v12.js");

var _v5 = require("./v13.js");

var _v6 = require("./v14.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  runtime: _runtime.runtime,
  types: (0, _util.objectSpread)({}, _v.v9, _v2.v10, _v3.v11, _v4.v12, _v5.v13, _v6.v14, {
    // latest mappings
    ErrorMetadataLatest: 'ErrorMetadataV14',
    EventMetadataLatest: 'EventMetadataV14',
    ExtrinsicMetadataLatest: 'ExtrinsicMetadataV14',
    FunctionArgumentMetadataLatest: 'FunctionArgumentMetadataV14',
    FunctionMetadataLatest: 'FunctionMetadataV14',
    MetadataLatest: 'MetadataV14',
    PalletCallMetadataLatest: 'PalletCallMetadataV14',
    PalletConstantMetadataLatest: 'PalletConstantMetadataV14',
    PalletErrorMetadataLatest: 'PalletErrorMetadataV14',
    PalletEventMetadataLatest: 'PalletEventMetadataV14',
    PalletMetadataLatest: 'PalletMetadataV14',
    PalletStorageMetadataLatest: 'PalletStorageMetadataV14',
    PortableType: 'PortableTypeV14',
    SignedExtensionMetadataLatest: 'SignedExtensionMetadataV14',
    StorageEntryMetadataLatest: 'StorageEntryMetadataV14',
    StorageEntryModifierLatest: 'StorageEntryModifierV14',
    StorageEntryTypeLatest: 'StorageEntryTypeV14',
    StorageHasher: 'StorageHasherV14',
    // additional types
    OpaqueMetadata: 'Bytes',
    // the enum containing all the mappings
    MetadataAll: {
      _enum: {
        V0: 'DoNotConstruct<MetadataV0>',
        V1: 'DoNotConstruct<MetadataV1>',
        V2: 'DoNotConstruct<MetadataV2>',
        V3: 'DoNotConstruct<MetadataV3>',
        V4: 'DoNotConstruct<MetadataV4>',
        V5: 'DoNotConstruct<MetadataV5>',
        V6: 'DoNotConstruct<MetadataV6>',
        V7: 'DoNotConstruct<MetadataV7>',
        V8: 'DoNotConstruct<MetadataV8>',
        // First version on Kusama in V9, dropping will be problematic
        V9: 'MetadataV9',
        V10: 'MetadataV10',
        V11: 'MetadataV11',
        V12: 'MetadataV12',
        V13: 'MetadataV13',
        V14: 'MetadataV14'
      }
    }
  })
};
exports.default = _default;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./hashers.js":"node_modules/@polkadot/types/interfaces/metadata/hashers.js","./runtime.js":"node_modules/@polkadot/types/interfaces/metadata/runtime.js","./v9.js":"node_modules/@polkadot/types/interfaces/metadata/v9.js","./v10.js":"node_modules/@polkadot/types/interfaces/metadata/v10.js","./v11.js":"node_modules/@polkadot/types/interfaces/metadata/v11.js","./v12.js":"node_modules/@polkadot/types/interfaces/metadata/v12.js","./v13.js":"node_modules/@polkadot/types/interfaces/metadata/v13.js","./v14.js":"node_modules/@polkadot/types/interfaces/metadata/v14.js"}],"node_modules/@polkadot/types/interfaces/runtime/runtime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.runtime = void 0;

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var CORE_V1_TO_V4 = {
  execute_block: {
    description: 'Execute the given block.',
    params: [{
      name: 'block',
      type: 'Block'
    }],
    type: 'Null'
  }
};
var CORE_V1_TO_V2 = {
  version: {
    description: 'Returns the version of the runtime.',
    params: [],
    type: 'RuntimeVersionPre3'
  }
};
var CORE_V2_TO_V4 = {
  initialize_block: {
    description: 'Initialize a block with the given header.',
    params: [{
      name: 'header',
      type: 'Header'
    }],
    type: 'Null'
  }
};
var runtime = {
  Core: [{
    methods: (0, _util.objectSpread)({
      version: {
        description: 'Returns the version of the runtime.',
        params: [],
        type: 'RuntimeVersion'
      }
    }, CORE_V1_TO_V4, CORE_V2_TO_V4),
    version: 4
  }, {
    methods: (0, _util.objectSpread)({
      version: {
        description: 'Returns the version of the runtime.',
        params: [],
        type: 'RuntimeVersionPre4'
      }
    }, CORE_V1_TO_V4, CORE_V2_TO_V4),
    version: 3
  }, {
    methods: (0, _util.objectSpread)({}, CORE_V1_TO_V2, CORE_V1_TO_V4, CORE_V2_TO_V4),
    version: 2
  }, {
    methods: (0, _util.objectSpread)({
      initialise_block: {
        description: 'Initialize a block with the given header.',
        params: [{
          name: 'header',
          type: 'Header'
        }],
        type: 'Null'
      }
    }, CORE_V1_TO_V2, CORE_V1_TO_V4),
    version: 1
  }],
  TryRuntime: [{
    methods: {
      execute_block_no_check: {
        description: "Execute the given block, but don't check that its state root matches that of yours.",
        params: [{
          name: 'block',
          type: 'Block'
        }],
        type: 'Weight'
      },
      on_runtime_upgrade: {
        description: 'dry-run runtime upgrades, returning the total weight consumed.',
        params: [],
        type: '(Weight, Weight)'
      }
    },
    version: 1
  }]
};
exports.runtime = runtime;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types/interfaces/runtime/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.knownOrigins = exports.default = void 0;

var _util = require("@polkadot/util");

var _runtime = require("./runtime.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var numberTypes = {
  Fixed64: 'Int<64, Fixed64>',
  FixedI64: 'Int<64, FixedI64>',
  FixedU64: 'UInt<64, FixedU64>',
  Fixed128: 'Int<128, Fixed128>',
  FixedI128: 'Int<128, FixedI128>',
  FixedU128: 'UInt<128, FixedU128>',
  I32F32: 'Int<64, I32F32>',
  U32F32: 'UInt<64, U32F32>',
  PerU16: 'UInt<16, PerU16>',
  Perbill: 'UInt<32, Perbill>',
  Percent: 'UInt<8, Percent>',
  Permill: 'UInt<32, Permill>',
  Perquintill: 'UInt<64, Perquintill>'
}; // Since we don't have insight into the origin specification, we can only define what we know about
// in a pure Substrate/Polkadot implementation, any other custom origins won't be handled at all

var knownOrigins = {
  //
  // (1) Defaults from Substrate
  //
  Council: 'CollectiveOrigin',
  System: 'SystemOrigin',
  TechnicalCommittee: 'CollectiveOrigin',
  //
  // (2) Defaults from Polkadot
  //
  Xcm: 'XcmOrigin',
  XcmPallet: 'XcmOrigin',
  //
  // (3) Defaults from Acala
  //
  Authority: 'AuthorityOrigin',
  GeneralCouncil: 'CollectiveOrigin'
};
exports.knownOrigins = knownOrigins;
var _default = {
  rpc: {},
  runtime: _runtime.runtime,
  types: (0, _util.objectSpread)({}, numberTypes, {
    AccountId: 'AccountId32',
    AccountId20: 'GenericEthereumAccountId',
    AccountId32: 'GenericAccountId',
    AccountIdOf: 'AccountId',
    AccountIndex: 'GenericAccountIndex',
    Address: 'MultiAddress',
    AssetId: 'u32',
    Balance: 'UInt<128, Balance>',
    BalanceOf: 'Balance',
    Block: 'GenericBlock',
    BlockNumber: 'u32',
    BlockNumberFor: 'BlockNumber',
    BlockNumberOf: 'BlockNumber',
    Call: 'GenericCall',
    CallHash: 'Hash',
    CallHashOf: 'CallHash',
    ChangesTrieConfiguration: {
      digestInterval: 'u32',
      digestLevels: 'u32'
    },
    ChangesTrieSignal: {
      _enum: {
        NewConfiguration: 'Option<ChangesTrieConfiguration>'
      }
    },
    ConsensusEngineId: 'GenericConsensusEngineId',
    CodecHash: 'Hash',
    CrateVersion: {
      major: 'u16',
      minor: 'u8',
      patch: 'u8'
    },
    Digest: {
      logs: 'Vec<DigestItem>'
    },
    DigestItem: {
      _enum: {
        Other: 'Bytes',
        // 0
        AuthoritiesChange: 'Vec<AuthorityId>',
        // 1
        ChangesTrieRoot: 'Hash',
        // 2
        SealV0: 'SealV0',
        // 3
        Consensus: 'Consensus',
        // 4
        Seal: 'Seal',
        // 5
        PreRuntime: 'PreRuntime',
        // 6
        ChangesTrieSignal: 'ChangesTrieSignal',
        // 7
        RuntimeEnvironmentUpdated: 'Null' // 8

      }
    },
    ExtrinsicsWeight: {
      normal: 'Weight',
      operational: 'Weight'
    },
    H32: '[u8; 4; H32]',
    H64: '[u8; 8; H64]',
    H128: '[u8; 16; H128]',
    H160: '[u8; 20; H160]',
    H256: '[u8; 32; H256]',
    H512: '[u8; 64; H512]',
    H1024: '[u8; 128; H1024]',
    H2048: '[u8; 256; H2048]',
    Hash: 'H256',
    Header: {
      parentHash: 'Hash',
      number: 'Compact<BlockNumber>',
      stateRoot: 'Hash',
      extrinsicsRoot: 'Hash',
      digest: 'Digest'
    },
    HeaderPartial: {
      parentHash: 'Hash',
      // since we only parse JSON with this, having non-compact works
      number: 'BlockNumber'
    },
    IndicesLookupSource: 'GenericLookupSource',
    Index: 'u32',
    Justification: '(ConsensusEngineId, EncodedJustification)',
    EncodedJustification: 'Bytes',
    Justifications: 'Vec<Justification>',
    KeyValue: '(StorageKey, StorageData)',
    KeyTypeId: 'u32',
    LockIdentifier: '[u8; 8]',
    LookupSource: 'MultiAddress',
    LookupTarget: 'AccountId',
    ModuleId: 'LockIdentifier',
    MultiAddress: 'GenericMultiAddress',
    MultiSigner: {
      _enum: {
        Ed25519: '[u8; 32]',
        Sr25519: '[u8; 32]',
        Ecdsa: '[u8; 33]'
      }
    },
    Moment: 'UInt<64, Moment>',
    OpaqueCall: 'Bytes',
    Origin: 'DoNotConstruct<Origin>',
    OriginCaller: {
      _enum: {
        // this should be dynamically built from the actual modules, based on index
        System: 'SystemOrigin'
      }
    },
    PalletId: 'LockIdentifier',
    PalletsOrigin: 'OriginCaller',
    PalletVersion: {
      major: 'u16',
      minor: 'u8',
      patch: 'u8'
    },
    Pays: {
      _enum: ['Yes', 'No']
    },
    Phantom: 'Null',
    PhantomData: 'Null',
    Releases: {
      _enum: ['V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'V9', 'V10']
    },
    RuntimeDbWeight: {
      read: 'Weight',
      write: 'Weight'
    },
    SignedBlock: 'SignedBlockWithJustifications',
    SignedBlockWithJustification: {
      block: 'Block',
      justification: 'Option<EncodedJustification>'
    },
    SignedBlockWithJustifications: {
      block: 'Block',
      justifications: 'Option<Justifications>'
    },
    Slot: 'u64',
    SlotDuration: 'u64',
    StorageData: 'Bytes',
    StorageInfo: {
      palletName: 'Bytes',
      storage_name: 'Bytes',
      prefix: 'Bytes',
      maxValues: 'Option<u32>',
      maxSize: 'Option<u32>'
    },
    StorageProof: {
      trieNodes: 'Vec<Bytes>'
    },
    TransactionPriority: 'u64',
    TransactionLongevity: 'u64',
    TransactionTag: 'Bytes',
    TransactionInfo: {
      _alias: {
        dataSize: 'size'
      },
      chunkRoot: 'H256',
      contentHash: 'H256',
      dataSize: 'u32',
      blockChunks: 'u32'
    },
    TransactionStorageProof: {
      chunk: 'Vec<u8>',
      proof: 'Vec<Vec<u8>>'
    },
    ValidatorId: 'AccountId',
    ValidatorIdOf: 'ValidatorId',
    Weight: 'u64',
    WeightMultiplier: 'Fixed64',
    // digest
    PreRuntime: '(ConsensusEngineId, Bytes)',
    SealV0: '(u64, Signature)',
    Seal: '(ConsensusEngineId, Bytes)',
    Consensus: '(ConsensusEngineId, Bytes)'
  })
};
exports.default = _default;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./runtime.js":"node_modules/@polkadot/types/interfaces/runtime/runtime.js"}],"node_modules/@polkadot/types/interfaces/scaleInfo/v0.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.v0 = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var v0 = {
  Si0Field: {
    name: 'Option<Text>',
    type: 'Si0LookupTypeId',
    typeName: 'Option<Text>',
    docs: 'Vec<Text>'
  },
  Si0LookupTypeId: 'u32',
  Si0Path: 'Vec<Text>',
  Si0Type: {
    path: 'Si0Path',
    params: 'Vec<Si0LookupTypeId>',
    def: 'Si0TypeDef'
  },
  Si0TypeDef: {
    _enum: {
      Composite: 'Si0TypeDefComposite',
      Variant: 'Si0TypeDefVariant',
      Sequence: 'Si0TypeDefSequence',
      Array: 'Si0TypeDefArray',
      Tuple: 'Si0TypeDefTuple',
      Primitive: 'Si0TypeDefPrimitive',
      Compact: 'Si0TypeDefCompact',
      Phantom: 'Si0TypeDefPhantom',
      BitSequence: 'Si0TypeDefBitSequence'
    }
  },
  Si0TypeDefArray: {
    len: 'u32',
    type: 'Si0LookupTypeId'
  },
  Si0TypeDefBitSequence: {
    bitStoreType: 'Si0LookupTypeId',
    bitOrderType: 'Si0LookupTypeId'
  },
  Si0TypeDefCompact: {
    type: 'Si0LookupTypeId'
  },
  Si0TypeDefComposite: {
    fields: 'Vec<Si0Field>'
  },
  Si0TypeDefPhantom: 'Null',
  Si0TypeDefVariant: {
    variants: 'Vec<Si0Variant>'
  },
  Si0TypeDefPrimitive: {
    _enum: ['Bool', 'Char', 'Str', 'U8', 'U16', 'U32', 'U64', 'U128', 'U256', 'I8', 'I16', 'I32', 'I64', 'I128', 'I256']
  },
  Si0TypeDefSequence: {
    type: 'Si0LookupTypeId'
  },
  Si0TypeDefTuple: 'Vec<Si0LookupTypeId>',
  Si0TypeParameter: {
    name: 'Text',
    type: 'Option<Si0LookupTypeId>'
  },
  Si0Variant: {
    name: 'Text',
    fields: 'Vec<Si0Field>',
    index: 'Option<u8>',
    discriminant: 'Option<u64>',
    docs: 'Vec<Text>'
  }
};
exports.v0 = v0;
},{}],"node_modules/@polkadot/types/interfaces/scaleInfo/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _util = require("@polkadot/util");

var _v = require("./v0.js");

var _v2 = require("./v1.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: (0, _util.objectSpread)({}, _v.v0, _v2.v1, {
    // latest mappings
    SiField: 'Si1Field',
    SiLookupTypeId: 'Si1LookupTypeId',
    SiPath: 'Si1Path',
    SiType: 'Si1Type',
    SiTypeDef: 'Si1TypeDef',
    SiTypeDefArray: 'Si1TypeDefArray',
    SiTypeDefBitSequence: 'Si1TypeDefBitSequence',
    SiTypeDefCompact: 'Si1TypeDefCompact',
    SiTypeDefComposite: 'Si1TypeDefComposite',
    SiTypeDefPrimitive: 'Si1TypeDefPrimitive',
    SiTypeDefSequence: 'Si1TypeDefSequence',
    SiTypeDefTuple: 'Si1TypeDefTuple',
    SiTypeParameter: 'Si1TypeParameter',
    SiTypeDefVariant: 'Si1TypeDefVariant',
    SiVariant: 'Si1Variant'
  })
};
exports.default = _default;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./v0.js":"node_modules/@polkadot/types/interfaces/scaleInfo/v0.js","./v1.js":"node_modules/@polkadot/types/interfaces/scaleInfo/v1.js"}],"node_modules/@polkadot/types/interfaces/essentials.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "metadata", {
  enumerable: true,
  get: function () {
    return _definitions.default;
  }
});
Object.defineProperty(exports, "runtime", {
  enumerable: true,
  get: function () {
    return _definitions2.default;
  }
});
Object.defineProperty(exports, "scaleInfo", {
  enumerable: true,
  get: function () {
    return _definitions3.default;
  }
});

var _definitions = _interopRequireDefault(require("./metadata/definitions.js"));

var _definitions2 = _interopRequireDefault(require("./runtime/definitions.js"));

var _definitions3 = _interopRequireDefault(require("./scaleInfo/definitions.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./metadata/definitions.js":"node_modules/@polkadot/types/interfaces/metadata/definitions.js","./runtime/definitions.js":"node_modules/@polkadot/types/interfaces/runtime/definitions.js","./scaleInfo/definitions.js":"node_modules/@polkadot/types/interfaces/scaleInfo/definitions.js"}],"node_modules/@polkadot/types/interfaces/assets/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    AssetApprovalKey: {
      owner: 'AccountId',
      delegate: 'AccountId'
    },
    AssetApproval: {
      amount: 'TAssetBalance',
      deposit: 'TAssetDepositBalance'
    },
    AssetBalance: {
      balance: 'TAssetBalance',
      isFrozen: 'bool',
      isSufficient: 'bool'
    },
    AssetDestroyWitness: {
      accounts: 'Compact<u32>',
      sufficients: 'Compact<u32>',
      approvals: 'Compact<u32>'
    },
    AssetDetails: {
      owner: 'AccountId',
      issuer: 'AccountId',
      admin: 'AccountId',
      freezer: 'AccountId',
      supply: 'TAssetBalance',
      deposit: 'TAssetDepositBalance',
      minBalance: 'TAssetBalance',
      isSufficient: 'bool',
      accounts: 'u32',
      sufficients: 'u32',
      approvals: 'u32',
      isFrozen: 'bool'
    },
    AssetMetadata: {
      deposit: 'TAssetDepositBalance',
      name: 'Vec<u8>',
      symbol: 'Vec<u8>',
      decimals: 'u8',
      isFrozen: 'bool'
    },
    TAssetBalance: 'u64',
    TAssetDepositBalance: 'BalanceOf'
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/authorship/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    UncleEntryItem: {
      _enum: {
        InclusionHeight: 'BlockNumber',
        Uncle: '(Hash, Option<AccountId>)'
      }
    }
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/aura/runtime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.runtime = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var runtime = {
  AuraApi: [{
    methods: {
      authorities: {
        description: 'Return the current set of authorities.',
        params: [],
        type: 'Vec<AuthorityId>'
      },
      slot_duration: {
        description: 'Returns the slot duration for Aura.',
        params: [],
        type: 'SlotDuration'
      }
    },
    version: 1
  }]
};
exports.runtime = runtime;
},{}],"node_modules/@polkadot/types/interfaces/aura/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _runtime = require("./runtime.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  runtime: _runtime.runtime,
  types: {
    RawAuraPreDigest: {
      slotNumber: 'u64'
    }
  }
};
exports.default = _default;
},{"./runtime.js":"node_modules/@polkadot/types/interfaces/aura/runtime.js"}],"node_modules/@polkadot/types/interfaces/babe/rpc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rpc = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var rpc = {
  epochAuthorship: {
    description: 'Returns data about which slots (primary or secondary) can be claimed in the current epoch with the keys in the keystore',
    params: [],
    type: 'HashMap<AuthorityId, EpochAuthorship>'
  }
};
exports.rpc = rpc;
},{}],"node_modules/@polkadot/types/interfaces/babe/runtime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.runtime = void 0;

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var V1_V2_SHARED = {
  current_epoch: {
    description: 'Returns information regarding the current epoch.',
    params: [],
    type: 'Epoch'
  },
  current_epoch_start: {
    description: 'Returns the slot that started the current epoch.',
    params: [],
    type: 'Slot'
  },
  generate_key_ownership_proof: {
    description: 'Generates a proof of key ownership for the given authority in the current epoch.',
    params: [{
      name: 'slot',
      type: 'Slot'
    }, {
      name: 'authorityId',
      type: 'AuthorityId'
    }],
    type: 'Option<OpaqueKeyOwnershipProof>'
  },
  next_epoch: {
    description: 'Returns information regarding the next epoch (which was already previously announced).',
    params: [],
    type: 'Epoch'
  },
  submit_report_equivocation_unsigned_extrinsic: {
    description: 'Submits an unsigned extrinsic to report an equivocation.',
    params: [{
      name: 'equivocationProof',
      type: 'BabeEquivocationProof'
    }, {
      name: 'keyOwnerProof',
      type: 'OpaqueKeyOwnershipProof'
    }],
    type: 'Option<Null>'
  }
};
var runtime = {
  BabeApi: [{
    methods: (0, _util.objectSpread)({
      configuration: {
        description: 'Return the genesis configuration for BABE. The configuration is only read on genesis.',
        params: [],
        type: 'BabeGenesisConfiguration'
      }
    }, V1_V2_SHARED),
    version: 2
  }, {
    methods: (0, _util.objectSpread)({
      configuration: {
        description: 'Return the configuration for BABE. Version 1.',
        params: [],
        type: 'BabeGenesisConfigurationV1'
      }
    }, V1_V2_SHARED),
    version: 1
  }]
};
exports.runtime = runtime;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types/interfaces/babe/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _rpc = require("./rpc.js");

var _runtime = require("./runtime.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: _rpc.rpc,
  runtime: _runtime.runtime,
  types: {
    AllowedSlots: {
      _enum: ['PrimarySlots', 'PrimaryAndSecondaryPlainSlots', 'PrimaryAndSecondaryVRFSlots']
    },
    BabeAuthorityWeight: 'u64',
    BabeEpochConfiguration: {
      c: '(u64, u64)',
      allowedSlots: 'AllowedSlots'
    },
    BabeBlockWeight: 'u32',
    BabeEquivocationProof: {
      offender: 'AuthorityId',
      slotNumber: 'SlotNumber',
      firstHeader: 'Header',
      secondHeader: 'Header'
    },
    BabeGenesisConfiguration: {
      slotDuration: 'u64',
      epochLength: 'u64',
      c: '(u64, u64)',
      genesisAuthorities: 'Vec<(AuthorityId, BabeAuthorityWeight)>',
      randomness: 'Randomness',
      allowedSlots: 'AllowedSlots'
    },
    BabeGenesisConfigurationV1: {
      slotDuration: 'u64',
      epochLength: 'u64',
      c: '(u64, u64)',
      genesisAuthorities: 'Vec<(AuthorityId, BabeAuthorityWeight)>',
      randomness: 'Randomness',
      secondarySlots: 'bool'
    },
    BabeWeight: 'u64',
    MaybeRandomness: 'Option<Randomness>',
    MaybeVrf: 'Option<VrfData>',
    Epoch: {
      epochIndex: 'u64',
      startSlot: 'Slot',
      duration: 'u64',
      authorities: 'Vec<(AuthorityId, BabeAuthorityWeight)>',
      randomness: 'Hash',
      // [u8; VRF_OUTPUT_LENGTH],
      config: 'BabeEpochConfiguration'
    },
    EpochAuthorship: {
      primary: 'Vec<u64>',
      secondary: 'Vec<u64>',
      secondary_vrf: 'Vec<u64>'
    },
    NextConfigDescriptor: {
      _enum: {
        V0: 'Null',
        V1: 'NextConfigDescriptorV1'
      }
    },
    NextConfigDescriptorV1: {
      c: '(u64, u64)',
      allowedSlots: 'AllowedSlots'
    },
    OpaqueKeyOwnershipProof: 'Bytes',
    Randomness: 'Hash',
    // [u8; RANDOMNESS_LENGTH],
    RawBabePreDigest: {
      _enum: {
        Phantom: 'Null',
        // index starts at 1... empty slot at 0
        Primary: 'RawBabePreDigestPrimary',
        SecondaryPlain: 'RawBabePreDigestSecondaryPlain',
        SecondaryVRF: 'RawBabePreDigestSecondaryVRF'
      }
    },
    RawBabePreDigestPrimary: {
      authorityIndex: 'u32',
      // AuthorityIndex (also in aura)
      slotNumber: 'SlotNumber',
      vrfOutput: 'VrfOutput',
      vrfProof: 'VrfProof'
    },
    RawBabePreDigestSecondaryPlain: {
      authorityIndex: 'u32',
      // AuthorityIndex (also in aura)
      slotNumber: 'SlotNumber'
    },
    RawBabePreDigestSecondaryVRF: {
      authorityIndex: 'u32',
      slotNumber: 'SlotNumber',
      vrfOutput: 'VrfOutput',
      vrfProof: 'VrfProof'
    },
    RawBabePreDigestTo159: {
      _enum: {
        Primary: 'RawBabePreDigestPrimaryTo159',
        Secondary: 'RawBabePreDigestSecondaryTo159'
      }
    },
    RawBabePreDigestPrimaryTo159: {
      authorityIndex: 'u32',
      slotNumber: 'SlotNumber',
      weight: 'BabeBlockWeight',
      vrfOutput: 'VrfOutput',
      vrfProof: 'VrfProof'
    },
    RawBabePreDigestSecondaryTo159: {
      authorityIndex: 'u32',
      slotNumber: 'SlotNumber',
      weight: 'BabeBlockWeight'
    },
    // a cross old/new compatible version of the digest, that is _only_ useful
    // for partial parsing and extraction of the author. This assumes that all
    // entries has the authorityIndex in the first position - and that it is all
    // we are interested in
    RawBabePreDigestCompat: {
      _enum: {
        Zero: 'u32',
        One: 'u32',
        Two: 'u32',
        Three: 'u32'
      }
    },
    SlotNumber: 'u64',
    VrfData: '[u8; 32]',
    VrfOutput: '[u8; 32]',
    VrfProof: '[u8; 64]'
  }
};
exports.default = _default;
},{"./rpc.js":"node_modules/@polkadot/types/interfaces/babe/rpc.js","./runtime.js":"node_modules/@polkadot/types/interfaces/babe/runtime.js"}],"node_modules/@polkadot/types/interfaces/balances/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    AccountData: {
      free: 'Balance',
      reserved: 'Balance',
      miscFrozen: 'Balance',
      feeFrozen: 'Balance'
    },
    BalanceLockTo212: {
      id: 'LockIdentifier',
      amount: 'Balance',
      until: 'BlockNumber',
      reasons: 'WithdrawReasons'
    },
    BalanceLock: {
      id: 'LockIdentifier',
      amount: 'Balance',
      reasons: 'Reasons'
    },
    BalanceStatus: {
      _enum: ['Free', 'Reserved']
    },
    Reasons: {
      _enum: ['Fee', 'Misc', 'All']
    },
    ReserveData: {
      id: 'ReserveIdentifier',
      amount: 'Balance'
    },
    ReserveIdentifier: '[u8; 8]',
    VestingSchedule: {
      offset: 'Balance',
      perBlock: 'Balance',
      startingBlock: 'BlockNumber'
    },
    WithdrawReasons: {
      _set: {
        TransactionPayment: 1,
        Transfer: 2,
        Reserve: 4,
        Fee: 8,
        Tip: 16
      }
    }
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/beefy/rpc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rpc = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var rpc = {
  getFinalizedHead: {
    description: 'Returns hash of the latest BEEFY finalized block as seen by this client.',
    params: [],
    type: 'H256'
  },
  subscribeJustifications: {
    description: 'Returns the block most recently finalized by BEEFY, alongside side its justification.',
    params: [],
    pubsub: ['justifications', 'subscribeJustifications', 'unsubscribeJustifications'],
    type: 'BeefySignedCommitment'
  }
};
exports.rpc = rpc;
},{}],"node_modules/@polkadot/types/interfaces/beefy/runtime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.runtime = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var runtime = {
  BeefyApi: [{
    methods: {
      validator_set: {
        description: 'Return the current active BEEFY validator set',
        params: [],
        type: 'Option<ValidatorSet>'
      }
    },
    version: 1
  }],
  BeefyMmrApi: [{
    methods: {
      authority_set_proof: {
        description: 'Return the currently active BEEFY authority set proof.',
        params: [],
        type: 'BeefyAuthoritySet'
      },
      next_authority_set_proof: {
        description: 'Return the next/queued BEEFY authority set proof.',
        params: [],
        type: 'BeefyNextAuthoritySet'
      }
    },
    version: 1
  }]
};
exports.runtime = runtime;
},{}],"node_modules/@polkadot/types/interfaces/beefy/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _rpc = require("./rpc.js");

var _runtime = require("./runtime.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: _rpc.rpc,
  runtime: _runtime.runtime,
  types: {
    BeefyAuthoritySet: {
      id: 'u64',
      len: 'u32',
      root: 'H256'
    },
    BeefyCommitment: {
      payload: 'BeefyPayload',
      blockNumber: 'BlockNumber',
      validatorSetId: 'ValidatorSetId'
    },
    BeefyId: '[u8; 33]',
    BeefySignedCommitment: {
      commitment: 'BeefyCommitment',
      signatures: 'Vec<Option<EcdsaSignature>>'
    },
    BeefyNextAuthoritySet: {
      id: 'u64',
      len: 'u32',
      root: 'H256'
    },
    BeefyPayload: 'Vec<(BeefyPayloadId, Bytes)>',
    BeefyPayloadId: '[u8;2]',
    MmrRootHash: 'H256',
    ValidatorSetId: 'u64',
    ValidatorSet: {
      validators: 'Vec<AuthorityId>',
      id: 'ValidatorSetId'
    }
  }
};
exports.default = _default;
},{"./rpc.js":"node_modules/@polkadot/types/interfaces/beefy/rpc.js","./runtime.js":"node_modules/@polkadot/types/interfaces/beefy/runtime.js"}],"node_modules/@polkadot/types/interfaces/benchmark/runtime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.runtime = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var runtime = {
  Benchmark: [{
    methods: {
      benchmark_metadata: {
        description: 'Get the benchmark metadata available for this runtime.',
        params: [{
          name: 'extra',
          type: 'bool'
        }],
        type: '(Vec<BenchmarkList>, Vec<StorageInfo>)'
      },
      dispatch_benchmark: {
        description: 'Dispatch the given benchmark.',
        params: [{
          name: 'config',
          type: 'BenchmarkConfig'
        }],
        type: 'Result<Vec<BenchmarkBatch>, Text>'
      }
    },
    version: 1
  }]
};
exports.runtime = runtime;
},{}],"node_modules/@polkadot/types/interfaces/benchmark/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _runtime = require("./runtime.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  runtime: _runtime.runtime,
  types: {
    BenchmarkConfig: {
      pallet: 'Bytes',
      benchmark: 'Bytes',
      selectedComponents: 'Vec<(BenchmarkParameter, u32)>',
      verify: 'bool',
      internalRepeats: 'u32'
    },
    BenchmarkList: {
      pallet: 'Bytes',
      instance: 'Bytes',
      benchmarks: 'Vec<BenchmarkMetadata>'
    },
    BenchmarkMetadata: {
      name: 'Bytes',
      components: 'Vec<(BenchmarkParameter, u32, u32)>'
    },
    BenchmarkParameter: {
      _enum: ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']
    }
  }
};
exports.default = _default;
},{"./runtime.js":"node_modules/@polkadot/types/interfaces/benchmark/runtime.js"}],"node_modules/@polkadot/types/interfaces/blockbuilder/runtime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.runtime = void 0;

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var BB_V5_TO_V6 = {
  check_inherents: {
    description: 'Check that the inherents are valid.',
    params: [{
      name: 'block',
      type: 'Block'
    }, {
      name: 'data',
      type: 'InherentData'
    }],
    type: 'CheckInherentsResult'
  },
  finalize_block: {
    description: 'Finish the current block.',
    params: [],
    type: 'Header'
  },
  inherent_extrinsics: {
    description: 'Generate inherent extrinsics.',
    params: [{
      name: 'inherent',
      type: 'InherentData'
    }],
    type: 'Vec<Extrinsic>'
  }
};
var runtime = {
  BlockBuilder: [{
    methods: (0, _util.objectSpread)({
      apply_extrinsic: {
        description: 'Apply the given extrinsic.',
        params: [{
          name: 'extrinsic',
          type: 'Extrinsic'
        }],
        type: 'ApplyExtrinsicResult'
      }
    }, BB_V5_TO_V6),
    version: 6
  }, {
    methods: (0, _util.objectSpread)({
      apply_extrinsic: {
        description: 'Apply the given extrinsic.',
        params: [{
          name: 'extrinsic',
          type: 'Extrinsic'
        }],
        type: 'ApplyExtrinsicResultPre6'
      }
    }, BB_V5_TO_V6),
    version: 5
  }]
};
exports.runtime = runtime;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types/interfaces/blockbuilder/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _runtime = require("./runtime.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  runtime: _runtime.runtime,
  types: {
    CheckInherentsResult: {
      okay: 'bool',
      fatalError: 'bool',
      errors: 'InherentData'
    },
    InherentData: {
      data: 'BTreeMap<InherentIdentifier, Bytes>'
    },
    InherentIdentifier: '[u8; 8]'
  }
};
exports.default = _default;
},{"./runtime.js":"node_modules/@polkadot/types/interfaces/blockbuilder/runtime.js"}],"node_modules/@polkadot/types/interfaces/collective/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    CollectiveOrigin: {
      _enum: {
        Members: '(MemberCount, MemberCount)',
        Member: 'AccountId'
      }
    },
    MemberCount: 'u32',
    ProposalIndex: 'u32',
    VotesTo230: {
      index: 'ProposalIndex',
      threshold: 'MemberCount',
      ayes: 'Vec<AccountId>',
      nays: 'Vec<AccountId>'
    },
    Votes: {
      index: 'ProposalIndex',
      threshold: 'MemberCount',
      ayes: 'Vec<AccountId>',
      nays: 'Vec<AccountId>',
      end: 'BlockNumber'
    }
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/consensus/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    AuthorityId: 'AccountId',
    RawVRFOutput: '[u8; 32]'
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/contracts/rpc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rpc = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var rpc = {
  call: {
    description: 'Executes a call to a contract',
    params: [{
      name: 'callRequest',
      type: 'ContractCallRequest'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'BlockHash'
    }],
    type: 'ContractExecResult'
  },
  getStorage: {
    description: 'Returns the value under a specified storage key in a contract',
    params: [{
      name: 'address',
      type: 'AccountId'
    }, {
      name: 'key',
      type: 'H256'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'BlockHash'
    }],
    type: 'Option<Bytes>'
  },
  instantiate: {
    description: 'Instantiate a new contract',
    params: [{
      name: 'request',
      type: 'InstantiateRequest'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'BlockHash'
    }],
    type: 'ContractInstantiateResult'
  },
  rentProjection: {
    description: 'Returns the projected time a given contract will be able to sustain paying its rent',
    params: [{
      name: 'address',
      type: 'AccountId'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'BlockHash'
    }],
    type: 'Option<BlockNumber>'
  },
  uploadCode: {
    description: 'Upload new code without instantiating a contract from it',
    // The RPC here is terribly misnamed - somebody forgot how the RPCs
    // are actually done, ie. <module>_<camelCasedMethod>
    endpoint: 'contracts_upload_code',
    params: [{
      name: 'uploadRequest',
      type: 'CodeUploadRequest'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'BlockHash'
    }],
    type: 'CodeUploadResult'
  }
};
exports.rpc = rpc;
},{}],"node_modules/@polkadot/types/interfaces/contracts/runtime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.runtime = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var runtime = {
  ContractsApi: [{
    methods: {
      call: {
        description: 'Perform a call from a specified account to a given contract.',
        params: [{
          name: 'origin',
          type: 'AccountId'
        }, {
          name: 'dest',
          type: 'AccountId'
        }, {
          name: 'value',
          type: 'Balance'
        }, {
          name: 'gasLimit',
          type: 'u64'
        }, {
          name: 'storageDepositLimit',
          type: 'Option<Balance>'
        }, {
          name: 'inputData',
          type: 'Vec<u8>'
        }],
        type: 'ContractExecResult'
      },
      get_storage: {
        description: 'Query a given storage key in a given contract.',
        params: [{
          name: 'address',
          type: 'AccountId'
        }, {
          name: 'key',
          type: 'Bytes'
        }],
        type: 'Option<Bytes>'
      },
      instantiate: {
        description: 'Instantiate a new contract.',
        params: [{
          name: 'origin',
          type: 'AccountId'
        }, {
          name: 'value',
          type: 'Balance'
        }, {
          name: 'gasLimit',
          type: 'u64'
        }, {
          name: 'storageDepositLimit',
          type: 'Option<Balance>'
        }, {
          name: 'code',
          type: 'Bytes'
        }, {
          name: 'data',
          type: 'Bytes'
        }, {
          name: 'salt',
          type: 'Bytes'
        }],
        type: 'ContractInstantiateResult'
      },
      upload_code: {
        description: 'Upload new code without instantiating a contract from it.',
        params: [{
          name: 'origin',
          type: 'AccountId'
        }, {
          name: 'code',
          type: 'Bytes'
        }, {
          name: 'storageDepositLimit',
          type: 'Option<Balance>'
        }],
        type: 'CodeUploadResult'
      }
    },
    version: 1
  }]
};
exports.runtime = runtime;
},{}],"node_modules/@polkadot/types/interfaces/contracts/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _rpc = require("./rpc.js");

var _runtime = require("./runtime.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: _rpc.rpc,
  runtime: _runtime.runtime,
  types: {
    AliveContractInfo: {
      trieId: 'TrieId',
      storageSize: 'u32',
      pairCount: 'u32',
      codeHash: 'CodeHash',
      rentAllowance: 'Balance',
      rentPaid: 'Balance',
      deductBlock: 'BlockNumber',
      lastWrite: 'Option<BlockNumber>',
      _reserved: 'Option<Null>'
    },
    CodeHash: 'Hash',
    CodeSource: {
      _enum: {
        Upload: 'Bytes',
        Existing: 'Hash'
      }
    },
    CodeUploadRequest: {
      origin: 'AccountId',
      code: 'Bytes',
      storageDepositLimit: 'Option<Balance>'
    },
    CodeUploadResult: 'Result<CodeUploadResultValue, DispatchError>',
    CodeUploadResultValue: {
      codeHash: 'CodeHash',
      deposit: 'Balance'
    },
    ContractCallRequest: {
      origin: 'AccountId',
      dest: 'AccountId',
      value: 'Balance',
      gasLimit: 'u64',
      storageDepositLimit: 'Option<Balance>',
      inputData: 'Bytes'
    },
    ContractExecResultSuccessTo255: {
      status: 'u8',
      data: 'Raw'
    },
    ContractExecResultTo255: {
      _enum: {
        Success: 'ContractExecResultSuccessTo255',
        Error: 'Null'
      }
    },
    ContractExecResultSuccessTo260: {
      flags: 'ContractReturnFlags',
      data: 'Bytes',
      gasConsumed: 'u64'
    },
    ContractExecResultTo260: {
      _enum: {
        Success: 'ContractExecResultSuccessTo260',
        Error: 'Null'
      }
    },
    ContractExecResultOk: {
      flags: 'ContractReturnFlags',
      data: 'Bytes'
    },
    ContractExecResultResult: 'Result<ContractExecResultOk, DispatchError>',
    ContractExecResultTo267: {
      gasConsumed: 'u64',
      debugMessage: 'Text',
      result: 'ContractExecResultResult'
    },
    ContractExecResult: {
      gasConsumed: 'u64',
      gasRequired: 'u64',
      storageDeposit: 'StorageDeposit',
      debugMessage: 'Text',
      result: 'ContractExecResultResult'
    },
    ContractInfo: {
      _enum: {
        Alive: 'AliveContractInfo',
        Tombstone: 'TombstoneContractInfo'
      }
    },
    ContractCallFlags: {
      _set: {
        _bitLength: 32,
        ForwardInput: 1,
        CloneInput: 2,
        TailCall: 4,
        AllowReentry: 8
      }
    },
    ContractReturnFlags: {
      _set: {
        _bitLength: 32,
        Revert: 0x00000001
      }
    },
    ContractStorageKey: '[u8; 32]',
    DeletedContract: {
      pairCount: 'u32',
      trieId: 'TrieId'
    },
    ExecReturnValue: {
      flags: 'ContractReturnFlags',
      data: 'Bytes'
    },
    Gas: 'u64',
    HostFnWeightsTo264: {
      caller: 'Weight',
      address: 'Weight',
      gasLeft: 'Weight',
      balance: 'Weight',
      valueTransferred: 'Weight',
      minimumBalance: 'Weight',
      tombstoneDeposit: 'Weight',
      rentAllowance: 'Weight',
      blockNumber: 'Weight',
      now: 'Weight',
      weightToFee: 'Weight',
      gas: 'Weight',
      input: 'Weight',
      inputPerByte: 'Weight',
      return: 'Weight',
      returnPerByte: 'Weight',
      terminate: 'Weight',
      restoreTo: 'Weight',
      restoreToPerDelta: 'Weight',
      random: 'Weight',
      depositEvent: 'Weight',
      depositEventPerTopic: 'Weight',
      depositEventPerByte: 'Weight',
      setRentAllowance: 'Weight',
      setStorage: 'Weight',
      setStoragePerByte: 'Weight',
      clearStorage: 'Weight',
      getStorage: 'Weight',
      getStoragePerByte: 'Weight',
      transfer: 'Weight',
      call: 'Weight',
      callTransferSurcharge: 'Weight',
      callPerInputByte: 'Weight',
      callPerOutputByte: 'Weight',
      instantiate: 'Weight',
      instantiatePerInputByte: 'Weight',
      instantiatePerOutputByte: 'Weight',
      hashSha2256: 'Weight',
      hashSha2256PerByte: 'Weight',
      hashKeccak256: 'Weight',
      hashKeccak256PerByte: 'Weight',
      hashBlake2256: 'Weight',
      hashBlake2256PerByte: 'Weight',
      hashBlake2128: 'Weight',
      hashBlake2128PerByte: 'Weight'
    },
    HostFnWeights: {
      caller: 'Weight',
      address: 'Weight',
      gasLeft: 'Weight',
      balance: 'Weight',
      valueTransferred: 'Weight',
      minimumBalance: 'Weight',
      tombstoneDeposit: 'Weight',
      rentAllowance: 'Weight',
      blockNumber: 'Weight',
      now: 'Weight',
      weightToFee: 'Weight',
      gas: 'Weight',
      input: 'Weight',
      inputPerByte: 'Weight',
      return: 'Weight',
      returnPerByte: 'Weight',
      terminate: 'Weight',
      terminatePerCodeByte: 'Weight',
      restoreTo: 'Weight',
      restoreToPerCallerCodeByte: 'Weight',
      restoreToPerTombstoneCodeByte: 'Weight',
      restoreToPerDelta: 'Weight',
      random: 'Weight',
      depositEvent: 'Weight',
      depositEventPerTopic: 'Weight',
      depositEventPerByte: 'Weight',
      setRentAllowance: 'Weight',
      setStorage: 'Weight',
      setStoragePerByte: 'Weight',
      clearStorage: 'Weight',
      getStorage: 'Weight',
      getStoragePerByte: 'Weight',
      transfer: 'Weight',
      call: 'Weight',
      callPerCodeByte: 'Weight',
      callTransferSurcharge: 'Weight',
      callPerInputByte: 'Weight',
      callPerOutputByte: 'Weight',
      instantiate: 'Weight',
      instantiatePerCodeByte: 'Weight',
      instantiatePerInputByte: 'Weight',
      instantiatePerOutputByte: 'Weight',
      instantiatePerSaltByte: 'Weight',
      hashSha2256: 'Weight',
      hashSha2256PerByte: 'Weight',
      hashKeccak256: 'Weight',
      hashKeccak256PerByte: 'Weight',
      hashBlake2256: 'Weight',
      hashBlake2256PerByte: 'Weight',
      hashBlake2128: 'Weight',
      hashBlake2128PerByte: 'Weight',
      rentParams: 'Weight'
    },
    InstantiateRequestV1: {
      origin: 'AccountId',
      value: 'Balance',
      gasLimit: 'Gas',
      code: 'Bytes',
      data: 'Bytes',
      salt: 'Bytes'
    },
    InstantiateRequestV2: {
      _fallback: 'InstantiateRequestV1',
      origin: 'AccountId',
      value: 'Balance',
      gasLimit: 'Gas',
      storageDepositLimit: 'Option<Balance>',
      code: 'Bytes',
      data: 'Bytes',
      salt: 'Bytes'
    },
    InstantiateRequest: {
      _fallback: 'InstantiateRequestV2',
      origin: 'AccountId',
      value: 'Balance',
      gasLimit: 'Gas',
      storageDepositLimit: 'Option<Balance>',
      code: 'CodeSource',
      data: 'Bytes',
      salt: 'Bytes'
    },
    ContractInstantiateResultTo267: 'Result<InstantiateReturnValueTo267, Null>',
    ContractInstantiateResultTo299: 'Result<InstantiateReturnValueOk, Null>',
    ContractInstantiateResult: {
      _fallback: 'ContractInstantiateResultTo299',
      gasConsumed: 'u64',
      gasRequired: 'u64',
      storageDeposit: 'StorageDeposit',
      debugMessage: 'Text',
      result: 'InstantiateReturnValue'
    },
    InstantiateReturnValueTo267: {
      result: 'ExecReturnValue',
      accountId: 'AccountId',
      rentProjection: 'Option<RentProjection>'
    },
    InstantiateReturnValueOk: {
      result: 'ExecReturnValue',
      accountId: 'AccountId'
    },
    InstantiateReturnValue: 'Result<InstantiateReturnValueOk, DispatchError>',
    InstructionWeights: {
      i64const: 'u32',
      i64load: 'u32',
      i64store: 'u32',
      select: 'u32',
      rIf: 'u32',
      br: 'u32',
      brIf: 'u32',
      brIable: 'u32',
      brIablePerEntry: 'u32',
      call: 'u32',
      callIndirect: 'u32',
      callIndirectPerParam: 'u32',
      localGet: 'u32',
      localSet: 'u32',
      local_tee: 'u32',
      globalGet: 'u32',
      globalSet: 'u32',
      memoryCurrent: 'u32',
      memoryGrow: 'u32',
      i64clz: 'u32',
      i64ctz: 'u32',
      i64popcnt: 'u32',
      i64eqz: 'u32',
      i64extendsi32: 'u32',
      i64extendui32: 'u32',
      i32wrapi64: 'u32',
      i64eq: 'u32',
      i64ne: 'u32',
      i64lts: 'u32',
      i64ltu: 'u32',
      i64gts: 'u32',
      i64gtu: 'u32',
      i64les: 'u32',
      i64leu: 'u32',
      i64ges: 'u32',
      i64geu: 'u32',
      i64add: 'u32',
      i64sub: 'u32',
      i64mul: 'u32',
      i64divs: 'u32',
      i64divu: 'u32',
      i64rems: 'u32',
      i64remu: 'u32',
      i64and: 'u32',
      i64or: 'u32',
      i64xor: 'u32',
      i64shl: 'u32',
      i64shrs: 'u32',
      i64shru: 'u32',
      i64rotl: 'u32',
      i64rotr: 'u32'
    },
    LimitsTo264: {
      eventTopics: 'u32',
      stackHeight: 'u32',
      globals: 'u32',
      parameters: 'u32',
      memoryPages: 'u32',
      tableSize: 'u32',
      brTableSize: 'u32',
      subjectLen: 'u32',
      codeSize: 'u32'
    },
    Limits: {
      eventTopics: 'u32',
      stackHeight: 'u32',
      globals: 'u32',
      parameters: 'u32',
      memoryPages: 'u32',
      tableSize: 'u32',
      brTableSize: 'u32',
      subjectLen: 'u32'
    },
    PrefabWasmModule: {
      scheduleVersion: 'Compact<u32>',
      initial: 'Compact<u32>',
      maximum: 'Compact<u32>',
      refcount: 'Compact<u64>',
      _reserved: 'Option<Null>',
      code: 'Bytes',
      originalCodeLen: 'u32'
    },
    RentProjection: {
      _enum: {
        EvictionAt: 'BlockNumber',
        NoEviction: 'Null'
      }
    },
    ScheduleTo212: {
      version: 'u32',
      putCodePerByteCost: 'Gas',
      growMemCost: 'Gas',
      regularOpCost: 'Gas',
      returnDataPerByteCost: 'Gas',
      eventDataPerByteCost: 'Gas',
      eventPerTopicCost: 'Gas',
      eventBaseCost: 'Gas',
      sandboxDataReadCost: 'Gas',
      sandboxDataWriteCost: 'Gas',
      maxEventTopics: 'u32',
      maxStackHeight: 'u32',
      maxMemoryPages: 'u32',
      enablePrintln: 'bool',
      maxSubjectLen: 'u32'
    },
    ScheduleTo258: {
      version: 'u32',
      putCodePerByteCost: 'Gas',
      growMemCost: 'Gas',
      regularOpCost: 'Gas',
      returnDataPerByteCost: 'Gas',
      eventDataPerByteCost: 'Gas',
      eventPerTopicCost: 'Gas',
      eventBaseCost: 'Gas',
      sandboxDataReadCost: 'Gas',
      sandboxDataWriteCost: 'Gas',
      transferCost: 'Gas',
      maxEventTopics: 'u32',
      maxStackHeight: 'u32',
      maxMemoryPages: 'u32',
      enablePrintln: 'bool',
      maxSubjectLen: 'u32'
    },
    ScheduleTo264: {
      version: 'u32',
      enablePrintln: 'bool',
      limits: 'LimitsTo264',
      instructionWeights: 'InstructionWeights',
      hostFnWeights: 'HostFnWeightsTo264'
    },
    Schedule: {
      version: 'u32',
      enablePrintln: 'bool',
      limits: 'Limits',
      instructionWeights: 'InstructionWeights',
      hostFnWeights: 'HostFnWeights'
    },
    SeedOf: 'Hash',
    StorageDeposit: {
      _enum: {
        Refund: 'Balance',
        Charge: 'Balance'
      }
    },
    TombstoneContractInfo: 'Hash',
    TrieId: 'Bytes'
  }
};
exports.default = _default;
},{"./rpc.js":"node_modules/@polkadot/types/interfaces/contracts/rpc.js","./runtime.js":"node_modules/@polkadot/types/interfaces/contracts/runtime.js"}],"node_modules/@polkadot/types/interfaces/democracy/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.AllConvictions = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var AllConvictions = [// 0.1x votes, unlocked.
'None', // 1x votes, locked for an enactment period following a successful vote.
'Locked1x', // 2x votes, locked for 2x enactment periods following a successful vote.
'Locked2x', // 3x votes, locked for 4x...
'Locked3x', // 4x votes, locked for 8x...
'Locked4x', // 5x votes, locked for 16x...
'Locked5x', /// 6x votes, locked for 32x...
'Locked6x'];
exports.AllConvictions = AllConvictions;
var _default = {
  rpc: {},
  types: {
    AccountVote: {
      _enum: {
        Standard: 'AccountVoteStandard',
        Split: 'AccountVoteSplit'
      }
    },
    AccountVoteSplit: {
      aye: 'Balance',
      nay: 'Balance'
    },
    AccountVoteStandard: {
      vote: 'Vote',
      balance: 'Balance'
    },
    Conviction: {
      _enum: AllConvictions
    },
    Delegations: {
      votes: 'Balance',
      capital: 'Balance'
    },
    PreimageStatus: {
      _enum: {
        Missing: 'BlockNumber',
        Available: 'PreimageStatusAvailable'
      }
    },
    PreimageStatusAvailable: {
      data: 'Bytes',
      provider: 'AccountId',
      deposit: 'Balance',
      since: 'BlockNumber',
      expiry: 'Option<BlockNumber>'
    },
    PriorLock: '(BlockNumber, Balance)',
    PropIndex: 'u32',
    Proposal: 'Call',
    ProxyState: {
      _enum: {
        Open: 'AccountId',
        Active: 'AccountId'
      }
    },
    ReferendumIndex: 'u32',
    ReferendumInfoTo239: {
      end: 'BlockNumber',
      proposalHash: 'Hash',
      threshold: 'VoteThreshold',
      delay: 'BlockNumber'
    },
    ReferendumInfo: {
      _enum: {
        Ongoing: 'ReferendumStatus',
        Finished: 'ReferendumInfoFinished'
      }
    },
    ReferendumInfoFinished: {
      approved: 'bool',
      end: 'BlockNumber'
    },
    ReferendumStatus: {
      end: 'BlockNumber',
      proposalHash: 'Hash',
      threshold: 'VoteThreshold',
      delay: 'BlockNumber',
      tally: 'Tally'
    },
    Tally: {
      ayes: 'Balance',
      nays: 'Balance',
      turnout: 'Balance'
    },
    Voting: {
      _enum: {
        Direct: 'VotingDirect',
        Delegating: 'VotingDelegating'
      }
    },
    VotingDirect: {
      votes: 'Vec<VotingDirectVote>',
      delegations: 'Delegations',
      prior: 'PriorLock'
    },
    VotingDirectVote: '(ReferendumIndex, AccountVote)',
    VotingDelegating: {
      balance: 'Balance',
      target: 'AccountId',
      conviction: 'Conviction',
      delegations: 'Delegations',
      prior: 'PriorLock'
    }
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/dev/rpc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rpc = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var rpc = {
  getBlockStats: {
    description: 'Reexecute the specified `block_hash` and gather statistics while doing so',
    params: [{
      isHistoric: true,
      name: 'at',
      type: 'Hash'
    }],
    type: 'Option<BlockStats>'
  }
};
exports.rpc = rpc;
},{}],"node_modules/@polkadot/types/interfaces/dev/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _rpc = require("./rpc.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: _rpc.rpc,
  types: {
    BlockStats: {
      witnessLen: 'u64',
      witnessCompactLen: 'u64',
      blockLen: 'u64',
      blockNumExtrinsics: 'u64'
    }
  }
};
exports.default = _default;
},{"./rpc.js":"node_modules/@polkadot/types/interfaces/dev/rpc.js"}],"node_modules/@polkadot/types/interfaces/discovery/runtime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.runtime = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var runtime = {
  AuthorityDiscoveryApi: [{
    methods: {
      authorities: {
        description: 'Retrieve authority identifiers of the current and next authority set.',
        params: [],
        type: 'Vec<AuthorityId>'
      }
    },
    version: 1
  }]
};
exports.runtime = runtime;
},{}],"node_modules/@polkadot/types/interfaces/discovery/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _runtime = require("./runtime.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  runtime: _runtime.runtime,
  types: {}
};
exports.default = _default;
},{"./runtime.js":"node_modules/@polkadot/types/interfaces/discovery/runtime.js"}],"node_modules/@polkadot/types/interfaces/elections/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    ApprovalFlag: 'u32',
    DefunctVoter: {
      who: 'AccountId',
      voteCount: 'Compact<u32>',
      candidateCount: 'Compact<u32>'
    },
    Renouncing: {
      _enum: {
        Member: 'Null',
        RunnerUp: 'Null',
        Candidate: 'Compact<u32>'
      }
    },
    SetIndex: 'u32',
    Vote: 'GenericVote',
    VoteIndex: 'u32',
    VoterInfo: {
      lastActive: 'VoteIndex',
      lastWin: 'VoteIndex',
      pot: 'Balance',
      stake: 'Balance'
    },
    VoteThreshold: {
      _enum: ['Super Majority Approve', 'Super Majority Against', 'Simple Majority']
    }
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/engine/rpc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rpc = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var rpc = {
  createBlock: {
    description: 'Instructs the manual-seal authorship task to create a new block',
    params: [{
      name: 'createEmpty',
      type: 'bool'
    }, {
      name: 'finalize',
      type: 'bool'
    }, {
      isOptional: true,
      name: 'parentHash',
      type: 'BlockHash'
    }],
    type: 'CreatedBlock'
  },
  finalizeBlock: {
    description: 'Instructs the manual-seal authorship task to finalize a block',
    params: [{
      name: 'hash',
      type: 'BlockHash'
    }, {
      isOptional: true,
      name: 'justification',
      type: 'Justification'
    }],
    type: 'bool'
  }
};
exports.rpc = rpc;
},{}],"node_modules/@polkadot/types/interfaces/engine/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _rpc = require("./rpc.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: _rpc.rpc,
  types: {
    CreatedBlock: {
      _alias: {
        blockHash: 'hash'
      },
      blockHash: 'BlockHash',
      aux: 'ImportedAux'
    },
    ImportedAux: {
      headerOnly: 'bool',
      clearJustificationRequests: 'bool',
      needsJustification: 'bool',
      badJustification: 'bool',
      needsFinalityProof: 'bool',
      isNewBest: 'bool'
    }
  }
};
exports.default = _default;
},{"./rpc.js":"node_modules/@polkadot/types/interfaces/engine/rpc.js"}],"node_modules/@polkadot/types/interfaces/evm/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    EvmAccount: {
      nonce: 'u256',
      balance: 'u256'
    },
    EvmCallInfo: {
      exitReason: 'ExitReason',
      value: 'Bytes',
      usedGas: 'U256',
      logs: 'Vec<EvmLog>'
    },
    EvmCreateInfo: {
      exitReason: 'ExitReason',
      value: 'H160',
      usedGas: 'U256',
      logs: 'Vec<EvmLog>'
    },
    EvmLog: {
      address: 'H160',
      topics: 'Vec<H256>',
      data: 'Bytes'
    },
    EvmVicinity: {
      gasPrice: 'u256',
      origin: 'H160'
    },
    ExitError: {
      _enum: {
        StackUnderflow: 'Null',
        StackOverflow: 'Null',
        InvalidJump: 'Null',
        InvalidRange: 'Null',
        DesignatedInvalid: 'Null',
        CallTooDeep: 'Null',
        CreateCollision: 'Null',
        CreateContractLimit: 'Null',
        OutOfOffset: 'Null',
        OutOfGas: 'Null',
        OutOfFund: 'Null',
        PCUnderflow: 'Null',
        CreateEmpty: 'Null',
        Other: 'Text'
      }
    },
    ExitFatal: {
      _enum: {
        NotSupported: 'Null',
        UnhandledInterrupt: 'Null',
        CallErrorAsFatal: 'ExitError',
        Other: 'Text'
      }
    },
    ExitReason: {
      _enum: {
        Succeed: 'ExitSucceed',
        Error: 'ExitError',
        Revert: 'ExitRevert',
        Fatal: 'ExitFatal'
      }
    },
    ExitRevert: {
      _enum: ['Reverted']
    },
    ExitSucceed: {
      _enum: ['Stopped', 'Returned', 'Suicided']
    }
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/extrinsics/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    Extrinsic: 'GenericExtrinsic',
    ExtrinsicEra: 'GenericExtrinsicEra',
    ExtrinsicPayload: 'GenericExtrinsicPayload',
    ExtrinsicSignature: 'MultiSignature',
    ExtrinsicV4: 'GenericExtrinsicV4',
    ExtrinsicPayloadV4: 'GenericExtrinsicPayloadV4',
    ExtrinsicSignatureV4: 'GenericExtrinsicSignatureV4',
    ExtrinsicUnknown: 'GenericExtrinsicUnknown',
    ExtrinsicPayloadUnknown: 'GenericExtrinsicPayloadUnknown',
    // eras
    Era: 'ExtrinsicEra',
    ImmortalEra: 'GenericImmortalEra',
    MortalEra: 'GenericMortalEra',
    // signatures & signer
    AnySignature: 'H512',
    MultiSignature: {
      _enum: {
        Ed25519: 'Ed25519Signature',
        Sr25519: 'Sr25519Signature',
        Ecdsa: 'EcdsaSignature'
      }
    },
    Signature: 'H512',
    SignerPayload: 'GenericSignerPayload',
    EcdsaSignature: '[u8; 65]',
    Ed25519Signature: 'H512',
    Sr25519Signature: 'H512'
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/genericAsset/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    AssetOptions: {
      initalIssuance: 'Compact<Balance>',
      permissions: 'PermissionLatest'
    },
    Owner: {
      _enum: {
        None: 'Null',
        Address: 'AccountId'
      }
    },
    PermissionsV1: {
      update: 'Owner',
      mint: 'Owner',
      burn: 'Owner'
    },
    PermissionVersions: {
      _enum: {
        V1: 'PermissionsV1'
      }
    },
    PermissionLatest: 'PermissionsV1'
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/gilt/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    ActiveGilt: {
      proportion: 'Perquintill',
      amount: 'Balance',
      who: 'AccountId',
      expiry: 'BlockNumber'
    },
    ActiveGiltsTotal: {
      frozen: 'Balance',
      proportion: 'Perquintill',
      index: 'ActiveIndex',
      target: 'Perquintill'
    },
    ActiveIndex: 'u32',
    GiltBid: {
      amount: 'Balance',
      who: 'AccountId'
    }
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/grandpa/rpc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rpc = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var rpc = {
  proveFinality: {
    description: 'Prove finality for the given block number, returning the Justification for the last block in the set.',
    params: [{
      name: 'blockNumber',
      type: 'BlockNumber'
    }],
    type: 'Option<EncodedFinalityProofs>'
  },
  roundState: {
    description: 'Returns the state of the current best round state as well as the ongoing background rounds',
    params: [],
    type: 'ReportedRoundStates'
  },
  subscribeJustifications: {
    description: 'Subscribes to grandpa justifications',
    params: [],
    pubsub: ['justifications', 'subscribeJustifications', 'unsubscribeJustifications'],
    type: 'JustificationNotification'
  }
};
exports.rpc = rpc;
},{}],"node_modules/@polkadot/types/interfaces/grandpa/runtime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.runtime = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var runtime = {
  GrandpaApi: [{
    methods: {
      current_set_id: {
        description: 'Get current GRANDPA authority set id.',
        params: [],
        type: 'SetId'
      },
      generate_key_ownership_proof: {
        description: 'Generates a proof of key ownership for the given authority in the given set.',
        params: [{
          name: 'setId',
          type: 'SetId'
        }, {
          name: 'authorityId',
          type: 'AuthorityId'
        }],
        type: 'Option<OpaqueKeyOwnershipProof>'
      },
      grandpa_authorities: {
        description: 'Get the current GRANDPA authorities and weights. This should not change except for when changes are scheduled and the corresponding delay has passed.',
        params: [],
        type: 'AuthorityList'
      },
      submit_report_equivocation_unsigned_extrinsic: {
        description: 'Submits an unsigned extrinsic to report an equivocation.',
        params: [{
          name: 'equivocationProof',
          type: 'GrandpaEquivocationProof'
        }, {
          name: 'keyOwnerProof',
          type: 'OpaqueKeyOwnershipProof'
        }],
        type: 'Option<Null>'
      }
    },
    version: 3
  }]
};
exports.runtime = runtime;
},{}],"node_modules/@polkadot/types/interfaces/grandpa/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _rpc = require("./rpc.js");

var _runtime = require("./runtime.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: _rpc.rpc,
  runtime: _runtime.runtime,
  types: {
    AuthorityIndex: 'u64',
    AuthorityList: 'Vec<NextAuthority>',
    AuthoritySet: {
      currentAuthorities: 'AuthorityList',
      setId: 'u64',
      pendingStandardChanges: 'ForkTreePendingChange',
      pendingForcedChanges: 'Vec<PendingChange>',
      authoritySetChanges: 'AuthoritySetChanges'
    },
    ForkTreePendingChange: {
      roots: 'Vec<ForkTreePendingChangeNode>',
      bestFinalizedNumber: 'Option<BlockNumber>'
    },
    ForkTreePendingChangeNode: {
      hash: 'BlockHash',
      number: 'BlockNumber',
      data: 'PendingChange',
      // actual data, here PendingChange
      children: 'Vec<ForkTreePendingChangeNode>'
    },
    AuthoritySetChange: '(U64, BlockNumber)',
    AuthoritySetChanges: 'Vec<AuthoritySetChange>',
    AuthorityWeight: 'u64',
    DelayKind: {
      _enum: {
        Finalized: 'Null',
        Best: 'DelayKindBest'
      }
    },
    DelayKindBest: {
      medianLastFinalized: 'BlockNumber'
    },
    EncodedFinalityProofs: 'Bytes',
    GrandpaEquivocation: {
      _enum: {
        Prevote: 'GrandpaEquivocationValue',
        Precommit: 'GrandpaEquivocationValue'
      }
    },
    GrandpaEquivocationProof: {
      setId: 'SetId',
      equivocation: 'GrandpaEquivocation'
    },
    GrandpaEquivocationValue: {
      roundNumber: 'u64',
      identity: 'AuthorityId',
      first: '(GrandpaPrevote, AuthoritySignature)',
      second: '(GrandpaPrevote, AuthoritySignature)'
    },
    GrandpaPrevote: {
      targetHash: 'Hash',
      targetNumber: 'BlockNumber'
    },
    GrandpaCommit: {
      targetHash: 'BlockHash',
      targetNumber: 'BlockNumber',
      precommits: 'Vec<GrandpaSignedPrecommit>'
    },
    GrandpaPrecommit: {
      targetHash: 'BlockHash',
      targetNumber: 'BlockNumber'
    },
    GrandpaSignedPrecommit: {
      precommit: 'GrandpaPrecommit',
      signature: 'AuthoritySignature',
      id: 'AuthorityId'
    },
    GrandpaJustification: {
      round: 'u64',
      commit: 'GrandpaCommit',
      votesAncestries: 'Vec<Header>'
    },
    JustificationNotification: 'Bytes',
    KeyOwnerProof: 'MembershipProof',
    NextAuthority: '(AuthorityId, AuthorityWeight)',
    PendingChange: {
      nextAuthorities: 'AuthorityList',
      delay: 'BlockNumber',
      canonHeight: 'BlockNumber',
      canonHash: 'BlockHash',
      delayKind: 'DelayKind'
    },
    PendingPause: {
      scheduledAt: 'BlockNumber',
      delay: 'BlockNumber'
    },
    PendingResume: {
      scheduledAt: 'BlockNumber',
      delay: 'BlockNumber'
    },
    Precommits: {
      currentWeight: 'u32',
      missing: 'BTreeSet<AuthorityId>'
    },
    Prevotes: {
      currentWeight: 'u32',
      missing: 'BTreeSet<AuthorityId>'
    },
    ReportedRoundStates: {
      setId: 'u32',
      best: 'RoundState',
      background: 'Vec<RoundState>'
    },
    RoundState: {
      round: 'u32',
      totalWeight: 'u32',
      thresholdWeight: 'u32',
      prevotes: 'Prevotes',
      precommits: 'Precommits'
    },
    SetId: 'u64',
    StoredPendingChange: {
      scheduledAt: 'BlockNumber',
      delay: 'BlockNumber',
      nextAuthorities: 'AuthorityList'
    },
    StoredState: {
      _enum: {
        Live: 'Null',
        PendingPause: 'PendingPause',
        Paused: 'Null',
        PendingResume: 'PendingResume'
      }
    }
  }
};
exports.default = _default;
},{"./rpc.js":"node_modules/@polkadot/types/interfaces/grandpa/rpc.js","./runtime.js":"node_modules/@polkadot/types/interfaces/grandpa/runtime.js"}],"node_modules/@polkadot/types/interfaces/identity/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    IdentityFields: {
      _set: {
        _bitLength: 64,
        // Mapped here to 32 bits, in Rust these are 64-bit values
        Display: 1,
        Legal: 2,
        Web: 4,
        Riot: 8,
        Email: 16,
        PgpFingerprint: 32,
        Image: 64,
        Twitter: 128
      }
    },
    IdentityInfoAdditional: '(Data, Data)',
    IdentityInfoTo198: {
      additional: 'Vec<IdentityInfoAdditional>',
      display: 'Data',
      legal: 'Data',
      web: 'Data',
      riot: 'Data',
      email: 'Data',
      pgpFingerprint: 'Option<H160>',
      image: 'Data'
    },
    IdentityInfo: {
      _fallback: 'IdentityInfoTo198',
      additional: 'Vec<IdentityInfoAdditional>',
      display: 'Data',
      legal: 'Data',
      web: 'Data',
      riot: 'Data',
      email: 'Data',
      pgpFingerprint: 'Option<H160>',
      image: 'Data',
      twitter: 'Data'
    },
    IdentityJudgement: {
      _enum: {
        Unknown: 'Null',
        FeePaid: 'Balance',
        Reasonable: 'Null',
        KnownGood: 'Null',
        OutOfDate: 'Null',
        LowQuality: 'Null',
        Erroneous: 'Null'
      }
    },
    RegistrationJudgement: '(RegistrarIndex, IdentityJudgement)',
    RegistrationTo198: {
      judgements: 'Vec<RegistrationJudgement>',
      deposit: 'Balance',
      info: 'IdentityInfoTo198'
    },
    Registration: {
      _fallback: 'RegistrationTo198',
      judgements: 'Vec<RegistrationJudgement>',
      deposit: 'Balance',
      info: 'IdentityInfo'
    },
    RegistrarIndex: 'u32',
    RegistrarInfo: {
      account: 'AccountId',
      fee: 'Balance',
      fields: 'IdentityFields'
    }
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/imOnline/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    AuthIndex: 'u32',
    AuthoritySignature: 'Signature',
    Heartbeat: {
      blockNumber: 'BlockNumber',
      networkState: 'OpaqueNetworkState',
      sessionIndex: 'SessionIndex',
      authorityIndex: 'AuthIndex',
      validatorsLen: 'u32'
    },
    HeartbeatTo244: {
      blockNumber: 'BlockNumber',
      networkState: 'OpaqueNetworkState',
      sessionIndex: 'SessionIndex',
      authorityIndex: 'AuthIndex'
    },
    OpaqueMultiaddr: 'Bytes',
    OpaquePeerId: 'Bytes',
    OpaqueNetworkState: {
      peerId: 'OpaquePeerId',
      externalAddresses: 'Vec<OpaqueMultiaddr>'
    }
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/lottery/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    CallIndex: '(u8, u8)',
    LotteryConfig: {
      price: 'Balance',
      start: 'BlockNumber',
      length: 'BlockNumber',
      delay: 'BlockNumber',
      repeat: 'bool'
    }
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/mmr/rpc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rpc = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var rpc = {
  generateBatchProof: {
    description: 'Generate MMR proof for the given leaf indices.',
    params: [{
      name: 'leafIndices',
      type: 'Vec<u64>'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'BlockHash'
    }],
    type: 'MmrLeafProof'
  },
  generateProof: {
    description: 'Generate MMR proof for given leaf index.',
    params: [{
      name: 'leafIndex',
      type: 'u64'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'BlockHash'
    }],
    type: 'MmrLeafBatchProof'
  }
};
exports.rpc = rpc;
},{}],"node_modules/@polkadot/types/interfaces/mmr/runtime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.runtime = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var runtime = {
  MmrApi: [{
    methods: {
      generate_batch_proof: {
        description: 'Generate MMR proof for a series of leaves under given indices.',
        params: [{
          name: 'leafIndices',
          type: 'Vec<MmrLeafIndex>'
        }],
        type: 'Result<(Vec<MmrEncodableOpaqueLeaf>, MmrBatchProof), MmrError>'
      },
      generate_proof: {
        description: 'Generate MMR proof for a leaf under given index.',
        params: [{
          name: 'leafIndex',
          type: 'MmrLeafIndex'
        }],
        type: 'Result<(MmrEncodableOpaqueLeaf, MmrProof), MmrError>'
      },
      mmr_root: {
        description: 'Return the on-chain MMR root hash.',
        params: [],
        type: 'Result<Hash, MmrError>'
      },
      verify_batch_proof: {
        description: 'Verify MMR proof against on-chain MMR for a batch of leaves.',
        params: [{
          name: 'leaves',
          type: 'Vec<MmrEncodableOpaqueLeaf>'
        }, {
          name: 'proof',
          type: 'MmrBatchProof'
        }],
        type: 'Result<(), MmrError>'
      },
      verify_batch_proof_stateless: {
        description: 'Verify MMR proof against given root hash or a batch of leaves.',
        params: [{
          name: 'root',
          type: 'Hash'
        }, {
          name: 'leaves',
          type: 'Vec<MmrEncodableOpaqueLeaf>'
        }, {
          name: 'proof',
          type: 'MmrBatchProof'
        }],
        type: 'Result<(), MmrError>'
      },
      verify_proof: {
        description: 'Verify MMR proof against on-chain MMR.',
        params: [{
          name: 'leaf',
          type: 'MmrEncodableOpaqueLeaf'
        }, {
          name: 'proof',
          type: 'MmrProof'
        }],
        type: 'Result<(), MmrError>'
      },
      verify_proof_stateless: {
        description: 'Verify MMR proof against given root hash.',
        params: [{
          name: 'root',
          type: 'Hash'
        }, {
          name: 'leaf',
          type: 'MmrEncodableOpaqueLeaf'
        }, {
          name: 'proof',
          type: 'MmrProof'
        }],
        type: 'Result<(), MmrError>'
      }
    },
    version: 1
  }]
};
exports.runtime = runtime;
},{}],"node_modules/@polkadot/types/interfaces/mmr/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _rpc = require("./rpc.js");

var _runtime = require("./runtime.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: _rpc.rpc,
  runtime: _runtime.runtime,
  types: {
    MmrBatchProof: {
      leafIndices: 'Vec<MmrLeafIndex>',
      leafCount: 'MmrNodeIndex',
      items: 'Vec<Hash>'
    },
    MmrEncodableOpaqueLeaf: 'Bytes',
    MmrError: {
      _enum: ['Push', 'GetRoot', 'Commit', 'GenerateProof', 'Verify', 'LeafNotFound', ' PalletNotIncluded', 'InvalidLeafIndex']
    },
    MmrLeafBatchProof: {
      blockHash: 'BlockHash',
      leaves: 'Bytes',
      proof: 'Bytes'
    },
    MmrLeafIndex: 'u64',
    MmrLeafProof: {
      blockHash: 'BlockHash',
      leaf: 'Bytes',
      proof: 'Bytes'
    },
    MmrNodeIndex: 'u64',
    MmrProof: {
      leafIndex: 'MmrLeafIndex',
      leafCount: 'MmrNodeIndex',
      items: 'Vec<Hash>'
    }
  }
};
exports.default = _default;
},{"./rpc.js":"node_modules/@polkadot/types/interfaces/mmr/rpc.js","./runtime.js":"node_modules/@polkadot/types/interfaces/mmr/runtime.js"}],"node_modules/@polkadot/types/interfaces/offences/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    DeferredOffenceOf: '(Vec<OffenceDetails>, Vec<Perbill>, SessionIndex)',
    Kind: '[u8; 16]',
    OffenceDetails: {
      offender: 'Offender',
      reporters: 'Vec<Reporter>'
    },
    Offender: 'IdentificationTuple',
    OpaqueTimeSlot: 'Bytes',
    ReportIdOf: 'Hash',
    Reporter: 'AccountId'
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/pow/runtime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.runtime = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var runtime = {
  DifficultyApi: [{
    methods: {
      difficulty: {
        description: 'Return the target difficulty of the next block.',
        params: [],
        // This is Difficulty in the original, however this is chain-specific
        type: 'Raw'
      }
    },
    version: 1
  }],
  TimestampApi: [{
    methods: {
      timestamp: {
        description: 'API necessary for timestamp-based difficulty adjustment algorithms.',
        params: [],
        type: 'Moment'
      }
    },
    version: 1
  }]
};
exports.runtime = runtime;
},{}],"node_modules/@polkadot/types/interfaces/pow/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _runtime = require("./runtime.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  runtime: _runtime.runtime,
  types: {}
};
exports.default = _default;
},{"./runtime.js":"node_modules/@polkadot/types/interfaces/pow/runtime.js"}],"node_modules/@polkadot/types/interfaces/proxy/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    ProxyDefinition: {
      delegate: 'AccountId',
      proxyType: 'ProxyType',
      delay: 'BlockNumber'
    },
    ProxyType: {
      _enum: ['Any', 'NonTransfer', 'Governance', 'Staking']
    },
    ProxyAnnouncement: {
      real: 'AccountId',
      callHash: 'Hash',
      height: 'BlockNumber'
    }
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/recovery/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    ActiveRecovery: {
      created: 'BlockNumber',
      deposit: 'Balance',
      friends: 'Vec<AccountId>'
    },
    RecoveryConfig: {
      delayPeriod: 'BlockNumber',
      deposit: 'Balance',
      friends: 'Vec<AccountId>',
      threshold: 'u16'
    }
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/scheduler/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    Period: '(BlockNumber, u32)',
    Priority: 'u8',
    SchedulePeriod: 'Period',
    SchedulePriority: 'Priority',
    Scheduled: {
      maybeId: 'Option<Bytes>',
      priority: 'SchedulePriority',
      call: 'Call',
      maybePeriodic: 'Option<SchedulePeriod>',
      origin: 'PalletsOrigin'
    },
    ScheduledTo254: {
      maybeId: 'Option<Bytes>',
      priority: 'SchedulePriority',
      call: 'Call',
      maybePeriodic: 'Option<SchedulePeriod>'
    },
    TaskAddress: '(BlockNumber, u32)'
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/session/runtime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.runtime = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var runtime = {
  SessionKeys: [{
    methods: {
      decode_session_keys: {
        description: 'Decode the given public session keys.',
        params: [{
          name: 'encoded',
          type: 'Bytes'
        }],
        type: 'Option<Vec<(Bytes, KeyTypeId)>>'
      },
      generate_session_keys: {
        description: 'Generate a set of session keys with optionally using the given seed.',
        params: [{
          name: 'seed',
          type: 'Option<Bytes>'
        }],
        type: 'Bytes'
      }
    },
    version: 1
  }]
};
exports.runtime = runtime;
},{}],"node_modules/@polkadot/types/interfaces/session/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _util = require("@polkadot/util");

var _runtime = require("./runtime.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
// The runtime definition of SessionKeys are passed as a Trait to session
// Defined in `node/runtime/src/lib.rs` as follow
//   impl_opaque_keys! {
//     pub struct SessionKeys {
// Here we revert to tuples to keep the interfaces "opaque", as per the use
var keyTypes = {
  // key for beefy
  BeefyKey: '[u8; 33]',
  // default to Substrate master defaults, 4 keys (polkadot master, 5 keys)
  Keys: 'SessionKeys4',
  SessionKeys1: '(AccountId)',
  SessionKeys2: '(AccountId, AccountId)',
  SessionKeys3: '(AccountId, AccountId, AccountId)',
  SessionKeys4: '(AccountId, AccountId, AccountId, AccountId)',
  SessionKeys5: '(AccountId, AccountId, AccountId, AccountId, AccountId)',
  SessionKeys6: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',
  SessionKeys6B: '(AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',
  SessionKeys7: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',
  SessionKeys7B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',
  SessionKeys8: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',
  SessionKeys8B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',
  SessionKeys9: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',
  SessionKeys9B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',
  SessionKeys10: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',
  SessionKeys10B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)'
};
var _default = {
  rpc: {},
  runtime: _runtime.runtime,
  types: (0, _util.objectSpread)({}, keyTypes, {
    FullIdentification: 'Exposure',
    IdentificationTuple: '(ValidatorId, FullIdentification)',
    MembershipProof: {
      session: 'SessionIndex',
      trieNodes: 'Vec<Bytes>',
      validatorCount: 'ValidatorCount'
    },
    SessionIndex: 'u32',
    ValidatorCount: 'u32'
  })
};
exports.default = _default;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./runtime.js":"node_modules/@polkadot/types/interfaces/session/runtime.js"}],"node_modules/@polkadot/types/interfaces/society/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    Bid: {
      who: 'AccountId',
      kind: 'BidKind',
      value: 'Balance'
    },
    BidKind: {
      _enum: {
        Deposit: 'Balance',
        Vouch: '(AccountId, Balance)'
      }
    },
    // a society-specific Judgement (not the same as identity Judgement)
    SocietyJudgement: {
      _enum: ['Rebid', 'Reject', 'Approve']
    },
    // a society-specific Vote
    SocietyVote: {
      _enum: ['Skeptic', 'Reject', 'Approve']
    },
    StrikeCount: 'u32',
    VouchingStatus: {
      _enum: ['Vouching', 'Banned']
    }
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/staking/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var deprecated = {
  Points: 'u32',
  EraPoints: {
    total: 'Points',
    individual: 'Vec<Points>'
  }
};
var phragmen = {
  CompactAssignments: 'CompactAssignmentsWith16',
  CompactAssignmentsWith16: {
    votes1: 'Vec<(NominatorIndexCompact, ValidatorIndexCompact)>',
    votes2: 'Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>',
    votes3: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>',
    votes4: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>',
    votes5: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>',
    votes6: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>',
    votes7: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>',
    votes8: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>',
    votes9: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>',
    votes10: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>',
    votes11: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>',
    votes12: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>',
    votes13: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>',
    votes14: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>',
    votes15: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>',
    votes16: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>'
  },
  CompactAssignmentsWith24: {
    votes1: 'Vec<(NominatorIndexCompact, ValidatorIndexCompact)>',
    votes2: 'Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>',
    votes3: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>',
    votes4: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>',
    votes5: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>',
    votes6: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>',
    votes7: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>',
    votes8: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>',
    votes9: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>',
    votes10: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>',
    votes11: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>',
    votes12: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>',
    votes13: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>',
    votes14: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>',
    votes15: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>',
    votes16: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>',
    votes17: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 16], ValidatorIndexCompact)>',
    votes18: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 17], ValidatorIndexCompact)>',
    votes19: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 18], ValidatorIndexCompact)>',
    votes20: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 19], ValidatorIndexCompact)>',
    votes21: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 20], ValidatorIndexCompact)>',
    votes22: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 21], ValidatorIndexCompact)>',
    votes23: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 22], ValidatorIndexCompact)>',
    votes24: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 23], ValidatorIndexCompact)>'
  },
  CompactAssignmentsTo265: 'CompactAssignmentsWith16',
  CompactAssignmentsTo257: {
    votes1: 'Vec<(NominatorIndex, [CompactScore; 0], ValidatorIndex)>',
    votes2: 'Vec<(NominatorIndex, [CompactScore; 1], ValidatorIndex)>',
    votes3: 'Vec<(NominatorIndex, [CompactScore; 2], ValidatorIndex)>',
    votes4: 'Vec<(NominatorIndex, [CompactScore; 3], ValidatorIndex)>',
    votes5: 'Vec<(NominatorIndex, [CompactScore; 4], ValidatorIndex)>',
    votes6: 'Vec<(NominatorIndex, [CompactScore; 5], ValidatorIndex)>',
    votes7: 'Vec<(NominatorIndex, [CompactScore; 6], ValidatorIndex)>',
    votes8: 'Vec<(NominatorIndex, [CompactScore; 7], ValidatorIndex)>',
    votes9: 'Vec<(NominatorIndex, [CompactScore; 8], ValidatorIndex)>',
    votes10: 'Vec<(NominatorIndex, [CompactScore; 9], ValidatorIndex)>',
    votes11: 'Vec<(NominatorIndex, [CompactScore; 10], ValidatorIndex)>',
    votes12: 'Vec<(NominatorIndex, [CompactScore; 11], ValidatorIndex)>',
    votes13: 'Vec<(NominatorIndex, [CompactScore; 12], ValidatorIndex)>',
    votes14: 'Vec<(NominatorIndex, [CompactScore; 13], ValidatorIndex)>',
    votes15: 'Vec<(NominatorIndex, [CompactScore; 14], ValidatorIndex)>',
    votes16: 'Vec<(NominatorIndex, [CompactScore; 15], ValidatorIndex)>'
  },
  CompactScore: '(ValidatorIndex, OffchainAccuracy)',
  CompactScoreCompact: '(ValidatorIndexCompact, OffchainAccuracyCompact)',
  ElectionCompute: {
    // in previous versions the last entry was "AuthorityId"
    // (since no data attached, and it is via SCALE can rename)
    _enum: ['OnChain', 'Signed', 'Unsigned']
  },
  ElectionPhase: {
    _enum: {
      Off: null,
      Signed: null,
      Unsigned: '(bool, BlockNumber)',
      Emergency: null
    }
  },
  ElectionResult: {
    compute: 'ElectionCompute',
    slotStake: 'Balance',
    electedStashes: 'Vec<AccountId>',
    exposures: 'Vec<(AccountId, Exposure)>'
  },
  ElectionScore: '[u128; 3]',
  ElectionSize: {
    validators: 'Compact<ValidatorIndex>',
    nominators: 'Compact<NominatorIndex>'
  },
  ElectionStatus: {
    _enum: {
      Close: 'Null',
      Open: 'BlockNumber'
    }
  },
  ExtendedBalance: 'u128',
  RawSolution: 'RawSolutionWith16',
  RawSolutionWith16: {
    compact: 'CompactAssignmentsWith16',
    score: 'ElectionScore',
    round: 'u32'
  },
  RawSolutionWith24: {
    compact: 'CompactAssignmentsWith24',
    score: 'ElectionScore',
    round: 'u32'
  },
  RawSolutionTo265: 'RawSolutionWith16',
  ReadySolution: {
    supports: 'SolutionSupports',
    score: 'ElectionScore',
    compute: 'ElectionCompute'
  },
  RoundSnapshot: {
    voters: 'Vec<(AccountId, VoteWeight, Vec<AccountId>)>',
    targets: 'Vec<AccountId>'
  },
  SeatHolder: {
    who: 'AccountId',
    stake: 'Balance',
    deposit: 'Balance'
  },
  SignedSubmission: {
    _fallback: 'SignedSubmissionTo276',
    who: 'AccountId',
    deposit: 'Balance',
    solution: 'RawSolution',
    reward: 'Balance'
  },
  SignedSubmissionTo276: {
    who: 'AccountId',
    deposit: 'Balance',
    solution: 'RawSolution'
  },
  SignedSubmissionOf: 'SignedSubmission',
  SolutionOrSnapshotSize: {
    voters: 'Compact<u32>',
    targets: 'Compact<u32>'
  },
  SolutionSupport: {
    total: 'ExtendedBalance',
    voters: 'Vec<(AccountId, ExtendedBalance)>'
  },
  SolutionSupports: 'Vec<(AccountId, SolutionSupport)>',
  Supports: 'SolutionSupports',
  SubmissionIndicesOf: 'BTreeMap<ElectionScore, u32>',
  Voter: {
    votes: 'Vec<AccountId>',
    stake: 'Balance',
    deposit: 'Balance'
  },
  VoteWeight: 'u64'
};
var _default = {
  rpc: {},
  types: (0, _util.objectSpread)({}, deprecated, phragmen, {
    ActiveEraInfo: {
      index: 'EraIndex',
      start: 'Option<Moment>'
    },
    EraIndex: 'u32',
    EraRewardPoints: {
      total: 'RewardPoint',
      individual: 'BTreeMap<AccountId, RewardPoint>'
    },
    EraRewards: {
      total: 'u32',
      rewards: 'Vec<u32>'
    },
    Exposure: {
      total: 'Compact<Balance>',
      own: 'Compact<Balance>',
      others: 'Vec<IndividualExposure>'
    },
    Forcing: {
      _enum: ['NotForcing', 'ForceNew', 'ForceNone', 'ForceAlways']
    },
    IndividualExposure: {
      who: 'AccountId',
      value: 'Compact<Balance>'
    },
    KeyType: 'AccountId',
    MomentOf: 'Moment',
    Nominations: {
      targets: 'Vec<AccountId>',
      submittedIn: 'EraIndex',
      suppressed: 'bool'
    },
    NominatorIndex: 'u32',
    NominatorIndexCompact: 'Compact<NominatorIndex>',
    OffchainAccuracy: 'PerU16',
    OffchainAccuracyCompact: 'Compact<OffchainAccuracy>',
    PhragmenScore: '[u128; 3]',
    Points: 'u32',
    RewardDestination: {
      _enum: {
        Staked: 'Null',
        Stash: 'Null',
        Controller: 'Null',
        Account: 'AccountId',
        None: 'Null'
      }
    },
    RewardPoint: 'u32',
    SlashJournalEntry: {
      who: 'AccountId',
      amount: 'Balance',
      ownSlash: 'Balance'
    },
    SlashingSpansTo204: {
      spanIndex: 'SpanIndex',
      lastStart: 'EraIndex',
      prior: 'Vec<EraIndex>'
    },
    SlashingSpans: {
      spanIndex: 'SpanIndex',
      lastStart: 'EraIndex',
      lastNonzeroSlash: 'EraIndex',
      prior: 'Vec<EraIndex>'
    },
    SpanIndex: 'u32',
    SpanRecord: {
      slashed: 'Balance',
      paidOut: 'Balance'
    },
    StakingLedgerTo223: {
      stash: 'AccountId',
      total: 'Compact<Balance>',
      active: 'Compact<Balance>',
      unlocking: 'Vec<UnlockChunk>'
    },
    StakingLedgerTo240: {
      stash: 'AccountId',
      total: 'Compact<Balance>',
      active: 'Compact<Balance>',
      unlocking: 'Vec<UnlockChunk>',
      lastReward: 'Option<EraIndex>'
    },
    StakingLedger: {
      stash: 'AccountId',
      total: 'Compact<Balance>',
      active: 'Compact<Balance>',
      unlocking: 'Vec<UnlockChunk>',
      claimedRewards: 'Vec<EraIndex>'
    },
    UnappliedSlashOther: '(AccountId, Balance)',
    UnappliedSlash: {
      validator: 'AccountId',
      own: 'Balance',
      others: 'Vec<UnappliedSlashOther>',
      reporters: 'Vec<AccountId>',
      payout: 'Balance'
    },
    UnlockChunk: {
      value: 'Compact<Balance>',
      era: 'Compact<BlockNumber>'
    },
    ValidatorIndex: 'u16',
    ValidatorIndexCompact: 'Compact<ValidatorIndex>',
    ValidatorPrefs: 'ValidatorPrefsWithBlocked',
    ValidatorPrefsWithCommission: {
      commission: 'Compact<Perbill>'
    },
    ValidatorPrefsWithBlocked: {
      commission: 'Compact<Perbill>',
      blocked: 'bool'
    },
    ValidatorPrefsTo196: {
      validatorPayment: 'Compact<Balance>'
    },
    ValidatorPrefsTo145: {
      unstakeThreshold: 'Compact<u32>',
      validatorPayment: 'Compact<Balance>'
    }
  })
};
exports.default = _default;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types/interfaces/support/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    WeightToFeeCoefficient: {
      coeffInteger: 'Balance',
      coeffFrac: 'Perbill',
      negative: 'bool',
      degree: 'u8'
    }
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/syncstate/rpc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rpc = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var rpc = {
  genSyncSpec: {
    description: 'Returns the json-serialized chainspec running the node, with a sync state.',
    endpoint: 'sync_state_genSyncSpec',
    params: [{
      name: 'raw',
      type: 'bool'
    }],
    type: 'Json'
  }
};
exports.rpc = rpc;
},{}],"node_modules/@polkadot/types/interfaces/syncstate/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _rpc = require("./rpc.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: _rpc.rpc,
  types: {}
};
exports.default = _default;
},{"./rpc.js":"node_modules/@polkadot/types/interfaces/syncstate/rpc.js"}],"node_modules/@polkadot/types/interfaces/system/rpc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rpc = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var rpc = {
  accountNextIndex: {
    alias: ['account_nextIndex'],
    description: 'Retrieves the next accountIndex as available on the node',
    params: [{
      name: 'accountId',
      type: 'AccountId'
    }],
    type: 'Index'
  },
  addLogFilter: {
    description: 'Adds the supplied directives to the current log filter',
    params: [{
      name: 'directives',
      type: 'Text'
    }],
    type: 'Null'
  },
  addReservedPeer: {
    description: 'Adds a reserved peer',
    params: [{
      name: 'peer',
      type: 'Text'
    }],
    type: 'Text'
  },
  chain: {
    description: 'Retrieves the chain',
    params: [],
    type: 'Text'
  },
  chainType: {
    description: 'Retrieves the chain type',
    params: [],
    type: 'ChainType'
  },
  dryRun: {
    alias: ['system_dryRunAt'],
    description: 'Dry run an extrinsic at a given block',
    params: [{
      name: 'extrinsic',
      type: 'Bytes'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'BlockHash'
    }],
    type: 'ApplyExtrinsicResult'
  },
  health: {
    description: 'Return health status of the node',
    noErrorLog: true,
    params: [],
    type: 'Health'
  },
  localListenAddresses: {
    description: 'The addresses include a trailing /p2p/ with the local PeerId, and are thus suitable to be passed to addReservedPeer or as a bootnode address for example',
    params: [],
    type: 'Vec<Text>'
  },
  localPeerId: {
    description: 'Returns the base58-encoded PeerId of the node',
    params: [],
    type: 'Text'
  },
  name: {
    description: 'Retrieves the node name',
    params: [],
    type: 'Text'
  },
  networkState: {
    alias: ['system_unstable_networkState'],
    description: 'Returns current state of the network',
    params: [],
    type: 'NetworkState'
  },
  nodeRoles: {
    description: 'Returns the roles the node is running as',
    params: [],
    type: 'Vec<NodeRole>'
  },
  peers: {
    description: 'Returns the currently connected peers',
    params: [],
    type: 'Vec<PeerInfo>'
  },
  properties: {
    description: 'Get a custom set of properties as a JSON object, defined in the chain spec',
    params: [],
    type: 'ChainProperties'
  },
  removeReservedPeer: {
    description: 'Remove a reserved peer',
    params: [{
      name: 'peerId',
      type: 'Text'
    }],
    type: 'Text'
  },
  reservedPeers: {
    description: 'Returns the list of reserved peers',
    params: [],
    type: 'Vec<Text>'
  },
  resetLogFilter: {
    description: 'Resets the log filter to Substrate defaults',
    params: [],
    type: 'Null'
  },
  syncState: {
    description: 'Returns the state of the syncing of the node',
    params: [],
    type: 'SyncState'
  },
  version: {
    description: 'Retrieves the version of the node',
    params: [],
    type: 'Text'
  }
};
exports.rpc = rpc;
},{}],"node_modules/@polkadot/types/interfaces/system/runtime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.runtime = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var runtime = {
  AccountNonceApi: [{
    methods: {
      account_nonce: {
        description: 'The API to query account nonce (aka transaction index)',
        params: [{
          name: 'accountId',
          type: 'AccountId'
        }],
        type: 'Index'
      }
    },
    version: 1
  }]
};
exports.runtime = runtime;
},{}],"node_modules/@polkadot/types/interfaces/system/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _rpc = require("./rpc.js");

var _runtime = require("./runtime.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: _rpc.rpc,
  runtime: _runtime.runtime,
  types: {
    AccountInfo: 'AccountInfoWithTripleRefCount',
    AccountInfoWithRefCountU8: {
      nonce: 'Index',
      refcount: 'u8',
      data: 'AccountData'
    },
    AccountInfoWithRefCount: {
      _fallback: 'AccountInfoWithRefCountU8',
      nonce: 'Index',
      refcount: 'RefCount',
      data: 'AccountData'
    },
    AccountInfoWithDualRefCount: {
      _fallback: 'AccountInfoWithRefCount',
      nonce: 'Index',
      consumers: 'RefCount',
      providers: 'RefCount',
      data: 'AccountData'
    },
    // original naming
    AccountInfoWithProviders: 'AccountInfoWithDualRefCount',
    AccountInfoWithTripleRefCount: {
      _fallback: 'AccountInfoWithDualRefCount',
      nonce: 'Index',
      consumers: 'RefCount',
      providers: 'RefCount',
      sufficients: 'RefCount',
      data: 'AccountData'
    },
    ApplyExtrinsicResult: 'Result<DispatchOutcome, TransactionValidityError>',
    ApplyExtrinsicResultPre6: 'Result<DispatchOutcomePre6, TransactionValidityError>',
    ArithmeticError: {
      _enum: ['Underflow', 'Overflow', 'DivisionByZero']
    },
    BlockLength: {
      max: 'PerDispatchClassU32'
    },
    BlockWeights: {
      baseBlock: 'Weight',
      maxBlock: 'Weight',
      perClass: 'PerDispatchClassWeightsPerClass'
    },
    ChainProperties: 'GenericChainProperties',
    ChainType: {
      _enum: {
        Development: 'Null',
        Local: 'Null',
        Live: 'Null',
        Custom: 'Text'
      }
    },
    ConsumedWeight: 'PerDispatchClassWeight',
    DigestOf: 'Digest',
    DispatchClass: {
      _enum: ['Normal', 'Operational', 'Mandatory']
    },
    DispatchError: {
      _enum: {
        Other: 'Null',
        CannotLookup: 'Null',
        BadOrigin: 'Null',
        Module: 'DispatchErrorModule',
        ConsumerRemaining: 'Null',
        NoProviders: 'Null',
        TooManyConsumers: 'Null',
        Token: 'TokenError',
        Arithmetic: 'ArithmeticError',
        Transactional: 'TransactionalError'
      }
    },
    DispatchErrorPre6: {
      _enum: {
        Other: 'Null',
        CannotLookup: 'Null',
        BadOrigin: 'Null',
        Module: 'DispatchErrorModulePre6',
        ConsumerRemaining: 'Null',
        NoProviders: 'Null',
        TooManyConsumers: 'Null',
        Token: 'TokenError',
        Arithmetic: 'ArithmeticError',
        Transactional: 'TransactionalError'
      }
    },
    DispatchErrorModuleU8: {
      index: 'u8',
      error: 'u8'
    },
    DispatchErrorModuleU8a: {
      index: 'u8',
      error: '[u8; 4]'
    },
    DispatchErrorModule: 'DispatchErrorModuleU8a',
    DispatchErrorModulePre6: 'DispatchErrorModuleU8',
    DispatchErrorTo198: {
      module: 'Option<u8>',
      error: 'u8'
    },
    DispatchInfo: {
      weight: 'Weight',
      class: 'DispatchClass',
      paysFee: 'Pays'
    },
    DispatchInfoTo190: {
      weight: 'Weight',
      class: 'DispatchClass'
    },
    DispatchInfoTo244: {
      weight: 'Weight',
      class: 'DispatchClass',
      paysFee: 'bool'
    },
    DispatchOutcome: 'Result<(), DispatchError>',
    DispatchOutcomePre6: 'Result<(), DispatchErrorPre6>',
    DispatchResult: 'Result<(), DispatchError>',
    DispatchResultOf: 'DispatchResult',
    DispatchResultTo198: 'Result<(), Text>',
    Event: 'GenericEvent',
    EventId: '[u8; 2]',
    EventIndex: 'u32',
    EventRecord: {
      phase: 'Phase',
      event: 'Event',
      topics: 'Vec<Hash>'
    },
    Health: {
      peers: 'u64',
      isSyncing: 'bool',
      shouldHavePeers: 'bool'
    },
    InvalidTransaction: {
      _enum: {
        Call: 'Null',
        Payment: 'Null',
        Future: 'Null',
        Stale: 'Null',
        BadProof: 'Null',
        AncientBirthBlock: 'Null',
        ExhaustsResources: 'Null',
        Custom: 'u8',
        BadMandatory: 'Null',
        MandatoryDispatch: 'Null',
        BadSigner: 'Null'
      }
    },
    Key: 'Bytes',
    LastRuntimeUpgradeInfo: {
      specVersion: 'Compact<u32>',
      specName: 'Text'
    },
    NetworkState: {
      peerId: 'Text',
      listenedAddresses: 'Vec<Text>',
      externalAddresses: 'Vec<Text>',
      connectedPeers: 'HashMap<Text, Peer>',
      notConnectedPeers: 'HashMap<Text, NotConnectedPeer>',
      averageDownloadPerSec: 'u64',
      averageUploadPerSec: 'u64',
      peerset: 'NetworkStatePeerset'
    },
    NetworkStatePeerset: {
      messageQueue: 'u64',
      nodes: 'HashMap<Text, NetworkStatePeersetInfo>'
    },
    NetworkStatePeersetInfo: {
      connected: 'bool',
      reputation: 'i32'
    },
    NodeRole: {
      _enum: {
        Full: 'Null',
        LightClient: 'Null',
        Authority: 'Null',
        UnknownRole: 'u8'
      }
    },
    NotConnectedPeer: {
      knownAddresses: 'Vec<Text>',
      latestPingTime: 'Option<PeerPing>',
      versionString: 'Option<Text>'
    },
    Peer: {
      enabled: 'bool',
      endpoint: 'PeerEndpoint',
      knownAddresses: 'Vec<Text>',
      latestPingTime: 'PeerPing',
      open: 'bool',
      versionString: 'Text'
    },
    PeerEndpoint: {
      listening: 'PeerEndpointAddr'
    },
    PeerEndpointAddr: {
      _alias: {
        localAddr: 'local_addr',
        sendBackAddr: 'send_back_addr'
      },
      localAddr: 'Text',
      sendBackAddr: 'Text'
    },
    PeerPing: {
      nanos: 'u64',
      secs: 'u64'
    },
    PeerInfo: {
      peerId: 'Text',
      roles: 'Text',
      protocolVersion: 'u32',
      bestHash: 'Hash',
      bestNumber: 'BlockNumber'
    },
    PerDispatchClassU32: {
      normal: 'u32',
      operational: 'u32',
      mandatory: 'u32'
    },
    PerDispatchClassWeight: {
      normal: 'Weight',
      operational: 'Weight',
      mandatory: 'Weight'
    },
    PerDispatchClassWeightsPerClass: {
      normal: 'WeightPerClass',
      operational: 'WeightPerClass',
      mandatory: 'WeightPerClass'
    },
    Phase: {
      _enum: {
        ApplyExtrinsic: 'u32',
        Finalization: 'Null',
        Initialization: 'Null'
      }
    },
    RawOrigin: {
      _enum: {
        Root: 'Null',
        Signed: 'AccountId',
        None: 'Null'
      }
    },
    RefCount: 'u32',
    RefCountTo259: 'u8',
    SyncState: {
      startingBlock: 'BlockNumber',
      currentBlock: 'BlockNumber',
      highestBlock: 'Option<BlockNumber>'
    },
    SystemOrigin: 'RawOrigin',
    TokenError: {
      _enum: ['NoFunds', 'WouldDie', 'BelowMinimum', 'CannotCreate', 'UnknownAsset', 'Frozen', 'Unsupported', // these are dropped, but still in older versions
      // (if this adjusts, will need to take a re-look)
      'Underflow', 'Overflow']
    },
    TransactionValidityError: {
      _enum: {
        Invalid: 'InvalidTransaction',
        Unknown: 'UnknownTransaction'
      }
    },
    TransactionalError: {
      _enum: ['LimitReached', 'NoLayer']
    },
    UnknownTransaction: {
      _enum: {
        CannotLookup: 'Null',
        NoUnsignedValidator: 'Null',
        Custom: 'u8'
      }
    },
    WeightPerClass: {
      baseExtrinsic: 'Weight',
      maxExtrinsic: 'Option<Weight>',
      maxTotal: 'Option<Weight>',
      reserved: 'Option<Weight>'
    }
  }
};
exports.default = _default;
},{"./rpc.js":"node_modules/@polkadot/types/interfaces/system/rpc.js","./runtime.js":"node_modules/@polkadot/types/interfaces/system/runtime.js"}],"node_modules/@polkadot/types/interfaces/treasury/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    Bounty: {
      proposer: 'AccountId',
      value: 'Balance',
      fee: 'Balance',
      curatorDeposit: 'Balance',
      bond: 'Balance',
      status: 'BountyStatus'
    },
    BountyIndex: 'u32',
    BountyStatus: {
      _enum: {
        Proposed: 'Null',
        Approved: 'Null',
        Funded: 'Null',
        CuratorProposed: 'BountyStatusCuratorProposed',
        Active: 'BountyStatusActive',
        PendingPayout: 'BountyStatusPendingPayout'
      }
    },
    BountyStatusActive: {
      curator: 'AccountId',
      updateDue: 'BlockNumber'
    },
    BountyStatusCuratorProposed: {
      curator: 'AccountId'
    },
    BountyStatusPendingPayout: {
      curator: 'AccountId',
      beneficiary: 'AccountId',
      unlockAt: 'BlockNumber'
    },
    OpenTip: {
      reason: 'Hash',
      who: 'AccountId',
      finder: 'AccountId',
      deposit: 'Balance',
      closes: 'Option<BlockNumber>',
      tips: 'Vec<OpenTipTip>',
      findersFee: 'bool'
    },
    OpenTipTo225: {
      reason: 'Hash',
      who: 'AccountId',
      finder: 'Option<OpenTipFinderTo225>',
      closes: 'Option<BlockNumber>',
      tips: 'Vec<OpenTipTip>'
    },
    OpenTipFinderTo225: '(AccountId, Balance)',
    OpenTipTip: '(AccountId, Balance)',
    TreasuryProposal: {
      proposer: 'AccountId',
      value: 'Balance',
      beneficiary: 'AccountId',
      bond: 'Balance'
    }
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/txpayment/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var _default = {
  rpc: {},
  types: {
    Multiplier: 'Fixed128'
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/txqueue/runtime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.runtime = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var runtime = {
  TaggedTransactionQueue: [{
    methods: {
      validate_transaction: {
        description: 'Validate the transaction.',
        params: [{
          name: 'source',
          type: 'TransactionSource'
        }, {
          name: 'tx',
          type: 'Extrinsic'
        }, {
          name: 'blockHash',
          type: 'BlockHash'
        }],
        type: 'TransactionValidity'
      }
    },
    version: 3
  }, {
    methods: {
      validate_transaction: {
        description: 'Validate the transaction.',
        params: [{
          name: 'source',
          type: 'TransactionSource'
        }, {
          name: 'tx',
          type: 'Extrinsic'
        }],
        type: 'TransactionValidity'
      }
    },
    version: 2
  }, {
    methods: {
      validate_transaction: {
        description: 'Validate the transaction.',
        params: [{
          name: 'tx',
          type: 'Extrinsic'
        }],
        type: 'TransactionValidity'
      }
    },
    version: 1
  }]
};
exports.runtime = runtime;
},{}],"node_modules/@polkadot/types/interfaces/txqueue/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _runtime = require("./runtime.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  runtime: _runtime.runtime,
  types: {
    TransactionSource: {
      _enum: ['InBlock', 'Local', 'External']
    },
    TransactionValidity: 'Result<ValidTransaction, TransactionValidityError>',
    ValidTransaction: {
      priority: 'TransactionPriority',
      requires: 'Vec<TransactionTag>',
      provides: 'Vec<TransactionTag>',
      longevity: 'TransactionLongevity',
      propagate: 'bool'
    }
  }
};
exports.default = _default;
},{"./runtime.js":"node_modules/@polkadot/types/interfaces/txqueue/runtime.js"}],"node_modules/@polkadot/types/interfaces/uniques/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    ClassId: 'u32',
    InstanceId: 'u32',
    DepositBalance: 'Balance',
    DepositBalanceOf: 'Balance',
    ClassDetails: {
      owner: 'AccountId',
      issuer: 'AccountId',
      admin: 'AccountId',
      freezer: 'AccountId',
      totalDeposit: 'DepositBalance',
      freeHolding: 'bool',
      instances: 'u32',
      instanceMetadatas: 'u32',
      attributes: 'u32',
      isFrozen: 'bool'
    },
    DestroyWitness: {
      instances: 'Compact<u32>',
      instanceMetadatas: 'Compact<u32>',
      attributes: 'Compact<u32>'
    },
    InstanceDetails: {
      owner: 'AccountId',
      approved: 'Option<AccountId>',
      isFrozen: 'bool',
      deposit: 'DepositBalance'
    },
    ClassMetadata: {
      deposit: 'DepositBalance',
      data: 'Vec<u8>',
      isFrozen: 'bool'
    },
    InstanceMetadata: {
      deposit: 'DepositBalance',
      data: 'Vec<u8>',
      isFrozen: 'bool'
    }
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/utility/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    Multisig: {
      when: 'Timepoint',
      deposit: 'Balance',
      depositor: 'AccountId',
      approvals: 'Vec<AccountId>'
    },
    Timepoint: {
      height: 'BlockNumber',
      index: 'u32'
    }
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/vesting/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    VestingInfo: {
      locked: 'Balance',
      perBlock: 'Balance',
      startingBlock: 'BlockNumber'
    }
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/attestations/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    BlockAttestations: {
      receipt: 'CandidateReceipt',
      valid: 'Vec<AccountId>',
      invalid: 'Vec<AccountId>'
    },
    IncludedBlocks: {
      actualNumber: 'BlockNumber',
      session: 'SessionIndex',
      randomSeed: 'H256',
      activeParachains: 'Vec<ParaId>',
      paraBlocks: 'Vec<Hash>'
    },
    MoreAttestations: {}
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/bridges/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    BridgedBlockHash: 'H256',
    BridgedBlockNumber: 'BlockNumber',
    BridgedHeader: 'Header',
    BridgeMessageId: '(LaneId, MessageNonce)',
    CallOrigin: {
      _enum: {
        SourceRoot: 'Null',
        TargetAccount: '(AccountId, MultiSigner, MultiSignature)',
        SourceAccount: 'AccountId'
      }
    },
    ChainId: '[u8; 4]',
    DeliveredMessages: {
      begin: 'MessageNonce',
      end: 'MessageNonce',
      // pub type DispatchResultsBitVec = BitVec<Msb0, u8>;
      dispatchResults: 'BitVec'
    },
    DispatchFeePayment: {
      _enum: ['AtSourceChain', 'AtTargetChain']
    },
    InboundLaneData: {
      relayers: 'Vec<UnrewardedRelayer>',
      lastConfirmedNonce: 'MessageNonce'
    },
    InboundRelayer: 'AccountId',
    InitializationData: {
      header: 'Header',
      authorityList: 'AuthorityList',
      setId: 'SetId',
      isHalted: 'bool'
    },
    LaneId: '[u8; 4]',
    MessageData: {
      payload: 'Bytes',
      fee: 'Balance'
    },
    MessagesDeliveryProofOf: {
      bridgedHeaderHash: 'BlockHash',
      storageProof: 'Vec<Bytes>',
      lane: 'LaneId'
    },
    MessageKey: {
      laneId: 'LaneId',
      nonce: 'MessageNonce'
    },
    MessageNonce: 'u64',
    MessagesProofOf: {
      bridgedHeaderHash: 'BridgedBlockHash',
      storageProof: 'Vec<Bytes>',
      lane: 'LaneId',
      noncesStart: 'MessageNonce',
      noncesEnd: 'MessageNonce'
    },
    OperatingMode: {
      _enum: ['Normal', 'RejectingOutboundMessages', 'Halted']
    },
    OutboundLaneData: {
      oldestUnprunedNonce: 'MessageNonce',
      latestReceivedNonce: 'MessageNonce',
      latestGeneratedNonce: 'MessageNonce'
    },
    OutboundMessageFee: 'Balance',
    OutboundPayload: {
      specVersion: 'u32',
      weight: 'Weight',
      origin: 'CallOrigin',
      dispatchFeePayment: 'DispatchFeePayment',
      call: 'Bytes'
    },
    Parameter: 'Null',
    RelayerId: 'AccountId',
    UnrewardedRelayer: {
      relayer: 'RelayerId',
      messages: 'DeliveredMessages'
    },
    UnrewardedRelayersState: {
      unrewardedRelayer_Entries: 'MessageNonce',
      messagesInOldestEntry: 'MessageNonce',
      totalMessages: 'MessageNonce'
    }
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/claims/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    StatementKind: {
      _enum: ['Regular', 'Saft']
    }
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/crowdloan/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    FundIndex: 'u32',
    LastContribution: {
      _enum: {
        Never: 'Null',
        PreEnding: 'u32',
        Ending: 'BlockNumber'
      }
    },
    FundInfo: {
      depositor: 'AccountId',
      verifier: 'Option<MultiSigner>',
      deposit: 'Balance',
      raised: 'Balance',
      end: 'BlockNumber',
      cap: 'Balance',
      lastContribution: 'LastContribution',
      firstPeriod: 'LeasePeriod',
      lastPeriod: 'LeasePeriod',
      trieIndex: 'TrieIndex'
    },
    TrieIndex: 'u32'
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/cumulus/runtime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.runtime = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var runtime = {
  CollectCollationInfo: [{
    methods: {
      collect_collation_info: {
        description: 'Collect information about a collation.',
        params: [{
          name: 'header',
          type: 'Header'
        }],
        type: 'CollationInfo'
      }
    },
    version: 2
  }, {
    methods: {
      collect_collation_info: {
        description: 'Collect information about a collation.',
        params: [],
        type: 'CollationInfoV1'
      }
    },
    version: 1
  }]
};
exports.runtime = runtime;
},{}],"node_modules/@polkadot/types/interfaces/cumulus/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _runtime = require("./runtime.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var dmpQueue = {
  CollationInfo: {
    upwardMessages: 'Vec<UpwardMessage>',
    horizontalMessages: 'Vec<OutboundHrmpMessage>',
    newValidationCode: 'Option<ValidationCode>',
    processedDownwardMessages: 'u32',
    hrmpWatermark: 'RelayBlockNumber',
    headData: 'HeadData'
  },
  CollationInfoV1: {
    upwardMessages: 'Vec<UpwardMessage>',
    horizontalMessages: 'Vec<OutboundHrmpMessage>',
    newValidationCode: 'Option<ValidationCode>',
    processedDownwardMessages: 'u32',
    hrmpWatermark: 'RelayBlockNumber'
  },
  ConfigData: {
    maxIndividual: 'Weight'
  },
  MessageId: '[u8; 32]',
  OverweightIndex: 'u64',
  PageCounter: 'u32',
  PageIndexData: {
    beginUsed: 'PageCounter',
    endUsed: 'PageCounter',
    overweightCount: 'OverweightIndex'
  }
};
var _default = {
  rpc: {},
  runtime: _runtime.runtime,
  types: dmpQueue
};
exports.default = _default;
},{"./runtime.js":"node_modules/@polkadot/types/interfaces/cumulus/runtime.js"}],"node_modules/@polkadot/types/interfaces/finality/runtime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.runtime = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// implemented by chains bridging into the relay, not the relay itself
var finalityV1 = {
  methods: {
    best_finalized: {
      description: 'Returns number and hash of the best finalized header known to the bridge module.',
      params: [],
      type: '(BlockNumber, Hash)'
    }
  },
  version: 1
};
var runtime = {
  KusamaFinalityApi: [finalityV1],
  PolkadotFinalityApi: [finalityV1],
  RococoFinalityApi: [finalityV1],
  WestendFinalityApi: [finalityV1]
};
exports.runtime = runtime;
},{}],"node_modules/@polkadot/types/interfaces/finality/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _runtime = require("./runtime.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  runtime: _runtime.runtime,
  types: {}
};
exports.default = _default;
},{"./runtime.js":"node_modules/@polkadot/types/interfaces/finality/runtime.js"}],"node_modules/@polkadot/types/interfaces/parachains/hrmp.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  HrmpChannel: {
    maxCapacity: 'u32',
    maxTotalSize: 'u32',
    maxMessageSize: 'u32',
    msgCount: 'u32',
    totalSize: 'u32',
    mqcHead: 'Option<Hash>',
    senderDeposit: 'Balance',
    recipientDeposit: 'Balance'
  },
  HrmpChannelId: {
    sender: 'u32',
    receiver: 'u32'
  },
  HrmpOpenChannelRequest: {
    confirmed: 'bool',
    age: 'SessionIndex',
    senderDeposit: 'Balance',
    maxMessageSize: 'u32',
    maxCapacity: 'u32',
    maxTotalSize: 'u32'
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/parachains/runtime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.runtime = void 0;

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var PH_V1_TO_V2 = {
  assumed_validation_data: {
    description: 'Returns the persisted validation data for the given `ParaId` along with the corresponding validation code hash.',
    params: [{
      name: 'paraId',
      type: 'ParaId'
    }, {
      name: 'hash',
      type: 'Hash'
    }],
    type: 'Option<(PersistedValidationData, ValidationCodeHash)>'
  },
  availability_cores: {
    description: 'Yields information on all availability cores as relevant to the child block.',
    params: [],
    type: 'Vec<CoreState>'
  },
  candidate_events: {
    description: 'Get a vector of events concerning candidates that occurred within a block.',
    params: [],
    type: 'Vec<CandidateEvent>'
  },
  candidate_pending_availability: {
    description: 'Get the receipt of a candidate pending availability.',
    params: [{
      name: 'paraId',
      type: 'ParaId'
    }],
    type: 'Option<CommittedCandidateReceipt>'
  },
  check_validation_outputs: {
    description: 'Checks if the given validation outputs pass the acceptance criteria.',
    params: [{
      name: 'paraId',
      type: 'ParaId'
    }, {
      name: 'outputs',
      type: 'CandidateCommitments'
    }],
    type: 'bool'
  },
  dmq_contents: {
    description: 'Get all the pending inbound messages in the downward message queue for a para.',
    params: [{
      name: 'paraId',
      type: 'ParaId'
    }],
    type: 'Vec<InboundDownwardMessage>'
  },
  inbound_hrmp_channels_contents: {
    description: 'Get the contents of all channels addressed to the given recipient.',
    params: [{
      name: 'paraId',
      type: 'ParaId'
    }],
    type: 'Vec<InboundHrmpMessage>'
  },
  on_chain_votes: {
    description: 'Scrape dispute relevant from on-chain, backing votes and resolved disputes.',
    params: [],
    type: 'Option<ScrapedOnChainVotes>'
  },
  persisted_validation_data: {
    description: 'Yields the persisted validation data for the given `ParaId` along with an assumption that should be used if the para currently occupies a core.',
    params: [{
      name: 'paraId',
      type: 'ParaId'
    }, {
      name: 'assumption',
      type: 'OccupiedCoreAssumption'
    }],
    type: 'Option<PersistedValidationData>'
  },
  session_index_for_child: {
    description: 'Returns the session index expected at a child of the block.',
    params: [],
    type: 'SessionIndex'
  },
  validation_code: {
    description: 'Fetch the validation code used by a para, making the given `OccupiedCoreAssumption`.',
    params: [{
      name: 'paraId',
      type: 'ParaId'
    }, {
      name: 'assumption',
      type: 'OccupiedCoreAssumption'
    }],
    type: 'ValidationCode'
  },
  validation_code_by_hash: {
    description: 'Get the validation code from its hash.',
    params: [{
      name: 'hash',
      type: 'ValidationCodeHash'
    }],
    type: 'Option<ValidationCode>'
  },
  validator_groups: {
    description: 'Returns the validator groups and rotation info localized based on the hypothetical child of a block whose state  this is invoked on',
    params: [],
    type: '(Vec<Vec<ParaValidatorIndex>>, GroupRotationInfo)'
  },
  validators: {
    description: 'Get the current validators.',
    params: [],
    type: 'Vec<ValidatorId>'
  }
};
var runtime = {
  ParachainHost: [{
    methods: (0, _util.objectSpread)({
      pvfs_require_precheck: {
        description: 'Returns code hashes of PVFs that require pre-checking by validators in the active set.',
        params: [],
        type: 'Vec<ValidationCodeHash>'
      },
      session_info: {
        description: 'Get the session info for the given session, if stored.',
        params: [{
          name: 'index',
          type: 'SessionIndex'
        }],
        type: 'Option<SessionInfo>'
      },
      submit_pvf_check_statement: {
        description: 'Submits a PVF pre-checking statement into the transaction pool.',
        params: [{
          name: 'stmt',
          type: 'PvfCheckStatement'
        }, {
          name: 'signature',
          type: 'ValidatorSignature'
        }],
        type: 'Null'
      },
      validation_code_hash: {
        description: 'Fetch the hash of the validation code used by a para, making the given `OccupiedCoreAssumption`.',
        params: [{
          name: 'paraId',
          type: 'ParaId'
        }, {
          name: 'assumption',
          type: 'OccupiedCoreAssumption'
        }],
        type: 'Option<ValidationCodeHash>'
      }
    }, PH_V1_TO_V2),
    version: 2
  }, {
    methods: (0, _util.objectSpread)({
      session_info: {
        description: 'Get the session info for the given session, if stored.',
        params: [{
          name: 'index',
          type: 'SessionIndex'
        }],
        type: 'Option<OldV1SessionInfo>'
      }
    }, PH_V1_TO_V2),
    version: 1
  }]
};
exports.runtime = runtime;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types/interfaces/parachains/slots.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var SlotRange10 = {
  _enum: ['ZeroZero', 'ZeroOne', 'ZeroTwo', 'ZeroThree', 'OneOne', 'OneTwo', 'OneThree', 'TwoTwo', 'TwoThree', 'ThreeThree']
};
var SlotRange = {
  _enum: ['ZeroZero', 'ZeroOne', 'ZeroTwo', 'ZeroThree', 'ZeroFour', 'ZeroFive', 'ZeroSix', 'ZeroSeven', 'OneOne', 'OneTwo', 'OneThree', 'OneFour', 'OneFive', 'OneSix', 'OneSeven', 'TwoTwo', 'TwoThree', 'TwoFour', 'TwoFive', 'TwoSix', 'TwoSeven', 'ThreeThree', 'ThreeFour', 'ThreeFive', 'ThreeSix', 'ThreeSeven', 'FourFour', 'FourFive', 'FourSix', 'FourSeven', 'FiveFive', 'FiveSix', 'FiveSeven', 'SixSix', 'SixSeven', 'SevenSeven']
};
var oldTypes = {
  Bidder: {
    _enum: {
      New: 'NewBidder',
      Existing: 'ParaId'
    }
  },
  IncomingParachain: {
    _enum: {
      Unset: 'NewBidder',
      Fixed: 'IncomingParachainFixed',
      Deploy: 'IncomingParachainDeploy'
    }
  },
  IncomingParachainDeploy: {
    code: 'ValidationCode',
    initialHeadData: 'HeadData'
  },
  IncomingParachainFixed: {
    codeHash: 'Hash',
    codeSize: 'u32',
    initialHeadData: 'HeadData'
  },
  NewBidder: {
    who: 'AccountId',
    sub: 'SubId'
  },
  SubId: 'u32'
};

var _default = (0, _util.objectSpread)({}, oldTypes, {
  AuctionIndex: 'u32',
  LeasePeriod: 'BlockNumber',
  LeasePeriodOf: 'BlockNumber',
  SlotRange10: SlotRange10,
  SlotRange: SlotRange,
  WinningData10: "[WinningDataEntry; ".concat(SlotRange10._enum.length, "]"),
  WinningData: "[WinningDataEntry; ".concat(SlotRange._enum.length, "]"),
  WinningDataEntry: 'Option<(AccountId, ParaId, BalanceOf)>',
  WinnersData10: 'Vec<WinnersDataTuple10>',
  WinnersData: 'Vec<WinnersDataTuple>',
  WinnersDataTuple10: '(AccountId, ParaId, BalanceOf, SlotRange10)',
  WinnersDataTuple: '(AccountId, ParaId, BalanceOf, SlotRange)'
});

exports.default = _default;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types/interfaces/parachains/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _util = require("@polkadot/util");

var _hrmp = _interopRequireDefault(require("./hrmp.js"));

var _runtime = require("./runtime.js");

var _slots = _interopRequireDefault(require("./slots.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
// proposeParachain
var proposeTypes = {
  ParachainProposal: {
    proposer: 'AccountId',
    genesisHead: 'HeadData',
    validators: 'Vec<ValidatorId>',
    name: 'Bytes',
    balance: 'Balance'
  },
  RegisteredParachainInfo: {
    validators: 'Vec<ValidatorId>',
    proposer: 'AccountId'
  }
};
var cumulusTypes = {
  ServiceQuality: {
    _enum: ['Ordered', 'Fast']
  }
};
var disputeTypes = {
  DisputeLocation: {
    _enum: ['Local', 'Remote']
  },
  DisputeResult: {
    _enum: ['Valid', 'Invalid']
  },
  DisputeState: {
    validatorsFor: 'BitVec',
    validatorsAgainst: 'BitVec',
    start: 'BlockNumber',
    concludedAt: 'Option<BlockNumber>'
  },
  DisputeStatement: {
    _enum: {
      Valid: 'ValidDisputeStatementKind',
      Invalid: 'InvalidDisputeStatementKind'
    }
  },
  DisputeStatementSet: {
    candidateHash: 'CandidateHash',
    session: 'SessionIndex',
    statements: 'Vec<(DisputeStatement, ParaValidatorIndex, ValidatorSignature)>'
  },
  ExplicitDisputeStatement: {
    valid: 'bool',
    candidateHash: 'CandidateHash',
    session: 'SessionIndex'
  },
  InvalidDisputeStatementKind: {
    _enum: ['Explicit']
  },
  MultiDisputeStatementSet: 'Vec<DisputeStatementSet>',
  ValidDisputeStatementKind: {
    _enum: {
      Explicit: 'Null',
      BackingSeconded: 'Hash',
      BackingValid: 'Hash',
      ApprovalChecking: 'Null'
    }
  }
};
var _default = {
  rpc: {},
  runtime: _runtime.runtime,
  types: (0, _util.objectSpread)({}, cumulusTypes, disputeTypes, _hrmp.default, proposeTypes, _slots.default, {
    AbridgedCandidateReceipt: {
      parachainIndex: 'ParaId',
      relayParent: 'Hash',
      headData: 'HeadData',
      collator: 'CollatorId',
      signature: 'CollatorSignature',
      povBlockHash: 'Hash',
      commitments: 'CandidateCommitments'
    },
    AbridgedHostConfiguration: {
      maxCodeSize: 'u32',
      maxHeadDataSize: 'u32',
      maxUpwardQueueCount: 'u32',
      maxUpwardQueueSize: 'u32',
      maxUpwardMessageSize: 'u32',
      maxUpwardMessageNumPerCandidate: 'u32',
      hrmpMaxMessageNumPerCandidate: 'u32',
      validationUpgradeFrequency: 'BlockNumber',
      validationUpgradeDelay: 'BlockNumber'
    },
    AbridgedHrmpChannel: {
      maxCapacity: 'u32',
      maxTotalSize: 'u32',
      maxMessageSize: 'u32',
      msgCount: 'u32',
      totalSize: 'u32',
      mqcHead: 'Option<Hash>'
    },
    AssignmentId: 'AccountId',
    AssignmentKind: {
      _enum: {
        Parachain: 'Null',
        Parathread: '(CollatorId, u32)'
      }
    },
    AttestedCandidate: {
      candidate: 'AbridgedCandidateReceipt',
      validityVotes: 'Vec<ValidityAttestation>',
      validatorIndices: 'BitVec'
    },
    AuthorityDiscoveryId: 'AccountId',
    AvailabilityBitfield: 'BitVec',
    AvailabilityBitfieldRecord: {
      bitfield: 'AvailabilityBitfield',
      submittedTt: 'BlockNumber'
    },
    BackedCandidate: {
      candidate: 'CommittedCandidateReceipt',
      validityVotes: 'Vec<ValidityAttestation>',
      validatorIndices: 'BitVec'
    },
    BufferedSessionChange: {
      applyAt: 'BlockNumber',
      validators: 'Vec<ValidatorId>',
      queued: 'Vec<ValidatorId>',
      sessionIndex: 'SessionIndex'
    },
    CandidateCommitments: {
      upwardMessages: 'Vec<UpwardMessage>',
      horizontalMessages: 'Vec<OutboundHrmpMessage>',
      newValidationCode: 'Option<ValidationCode>',
      headData: 'HeadData',
      processedDownwardMessages: 'u32',
      hrmpWatermark: 'BlockNumber'
    },
    CandidateDescriptor: {
      paraId: 'ParaId',
      relayParent: 'RelayChainHash',
      collatorId: 'CollatorId',
      persistedValidationDataHash: 'Hash',
      povHash: 'Hash',
      erasureRoot: 'Hash',
      signature: 'CollatorSignature',
      paraHead: 'Hash',
      validationCodeHash: 'ValidationCodeHash'
    },
    CandidateEvent: {
      _enum: {
        CandidateBacked: '(CandidateReceipt, HeadData, CoreIndex, GroupIndex)',
        CandidateIncluded: '(CandidateReceipt, HeadData, CoreIndex, GroupIndex)',
        CandidateTimedOut: '(CandidateReceipt, HeadData, CoreIndex)'
      }
    },
    CandidateHash: 'Hash',
    CandidateInfo: {
      who: 'AccountId',
      deposit: 'Balance'
    },
    CandidatePendingAvailability: {
      core: 'CoreIndex',
      hash: 'CandidateHash',
      descriptor: 'CandidateDescriptor',
      availabilityVotes: 'BitVec',
      backers: 'BitVec',
      relayParentNumber: 'BlockNumber',
      backedInNumber: 'BlockNumber',
      backingGroup: 'GroupIndex'
    },
    CandidateReceipt: {
      descriptor: 'CandidateDescriptor',
      commitmentsHash: 'Hash'
    },
    GlobalValidationData: {
      maxCodeSize: 'u32',
      maxHeadDataSize: 'u32',
      blockNumber: 'BlockNumber'
    },
    CollatorId: 'H256',
    CollatorSignature: 'Signature',
    CommittedCandidateReceipt: {
      descriptor: 'CandidateDescriptor',
      commitments: 'CandidateCommitments'
    },
    CoreAssignment: {
      core: 'CoreIndex',
      paraId: 'ParaId',
      kind: 'AssignmentKind',
      groupIdx: 'GroupIndex'
    },
    CoreIndex: 'u32',
    CoreOccupied: {
      _enum: {
        Parathread: 'ParathreadEntry',
        Parachain: 'Null'
      }
    },
    CoreState: {
      _enum: {
        Occupied: 'OccupiedCore',
        Scheduled: 'ScheduledCore',
        Free: 'Null'
      }
    },
    DoubleVoteReport: {
      identity: 'ValidatorId',
      first: '(Statement, ValidatorSignature)',
      second: '(Statement, ValidatorSignature)',
      proof: 'MembershipProof',
      signingContext: 'SigningContext'
    },
    DownwardMessage: 'Bytes',
    GroupIndex: 'u32',
    GroupRotationInfo: {
      sessionStartBlock: 'BlockNumber',
      groupRotationFrequency: 'BlockNumber',
      now: 'BlockNumber'
    },
    GlobalValidationSchedule: {
      maxCodeSize: 'u32',
      maxHeadDataSize: 'u32',
      blockNumber: 'BlockNumber'
    },
    HeadData: 'Bytes',
    HostConfiguration: {
      maxCodeSize: 'u32',
      maxHeadDataSize: 'u32',
      maxUpwardQueueCount: 'u32',
      maxUpwardQueueSize: 'u32',
      maxUpwardMessageSize: 'u32',
      maxUpwardMessageNumPerCandidate: 'u32',
      hrmpMaxMessageNumPerCandidate: 'u32',
      validationUpgradeFrequency: 'BlockNumber',
      validationUpgradeDelay: 'BlockNumber',
      maxPovSize: 'u32',
      maxDownwardMessageSize: 'u32',
      preferredDispatchableUpwardMessagesStepWeight: 'Weight',
      hrmpMaxParachainOutboundChannels: 'u32',
      hrmpMaxParathreadOutboundChannels: 'u32',
      hrmpOpenRequestTtl: 'u32',
      hrmpSenderDeposit: 'Balance',
      hrmpRecipientDeposit: 'Balance',
      hrmpChannelMaxCapacity: 'u32',
      hrmpChannelMaxTotalSize: 'u32',
      hrmpMaxParachainInboundChannels: 'u32',
      hrmpMaxParathreadInboundChannels: 'u32',
      hrmpChannelMaxMessageSize: 'u32',
      codeRetentionPeriod: 'BlockNumber',
      parathreadCores: 'u32',
      parathreadRetries: 'u32',
      groupRotationFrequency: 'BlockNumber',
      chainAvailabilityPeriod: 'BlockNumber',
      threadAvailabilityPeriod: 'BlockNumber',
      schedulingLookahead: 'u32',
      maxValidatorsPerCore: 'Option<u32>',
      maxValidators: 'Option<u32>',
      disputePeriod: 'SessionIndex',
      disputePostConclusionAcceptancePeriod: 'BlockNumber',
      disputeMaxSpamSlots: 'u32',
      disputeConclusionByTimeOutPeriod: 'BlockNumber',
      noShowSlots: 'u32',
      nDelayTranches: 'u32',
      zerothDelayTrancheWidth: 'u32',
      neededApprovals: 'u32',
      relayVrfModuloSamples: 'u32'
    },
    InboundDownwardMessage: {
      pubSentAt: 'BlockNumber',
      pubMsg: 'DownwardMessage'
    },
    InboundHrmpMessage: {
      sentAt: 'BlockNumber',
      data: 'Bytes'
    },
    InboundHrmpMessages: 'Vec<InboundHrmpMessage>',
    LocalValidationData: {
      parentHead: 'HeadData',
      balance: 'Balance',
      codeUpgradeAllowed: 'Option<BlockNumber>'
    },
    MessageIngestionType: {
      downwardMessages: 'Vec<InboundDownwardMessage>',
      horizontalMessages: 'BTreeMap<ParaId, InboundHrmpMessages>'
    },
    MessageQueueChain: 'RelayChainHash',
    OccupiedCore: {
      nextUpOnAvailable: 'Option<ScheduledCore>',
      occupiedSince: 'BlockNumber',
      timeOutAt: 'BlockNumber',
      nextUpOnTimeOut: 'Option<ScheduledCore>',
      availability: 'BitVec',
      groupResponsible: 'GroupIndex',
      candidateHash: 'CandidateHash',
      candidateDescriptor: 'CandidateDescriptor'
    },
    OccupiedCoreAssumption: {
      _enum: ['Included,', 'TimedOut', 'Free']
    },
    OutboundHrmpMessage: {
      recipient: 'u32',
      data: 'Bytes'
    },
    ParachainDispatchOrigin: {
      _enum: ['Signed', 'Parachain', 'Root']
    },
    ParachainInherentData: {
      validationData: 'PersistedValidationData',
      relayChainState: 'StorageProof',
      downwardMessages: 'Vec<InboundDownwardMessage>',
      horizontalMessages: 'BTreeMap<ParaId, VecInboundHrmpMessage>'
    },
    ParachainsInherentData: {
      bitfields: 'SignedAvailabilityBitfields',
      backedCandidates: 'Vec<BackedCandidate>',
      disputes: 'MultiDisputeStatementSet',
      parentHeader: 'Header'
    },
    ParaGenesisArgs: {
      genesisHead: 'Bytes',
      validationCode: 'Bytes',
      parachain: 'bool'
    },
    ParaId: 'u32',
    ParaInfo: {
      manager: 'AccountId',
      deposit: 'Balance',
      locked: 'bool'
    },
    ParaLifecycle: {
      _enum: ['Onboarding', 'Parathread', 'Parachain', 'UpgradingToParachain', 'DowngradingToParathread', 'OutgoingParathread', 'OutgoingParachain']
    },
    ParaPastCodeMeta: {
      upgradeTimes: 'Vec<ReplacementTimes>',
      lastPruned: 'Option<BlockNumber>'
    },
    ParaScheduling: {
      _enum: ['Always', 'Dynamic']
    },
    ParathreadClaim: '(ParaId, CollatorId)',
    ParathreadClaimQueue: {
      queue: 'Vec<QueuedParathread>',
      nextCoreOffset: 'u32'
    },
    ParathreadEntry: {
      claim: 'ParathreadClaim',
      retries: 'u32'
    },
    ParaValidatorIndex: 'u32',
    PersistedValidationData: {
      parentHead: 'HeadData',
      relayParentNumber: 'RelayChainBlockNumber',
      relayParentStorageRoot: 'Hash',
      maxPovSize: 'u32'
    },
    PvfCheckStatement: {
      accept: 'bool',
      subject: 'ValidationCodeHash',
      sessionIndex: 'SessionIndex',
      validatorIndex: 'ParaValidatorIndex'
    },
    QueuedParathread: {
      claim: 'ParathreadEntry',
      coreOffset: 'u32'
    },
    RelayBlockNumber: 'u32',
    RelayChainBlockNumber: 'RelayBlockNumber',
    RelayHash: 'Hash',
    RelayChainHash: 'RelayHash',
    Remark: '[u8; 32]',
    ReplacementTimes: {
      expectedAt: 'BlockNumber',
      activatedAt: 'BlockNumber'
    },
    Retriable: {
      _enum: {
        Never: 'Null',
        WithRetries: 'u32'
      }
    },
    ScheduledCore: {
      paraId: 'ParaId',
      collator: 'Option<CollatorId>'
    },
    Scheduling: {
      _enum: ['Always', 'Dynamic']
    },
    ScrapedOnChainVotes: {
      session: 'SessionIndex',
      backingValidatorsPerCandidate: 'Vec<(CandidateReceipt, Vec<(ParaValidatorIndex, ValidityAttestation)>)>',
      disputes: 'MultiDisputeStatementSet'
    },
    SessionInfo: {
      activeValidatorIndices: 'Vec<ParaValidatorIndex>',
      randomSeed: '[u8; 32]',
      disputePeriod: 'SessionIndex',
      validators: 'Vec<ValidatorId>',
      discoveryKeys: 'Vec<AuthorityDiscoveryId>',
      assignmentKeys: 'Vec<AssignmentId>',
      validatorGroups: 'Vec<Vec<ValidatorIndex>>',
      nCores: 'u32',
      zerothDelayTrancheWidth: 'u32',
      relayVrfModuloSamples: 'u32',
      nDelayTranches: 'u32',
      noShowSlots: 'u32',
      neededApprovals: 'u32'
    },
    OldV1SessionInfo: {
      validators: 'Vec<ValidatorId>',
      discoveryKeys: 'Vec<AuthorityDiscoveryId>',
      assignmentKeys: 'Vec<AssignmentId>',
      validatorGroups: 'Vec<Vec<ParaValidatorIndex>>',
      nCores: 'u32',
      zerothDelayTrancheWidth: 'u32',
      relayVrfModuloSamples: 'u32',
      nDelayTranches: 'u32',
      noShowSlots: 'u32',
      neededApprovals: 'u32'
    },
    SessionInfoValidatorGroup: 'Vec<ParaValidatorIndex>',
    SignedAvailabilityBitfield: {
      payload: 'BitVec',
      validatorIndex: 'ParaValidatorIndex',
      signature: 'ValidatorSignature'
    },
    SignedAvailabilityBitfields: 'Vec<SignedAvailabilityBitfield>',
    SigningContext: {
      sessionIndex: 'SessionIndex',
      parentHash: 'Hash'
    },
    Statement: {
      _enum: {
        Never: 'Null',
        // starts at 1
        Candidate: 'Hash',
        Valid: 'Hash',
        Invalid: 'Hash'
      }
    },
    TransientValidationData: {
      maxCodeSize: 'u32',
      maxHeadDataSize: 'u32',
      balance: 'Balance',
      codeUpgradeAllowed: 'Option<BlockNumber>',
      dmqLength: 'u32'
    },
    UpgradeGoAhead: {
      _enum: ['Abort', 'GoAhead']
    },
    UpgradeRestriction: {
      _enum: ['Present']
    },
    UpwardMessage: 'Bytes',
    ValidationFunctionParams: {
      maxCodeSize: 'u32',
      relayChainHeight: 'RelayChainBlockNumber',
      codeUpgradeAllowed: 'Option<RelayChainBlockNumber>'
    },
    ValidationCode: 'Bytes',
    ValidationCodeHash: 'Hash',
    ValidationData: {
      persisted: 'PersistedValidationData',
      transient: 'TransientValidationData'
    },
    ValidationDataType: {
      validationData: 'ValidationData',
      relayChainState: 'Vec<Bytes>'
    },
    ValidatorSignature: 'Signature',
    ValidityAttestation: {
      _enum: {
        Never: 'Null',
        // starts at 1
        Implicit: 'ValidatorSignature',
        Explicit: 'ValidatorSignature'
      }
    },
    MessagingStateSnapshot: {
      relayDispatchQueueSize: '(u32, u32)',
      egressChannels: 'Vec<MessagingStateSnapshotEgressEntry>'
    },
    MessagingStateSnapshotEgressEntry: '(ParaId, AbridgedHrmpChannel)',
    SystemInherentData: 'ParachainInherentData',
    VecInboundHrmpMessage: 'Vec<InboundHrmpMessage>'
  })
};
exports.default = _default;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./hrmp.js":"node_modules/@polkadot/types/interfaces/parachains/hrmp.js","./runtime.js":"node_modules/@polkadot/types/interfaces/parachains/runtime.js","./slots.js":"node_modules/@polkadot/types/interfaces/parachains/slots.js"}],"node_modules/@polkadot/types/interfaces/poll/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    Approvals: '[bool; 4]'
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types/interfaces/purchase/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  types: {
    AccountStatus: {
      validity: 'AccountValidity',
      freeBalance: 'Balance',
      lockedBalance: 'Balance',
      signature: 'Vec<u8>',
      vat: 'Permill'
    },
    AccountValidity: {
      _enum: ['Invalid', 'Initiated', 'Pending', 'ValidLow', 'ValidHigh', 'Completed']
    }
  }
};
exports.default = _default;
},{}],"node_modules/@polkadot/types-create/detectOther.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _packageInfo = require("@polkadot/types-codec/packageInfo");

// Copyright 2017-2022 @polkadot/types-create authors & contributors
// SPDX-License-Identifier: Apache-2.0
var _default = [_packageInfo.packageInfo];
exports.default = _default;
},{"@polkadot/types-codec/packageInfo":"node_modules/@polkadot/types-codec/packageInfo.js"}],"node_modules/@polkadot/types-create/detectPackage.js":[function(require,module,exports) {
"use strict";

var _util = require("@polkadot/util");

var _detectOther = _interopRequireDefault(require("./detectOther.js"));

var _packageInfo = require("./packageInfo.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/types-create authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
(0, _util.detectPackage)(_packageInfo.packageInfo, null, _detectOther.default);
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./detectOther.js":"node_modules/@polkadot/types-create/detectOther.js","./packageInfo.js":"node_modules/@polkadot/types-create/packageInfo.js"}],"node_modules/@polkadot/types-create/types/augmentRegistry.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"node_modules/@polkadot/types-create/types/lookup.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"node_modules/@polkadot/types-create/types/types.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TypeDefInfo = void 0;
// Copyright 2017-2022 @polkadot/types-create authors & contributors
// SPDX-License-Identifier: Apache-2.0
var TypeDefInfo;
exports.TypeDefInfo = TypeDefInfo;

(function (TypeDefInfo) {
  TypeDefInfo[TypeDefInfo["BTreeMap"] = 0] = "BTreeMap";
  TypeDefInfo[TypeDefInfo["BTreeSet"] = 1] = "BTreeSet";
  TypeDefInfo[TypeDefInfo["Compact"] = 2] = "Compact";
  TypeDefInfo[TypeDefInfo["DoNotConstruct"] = 3] = "DoNotConstruct";
  TypeDefInfo[TypeDefInfo["Enum"] = 4] = "Enum";
  TypeDefInfo[TypeDefInfo["HashMap"] = 5] = "HashMap";
  TypeDefInfo[TypeDefInfo["Int"] = 6] = "Int";
  TypeDefInfo[TypeDefInfo["Linkage"] = 7] = "Linkage";
  TypeDefInfo[TypeDefInfo["Null"] = 8] = "Null";
  TypeDefInfo[TypeDefInfo["Option"] = 9] = "Option";
  TypeDefInfo[TypeDefInfo["Plain"] = 10] = "Plain";
  TypeDefInfo[TypeDefInfo["Range"] = 11] = "Range";
  TypeDefInfo[TypeDefInfo["RangeInclusive"] = 12] = "RangeInclusive";
  TypeDefInfo[TypeDefInfo["Result"] = 13] = "Result";
  TypeDefInfo[TypeDefInfo["Set"] = 14] = "Set";
  TypeDefInfo[TypeDefInfo["Si"] = 15] = "Si";
  TypeDefInfo[TypeDefInfo["Struct"] = 16] = "Struct";
  TypeDefInfo[TypeDefInfo["Tuple"] = 17] = "Tuple";
  TypeDefInfo[TypeDefInfo["UInt"] = 18] = "UInt";
  TypeDefInfo[TypeDefInfo["Vec"] = 19] = "Vec";
  TypeDefInfo[TypeDefInfo["VecFixed"] = 20] = "VecFixed";
  TypeDefInfo[TypeDefInfo["WrapperKeepOpaque"] = 21] = "WrapperKeepOpaque";
  TypeDefInfo[TypeDefInfo["WrapperOpaque"] = 22] = "WrapperOpaque";
})(TypeDefInfo || (exports.TypeDefInfo = TypeDefInfo = {}));
},{}],"node_modules/@polkadot/types-create/types/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

require("./augmentRegistry.js");

var _lookup = require("./lookup.js");

Object.keys(_lookup).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _lookup[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _lookup[key];
    }
  });
});

var _types = require("./types.js");

Object.keys(_types).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _types[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _types[key];
    }
  });
});
},{"./augmentRegistry.js":"node_modules/@polkadot/types-create/types/augmentRegistry.js","./lookup.js":"node_modules/@polkadot/types-create/types/lookup.js","./types.js":"node_modules/@polkadot/types-create/types/types.js"}],"node_modules/@polkadot/types-codec/detectOther.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types-codec authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Empty template, auto-generated by @polkadot/dev
var _default = [];
exports.default = _default;
},{}],"node_modules/@polkadot/types-codec/detectPackage.js":[function(require,module,exports) {
"use strict";

var _util = require("@polkadot/util");

var _detectOther = _interopRequireDefault(require("./detectOther.js"));

var _packageInfo = require("./packageInfo.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/types-codec authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
(0, _util.detectPackage)(_packageInfo.packageInfo, null, _detectOther.default);
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./detectOther.js":"node_modules/@polkadot/types-codec/detectOther.js","./packageInfo.js":"node_modules/@polkadot/types-codec/packageInfo.js"}],"node_modules/@polkadot/types-codec/utils/util.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hasEq = hasEq;

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/types-codec authors & contributors
// SPDX-License-Identifier: Apache-2.0
function hasEq(o) {
  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
  return (0, _util.isFunction)(o.eq);
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types-codec/utils/compareArray.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.compareArray = compareArray;

var _util = require("@polkadot/util");

var _util2 = require("./util.js");

// Copyright 2017-2022 @polkadot/types-codec authors & contributors
// SPDX-License-Identifier: Apache-2.0
// NOTE These are used internally and when comparing objects, expects that
// when the second is an Codec[] that the first has to be as well
function compareArray(a, b) {
  if (Array.isArray(b)) {
    return a.length === b.length && (0, _util.isUndefined)(a.find(function (v, index) {
      return (0, _util2.hasEq)(v) ? !v.eq(b[index]) : v !== b[index];
    }));
  }

  return false;
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./util.js":"node_modules/@polkadot/types-codec/utils/util.js"}],"node_modules/@polkadot/types-codec/abstract/Array.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AbstractArray = void 0;

var _util = require("@polkadot/util");

var _compareArray = require("../utils/compareArray.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/**
 * @name AbstractArray
 * @description
 * This manages codec arrays. It is an extension to Array, providing
 * specific encoding/decoding on top of the base type.
 * @noInheritDoc
 */
var AbstractArray = /*#__PURE__*/function (_Array, _Symbol$species) {
  _inherits(AbstractArray, _Array);

  var _super = _createSuper(AbstractArray);

  function AbstractArray(registry, length) {
    var _this;

    _classCallCheck(this, AbstractArray);

    _this = _super.call(this, length);
    _this.registry = registry;
    return _this;
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  _createClass(AbstractArray, [{
    key: "encodedLength",
    get: function get() {
      // We need to loop through all entries since they may have a variable length themselves,
      // e.g. when a Vec or Compact is contained withing, it has a variable length based on data
      var total = (0, _util.compactToU8a)(this.length).length;

      for (var i = 0; i < this.length; i++) {
        total += this[i].encodedLength;
      }

      return total;
    }
    /**
     * @description returns a hash of the contents
     */

  }, {
    key: "hash",
    get: function get() {
      return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the value is an empty value
     */

  }, {
    key: "isEmpty",
    get: function get() {
      return this.length === 0;
    }
    /**
     * @description The length of the value
     */

  }, {
    key: "length",
    get: function get() {
      // only included here since we ignore inherited docs
      return _get(_getPrototypeOf(AbstractArray.prototype), "length", this);
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */

  }, {
    key: "eq",
    value: function eq(other) {
      return (0, _compareArray.compareArray)(this, other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */

  }, {
    key: "inspect",
    value: function inspect() {
      return {
        inner: this.inspectInner(),
        outer: [(0, _util.compactToU8a)(this.length)]
      };
    }
  }, {
    key: "inspectInner",
    value: function inspectInner() {
      var inner = new Array(this.length);

      for (var i = 0; i < this.length; i++) {
        inner[i] = this[i].inspect();
      }

      return inner;
    }
    /**
     * @description Converts the Object to an standard JavaScript Array
     */

  }, {
    key: "toArray",
    value: function toArray() {
      return Array.from(this);
    }
    /**
     * @description Returns a hex string representation of the value
     */

  }, {
    key: "toHex",
    value: function toHex() {
      return (0, _util.u8aToHex)(this.toU8a());
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */

  }, {
    key: "toHuman",
    value: function toHuman(isExtended) {
      var result = new Array(this.length);

      for (var i = 0; i < this.length; i++) {
        result[i] = this[i].toHuman(isExtended);
      }

      return result;
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      var result = new Array(this.length);

      for (var i = 0; i < this.length; i++) {
        result[i] = this[i].toJSON();
      }

      return result;
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

    /**
     * @description Returns the string representation of the value
     */

  }, {
    key: "toString",
    value: function toString() {
      var result = new Array(this.length);

      for (var i = 0; i < this.length; i++) {
        result[i] = this[i].toString();
      }

      return "[".concat(result.join(', '), "]");
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */

  }, {
    key: "toU8a",
    value: function toU8a(isBare) {
      var encoded = this.toU8aInner();
      return isBare ? (0, _util.u8aConcatStrict)(encoded) : (0, _util.u8aConcatStrict)([(0, _util.compactToU8a)(this.length)].concat(_toConsumableArray(encoded)));
    }
  }, {
    key: "toU8aInner",
    value: function toU8aInner(isBare) {
      var encoded = new Array(this.length);

      for (var i = 0; i < this.length; i++) {
        encoded[i] = this[i].toU8a(isBare);
      }

      return encoded;
    }
  }], [{
    key: _Symbol$species,
    get:
    /**
     * @description This ensures that operators such as clice, filter, map, etc. return
     * new Array instances (without this we need to apply overrides)
     */
    function get() {
      return Array;
    }
  }]);

  return AbstractArray;
}( /*#__PURE__*/_wrapNativeSuper(Array), Symbol.species);

exports.AbstractArray = AbstractArray;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../utils/compareArray.js":"node_modules/@polkadot/types-codec/utils/compareArray.js"}],"node_modules/@polkadot/types-codec/abstract/Base.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AbstractBase = void 0;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

var _raw = /*#__PURE__*/new WeakMap();

// Copyright 2017-2022 @polkadot/types-codec authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name Base
 * @description A type extends the Base class, when it holds a value
 */
var AbstractBase = /*#__PURE__*/function () {
  function AbstractBase(registry, value, initialU8aLength) {
    _classCallCheck(this, AbstractBase);

    _classPrivateFieldInitSpec(this, _raw, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldSet(this, _raw, value);

    this.initialU8aLength = initialU8aLength;
    this.registry = registry;
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  _createClass(AbstractBase, [{
    key: "encodedLength",
    get: function get() {
      return this.toU8a().length;
    }
    /**
     * @description returns a hash of the contents
     */

  }, {
    key: "hash",
    get: function get() {
      return this.registry.hash(this.toU8a());
    }
  }, {
    key: "inner",
    get: function get() {
      return _classPrivateFieldGet(this, _raw);
    }
    /**
     * @description Checks if the value is an empty value
     */

  }, {
    key: "isEmpty",
    get: function get() {
      return _classPrivateFieldGet(this, _raw).isEmpty;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */

  }, {
    key: "eq",
    value: function eq(other) {
      return _classPrivateFieldGet(this, _raw).eq(other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */

  }, {
    key: "inspect",
    value: function inspect() {
      return _classPrivateFieldGet(this, _raw).inspect();
    }
    /**
     * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation
     */

  }, {
    key: "toHex",
    value: function toHex(isLe) {
      return _classPrivateFieldGet(this, _raw).toHex(isLe);
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */

  }, {
    key: "toHuman",
    value: function toHuman(isExtended) {
      return _classPrivateFieldGet(this, _raw).toHuman(isExtended);
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      return _classPrivateFieldGet(this, _raw).toJSON();
    }
    /**
     * @description Returns the string representation of the value
     */

  }, {
    key: "toString",
    value: function toString() {
      return _classPrivateFieldGet(this, _raw).toString();
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */

  }, {
    key: "toU8a",
    value: function toU8a(isBare) {
      return _classPrivateFieldGet(this, _raw).toU8a(isBare);
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return 'Base';
    }
  }, {
    key: "unwrap",
    value: function unwrap() {
      return _classPrivateFieldGet(this, _raw);
    }
  }]);

  return AbstractBase;
}();

exports.AbstractBase = AbstractBase;
},{}],"node_modules/@polkadot/types-codec/abstract/Int.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DEFAULT_UINT_BITS = exports.AbstractInt = void 0;

var _util = require("@polkadot/util");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

var DEFAULT_UINT_BITS = 64; // Maximum allowed integer for JS is 2^53 - 1, set limit at 52
// In this case however, we always print any >32 as hex

exports.DEFAULT_UINT_BITS = DEFAULT_UINT_BITS;
var MAX_NUMBER_BITS = 52;
var MUL_P = new _util.BN(10000);
var FORMATTERS = [['Perquintill', _util.BN_QUINTILL], ['Perbill', _util.BN_BILLION], ['Permill', _util.BN_MILLION], ['Percent', _util.BN_HUNDRED]];

function toPercentage(value, divisor) {
  return "".concat((value.mul(MUL_P).div(divisor).toNumber() / 100).toFixed(2), "%");
}
/** @internal */


function decodeAbstractInt(value, isNegative) {
  if ((0, _util.isNumber)(value)) {
    if (!Number.isInteger(value) || value > Number.MAX_SAFE_INTEGER || value < Number.MIN_SAFE_INTEGER) {
      throw new Error('Number needs to be an integer <= Number.MAX_SAFE_INTEGER, i.e. 2 ^ 53 - 1');
    }

    return value;
  } else if ((0, _util.isString)(value)) {
    if ((0, _util.isHex)(value, -1, true)) {
      return (0, _util.hexToBn)(value, {
        isLe: false,
        isNegative: isNegative
      }).toString();
    }

    if (value.includes('.') || value.includes(',') || value.includes('e')) {
      throw new Error('String should not contain decimal points or scientific notation');
    }

    return value;
  } else if ((0, _util.isBn)(value)) {
    return value.toString();
  }

  return (0, _util.bnToBn)(value).toString();
}
/**
 * @name AbstractInt
 * @ignore
 * @noInheritDoc
 */


var _bitLength = /*#__PURE__*/new WeakMap();

var AbstractInt = /*#__PURE__*/function (_BN) {
  _inherits(AbstractInt, _BN);

  var _super = _createSuper(AbstractInt);

  function AbstractInt(registry) {
    var _thisSuper, _thisSuper2, _this;

    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var bitLength = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_UINT_BITS;
    var isSigned = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

    _classCallCheck(this, AbstractInt);

    // Construct via a string/number, which will be passed in the BN constructor.
    // It would be ideal to actually return a BN, but there is an issue:
    // https://github.com/indutny/bn.js/issues/206
    _this = _super.call(this, // shortcut isU8a as used in SCALE decoding
    (0, _util.isU8a)(value) ? bitLength <= 48 ? (0, _util.u8aToNumber)(value.subarray(0, bitLength / 8), {
      isNegative: isSigned
    }) : (0, _util.u8aToBn)(value.subarray(0, bitLength / 8), {
      isLe: true,
      isNegative: isSigned
    }).toString() : decodeAbstractInt(value, isSigned));

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _bitLength, {
      writable: true,
      value: void 0
    });

    _this.registry = registry;

    _classPrivateFieldSet(_assertThisInitialized(_this), _bitLength, bitLength);

    _this.encodedLength = _classPrivateFieldGet(_assertThisInitialized(_this), _bitLength) / 8;
    _this.isUnsigned = !isSigned;

    var isNegative = _this.isNeg();

    var maxBits = bitLength - (isSigned && !isNegative ? 1 : 0);

    if (isNegative && !isSigned) {
      throw new Error("".concat(_this.toRawType(), ": Negative number passed to unsigned type"));
    } else if (_get((_thisSuper = _assertThisInitialized(_this), _getPrototypeOf(AbstractInt.prototype)), "bitLength", _thisSuper).call(_thisSuper) > maxBits) {
      throw new Error("".concat(_this.toRawType(), ": Input too large. Found input with ").concat(_get((_thisSuper2 = _assertThisInitialized(_this), _getPrototypeOf(AbstractInt.prototype)), "bitLength", _thisSuper2).call(_thisSuper2), " bits, expected ").concat(maxBits));
    }

    return _this;
  }
  /**
   * @description returns a hash of the contents
   */


  _createClass(AbstractInt, [{
    key: "hash",
    get: function get() {
      return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the value is a zero value (align elsewhere)
     */

  }, {
    key: "isEmpty",
    get: function get() {
      return this.isZero();
    }
    /**
     * @description Returns the number of bits in the value
     */

  }, {
    key: "bitLength",
    value: function bitLength() {
      return _classPrivateFieldGet(this, _bitLength);
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */
    // eslint-disable-next-line @typescript-eslint/no-explicit-any

  }, {
    key: "eq",
    value: function eq(other) {
      // Here we are actually overriding the built-in .eq to take care of both
      // number and BN inputs (no `.eqn` needed) - numbers will be converted
      return _get(_getPrototypeOf(AbstractInt.prototype), "eq", this).call(this, (0, _util.isHex)(other) ? (0, _util.hexToBn)(other.toString(), {
        isLe: false,
        isNegative: !this.isUnsigned
      }) : (0, _util.bnToBn)(other));
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */

  }, {
    key: "inspect",
    value: function inspect() {
      return {
        outer: [this.toU8a()]
      };
    }
    /**
     * @description True if this value is the max of the type
     */

  }, {
    key: "isMax",
    value: function isMax() {
      var u8a = this.toU8a().filter(function (b) {
        return b === 0xff;
      });
      return u8a.length === _classPrivateFieldGet(this, _bitLength) / 8;
    }
    /**
     * @description Returns a BigInt representation of the number
     */

  }, {
    key: "toBigInt",
    value: function toBigInt() {
      return BigInt(this.toString());
    }
    /**
     * @description Returns the BN representation of the number. (Compatibility)
     */

  }, {
    key: "toBn",
    value: function toBn() {
      return this;
    }
    /**
     * @description Returns a hex string representation of the value
     */

  }, {
    key: "toHex",
    value: function toHex() {
      var isLe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      // For display/JSON, this is BE, for compare, use isLe
      return (0, _util.bnToHex)(this, {
        bitLength: this.bitLength(),
        isLe: isLe,
        isNegative: !this.isUnsigned
      });
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    // eslint-disable-next-line @typescript-eslint/no-unused-vars

  }, {
    key: "toHuman",
    value: function toHuman(isExpanded) {
      var rawType = this.toRawType();

      if (rawType === 'Balance') {
        return this.isMax() ? 'everything' // FIXME In the case of multiples we need some way of detecting which instance this belongs
        // to. as it stands we will always format (incorrectly) against the first token defined
        : (0, _util.formatBalance)(this, {
          decimals: this.registry.chainDecimals[0],
          withSi: true,
          withUnit: this.registry.chainTokens[0]
        });
      }

      var _ref = FORMATTERS.find(function (_ref3) {
        var _ref4 = _slicedToArray(_ref3, 1),
            type = _ref4[0];

        return type === rawType;
      }) || [],
          _ref2 = _slicedToArray(_ref, 2),
          divisor = _ref2[1];

      return divisor ? toPercentage(this, divisor) : (0, _util.formatNumber)(this);
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      var onlyHex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      // FIXME this return type should by string | number, however BN returns string
      // Options here are
      //   - super.bitLength() - the actual used bits
      //   - this.#bitLength - the type bits (this should be used, however contracts RPC is problematic)
      return onlyHex || _get(_getPrototypeOf(AbstractInt.prototype), "bitLength", this).call(this) > MAX_NUMBER_BITS ? this.toHex() : this.toNumber();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      // NOTE In the case of balances, which have a special meaning on the UI
      // and can be interpreted differently, return a specific value for it so
      // underlying it always matches (no matter which length it actually is)
      return this instanceof this.registry.createClassUnsafe('Balance') ? 'Balance' : "".concat(this.isUnsigned ? 'u' : 'i').concat(this.bitLength());
    }
    /**
     * @description Returns the string representation of the value
     * @param base The base to use for the conversion
     */

  }, {
    key: "toString",
    value: function toString(base) {
      // only included here since we do not inherit docs
      return _get(_getPrototypeOf(AbstractInt.prototype), "toString", this).call(this, base);
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */
    // eslint-disable-next-line @typescript-eslint/no-unused-vars

  }, {
    key: "toU8a",
    value: function toU8a(isBare) {
      return (0, _util.bnToU8a)(this, {
        bitLength: this.bitLength(),
        isLe: true,
        isNegative: !this.isUnsigned
      });
    }
  }]);

  return AbstractInt;
}(_util.BN);

exports.AbstractInt = AbstractInt;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types-codec/abstract/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "AbstractArray", {
  enumerable: true,
  get: function () {
    return _Array.AbstractArray;
  }
});
Object.defineProperty(exports, "AbstractBase", {
  enumerable: true,
  get: function () {
    return _Base.AbstractBase;
  }
});
Object.defineProperty(exports, "AbstractInt", {
  enumerable: true,
  get: function () {
    return _Int.AbstractInt;
  }
});

var _Array = require("./Array.js");

var _Base = require("./Base.js");

var _Int = require("./Int.js");
},{"./Array.js":"node_modules/@polkadot/types-codec/abstract/Array.js","./Base.js":"node_modules/@polkadot/types-codec/abstract/Base.js","./Int.js":"node_modules/@polkadot/types-codec/abstract/Int.js"}],"node_modules/@polkadot/types-codec/utils/compareMap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.compareMap = compareMap;

var _util = require("@polkadot/util");

var _util2 = require("./util.js");

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function hasMismatch(a, b) {
  return (0, _util.isUndefined)(a) || ((0, _util2.hasEq)(a) ? !a.eq(b) : a !== b);
}

function notEntry(value) {
  return !Array.isArray(value) || value.length !== 2;
}

function compareMapArray(a, b) {
  // equal number of entries and each entry in the array should match
  return a.size === b.length && !b.some(function (e) {
    return notEntry(e) || hasMismatch(a.get(e[0]), e[1]);
  });
} // NOTE These are used internally and when comparing objects, expects that
// when the second is an Map<string, Codec> that the first has to be as well


function compareMap(a, b) {
  if (Array.isArray(b)) {
    return compareMapArray(a, b);
  } else if (b instanceof Map) {
    return compareMapArray(a, _toConsumableArray(b.entries()));
  } else if ((0, _util.isObject)(b)) {
    return compareMapArray(a, Object.entries(b));
  }

  return false;
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./util.js":"node_modules/@polkadot/types-codec/utils/util.js"}],"node_modules/@polkadot/types-codec/utils/compareSet.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.compareSet = compareSet;

var _util = require("@polkadot/util");

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function compareSetArray(a, b) {
  // equal number of entries and each entry in the array should match
  return a.size === b.length && !b.some(function (e) {
    return !a.has(e);
  });
} // NOTE These are used internally and when comparing objects, expects that
// when the second is an Set<string, Codec> that the first has to be as well


function compareSet(a, b) {
  if (Array.isArray(b)) {
    return compareSetArray(a, b);
  } else if (b instanceof Set) {
    return compareSetArray(a, _toConsumableArray(b.values()));
  } else if ((0, _util.isObject)(b)) {
    return compareSetArray(a, Object.values(b));
  }

  return false;
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types-codec/utils/decodeU8a.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.decodeU8a = decodeU8a;
exports.decodeU8aStruct = decodeU8aStruct;
exports.decodeU8aVec = decodeU8aVec;

var _util = require("@polkadot/util");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

/** @internal */
function formatFailure(registry, _ref, u8a, i, count, Type, key) {
  var message = _ref.message;
  var type = '';

  try {
    type = ": ".concat(new Type(registry).toRawType());
  } catch (_unused) {// ignore
  }

  return "decodeU8a: failed at ".concat((0, _util.u8aToHex)(u8a.subarray(0, 16)), "\u2026").concat(key ? " on ".concat(key) : '', " (index ").concat(i, "/").concat(count, ")").concat(type, ":: ").concat(message);
}
/**
 * @internal
 *
 * Given an u8a, and an array of Type constructors, decode the u8a against the
 * types, and return an array of decoded values.
 *
 * @param u8a - The u8a to decode.
 * @param result - The result array (will be returned with values pushed)
 * @param types - The array of CodecClass to decode the U8a against.
 */


function decodeU8a(registry, result, u8a, _ref2) {
  var _ref3 = _slicedToArray(_ref2, 2),
      Types = _ref3[0],
      keys = _ref3[1];

  var count = result.length;
  var offset = 0;
  var i = 0;

  try {
    while (i < count) {
      var value = new Types[i](registry, u8a.subarray(offset));
      offset += value.initialU8aLength || value.encodedLength;
      result[i] = value;
      i++;
    }
  } catch (error) {
    throw new Error(formatFailure(registry, error, u8a.subarray(offset), i, count, Types[i], keys[i]));
  }

  return [result, offset];
}
/**
 * @internal
 *
 * Split from decodeU8a since this is specialized to zip returns ... while we duplicate, this
 * is all on the hot-path, so it is not great, however there is (some) method behind the madness
 */


function decodeU8aStruct(registry, result, u8a, _ref4) {
  var _ref5 = _slicedToArray(_ref4, 2),
      Types = _ref5[0],
      keys = _ref5[1];

  var count = result.length;
  var offset = 0;
  var i = 0;

  try {
    while (i < count) {
      var value = new Types[i](registry, u8a.subarray(offset));
      offset += value.initialU8aLength || value.encodedLength;
      result[i] = [keys[i], value];
      i++;
    }
  } catch (error) {
    throw new Error(formatFailure(registry, error, u8a.subarray(offset), i, count, Types[i], keys[i]));
  }

  return [result, offset];
}
/**
 * @internal
 *
 * Split from decodeU8a since this is specialized to 1 instance ... while we duplicate, this
 * is all on the hot-path, so it is not great, however there is (some) method behind the madness
 */


function decodeU8aVec(registry, result, u8a, startAt, Type) {
  var count = result.length;
  var offset = startAt;
  var i = 0;

  try {
    while (i < count) {
      var value = new Type(registry, u8a.subarray(offset));
      offset += value.initialU8aLength || value.encodedLength;
      result[i] = value;
      i++;
    }
  } catch (error) {
    throw new Error(formatFailure(registry, error, u8a.subarray(offset), i, count, Type));
  }

  return [offset, offset - startAt];
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types-codec/utils/typeToConstructor.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.typeToConstructor = typeToConstructor;

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/types-codec authors & contributors
// SPDX-License-Identifier: Apache-2.0
function typeToConstructor(registry, type) {
  return (0, _util.isString)(type) ? registry.createClassUnsafe(type) : type;
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types-codec/utils/mapToTypeMap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mapToTypeMap = mapToTypeMap;

var _typeToConstructor = require("./typeToConstructor.js");

// Copyright 2017-2022 @polkadot/types-codec authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @description takes an input map of the form `{ [string]: string | CodecClass }` and returns a map of `{ [string]: CodecClass }`
 */
function mapToTypeMap(registry, input) {
  var entries = Object.entries(input);
  var count = entries.length;
  var output = [new Array(count), new Array(count)];

  for (var i = 0; i < count; i++) {
    output[1][i] = entries[i][0];
    output[0][i] = (0, _typeToConstructor.typeToConstructor)(registry, entries[i][1]);
  }

  return output;
}
},{"./typeToConstructor.js":"node_modules/@polkadot/types-codec/utils/typeToConstructor.js"}],"node_modules/@polkadot/types-codec/utils/sanitize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.alias = alias;
exports.cleanupCompact = cleanupCompact;
exports.findClosing = findClosing;
exports.flattenSingleTuple = flattenSingleTuple;
exports.removeColons = removeColons;
exports.removeExtensions = removeExtensions;
exports.removeGenerics = removeGenerics;
exports.removePairOf = removePairOf;
exports.removeTraits = removeTraits;
exports.removeWrap = removeWrap;
exports.sanitize = sanitize;
exports.trim = trim;
// Copyright 2017-2022 @polkadot/types-codec authors & contributors
// SPDX-License-Identifier: Apache-2.0
var BOUNDED = ['BTreeMap', 'BTreeSet', 'HashMap', 'Vec'];
var ALLOWED_BOXES = BOUNDED.concat(['Compact', 'DoNotConstruct', 'Int', 'Linkage', 'Range', 'RangeInclusive', 'Result', 'Option', 'UInt', 'WrapperKeepOpaque', 'WrapperOpaque']);
var BOX_PRECEDING = ['<', '(', '[', '"', ',', ' ']; // start of vec, tuple, fixed array, part of struct def or in tuple

var mappings = [// alias <T::InherentOfflineReport as InherentOfflineReport>::Inherent -> InherentOfflineReport
alias('<T::InherentOfflineReport as InherentOfflineReport>::Inherent', 'InherentOfflineReport', false), alias('VecDeque<', 'Vec<', false), // <T::Balance as HasCompact>
cleanupCompact(), // Change BoundedVec<Type, Size> to Vec<Type>
removeExtensions('Bounded', true), // Change WeakVec<Type> to Vec<Type>
removeExtensions('Weak', false), // Remove all the trait prefixes
removeTraits(), // remove PairOf<T> -> (T, T)
removePairOf(), // remove boxing, `Box<Proposal>` -> `Proposal`
removeWrap('Box<'), // remove generics, `MisbehaviorReport<Hash, BlockNumber>` -> `MisbehaviorReport`
removeGenerics(), // alias String -> Text (compat with jsonrpc methods)
alias('String', 'Text'), // alias Vec<u8> -> Bytes
alias('Vec<u8>', 'Bytes'), alias('&\\[u8\\]', 'Bytes'), alias("&'static\\[u8\\]", 'Bytes'), // alias RawAddress -> Address
alias('RawAddress', 'Address'), // lookups, mapped to Address/AccountId as appropriate in runtime
alias('Lookup::Source', 'LookupSource'), alias('Lookup::Target', 'LookupTarget'), // HACK duplication between contracts & primitives, however contracts prefixed with exec
alias('exec::StorageKey', 'ContractStorageKey'), // flattens tuples with one value, `(AccountId)` -> `AccountId`
flattenSingleTuple(), // converts ::Type to Type, <T as Trait<I>>::Proposal -> Proposal
removeColons(), // remove all trailing spaces - this should always be the last
trim()]; // given a string, trim it

function trim() {
  return function (value) {
    return value.trim();
  };
} // given a starting index, find the closing >


function findClosing(value, start) {
  var depth = 0;

  for (var index = start; index < value.length; index++) {
    if (value[index] === '>') {
      if (!depth) {
        return index;
      }

      depth--;
    } else if (value[index] === '<') {
      depth++;
    }
  }

  throw new Error("Unable to find closing matching <> on '".concat(value, "' (start ").concat(start, ")"));
}

function alias(src, dest) {
  var withChecks = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  var from = new RegExp("(^".concat(src, "|").concat(BOX_PRECEDING.map(function (box) {
    return "\\".concat(box).concat(src);
  }).join('|'), ")"), 'g');

  var to = function to(src) {
    from.lastIndex = 0;
    return withChecks && BOX_PRECEDING.includes(src[0]) ? "".concat(src[0]).concat(dest) : dest;
  };

  return function (value) {
    return value.replace(from, to);
  };
}

function cleanupCompact() {
  return function (value) {
    if (value.includes(' as HasCompact')) {
      for (var index = 0; index < value.length; index++) {
        if (value[index] === '<') {
          var end = findClosing(value, index + 1) - 14;

          if (value.substring(end, end + 14) === ' as HasCompact') {
            value = "Compact<".concat(value.substring(index + 1, end), ">");
          }
        }
      }
    }

    return value;
  };
}

function flattenSingleTuple() {
  var from1 = /,\)/g;
  var from2 = /\(([^,]+)\)/;
  return function (value) {
    from1.lastIndex = 0;
    return value // tuples may have trailing commas, e.g. (u32, BlockNumber, )
    .replace(from1, ')') // change (u32) -> u32
    .replace(from2, '$1');
  };
}

function replaceTagWith(value, matcher, replacer) {
  var index = -1;

  while (true) {
    index = value.indexOf(matcher, index + 1);

    if (index === -1) {
      return value;
    }

    var start = index + matcher.length;
    var end = findClosing(value, start);
    value = "".concat(value.substring(0, index)).concat(replacer(value.substring(start, end))).concat(value.substring(end + 1));
  }
} // remove the Bounded* or Weak* wrappers


function removeExtensions(type, isSized) {
  return function (value) {
    var _loop = function _loop(i) {
      var tag = BOUNDED[i];
      value = replaceTagWith(value, "".concat(type).concat(tag, "<"), function (v) {
        var parts = v.split(',').map(function (s) {
          return s.trim();
        }).filter(function (s) {
          return s;
        });

        if (isSized) {
          parts.pop();
        }

        return "".concat(tag, "<").concat(parts.join(','), ">");
      });
    };

    for (var i = 0; i < BOUNDED.length; i++) {
      _loop(i);
    }

    return value;
  };
}

function removeColons() {
  return function (value) {
    var index = 0;

    while (index !== -1) {
      index = value.indexOf('::');

      if (index === 0) {
        value = value.substring(2);
      } else if (index !== -1) {
        var start = index;

        while (start !== -1 && !BOX_PRECEDING.includes(value[start])) {
          start--;
        }

        value = "".concat(value.substring(0, start + 1)).concat(value.substring(index + 2));
      }
    }

    return value;
  };
}

function removeGenerics() {
  return function (value) {
    var _loop2 = function _loop2(index) {
      if (value[index] === '<') {
        // check against the allowed wrappers, be it Vec<..>, Option<...> ...
        var box = ALLOWED_BOXES.find(function (box) {
          var start = index - box.length;
          return start >= 0 && value.substring(start, index) === box && ( // make sure it is stand-alone, i.e. don't catch ElectionResult<...> as Result<...>
          start === 0 || BOX_PRECEDING.includes(value[start - 1]));
        }); // we have not found anything, unwrap generic innards

        if (!box) {
          var end = findClosing(value, index + 1);
          value = "".concat(value.substring(0, index)).concat(value.substring(end + 1));
        }
      }
    };

    for (var index = 0; index < value.length; index++) {
      _loop2(index);
    }

    return value;
  };
} // remove the PairOf wrappers


function removePairOf() {
  var replacer = function replacer(v) {
    return "(".concat(v, ",").concat(v, ")");
  };

  return function (value) {
    return replaceTagWith(value, 'PairOf<', replacer);
  };
} // remove the type traits


function removeTraits() {
  var from1 = /\s/g;
  var from2 = /(T|Self)::/g;
  var from3 = /<(T|Self)asTrait>::/g;
  var from4 = /<Tas[a-z]+::Trait>::/g;
  var from5 = /<LookupasStaticLookup>/g;
  var from6 = /::Type/g;
  return function (value) {
    from1.lastIndex = 0;
    from2.lastIndex = 0;
    from3.lastIndex = 0;
    from4.lastIndex = 0;
    from5.lastIndex = 0;
    from6.lastIndex = 0;
    return value // remove all whitespaces
    .replace(from1, '') // anything `T::<type>` to end up as `<type>`
    .replace(from2, '') // replace `<T as Trait>::` (whitespaces were removed above)
    .replace(from3, '') // replace `<T as something::Trait>::` (whitespaces were removed above)
    .replace(from4, '') // replace <Lookup as StaticLookup>
    .replace(from5, 'Lookup') // replace `<...>::Type`
    .replace(from6, '');
  };
} // remove wrapping values, i.e. Box<Proposal> -> Proposal


function removeWrap(check) {
  var replacer = function replacer(v) {
    return v;
  };

  return function (value) {
    return replaceTagWith(value, check, replacer);
  };
}

var sanitizeMap = new Map();

function sanitize(value) {
  var startValue = value.toString();
  var memoized = sanitizeMap.get(startValue);

  if (memoized) {
    return memoized;
  }

  var result = startValue;

  for (var i = 0; i < mappings.length; i++) {
    result = mappings[i](result);
  }

  sanitizeMap.set(startValue, result);
  return result;
}
},{}],"node_modules/@polkadot/types-codec/utils/sortValues.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sortAsc = sortAsc;
exports.sortMap = sortMap;
exports.sortSet = sortSet;

var _util = require("@polkadot/util");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

/** @internal **/
function isArrayLike(arg) {
  return arg instanceof Uint8Array || Array.isArray(arg);
}
/** @internal **/


function isCodec(arg) {
  return (0, _util.isFunction)(arg && arg.toU8a);
}
/** @internal **/


function isEnum(arg) {
  return isCodec(arg) && (0, _util.isNumber)(arg.index) && isCodec(arg.value);
}
/** @internal */


function isNumberLike(arg) {
  return (0, _util.isNumber)(arg) || (0, _util.isBn)(arg) || (0, _util.isBigInt)(arg);
}
/** @internal */


function sortArray(a, b) {
  // Vec, Tuple, Bytes etc.
  var sortRes = 0;
  var minLen = Math.min(a.length, b.length);

  for (var i = 0; i < minLen; ++i) {
    sortRes = sortAsc(a[i], b[i]);

    if (sortRes !== 0) {
      return sortRes;
    }
  }

  return a.length - b.length;
}
/**
* Sort keys/values of BTreeSet/BTreeMap in ascending order for encoding compatibility with Rust's BTreeSet/BTreeMap
* (https://doc.rust-lang.org/stable/std/collections/struct.BTreeSet.html)
* (https://doc.rust-lang.org/stable/std/collections/struct.BTreeMap.html)
*/


function sortAsc(a, b) {
  if (isNumberLike(a) && isNumberLike(b)) {
    return (0, _util.bnToBn)(a).cmp((0, _util.bnToBn)(b));
  } else if (a instanceof Map && b instanceof Map) {
    return sortAsc(Array.from(a.values()), Array.from(b.values()));
  } else if (isEnum(a) && isEnum(b)) {
    return sortAsc(a.index, b.index) || sortAsc(a.value, b.value);
  } else if (isArrayLike(a) && isArrayLike(b)) {
    return sortArray(a, b);
  } else if (isCodec(a) && isCodec(b)) {
    // Text, Bool etc.
    return sortAsc(a.toU8a(true), b.toU8a(true));
  }

  throw new Error("Attempting to sort unrecognized values: ".concat((0, _util.stringify)(a), " (typeof ").concat(_typeof(a), ") <-> ").concat((0, _util.stringify)(b), " (typeof ").concat(_typeof(b), ")"));
}

function sortSet(set) {
  return new Set(Array.from(set).sort(sortAsc));
}

function sortMap(map) {
  return new Map(Array.from(map.entries()).sort(function (_ref, _ref2) {
    var _ref3 = _slicedToArray(_ref, 1),
        keyA = _ref3[0];

    var _ref4 = _slicedToArray(_ref2, 1),
        keyB = _ref4[0];

    return sortAsc(keyA, keyB);
  }));
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types-codec/utils/typesToMap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.typesToMap = typesToMap;

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

// Copyright 2017-2022 @polkadot/types-codec authors & contributors
// SPDX-License-Identifier: Apache-2.0
function typesToMap(registry, _ref) {
  var _ref2 = _slicedToArray(_ref, 2),
      Types = _ref2[0],
      keys = _ref2[1];

  var result = {};

  for (var i = 0; i < keys.length; i++) {
    result[keys[i]] = registry.getClassName(Types[i]) || new Types[i](registry).toRawType();
  }

  return result;
}
},{}],"node_modules/@polkadot/types-codec/utils/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "compareArray", {
  enumerable: true,
  get: function () {
    return _compareArray.compareArray;
  }
});
Object.defineProperty(exports, "compareMap", {
  enumerable: true,
  get: function () {
    return _compareMap.compareMap;
  }
});
Object.defineProperty(exports, "compareSet", {
  enumerable: true,
  get: function () {
    return _compareSet.compareSet;
  }
});
Object.defineProperty(exports, "decodeU8a", {
  enumerable: true,
  get: function () {
    return _decodeU8a.decodeU8a;
  }
});
Object.defineProperty(exports, "decodeU8aStruct", {
  enumerable: true,
  get: function () {
    return _decodeU8a.decodeU8aStruct;
  }
});
Object.defineProperty(exports, "decodeU8aVec", {
  enumerable: true,
  get: function () {
    return _decodeU8a.decodeU8aVec;
  }
});
Object.defineProperty(exports, "mapToTypeMap", {
  enumerable: true,
  get: function () {
    return _mapToTypeMap.mapToTypeMap;
  }
});
Object.defineProperty(exports, "sanitize", {
  enumerable: true,
  get: function () {
    return _sanitize.sanitize;
  }
});
Object.defineProperty(exports, "sortAsc", {
  enumerable: true,
  get: function () {
    return _sortValues.sortAsc;
  }
});
Object.defineProperty(exports, "sortMap", {
  enumerable: true,
  get: function () {
    return _sortValues.sortMap;
  }
});
Object.defineProperty(exports, "sortSet", {
  enumerable: true,
  get: function () {
    return _sortValues.sortSet;
  }
});
Object.defineProperty(exports, "typeToConstructor", {
  enumerable: true,
  get: function () {
    return _typeToConstructor.typeToConstructor;
  }
});
Object.defineProperty(exports, "typesToMap", {
  enumerable: true,
  get: function () {
    return _typesToMap.typesToMap;
  }
});

var _compareArray = require("./compareArray.js");

var _compareMap = require("./compareMap.js");

var _compareSet = require("./compareSet.js");

var _decodeU8a = require("./decodeU8a.js");

var _mapToTypeMap = require("./mapToTypeMap.js");

var _typeToConstructor = require("./typeToConstructor.js");

var _sanitize = require("./sanitize.js");

var _sortValues = require("./sortValues.js");

var _typesToMap = require("./typesToMap.js");
},{"./compareArray.js":"node_modules/@polkadot/types-codec/utils/compareArray.js","./compareMap.js":"node_modules/@polkadot/types-codec/utils/compareMap.js","./compareSet.js":"node_modules/@polkadot/types-codec/utils/compareSet.js","./decodeU8a.js":"node_modules/@polkadot/types-codec/utils/decodeU8a.js","./mapToTypeMap.js":"node_modules/@polkadot/types-codec/utils/mapToTypeMap.js","./typeToConstructor.js":"node_modules/@polkadot/types-codec/utils/typeToConstructor.js","./sanitize.js":"node_modules/@polkadot/types-codec/utils/sanitize.js","./sortValues.js":"node_modules/@polkadot/types-codec/utils/sortValues.js","./typesToMap.js":"node_modules/@polkadot/types-codec/utils/typesToMap.js"}],"node_modules/@polkadot/types-codec/base/Compact.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Compact = void 0;

var _util = require("@polkadot/util");

var _index = require("../utils/index.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function noopSetDefinition(d) {
  return d;
}

function decodeCompact(registry, Type, value) {
  if ((0, _util.isU8a)(value)) {
    var _ref = (value[0] & 3) < 3 ? (0, _util.compactFromU8aLim)(value) : (0, _util.compactFromU8a)(value),
        _ref2 = _slicedToArray(_ref, 2),
        decodedLength = _ref2[0],
        bn = _ref2[1];

    return [new Type(registry, bn), decodedLength];
  } else if (value instanceof Compact) {
    var raw = value.unwrap();
    return raw instanceof Type ? [raw, 0] : [new Type(registry, raw), 0];
  } else if (value instanceof Type) {
    return [value, 0];
  }

  return [new Type(registry, value), 0];
}
/**
 * @name Compact
 * @description
 * A compact length-encoding codec wrapper. It performs the same function as Length, however
 * differs in that it uses a variable number of bytes to do the actual encoding. This is mostly
 * used by other types to add length-prefixed encoding, or in the case of wrapped types, taking
 * a number and making the compact representation thereof
 */


var _Type = /*#__PURE__*/new WeakMap();

var _raw = /*#__PURE__*/new WeakMap();

var Compact = /*#__PURE__*/function () {
  function Compact(registry, Type) {
    var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

    var _ref3 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
        definition = _ref3.definition,
        _ref3$setDefinition = _ref3.setDefinition,
        setDefinition = _ref3$setDefinition === void 0 ? noopSetDefinition : _ref3$setDefinition;

    _classCallCheck(this, Compact);

    _classPrivateFieldInitSpec(this, _Type, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(this, _raw, {
      writable: true,
      value: void 0
    });

    this.registry = registry;

    _classPrivateFieldSet(this, _Type, definition || setDefinition((0, _index.typeToConstructor)(registry, Type)));

    var _decodeCompact = decodeCompact(registry, _classPrivateFieldGet(this, _Type), value),
        _decodeCompact2 = _slicedToArray(_decodeCompact, 2),
        raw = _decodeCompact2[0],
        decodedLength = _decodeCompact2[1];

    this.initialU8aLength = decodedLength;

    _classPrivateFieldSet(this, _raw, raw);
  }

  _createClass(Compact, [{
    key: "encodedLength",
    get:
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    function get() {
      return this.toU8a().length;
    }
    /**
     * @description returns a hash of the contents
     */

  }, {
    key: "hash",
    get: function get() {
      return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the value is an empty value
     */

  }, {
    key: "isEmpty",
    get: function get() {
      return _classPrivateFieldGet(this, _raw).isEmpty;
    }
    /**
     * @description Returns the number of bits in the value
     */

  }, {
    key: "bitLength",
    value: function bitLength() {
      return _classPrivateFieldGet(this, _raw).bitLength();
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */

  }, {
    key: "eq",
    value: function eq(other) {
      return _classPrivateFieldGet(this, _raw).eq(other instanceof Compact ? _classPrivateFieldGet(other, _raw) : other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */

  }, {
    key: "inspect",
    value: function inspect() {
      return {
        outer: [this.toU8a()]
      };
    }
    /**
     * @description Returns a BigInt representation of the number
     */

  }, {
    key: "toBigInt",
    value: function toBigInt() {
      return _classPrivateFieldGet(this, _raw).toBigInt();
    }
    /**
     * @description Returns the BN representation of the number
     */

  }, {
    key: "toBn",
    value: function toBn() {
      return _classPrivateFieldGet(this, _raw).toBn();
    }
    /**
     * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation
     */

  }, {
    key: "toHex",
    value: function toHex(isLe) {
      return _classPrivateFieldGet(this, _raw).toHex(isLe);
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */

  }, {
    key: "toHuman",
    value: function toHuman(isExtended) {
      return _classPrivateFieldGet(this, _raw).toHuman(isExtended);
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      return _classPrivateFieldGet(this, _raw).toJSON();
    }
    /**
     * @description Returns the number representation for the value
     */

  }, {
    key: "toNumber",
    value: function toNumber() {
      return _classPrivateFieldGet(this, _raw).toNumber();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return "Compact<".concat(this.registry.getClassName(_classPrivateFieldGet(this, _Type)) || _classPrivateFieldGet(this, _raw).toRawType(), ">");
    }
    /**
     * @description Returns the string representation of the value
     */

  }, {
    key: "toString",
    value: function toString() {
      return _classPrivateFieldGet(this, _raw).toString();
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */
    // eslint-disable-next-line @typescript-eslint/no-unused-vars

  }, {
    key: "toU8a",
    value: function toU8a(isBare) {
      return (0, _util.compactToU8a)(_classPrivateFieldGet(this, _raw).toBn());
    }
    /**
     * @description Returns the embedded [[UInt]] or [[Moment]] value
     */

  }, {
    key: "unwrap",
    value: function unwrap() {
      return _classPrivateFieldGet(this, _raw);
    }
  }], [{
    key: "with",
    value: function _with(Type) {
      var definition; // eslint-disable-next-line no-return-assign

      var setDefinition = function setDefinition(d) {
        return definition = d;
      };

      return /*#__PURE__*/function (_Compact) {
        _inherits(_class, _Compact);

        var _super = _createSuper(_class);

        function _class(registry, value) {
          _classCallCheck(this, _class);

          return _super.call(this, registry, Type, value, {
            definition: definition,
            setDefinition: setDefinition
          });
        }

        return _createClass(_class);
      }(Compact);
    }
  }]);

  return Compact;
}();

exports.Compact = Compact;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../utils/index.js":"node_modules/@polkadot/types-codec/utils/index.js"}],"node_modules/@polkadot/types-codec/base/DoNotConstruct.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DoNotConstruct = void 0;

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

var _neverError = /*#__PURE__*/new WeakMap();

// Copyright 2017-2022 @polkadot/types-codec authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name DoNotConstruct
 * @description
 * An unknown type that fails on construction with the type info
 */
var DoNotConstruct = /*#__PURE__*/function () {
  function DoNotConstruct(registry) {
    var typeName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'DoNotConstruct';

    _classCallCheck(this, DoNotConstruct);

    _classPrivateFieldInitSpec(this, _neverError, {
      writable: true,
      value: void 0
    });

    this.registry = registry;

    _classPrivateFieldSet(this, _neverError, new Error("DoNotConstruct: Cannot construct unknown type ".concat(typeName)));

    throw _classPrivateFieldGet(this, _neverError);
  }

  _createClass(DoNotConstruct, [{
    key: "encodedLength",
    get:
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    function get() {
      throw _classPrivateFieldGet(this, _neverError);
    }
    /**
     * @description returns a hash of the contents
     */

  }, {
    key: "hash",
    get: function get() {
      throw _classPrivateFieldGet(this, _neverError);
    }
    /**
     * @description Checks if the value is an empty value (always true)
     */

  }, {
    key: "isEmpty",
    get: function get() {
      throw _classPrivateFieldGet(this, _neverError);
    }
  }, {
    key: "eq",
    value: function eq() {
      throw _classPrivateFieldGet(this, _neverError);
    }
  }, {
    key: "inspect",
    value: function inspect() {
      throw _classPrivateFieldGet(this, _neverError);
    }
  }, {
    key: "toHex",
    value: function toHex() {
      throw _classPrivateFieldGet(this, _neverError);
    }
  }, {
    key: "toHuman",
    value: function toHuman() {
      throw _classPrivateFieldGet(this, _neverError);
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      throw _classPrivateFieldGet(this, _neverError);
    }
  }, {
    key: "toRawType",
    value: function toRawType() {
      throw _classPrivateFieldGet(this, _neverError);
    }
  }, {
    key: "toString",
    value: function toString() {
      throw _classPrivateFieldGet(this, _neverError);
    }
  }, {
    key: "toU8a",
    value: function toU8a() {
      throw _classPrivateFieldGet(this, _neverError);
    }
  }], [{
    key: "with",
    value: function _with(typeName) {
      return /*#__PURE__*/function (_DoNotConstruct) {
        _inherits(_class, _DoNotConstruct);

        var _super = _createSuper(_class);

        function _class(registry) {
          _classCallCheck(this, _class);

          return _super.call(this, registry, typeName);
        }

        return _createClass(_class);
      }(DoNotConstruct);
    }
  }]);

  return DoNotConstruct;
}();

exports.DoNotConstruct = DoNotConstruct;
},{}],"node_modules/@polkadot/types-codec/base/Null.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Null = void 0;

var _util = require("@polkadot/util");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * @name Null
 * @description
 * Implements a type that does not contain anything (apart from `null`)
 */
var Null = /*#__PURE__*/function () {
  // Added for compatibility reasons, e.g. see Option
  function Null(registry) {
    _classCallCheck(this, Null);

    _defineProperty(this, "encodedLength", 0);

    _defineProperty(this, "isEmpty", true);

    _defineProperty(this, "initialU8aLength", 0);

    this.registry = registry;
  }
  /**
   * @description returns a hash of the contents
   */


  _createClass(Null, [{
    key: "hash",
    get: function get() {
      throw new Error('.hash is not implemented on Null');
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */

  }, {
    key: "eq",
    value: function eq(other) {
      return other instanceof Null || (0, _util.isNull)(other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */

  }, {
    key: "inspect",
    value: function inspect() {
      return {};
    }
    /**
     * @description Returns a hex string representation of the value
     */

  }, {
    key: "toHex",
    value: function toHex() {
      return '0x';
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */

  }, {
    key: "toHuman",
    value: function toHuman() {
      return this.toJSON();
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      return null;
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return 'Null';
    }
    /**
     * @description Returns the string representation of the value
     */

  }, {
    key: "toString",
    value: function toString() {
      return '';
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */
    // eslint-disable-next-line @typescript-eslint/no-unused-vars

  }, {
    key: "toU8a",
    value: function toU8a(isBare) {
      return new Uint8Array();
    }
  }]);

  return Null;
}();

exports.Null = Null;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types-codec/base/Enum.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Enum = void 0;

var _util = require("@polkadot/util");

var _index = require("../utils/index.js");

var _Null = require("./Null.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

// export interface, this is used in Enum.with, so required as public by TS
function noopSetDefinition(d) {
  return d;
}

function isRustEnum(def) {
  var defValues = Object.values(def);

  if (defValues.some(function (v) {
    return (0, _util.isNumber)(v);
  })) {
    if (!defValues.every(function (v) {
      return (0, _util.isNumber)(v) && v >= 0 && v <= 255;
    })) {
      throw new Error('Invalid number-indexed enum definition');
    }

    return false;
  }

  return true;
}

function extractDef(registry, _def) {
  var def = {};
  var isBasic;
  var isIndexed;

  if (Array.isArray(_def)) {
    for (var i = 0; i < _def.length; i++) {
      def[_def[i]] = {
        Type: _Null.Null,
        index: i
      };
    }

    isBasic = true;
    isIndexed = false;
  } else if (isRustEnum(_def)) {
    var _mapToTypeMap = (0, _index.mapToTypeMap)(registry, _def),
        _mapToTypeMap2 = _slicedToArray(_mapToTypeMap, 2),
        Types = _mapToTypeMap2[0],
        keys = _mapToTypeMap2[1];

    for (var _i2 = 0; _i2 < keys.length; _i2++) {
      def[keys[_i2]] = {
        Type: Types[_i2],
        index: _i2
      };
    }

    isBasic = !Object.values(def).some(function (_ref) {
      var Type = _ref.Type;
      return Type !== _Null.Null;
    });
    isIndexed = false;
  } else {
    var entries = Object.entries(_def);

    for (var _i3 = 0; _i3 < entries.length; _i3++) {
      var _entries$_i = _slicedToArray(entries[_i3], 2),
          key = _entries$_i[0],
          index = _entries$_i[1];

      def[key] = {
        Type: _Null.Null,
        index: index
      };
    }

    isBasic = true;
    isIndexed = true;
  }

  return {
    def: def,
    isBasic: isBasic,
    isIndexed: isIndexed
  };
}

function getEntryType(def, checkIdx) {
  var values = Object.values(def);

  for (var i = 0; i < values.length; i++) {
    var _values$i = values[i],
        Type = _values$i.Type,
        index = _values$i.index;

    if (index === checkIdx) {
      return Type;
    }
  }

  throw new Error("Unable to create Enum via index ".concat(checkIdx, ", in ").concat(Object.keys(def).join(', ')));
}

function createFromU8a(registry, def, index, value) {
  var Type = getEntryType(def, index);
  return {
    index: index,
    value: new Type(registry, value)
  };
}

function createFromValue(registry, def) {
  var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
  var value = arguments.length > 3 ? arguments[3] : undefined;
  var Type = getEntryType(def, index);
  return {
    index: index,
    value: value instanceof Type ? value : new Type(registry, value)
  };
}

function decodeFromJSON(registry, def, key, value) {
  // JSON comes in the form of { "<type (camelCase)>": "<value for type>" }, here we
  // additionally force to lower to ensure forward compat
  var keys = Object.keys(def).map(function (k) {
    return k.toLowerCase();
  });
  var keyLower = key.toLowerCase();
  var index = keys.indexOf(keyLower);

  if (index === -1) {
    throw new Error("Cannot map Enum JSON, unable to find '".concat(key, "' in ").concat(keys.join(', ')));
  }

  try {
    return createFromValue(registry, def, Object.values(def)[index].index, value);
  } catch (error) {
    throw new Error("Enum(".concat(key, "):: ").concat(error.message));
  }
}

function decodeEnum(registry, def, value, index) {
  // NOTE We check the index path first, before looking at values - this allows treating
  // the optional indexes before anything else, more-specific > less-specific
  if ((0, _util.isNumber)(index)) {
    return createFromValue(registry, def, index, value);
  } else if ((0, _util.isU8a)(value) || (0, _util.isHex)(value)) {
    var u8a = (0, _util.u8aToU8a)(value); // nested, we don't want to match isObject below

    if (u8a.length) {
      return createFromU8a(registry, def, u8a[0], u8a.subarray(1));
    }
  } else if (value instanceof Enum) {
    return createFromValue(registry, def, value.index, value.value);
  } else if ((0, _util.isNumber)(value)) {
    return createFromValue(registry, def, value);
  } else if ((0, _util.isString)(value)) {
    return decodeFromJSON(registry, def, value.toString());
  } else if ((0, _util.isObject)(value)) {
    var key = Object.keys(value)[0];
    return decodeFromJSON(registry, def, key, value[key]);
  } // Worst-case scenario, return the first with default


  return createFromValue(registry, def, Object.values(def)[0].index);
}
/**
 * @name Enum
 * @description
 * This implements an enum, that based on the value wraps a different type. It is effectively
 * an extension to enum where the value type is determined by the actual index.
 */


var _def2 = /*#__PURE__*/new WeakMap();

var _entryIndex = /*#__PURE__*/new WeakMap();

var _indexes = /*#__PURE__*/new WeakMap();

var _isBasic = /*#__PURE__*/new WeakMap();

var _isIndexed = /*#__PURE__*/new WeakMap();

var _raw = /*#__PURE__*/new WeakMap();

var Enum = /*#__PURE__*/function () {
  function Enum(registry, Types, value, index) {
    var _ref2 = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {},
        definition = _ref2.definition,
        _ref2$setDefinition = _ref2.setDefinition,
        setDefinition = _ref2$setDefinition === void 0 ? noopSetDefinition : _ref2$setDefinition;

    _classCallCheck(this, Enum);

    _classPrivateFieldInitSpec(this, _def2, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(this, _entryIndex, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(this, _indexes, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(this, _isBasic, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(this, _isIndexed, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(this, _raw, {
      writable: true,
      value: void 0
    });

    var _ref3 = definition || setDefinition(extractDef(registry, Types)),
        def = _ref3.def,
        isBasic = _ref3.isBasic,
        isIndexed = _ref3.isIndexed; // shortcut isU8a as used in SCALE decoding


    var decoded = (0, _util.isU8a)(value) && value.length && !(0, _util.isNumber)(index) ? createFromU8a(registry, def, value[0], value.subarray(1)) : decodeEnum(registry, def, value, index);
    this.registry = registry;

    _classPrivateFieldSet(this, _def2, def);

    _classPrivateFieldSet(this, _isBasic, isBasic);

    _classPrivateFieldSet(this, _isIndexed, isIndexed);

    _classPrivateFieldSet(this, _indexes, Object.values(def).map(function (_ref4) {
      var index = _ref4.index;
      return index;
    }));

    _classPrivateFieldSet(this, _entryIndex, _classPrivateFieldGet(this, _indexes).indexOf(decoded.index));

    _classPrivateFieldSet(this, _raw, decoded.value);

    if (_classPrivateFieldGet(this, _raw).initialU8aLength) {
      this.initialU8aLength = 1 + _classPrivateFieldGet(this, _raw).initialU8aLength;
    }
  }

  _createClass(Enum, [{
    key: "encodedLength",
    get:
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    function get() {
      return 1 + _classPrivateFieldGet(this, _raw).encodedLength;
    }
    /**
     * @description returns a hash of the contents
     */

  }, {
    key: "hash",
    get: function get() {
      return this.registry.hash(this.toU8a());
    }
    /**
     * @description The index of the enum value
     */

  }, {
    key: "index",
    get: function get() {
      return _classPrivateFieldGet(this, _indexes)[_classPrivateFieldGet(this, _entryIndex)];
    }
    /**
     * @description The value of the enum
     */

  }, {
    key: "inner",
    get: function get() {
      return _classPrivateFieldGet(this, _raw);
    }
    /**
     * @description true if this is a basic enum (no values)
     */

  }, {
    key: "isBasic",
    get: function get() {
      return _classPrivateFieldGet(this, _isBasic);
    }
    /**
     * @description Checks if the value is an empty value
     */

  }, {
    key: "isEmpty",
    get: function get() {
      return _classPrivateFieldGet(this, _raw).isEmpty;
    }
    /**
     * @description Checks if the Enum points to a [[Null]] type
     */

  }, {
    key: "isNone",
    get: function get() {
      return _classPrivateFieldGet(this, _raw) instanceof _Null.Null;
    }
    /**
     * @description Checks if the Enum points to a [[Null]] type
     * @deprecated use isNone
     */

  }, {
    key: "isNull",
    get: function get() {
      return this.isNone;
    }
    /**
     * @description The available keys for this enum
     */

  }, {
    key: "defIndexes",
    get: function get() {
      return _classPrivateFieldGet(this, _indexes);
    }
    /**
     * @description The available keys for this enum
     */

  }, {
    key: "defKeys",
    get: function get() {
      return Object.keys(_classPrivateFieldGet(this, _def2));
    }
    /**
     * @description The name of the type this enum value represents
     */

  }, {
    key: "type",
    get: function get() {
      return this.defKeys[_classPrivateFieldGet(this, _entryIndex)];
    }
    /**
     * @description The value of the enum
     */

  }, {
    key: "value",
    get: function get() {
      return _classPrivateFieldGet(this, _raw);
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */

  }, {
    key: "eq",
    value: function eq(other) {
      // cater for the case where we only pass the enum index
      if ((0, _util.isU8a)(other)) {
        return !this.toU8a().some(function (entry, index) {
          return entry !== other[index];
        });
      } else if ((0, _util.isNumber)(other)) {
        return this.toNumber() === other;
      } else if (_classPrivateFieldGet(this, _isBasic) && (0, _util.isString)(other)) {
        return this.type === other;
      } else if ((0, _util.isHex)(other)) {
        return this.toHex() === other;
      } else if (other instanceof Enum) {
        return this.index === other.index && this.value.eq(other.value);
      } else if ((0, _util.isObject)(other)) {
        return this.value.eq(other[this.type]);
      } // compare the actual wrapper value


      return this.value.eq(other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */

  }, {
    key: "inspect",
    value: function inspect() {
      if (_classPrivateFieldGet(this, _isBasic)) {
        return {
          outer: [new Uint8Array([this.index])]
        };
      }

      var _classPrivateFieldGet2 = _classPrivateFieldGet(this, _raw).inspect(),
          inner = _classPrivateFieldGet2.inner,
          _classPrivateFieldGet3 = _classPrivateFieldGet2.outer,
          outer = _classPrivateFieldGet3 === void 0 ? [] : _classPrivateFieldGet3;

      return {
        inner: inner,
        outer: [new Uint8Array([this.index])].concat(_toConsumableArray(outer))
      };
    }
    /**
     * @description Returns a hex string representation of the value
     */

  }, {
    key: "toHex",
    value: function toHex() {
      return (0, _util.u8aToHex)(this.toU8a());
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */

  }, {
    key: "toHuman",
    value: function toHuman(isExtended) {
      return _classPrivateFieldGet(this, _isBasic) || this.isNone ? this.type : _defineProperty({}, this.type, _classPrivateFieldGet(this, _raw).toHuman(isExtended));
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      return _classPrivateFieldGet(this, _isBasic) ? this.type : _defineProperty({}, (0, _util.stringCamelCase)(this.type), _classPrivateFieldGet(this, _raw).toJSON());
    }
    /**
     * @description Returns the number representation for the value
     */

  }, {
    key: "toNumber",
    value: function toNumber() {
      return this.index;
    }
    /**
     * @description Returns a raw struct representation of the enum types
     */

  }, {
    key: "_toRawStruct",
    value: function _toRawStruct() {
      var _this = this;

      if (_classPrivateFieldGet(this, _isBasic)) {
        return _classPrivateFieldGet(this, _isIndexed) ? this.defKeys.reduce(function (out, key, index) {
          out[key] = _classPrivateFieldGet(_this, _indexes)[index];
          return out;
        }, {}) : this.defKeys;
      }

      var entries = Object.entries(_classPrivateFieldGet(this, _def2));
      return (0, _index.typesToMap)(this.registry, entries.reduce(function (out, _ref7, i) {
        var _ref8 = _slicedToArray(_ref7, 2),
            key = _ref8[0],
            Type = _ref8[1].Type;

        out[0][i] = Type;
        out[1][i] = key;
        return out;
      }, [new Array(entries.length), new Array(entries.length)]));
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return (0, _util.stringify)({
        _enum: this._toRawStruct()
      });
    }
    /**
     * @description Returns the string representation of the value
     */

  }, {
    key: "toString",
    value: function toString() {
      return this.isNone ? this.type : (0, _util.stringify)(this.toJSON());
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */

  }, {
    key: "toU8a",
    value: function toU8a(isBare) {
      return isBare ? _classPrivateFieldGet(this, _raw).toU8a(isBare) : (0, _util.u8aConcatStrict)([new Uint8Array([this.index]), _classPrivateFieldGet(this, _raw).toU8a(isBare)]);
    }
  }], [{
    key: "with",
    value: function _with(Types) {
      var keys = Array.isArray(Types) ? Types : Object.keys(Types);
      var asKeys = new Array(keys.length);
      var isKeys = new Array(keys.length);

      for (var i = 0; i < keys.length; i++) {
        var name = (0, _util.stringPascalCase)(keys[i]);
        asKeys[i] = "as".concat(name);
        isKeys[i] = "is".concat(name);
      }

      var definition; // eslint-disable-next-line no-return-assign

      var setDefinition = function setDefinition(d) {
        return definition = d;
      };

      return /*#__PURE__*/function (_Enum) {
        _inherits(_class, _Enum);

        var _super = _createSuper(_class);

        function _class(registry, value, index) {
          var _this2;

          _classCallCheck(this, _class);

          _this2 = _super.call(this, registry, Types, value, index, {
            definition: definition,
            setDefinition: setDefinition
          });
          (0, _util.objectProperties)(_assertThisInitialized(_this2), isKeys, function (_, i) {
            return _this2.type === keys[i];
          });
          (0, _util.objectProperties)(_assertThisInitialized(_this2), asKeys, function (k, i) {
            if (!_this2[isKeys[i]]) {
              throw new Error("Cannot convert '".concat(_this2.type, "' via ").concat(k));
            }

            return _this2.value;
          });
          return _this2;
        }

        return _createClass(_class);
      }(Enum);
    }
  }]);

  return Enum;
}();

exports.Enum = Enum;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../utils/index.js":"node_modules/@polkadot/types-codec/utils/index.js","./Null.js":"node_modules/@polkadot/types-codec/base/Null.js"}],"node_modules/@polkadot/types-codec/base/Int.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Int = void 0;

var _Int2 = require("../abstract/Int.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/**
 * @name Int
 * @description
 * A generic signed integer codec. For Substrate all numbers are Little Endian encoded,
 * this handles the encoding and decoding of those numbers. Upon construction
 * the bitLength is provided and any additional use keeps the number to this
 * length. This extends `BN`, so all methods available on a normal `BN` object
 * is available here.
 * @noInheritDoc
 */
var Int = /*#__PURE__*/function (_AbstractInt) {
  _inherits(Int, _AbstractInt);

  var _super = _createSuper(Int);

  function Int(registry) {
    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var bitLength = arguments.length > 2 ? arguments[2] : undefined;

    _classCallCheck(this, Int);

    return _super.call(this, registry, value, bitLength, true);
  }

  _createClass(Int, null, [{
    key: "with",
    value: function _with(bitLength, typeName) {
      return /*#__PURE__*/function (_Int) {
        _inherits(_class, _Int);

        var _super2 = _createSuper(_class);

        function _class(registry, value) {
          _classCallCheck(this, _class);

          return _super2.call(this, registry, value, bitLength);
        }

        _createClass(_class, [{
          key: "toRawType",
          value: function toRawType() {
            return typeName || _get(_getPrototypeOf(_class.prototype), "toRawType", this).call(this);
          }
        }]);

        return _class;
      }(Int);
    }
  }]);

  return Int;
}(_Int2.AbstractInt);

exports.Int = Int;
},{"../abstract/Int.js":"node_modules/@polkadot/types-codec/abstract/Int.js"}],"node_modules/@polkadot/types-codec/base/Option.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Option = void 0;

var _util = require("@polkadot/util");

var _index = require("../utils/index.js");

var _Null2 = require("./Null.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function noopSetDefinition(d) {
  return d;
}

var None = /*#__PURE__*/function (_Null) {
  _inherits(None, _Null);

  var _super = _createSuper(None);

  function None() {
    _classCallCheck(this, None);

    return _super.apply(this, arguments);
  }

  _createClass(None, [{
    key: "toRawType",
    value:
    /**
     * @description Returns the base runtime type name for this instance
     */
    function toRawType() {
      return 'None';
    }
  }]);

  return None;
}(_Null2.Null);
/** @internal */


function decodeOption(registry, Type, value) {
  if (value instanceof Type) {
    // don't re-create, use as it (which also caters for derived types)
    return value;
  } else if (value instanceof Option) {
    if (value.value instanceof Type) {
      // same instance, return it
      return value.value;
    } else if (value.isNone) {
      // internal is None, we are also none
      return new None(registry);
    } // convert the actual value into known


    return new Type(registry, value.value);
  } else if ((0, _util.isNull)(value) || (0, _util.isUndefined)(value) || value === '0x' || value instanceof None) {
    // anyhting empty we pass as-is
    return new None(registry);
  } else if ((0, _util.isU8a)(value)) {
    // the isU8a check happens last in the if-tree - since the wrapped value
    // may be an instance of it, so Type and Option checks go in first
    return !value.length || value[0] === 0 ? new None(registry) : new Type(registry, value.subarray(1));
  }

  return new Type(registry, value);
}
/**
 * @name Option
 * @description
 * An Option is an optional field. Basically the first byte indicates that there is
 * is value to follow. If the byte is `1` there is an actual value. So the Option
 * implements that - decodes, checks for optionality and wraps the required structure
 * with a value if/as required/found.
 */


var _Type = /*#__PURE__*/new WeakMap();

var _raw = /*#__PURE__*/new WeakMap();

var Option = /*#__PURE__*/function () {
  function Option(registry, typeName, value) {
    var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
        definition = _ref.definition,
        _ref$setDefinition = _ref.setDefinition,
        setDefinition = _ref$setDefinition === void 0 ? noopSetDefinition : _ref$setDefinition;

    _classCallCheck(this, Option);

    _classPrivateFieldInitSpec(this, _Type, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(this, _raw, {
      writable: true,
      value: void 0
    });

    var Type = definition || setDefinition((0, _index.typeToConstructor)(registry, typeName));
    var decoded = (0, _util.isU8a)(value) && value.length && !(0, _util.isCodec)(value) ? value[0] === 0 ? new None(registry) : new Type(registry, value.subarray(1)) : decodeOption(registry, Type, value);
    this.registry = registry;

    _classPrivateFieldSet(this, _Type, Type);

    _classPrivateFieldSet(this, _raw, decoded);

    if (decoded && decoded.initialU8aLength) {
      this.initialU8aLength = 1 + decoded.initialU8aLength;
    }
  }

  _createClass(Option, [{
    key: "encodedLength",
    get:
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    function get() {
      // boolean byte (has value, doesn't have) along with wrapped length
      return 1 + _classPrivateFieldGet(this, _raw).encodedLength;
    }
    /**
     * @description returns a hash of the contents
     */

  }, {
    key: "hash",
    get: function get() {
      return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the Option has no value
     */

  }, {
    key: "isEmpty",
    get: function get() {
      return this.isNone;
    }
    /**
     * @description Checks if the Option has no value
     */

  }, {
    key: "isNone",
    get: function get() {
      return _classPrivateFieldGet(this, _raw) instanceof None;
    }
    /**
     * @description Checks if the Option has a value
     */

  }, {
    key: "isSome",
    get: function get() {
      return !this.isNone;
    }
    /**
     * @description The actual value for the Option
     */

  }, {
    key: "value",
    get: function get() {
      return _classPrivateFieldGet(this, _raw);
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */

  }, {
    key: "eq",
    value: function eq(other) {
      if (other instanceof Option) {
        return this.isSome === other.isSome && this.value.eq(other.value);
      }

      return this.value.eq(other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */

  }, {
    key: "inspect",
    value: function inspect() {
      if (this.isNone) {
        return {
          outer: [new Uint8Array([0])]
        };
      }

      var _classPrivateFieldGet2 = _classPrivateFieldGet(this, _raw).inspect(),
          inner = _classPrivateFieldGet2.inner,
          _classPrivateFieldGet3 = _classPrivateFieldGet2.outer,
          outer = _classPrivateFieldGet3 === void 0 ? [] : _classPrivateFieldGet3;

      return {
        inner: inner,
        outer: [new Uint8Array([1])].concat(_toConsumableArray(outer))
      };
    }
    /**
     * @description Returns a hex string representation of the value
     */

  }, {
    key: "toHex",
    value: function toHex() {
      // This attempts to align with the JSON encoding - actually in this case
      // the isSome value is correct, however the `isNone` may be problematic
      return this.isNone ? '0x' : (0, _util.u8aToHex)(this.toU8a().subarray(1));
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */

  }, {
    key: "toHuman",
    value: function toHuman(isExtended) {
      return _classPrivateFieldGet(this, _raw).toHuman(isExtended);
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      return this.isNone ? null : _classPrivateFieldGet(this, _raw).toJSON();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType(isBare) {
      var wrapped = this.registry.getClassName(_classPrivateFieldGet(this, _Type)) || new (_classPrivateFieldGet(this, _Type))(this.registry).toRawType();
      return isBare ? wrapped : "Option<".concat(wrapped, ">");
    }
    /**
     * @description Returns the string representation of the value
     */

  }, {
    key: "toString",
    value: function toString() {
      return _classPrivateFieldGet(this, _raw).toString();
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */

  }, {
    key: "toU8a",
    value: function toU8a(isBare) {
      if (isBare) {
        return _classPrivateFieldGet(this, _raw).toU8a(true);
      }

      var u8a = new Uint8Array(this.encodedLength);

      if (this.isSome) {
        u8a.set([1]);
        u8a.set(_classPrivateFieldGet(this, _raw).toU8a(), 1);
      }

      return u8a;
    }
    /**
     * @description Returns the value that the Option represents (if available), throws if null
     */

  }, {
    key: "unwrap",
    value: function unwrap() {
      if (this.isNone) {
        throw new Error('Option: unwrapping a None value');
      }

      return _classPrivateFieldGet(this, _raw);
    }
    /**
     * @description Returns the value that the Option represents (if available) or defaultValue if none
     * @param defaultValue The value to return if the option isNone
     */

  }, {
    key: "unwrapOr",
    value: function unwrapOr(defaultValue) {
      return this.isSome ? this.unwrap() : defaultValue;
    }
    /**
     * @description Returns the value that the Option represents (if available) or defaultValue if none
     * @param defaultValue The value to return if the option isNone
     */

  }, {
    key: "unwrapOrDefault",
    value: function unwrapOrDefault() {
      return this.isSome ? this.unwrap() : new (_classPrivateFieldGet(this, _Type))(this.registry);
    }
  }], [{
    key: "with",
    value: function _with(Type) {
      var definition;

      var setDefinition = function setDefinition(d) {
        definition = d;
        return d;
      };

      return /*#__PURE__*/function (_Option) {
        _inherits(_class, _Option);

        var _super2 = _createSuper(_class);

        function _class(registry, value) {
          _classCallCheck(this, _class);

          return _super2.call(this, registry, Type, value, {
            definition: definition,
            setDefinition: setDefinition
          });
        }

        return _createClass(_class);
      }(Option);
    }
  }]);

  return Option;
}();

exports.Option = Option;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../utils/index.js":"node_modules/@polkadot/types-codec/utils/index.js","./Null.js":"node_modules/@polkadot/types-codec/base/Null.js"}],"node_modules/@polkadot/types-codec/base/Result.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Result = void 0;

var _Enum2 = require("./Enum.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/**
 * @name Result
 * @description
 * A Result maps to the Rust Result type, that can either wrap a success or error value
 */
var Result = /*#__PURE__*/function (_Enum) {
  _inherits(Result, _Enum);

  var _super = _createSuper(Result);

  function Result(registry, Ok, Err, value) {
    _classCallCheck(this, Result);

    // NOTE This is order-dependent, Ok (with index 0) needs to be first
    // eslint-disable-next-line sort-keys
    return _super.call(this, registry, {
      Ok: Ok,
      Err: Err
    }, value);
  }

  _createClass(Result, [{
    key: "asErr",
    get:
    /**
     * @description Returns the wrapper Err value (if isErr)
     */
    function get() {
      if (!this.isErr) {
        throw new Error('Cannot extract Err value from Ok result, check isErr first');
      }

      return this.value;
    }
    /**
     * @deprecated Use asErr
     */

  }, {
    key: "asError",
    get: function get() {
      return this.asErr;
    }
    /**
     * @description Returns the wrapper Ok value (if isOk)
     */

  }, {
    key: "asOk",
    get: function get() {
      if (!this.isOk) {
        throw new Error('Cannot extract Ok value from Err result, check isOk first');
      }

      return this.value;
    }
    /**
     * @description Checks if the Result has no value
     */

  }, {
    key: "isEmpty",
    get: function get() {
      return this.isOk && this.value.isEmpty;
    }
    /**
     * @description Checks if the Result wraps an Err value
     */

  }, {
    key: "isErr",
    get: function get() {
      return !this.isOk;
    }
    /**
     * @deprecated Use isErr
     */

  }, {
    key: "isError",
    get: function get() {
      return this.isErr;
    }
    /**
     * @description Checks if the Result wraps an Ok value
     */

  }, {
    key: "isOk",
    get: function get() {
      return this.index === 0;
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      var Types = this._toRawStruct();

      return "Result<".concat(Types.Ok, ",").concat(Types.Err, ">");
    }
  }], [{
    key: "with",
    value: function _with(Types) {
      return /*#__PURE__*/function (_Result) {
        _inherits(_class, _Result);

        var _super2 = _createSuper(_class);

        function _class(registry, value) {
          _classCallCheck(this, _class);

          return _super2.call(this, registry, Types.Ok, Types.Err, value);
        }

        return _createClass(_class);
      }(Result);
    }
  }]);

  return Result;
}(_Enum2.Enum);

exports.Result = Result;
},{"./Enum.js":"node_modules/@polkadot/types-codec/base/Enum.js"}],"node_modules/@polkadot/types-codec/base/Tuple.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Tuple = void 0;

var _util = require("@polkadot/util");

var _Array = require("../abstract/Array.js");

var _index = require("../utils/index.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

function noopSetDefinition(d) {
  return d;
}
/** @internal */


function decodeTuple(registry, result, value, Classes) {
  if ((0, _util.isU8a)(value) || (0, _util.isHex)(value)) {
    return (0, _index.decodeU8a)(registry, result, (0, _util.u8aToU8a)(value), Classes);
  }

  var Types = Classes[0];

  for (var i = 0; i < Types.length; i++) {
    try {
      var entry = value === null || value === void 0 ? void 0 : value[i];
      result[i] = entry instanceof Types[i] ? entry : new Types[i](registry, entry);
    } catch (error) {
      throw new Error("Tuple: failed on ".concat(i, ":: ").concat(error.message));
    }
  }

  return [result, 0];
}
/**
 * @name Tuple
 * @description
 * A Tuple defines an anonymous fixed-length array, where each element has its
 * own type. It extends the base JS `Array` object.
 */


var _Types = /*#__PURE__*/new WeakMap();

var Tuple = /*#__PURE__*/function (_AbstractArray) {
  _inherits(Tuple, _AbstractArray);

  var _super = _createSuper(Tuple);

  function Tuple(registry, Types, value) {
    var _this;

    var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
        definition = _ref.definition,
        _ref$setDefinition = _ref.setDefinition,
        setDefinition = _ref$setDefinition === void 0 ? noopSetDefinition : _ref$setDefinition;

    _classCallCheck(this, Tuple);

    var Classes = definition || setDefinition(Array.isArray(Types) ? [Types.map(function (t) {
      return (0, _index.typeToConstructor)(registry, t);
    }), []] : (0, _util.isFunction)(Types) || (0, _util.isString)(Types) ? [[(0, _index.typeToConstructor)(registry, Types)], []] : (0, _index.mapToTypeMap)(registry, Types));
    _this = _super.call(this, registry, Classes[0].length);

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _Types, {
      writable: true,
      value: void 0
    });

    _this.initialU8aLength = ((0, _util.isU8a)(value) ? (0, _index.decodeU8a)(registry, _assertThisInitialized(_this), value, Classes) : decodeTuple(registry, _assertThisInitialized(_this), value, Classes))[1];

    _classPrivateFieldSet(_assertThisInitialized(_this), _Types, Classes);

    return _this;
  }

  _createClass(Tuple, [{
    key: "encodedLength",
    get:
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    function get() {
      var total = 0;

      for (var i = 0; i < this.length; i++) {
        total += this[i].encodedLength;
      }

      return total;
    }
    /**
     * @description The types definition of the tuple
     */

  }, {
    key: "Types",
    get: function get() {
      var _this2 = this;

      return _classPrivateFieldGet(this, _Types)[1].length ? _classPrivateFieldGet(this, _Types)[1] : _classPrivateFieldGet(this, _Types)[0].map(function (T) {
        return new T(_this2.registry).toRawType();
      });
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */

  }, {
    key: "inspect",
    value: function inspect() {
      return {
        inner: this.inspectInner()
      };
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      var _this3 = this;

      var types = _classPrivateFieldGet(this, _Types)[0].map(function (T) {
        return _this3.registry.getClassName(T) || new T(_this3.registry).toRawType();
      });

      return "(".concat(types.join(','), ")");
    }
    /**
     * @description Returns the string representation of the value
     */

  }, {
    key: "toString",
    value: function toString() {
      // Overwrite the default toString representation of Array.
      return (0, _util.stringify)(this.toJSON());
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */

  }, {
    key: "toU8a",
    value: function toU8a(isBare) {
      return (0, _util.u8aConcatStrict)(this.toU8aInner(isBare));
    }
  }], [{
    key: "with",
    value: function _with(Types) {
      var definition; // eslint-disable-next-line no-return-assign

      var setDefinition = function setDefinition(d) {
        return definition = d;
      };

      return /*#__PURE__*/function (_Tuple) {
        _inherits(_class, _Tuple);

        var _super2 = _createSuper(_class);

        function _class(registry, value) {
          _classCallCheck(this, _class);

          return _super2.call(this, registry, Types, value, {
            definition: definition,
            setDefinition: setDefinition
          });
        }

        return _createClass(_class);
      }(Tuple);
    }
  }]);

  return Tuple;
}(_Array.AbstractArray);

exports.Tuple = Tuple;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../abstract/Array.js":"node_modules/@polkadot/types-codec/abstract/Array.js","../utils/index.js":"node_modules/@polkadot/types-codec/utils/index.js"}],"node_modules/@polkadot/types-codec/base/UInt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UInt = void 0;

var _Int = require("../abstract/Int.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/**
 * @name UInt
 * @description
 * A generic unsigned integer codec. For Substrate all numbers are Little Endian encoded,
 * this handles the encoding and decoding of those numbers. Upon construction
 * the bitLength is provided and any additional use keeps the number to this
 * length. This extends `BN`, so all methods available on a normal `BN` object
 * is available here.
 * @noInheritDoc
 */
var UInt = /*#__PURE__*/function (_AbstractInt) {
  _inherits(UInt, _AbstractInt);

  var _super = _createSuper(UInt);

  function UInt() {
    _classCallCheck(this, UInt);

    return _super.apply(this, arguments);
  }

  _createClass(UInt, null, [{
    key: "with",
    value: function _with(bitLength, typeName) {
      return /*#__PURE__*/function (_UInt) {
        _inherits(_class, _UInt);

        var _super2 = _createSuper(_class);

        function _class(registry, value) {
          _classCallCheck(this, _class);

          return _super2.call(this, registry, value, bitLength);
        }

        _createClass(_class, [{
          key: "toRawType",
          value: function toRawType() {
            return typeName || _get(_getPrototypeOf(_class.prototype), "toRawType", this).call(this);
          }
        }]);

        return _class;
      }(UInt);
    }
  }]);

  return UInt;
}(_Int.AbstractInt);

exports.UInt = UInt;
},{"../abstract/Int.js":"node_modules/@polkadot/types-codec/abstract/Int.js"}],"node_modules/@polkadot/types-codec/base/Vec.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Vec = void 0;
exports.decodeVec = decodeVec;

var _util = require("@polkadot/util");

var _Array = require("../abstract/Array.js");

var _index = require("../utils/index.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var MAX_LENGTH = 64 * 1024;
var l = (0, _util.logger)('Vec');

function noopSetDefinition(d) {
  return d;
}

function decodeVecLength(value) {
  if (Array.isArray(value)) {
    return [value, value.length, 0];
  }

  var u8a = (0, _util.u8aToU8a)(value);

  var _compactFromU8aLim = (0, _util.compactFromU8aLim)(u8a),
      _compactFromU8aLim2 = _slicedToArray(_compactFromU8aLim, 2),
      startAt = _compactFromU8aLim2[0],
      length = _compactFromU8aLim2[1];

  if (length > MAX_LENGTH) {
    throw new Error("Vec length ".concat(length.toString(), " exceeds ").concat(MAX_LENGTH));
  }

  return [u8a, length, startAt];
}

function decodeVec(registry, result, value, startAt, Type) {
  if (Array.isArray(value)) {
    var count = result.length;

    for (var i = 0; i < count; i++) {
      var entry = value[i];

      try {
        result[i] = entry instanceof Type ? entry : new Type(registry, entry);
      } catch (error) {
        l.error("Unable to decode on index ".concat(i), error.message);
        throw error;
      }
    }

    return [0, 0];
  }

  return (0, _index.decodeU8aVec)(registry, result, (0, _util.u8aToU8a)(value), startAt, Type);
}
/**
 * @name Vec
 * @description
 * This manages codec arrays. Internally it keeps track of the length (as decoded) and allows
 * construction with the passed `Type` in the constructor. It is an extension to Array, providing
 * specific encoding/decoding on top of the base type.
 */


var _Type = /*#__PURE__*/new WeakMap();

var Vec = /*#__PURE__*/function (_AbstractArray) {
  _inherits(Vec, _AbstractArray);

  var _super = _createSuper(Vec);

  function Vec(registry, Type) {
    var _this;

    var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

    var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
        definition = _ref.definition,
        _ref$setDefinition = _ref.setDefinition,
        setDefinition = _ref$setDefinition === void 0 ? noopSetDefinition : _ref$setDefinition;

    _classCallCheck(this, Vec);

    var _decodeVecLength = decodeVecLength(value),
        _decodeVecLength2 = _slicedToArray(_decodeVecLength, 3),
        decodeFrom = _decodeVecLength2[0],
        length = _decodeVecLength2[1],
        startAt = _decodeVecLength2[2];

    _this = _super.call(this, registry, length);

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _Type, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldSet(_assertThisInitialized(_this), _Type, definition || setDefinition((0, _index.typeToConstructor)(registry, Type)));

    _this.initialU8aLength = ((0, _util.isU8a)(decodeFrom) ? (0, _index.decodeU8aVec)(registry, _assertThisInitialized(_this), decodeFrom, startAt, _classPrivateFieldGet(_assertThisInitialized(_this), _Type)) : decodeVec(registry, _assertThisInitialized(_this), decodeFrom, startAt, _classPrivateFieldGet(_assertThisInitialized(_this), _Type)))[0];
    return _this;
  }

  _createClass(Vec, [{
    key: "Type",
    get:
    /**
     * @description The type for the items
     */
    function get() {
      return _classPrivateFieldGet(this, _Type).name;
    }
    /**
     * @description Finds the index of the value in the array
     */

  }, {
    key: "indexOf",
    value: function indexOf(_other) {
      // convert type first, this removes overhead from the eq
      var other = _other instanceof _classPrivateFieldGet(this, _Type) ? _other : new (_classPrivateFieldGet(this, _Type))(this.registry, _other);

      for (var i = 0; i < this.length; i++) {
        if (other.eq(this[i])) {
          return i;
        }
      }

      return -1;
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return "Vec<".concat(this.registry.getClassName(_classPrivateFieldGet(this, _Type)) || new (_classPrivateFieldGet(this, _Type))(this.registry).toRawType(), ">");
    }
  }], [{
    key: "with",
    value: function _with(Type) {
      var definition; // eslint-disable-next-line no-return-assign

      var setDefinition = function setDefinition(d) {
        return definition = d;
      };

      return /*#__PURE__*/function (_Vec) {
        _inherits(_class, _Vec);

        var _super2 = _createSuper(_class);

        function _class(registry, value) {
          _classCallCheck(this, _class);

          return _super2.call(this, registry, Type, value, {
            definition: definition,
            setDefinition: setDefinition
          });
        }

        return _createClass(_class);
      }(Vec);
    }
  }]);

  return Vec;
}(_Array.AbstractArray);

exports.Vec = Vec;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../abstract/Array.js":"node_modules/@polkadot/types-codec/abstract/Array.js","../utils/index.js":"node_modules/@polkadot/types-codec/utils/index.js"}],"node_modules/@polkadot/types-codec/base/VecAny.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VecAny = void 0;

var _Array = require("../abstract/Array.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/**
 * @name VecAny
 * @description
 * This manages codec arrays, assuming that the inputs are already of type Codec. Unlike
 * a vector, this can be used to manage array-like structures with variable arguments of
 * any types
 */
var VecAny = /*#__PURE__*/function (_AbstractArray) {
  _inherits(VecAny, _AbstractArray);

  var _super = _createSuper(VecAny);

  function VecAny() {
    _classCallCheck(this, VecAny);

    return _super.apply(this, arguments);
  }

  _createClass(VecAny, [{
    key: "toRawType",
    value:
    /**
     * @description Returns the base runtime type name for this instance
     */
    function toRawType() {
      // FIXME This is basically an any type, cannot instantiate via createType
      return 'Vec<Codec>';
    }
  }]);

  return VecAny;
}(_Array.AbstractArray);

exports.VecAny = VecAny;
},{"../abstract/Array.js":"node_modules/@polkadot/types-codec/abstract/Array.js"}],"node_modules/@polkadot/types-codec/base/VecFixed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VecFixed = void 0;

var _util = require("@polkadot/util");

var _Array = require("../abstract/Array.js");

var _index = require("../utils/index.js");

var _Vec = require("./Vec.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

function noopSetDefinition(d) {
  return d;
}
/**
 * @name VecFixed
 * @description
 * This manages codec arrays of a fixed length
 */


var _Type = /*#__PURE__*/new WeakMap();

var VecFixed = /*#__PURE__*/function (_AbstractArray) {
  _inherits(VecFixed, _AbstractArray);

  var _super = _createSuper(VecFixed);

  function VecFixed(registry, Type, length) {
    var _this;

    var value = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];

    var _ref = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {},
        definition = _ref.definition,
        _ref$setDefinition = _ref.setDefinition,
        setDefinition = _ref$setDefinition === void 0 ? noopSetDefinition : _ref$setDefinition;

    _classCallCheck(this, VecFixed);

    _this = _super.call(this, registry, length);

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _Type, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldSet(_assertThisInitialized(_this), _Type, definition || setDefinition((0, _index.typeToConstructor)(registry, Type)));

    _this.initialU8aLength = ((0, _util.isU8a)(value) ? (0, _index.decodeU8aVec)(registry, _assertThisInitialized(_this), value, 0, _classPrivateFieldGet(_assertThisInitialized(_this), _Type)) : (0, _Vec.decodeVec)(registry, _assertThisInitialized(_this), value, 0, _classPrivateFieldGet(_assertThisInitialized(_this), _Type)))[1];
    return _this;
  }

  _createClass(VecFixed, [{
    key: "Type",
    get:
    /**
     * @description The type for the items
     */
    function get() {
      return new (_classPrivateFieldGet(this, _Type))(this.registry).toRawType();
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */

  }, {
    key: "encodedLength",
    get: function get() {
      var total = 0;

      for (var i = 0; i < this.length; i++) {
        total += this[i].encodedLength;
      }

      return total;
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */

  }, {
    key: "inspect",
    value: function inspect() {
      return {
        inner: this.inspectInner()
      };
    }
  }, {
    key: "toU8a",
    value: function toU8a() {
      // we override, we don't add the length prefix for ourselves, and at the same time we
      // ignore isBare on entries, since they should be properly encoded at all times
      var encoded = this.toU8aInner();
      return encoded.length ? (0, _util.u8aConcatStrict)(encoded) : new Uint8Array([]);
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return "[".concat(this.Type, ";").concat(this.length, "]");
    }
  }], [{
    key: "with",
    value: function _with(Type, length) {
      var definition; // eslint-disable-next-line no-return-assign

      var setDefinition = function setDefinition(d) {
        return definition = d;
      };

      return /*#__PURE__*/function (_VecFixed) {
        _inherits(_class, _VecFixed);

        var _super2 = _createSuper(_class);

        function _class(registry, value) {
          _classCallCheck(this, _class);

          return _super2.call(this, registry, Type, length, value, {
            definition: definition,
            setDefinition: setDefinition
          });
        }

        return _createClass(_class);
      }(VecFixed);
    }
  }]);

  return VecFixed;
}(_Array.AbstractArray);

exports.VecFixed = VecFixed;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../abstract/Array.js":"node_modules/@polkadot/types-codec/abstract/Array.js","../utils/index.js":"node_modules/@polkadot/types-codec/utils/index.js","./Vec.js":"node_modules/@polkadot/types-codec/base/Vec.js"}],"node_modules/@polkadot/types-codec/base/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Compact", {
  enumerable: true,
  get: function () {
    return _Compact.Compact;
  }
});
Object.defineProperty(exports, "DoNotConstruct", {
  enumerable: true,
  get: function () {
    return _DoNotConstruct.DoNotConstruct;
  }
});
Object.defineProperty(exports, "Enum", {
  enumerable: true,
  get: function () {
    return _Enum.Enum;
  }
});
Object.defineProperty(exports, "Int", {
  enumerable: true,
  get: function () {
    return _Int.Int;
  }
});
Object.defineProperty(exports, "Null", {
  enumerable: true,
  get: function () {
    return _Null.Null;
  }
});
Object.defineProperty(exports, "Option", {
  enumerable: true,
  get: function () {
    return _Option.Option;
  }
});
Object.defineProperty(exports, "Result", {
  enumerable: true,
  get: function () {
    return _Result.Result;
  }
});
Object.defineProperty(exports, "Tuple", {
  enumerable: true,
  get: function () {
    return _Tuple.Tuple;
  }
});
Object.defineProperty(exports, "UInt", {
  enumerable: true,
  get: function () {
    return _UInt.UInt;
  }
});
Object.defineProperty(exports, "Vec", {
  enumerable: true,
  get: function () {
    return _Vec.Vec;
  }
});
Object.defineProperty(exports, "VecAny", {
  enumerable: true,
  get: function () {
    return _VecAny.VecAny;
  }
});
Object.defineProperty(exports, "VecFixed", {
  enumerable: true,
  get: function () {
    return _VecFixed.VecFixed;
  }
});

var _Compact = require("./Compact.js");

var _DoNotConstruct = require("./DoNotConstruct.js");

var _Enum = require("./Enum.js");

var _Int = require("./Int.js");

var _Null = require("./Null.js");

var _Option = require("./Option.js");

var _Result = require("./Result.js");

var _Tuple = require("./Tuple.js");

var _UInt = require("./UInt.js");

var _Vec = require("./Vec.js");

var _VecAny = require("./VecAny.js");

var _VecFixed = require("./VecFixed.js");
},{"./Compact.js":"node_modules/@polkadot/types-codec/base/Compact.js","./DoNotConstruct.js":"node_modules/@polkadot/types-codec/base/DoNotConstruct.js","./Enum.js":"node_modules/@polkadot/types-codec/base/Enum.js","./Int.js":"node_modules/@polkadot/types-codec/base/Int.js","./Null.js":"node_modules/@polkadot/types-codec/base/Null.js","./Option.js":"node_modules/@polkadot/types-codec/base/Option.js","./Result.js":"node_modules/@polkadot/types-codec/base/Result.js","./Tuple.js":"node_modules/@polkadot/types-codec/base/Tuple.js","./UInt.js":"node_modules/@polkadot/types-codec/base/UInt.js","./Vec.js":"node_modules/@polkadot/types-codec/base/Vec.js","./VecAny.js":"node_modules/@polkadot/types-codec/base/VecAny.js","./VecFixed.js":"node_modules/@polkadot/types-codec/base/VecFixed.js"}],"node_modules/@polkadot/types-codec/native/Raw.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Raw = void 0;

var _util = require("@polkadot/util");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/**
 * @name Raw
 * @description
 * A basic wrapper around Uint8Array, with no frills and no fuss. It does differ
 * from other implementations where it will consume the full Uint8Array as passed to it.
 * As such it is meant to be subclassed where the wrapper takes care of the
 * actual lengths instead of used directly.
 * @noInheritDoc
 */
var Raw = /*#__PURE__*/function (_Uint8Array, _Symbol$species) {
  _inherits(Raw, _Uint8Array);

  var _super = _createSuper(Raw);

  function Raw(registry, value, initialU8aLength) {
    var _this;

    _classCallCheck(this, Raw);

    _this = _super.call(this, (0, _util.u8aToU8a)(value));
    _this.registry = registry;
    _this.initialU8aLength = initialU8aLength;
    return _this;
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  _createClass(Raw, [{
    key: "encodedLength",
    get: function get() {
      return this.length;
    }
    /**
     * @description returns a hash of the contents
     */

  }, {
    key: "hash",
    get: function get() {
      return this.registry.hash(this.toU8a());
    }
    /**
     * @description Returns true if the wrapped value contains only ASCII printable characters
     */

  }, {
    key: "isAscii",
    get: function get() {
      return (0, _util.isAscii)(this);
    }
    /**
     * @description Returns true if the type wraps an empty/default all-0 value
     */

  }, {
    key: "isEmpty",
    get: function get() {
      return !this.length || (0, _util.isUndefined)(this.find(function (b) {
        return !!b;
      }));
    }
    /**
     * @description Returns true if the wrapped value contains only utf8 characters
     */

  }, {
    key: "isUtf8",
    get: function get() {
      return (0, _util.isUtf8)(this);
    }
    /**
     * @description Returns the number of bits in the value
     */

  }, {
    key: "bitLength",
    value: function bitLength() {
      return this.length * 8;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */

  }, {
    key: "eq",
    value: function eq(other) {
      if (other instanceof Uint8Array) {
        return this.length === other.length && !this.some(function (b, index) {
          return b !== other[index];
        });
      }

      return this.eq((0, _util.u8aToU8a)(other));
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */

  }, {
    key: "inspect",
    value: function inspect() {
      return {
        outer: [this.toU8a()]
      };
    }
    /**
     * @description Returns a hex string representation of the value
     */

  }, {
    key: "toHex",
    value: function toHex() {
      return (0, _util.u8aToHex)(this);
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */

  }, {
    key: "toHuman",
    value: function toHuman() {
      if (this.isAscii) {
        var text = this.toUtf8(); // ensure we didn't end up with multibyte codepoints

        if ((0, _util.isAscii)(text)) {
          return text;
        }
      }

      return this.toJSON();
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      return this.toHex();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return 'Raw';
    }
    /**
     * @description Returns the string representation of the value
     */

  }, {
    key: "toString",
    value: function toString() {
      return this.toHex();
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */
    // eslint-disable-next-line @typescript-eslint/no-unused-vars

  }, {
    key: "toU8a",
    value: function toU8a(isBare) {
      return Uint8Array.from(this);
    }
    /**
     * @description Returns the wrapped data as a UTF-8 string
     */

  }, {
    key: "toUtf8",
    value: function toUtf8() {
      if (!this.isUtf8) {
        throw new Error('The character sequence is not a valid Utf8 string');
      }

      return (0, _util.u8aToString)(this);
    }
  }], [{
    key: _Symbol$species,
    get:
    /**
     * @description This ensures that operators such as clice, filter, map, etc. return
     * new Array instances (without this we need to apply overrides)
     */
    function get() {
      return Uint8Array;
    }
  }]);

  return Raw;
}( /*#__PURE__*/_wrapNativeSuper(Uint8Array), Symbol.species);

exports.Raw = Raw;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types-codec/extended/BitVec.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BitVec = void 0;

var _util = require("@polkadot/util");

var _Raw2 = require("../native/Raw.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

/** @internal */
function decodeBitVecU8a(value) {
  if (!value || !value.length) {
    return [0, new Uint8Array()];
  } // handle all other Uint8Array inputs, these do have a length prefix which is the number of bits encoded


  var _compactFromU8aLim = (0, _util.compactFromU8aLim)(value),
      _compactFromU8aLim2 = _slicedToArray(_compactFromU8aLim, 2),
      offset = _compactFromU8aLim2[0],
      length = _compactFromU8aLim2[1];

  var total = offset + Math.ceil(length / 8);

  if (total > value.length) {
    throw new Error("BitVec: required length less than remainder, expected at least ".concat(total, ", found ").concat(value.length));
  }

  return [length, value.subarray(offset, total)];
}
/** @internal */


function decodeBitVec(value) {
  if (Array.isArray(value) || (0, _util.isString)(value)) {
    var u8a = (0, _util.u8aToU8a)(value);
    return [u8a.length / 8, u8a];
  }

  return decodeBitVecU8a(value);
}
/**
 * @name BitVec
 * @description
 * A BitVec that represents an array of bits. The bits are however stored encoded. The difference between this
 * and a normal Bytes would be that the length prefix indicates the number of bits encoded, not the bytes
 */


var _decodedLength = /*#__PURE__*/new WeakMap();

var _isMsb = /*#__PURE__*/new WeakMap();

var BitVec = /*#__PURE__*/function (_Raw) {
  _inherits(BitVec, _Raw);

  var _super = _createSuper(BitVec);

  // In lieu of having the Msb/Lsb identifiers passed through, we default to assuming
  // we are dealing with Lsb, which is the default (as of writing) BitVec format used
  // in the Polkadot code (this only affects the toHuman displays)
  function BitVec(registry, value) {
    var _this;

    var isMsb = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

    _classCallCheck(this, BitVec);

    var _decodeBitVec = decodeBitVec(value),
        _decodeBitVec2 = _slicedToArray(_decodeBitVec, 2),
        decodedLength = _decodeBitVec2[0],
        u8a = _decodeBitVec2[1];

    _this = _super.call(this, registry, u8a);

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _decodedLength, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _isMsb, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldSet(_assertThisInitialized(_this), _decodedLength, decodedLength);

    _classPrivateFieldSet(_assertThisInitialized(_this), _isMsb, isMsb);

    return _this;
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  _createClass(BitVec, [{
    key: "encodedLength",
    get: function get() {
      return this.length + (0, _util.compactToU8a)(_classPrivateFieldGet(this, _decodedLength)).length;
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */

  }, {
    key: "inspect",
    value: function inspect() {
      return {
        outer: [(0, _util.compactToU8a)(_classPrivateFieldGet(this, _decodedLength)), _get(_getPrototypeOf(BitVec.prototype), "toU8a", this).call(this)]
      };
    }
  }, {
    key: "toHuman",
    value: function toHuman() {
      var _this2 = this;

      return "0b".concat(_toConsumableArray(this.toU8a(true)).map(function (d) {
        return "00000000".concat(d.toString(2)).slice(-8);
      }).map(function (s) {
        return _classPrivateFieldGet(_this2, _isMsb) ? s : s.split('').reverse().join('');
      }).join('_'));
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return 'BitVec';
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */

  }, {
    key: "toU8a",
    value: function toU8a(isBare) {
      var bitVec = _get(_getPrototypeOf(BitVec.prototype), "toU8a", this).call(this);

      return isBare ? bitVec : (0, _util.u8aConcatStrict)([(0, _util.compactToU8a)(_classPrivateFieldGet(this, _decodedLength)), bitVec]);
    }
  }]);

  return BitVec;
}(_Raw2.Raw);

exports.BitVec = BitVec;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../native/Raw.js":"node_modules/@polkadot/types-codec/native/Raw.js"}],"node_modules/@polkadot/types-codec/native/Struct.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Struct = void 0;

var _util = require("@polkadot/util");

var _index = require("../utils/index.js");

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function noopSetDefinition(d) {
  return d;
}
/** @internal */


function decodeStructFromObject(registry, _ref, value, jsonMap) {
  var _ref2 = _slicedToArray(_ref, 2),
      Types = _ref2[0],
      keys = _ref2[1];

  var jsonObj;
  var typeofArray = Array.isArray(value);
  var typeofMap = value instanceof Map;

  if (!typeofArray && !typeofMap && !(0, _util.isObject)(value)) {
    throw new Error("Struct: Cannot decode value ".concat((0, _util.stringify)(value), " (typeof ").concat(_typeof(value), "), expected an input object, map or array"));
  } else if (typeofArray && value.length !== keys.length) {
    throw new Error("Struct: Unable to map ".concat((0, _util.stringify)(value), " array to object with known keys ").concat(keys.join(', ')));
  }

  var raw = new Array(keys.length);

  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var jsonKey = jsonMap.get(key) || key;
    var Type = Types[i];
    var assign = void 0;

    try {
      if (typeofArray) {
        assign = value[i];
      } else if (typeofMap) {
        assign = jsonKey && value.get(jsonKey);
      } else {
        assign = jsonKey && value[jsonKey];

        if ((0, _util.isUndefined)(assign)) {
          if ((0, _util.isUndefined)(jsonObj)) {
            var entries = Object.entries(value);
            jsonObj = {};

            for (var e = 0; e < entries.length; e++) {
              jsonObj[(0, _util.stringCamelCase)(entries[e][0])] = entries[e][1];
            }
          }

          assign = jsonKey && jsonObj[jsonKey];
        }
      }

      raw[i] = [key, assign instanceof Type ? assign : new Type(registry, assign)];
    } catch (error) {
      var type = Type.name;

      try {
        type = new Type(registry).toRawType();
      } catch (error) {// ignore
      }

      throw new Error("Struct: failed on ".concat(jsonKey, ": ").concat(type, ":: ").concat(error.message));
    }
  }

  return [raw, 0];
}
/**
 * @name Struct
 * @description
 * A Struct defines an Object with key-value pairs - where the values are Codec values. It removes
 * a lot of repetition from the actual coding, define a structure type, pass it the key/Codec
 * values in the constructor and it manages the decoding. It is important that the constructor
 * values matches 100% to the order in th Rust code, i.e. don't go crazy and make it alphabetical,
 * it needs to decoded in the specific defined order.
 * @noInheritDoc
 */


var _jsonMap = /*#__PURE__*/new WeakMap();

var _Types = /*#__PURE__*/new WeakMap();

var Struct = /*#__PURE__*/function (_Map) {
  _inherits(Struct, _Map);

  var _super = _createSuper(Struct);

  function Struct(registry, Types, value) {
    var _this;

    var jsonMap = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new Map();

    var _ref3 = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {},
        definition = _ref3.definition,
        _ref3$setDefinition = _ref3.setDefinition,
        setDefinition = _ref3$setDefinition === void 0 ? noopSetDefinition : _ref3$setDefinition;

    _classCallCheck(this, Struct);

    var typeMap = definition || setDefinition((0, _index.mapToTypeMap)(registry, Types));

    var _ref4 = (0, _util.isU8a)(value) || (0, _util.isHex)(value) ? (0, _index.decodeU8aStruct)(registry, new Array(typeMap[0].length), (0, _util.u8aToU8a)(value), typeMap) : value instanceof Struct ? [value, 0] : decodeStructFromObject(registry, typeMap, value || {}, jsonMap),
        _ref5 = _slicedToArray(_ref4, 2),
        decoded = _ref5[0],
        decodedLength = _ref5[1];

    _this = _super.call(this, decoded);

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _jsonMap, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _Types, {
      writable: true,
      value: void 0
    });

    _this.initialU8aLength = decodedLength;
    _this.registry = registry;

    _classPrivateFieldSet(_assertThisInitialized(_this), _jsonMap, jsonMap);

    _classPrivateFieldSet(_assertThisInitialized(_this), _Types, typeMap);

    return _this;
  }

  _createClass(Struct, [{
    key: "defKeys",
    get:
    /**
     * @description The available keys for this struct
     */
    function get() {
      return _classPrivateFieldGet(this, _Types)[1];
    }
  }, {
    key: "getT",
    value: function getT(key) {
      return this.get(key);
    }
    /**
     * @description Checks if the value is an empty value
     */

  }, {
    key: "isEmpty",
    get: function get() {
      var _iterator = _createForOfIteratorHelper(this.values()),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var v = _step.value;

          if (!v.isEmpty) {
            return false;
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      return true;
    }
    /**
     * @description Returns the Type description of the structure
     */

  }, {
    key: "Type",
    get: function get() {
      var result = {};

      var _classPrivateFieldGet2 = _classPrivateFieldGet(this, _Types),
          _classPrivateFieldGet3 = _slicedToArray(_classPrivateFieldGet2, 2),
          Types = _classPrivateFieldGet3[0],
          keys = _classPrivateFieldGet3[1];

      for (var i = 0; i < keys.length; i++) {
        result[keys[i]] = new Types[i](this.registry).toRawType();
      }

      return result;
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */

  }, {
    key: "encodedLength",
    get: function get() {
      var total = 0;

      var _iterator2 = _createForOfIteratorHelper(this.values()),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var v = _step2.value;
          total += v.encodedLength;
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }

      return total;
    }
    /**
     * @description returns a hash of the contents
     */

  }, {
    key: "hash",
    get: function get() {
      return this.registry.hash(this.toU8a());
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */

  }, {
    key: "eq",
    value: function eq(other) {
      return (0, _index.compareMap)(this, other);
    }
    /**
     * @description Returns a specific names entry in the structure
     * @param name The name of the entry to retrieve
     */

  }, {
    key: "get",
    value: function get(name) {
      return _get(_getPrototypeOf(Struct.prototype), "get", this).call(this, name);
    }
    /**
     * @description Returns the values of a member at a specific index (Rather use get(name) for performance)
     */

  }, {
    key: "getAtIndex",
    value: function getAtIndex(index) {
      return this.toArray()[index];
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */

  }, {
    key: "inspect",
    value: function inspect(isBare) {
      var inner = new Array();

      var _iterator3 = _createForOfIteratorHelper(this.entries()),
          _step3;

      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var _step3$value = _slicedToArray(_step3.value, 2),
              k = _step3$value[0],
              v = _step3$value[1];

          inner.push(_objectSpread(_objectSpread({}, v.inspect(!isBare || (0, _util.isBoolean)(isBare) ? isBare : isBare[k])), {}, {
            name: (0, _util.stringCamelCase)(k)
          }));
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }

      return {
        inner: inner
      };
    }
    /**
     * @description Converts the Object to an standard JavaScript Array
     */

  }, {
    key: "toArray",
    value: function toArray() {
      return _toConsumableArray(this.values());
    }
    /**
     * @description Returns a hex string representation of the value
     */

  }, {
    key: "toHex",
    value: function toHex() {
      return (0, _util.u8aToHex)(this.toU8a());
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */

  }, {
    key: "toHuman",
    value: function toHuman(isExtended) {
      var json = {};

      var _iterator4 = _createForOfIteratorHelper(this.entries()),
          _step4;

      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
          var _step4$value = _slicedToArray(_step4.value, 2),
              k = _step4$value[0],
              v = _step4$value[1];

          json[k] = v && v.toHuman(isExtended);
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }

      return json;
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      var json = {};

      var _iterator5 = _createForOfIteratorHelper(this.entries()),
          _step5;

      try {
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
          var _step5$value = _slicedToArray(_step5.value, 2),
              k = _step5$value[0],
              v = _step5$value[1];

          var jsonKey = _classPrivateFieldGet(this, _jsonMap).get(k) || k;
          json[jsonKey] = v && v.toJSON();
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }

      return json;
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return (0, _util.stringify)((0, _index.typesToMap)(this.registry, _classPrivateFieldGet(this, _Types)));
    }
    /**
     * @description Returns the string representation of the value
     */

  }, {
    key: "toString",
    value: function toString() {
      return (0, _util.stringify)(this.toJSON());
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */

  }, {
    key: "toU8a",
    value: function toU8a(isBare) {
      var encoded = [];

      var _iterator6 = _createForOfIteratorHelper(this.entries()),
          _step6;

      try {
        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
          var _step6$value = _slicedToArray(_step6.value, 2),
              k = _step6$value[0],
              v = _step6$value[1];

          if (v && (0, _util.isFunction)(v.toU8a)) {
            encoded.push(v.toU8a(!isBare || (0, _util.isBoolean)(isBare) ? isBare : isBare[k]));
          }
        }
      } catch (err) {
        _iterator6.e(err);
      } finally {
        _iterator6.f();
      }

      return (0, _util.u8aConcatStrict)(encoded);
    }
  }], [{
    key: "with",
    value: function _with(Types, jsonMap) {
      var keys = Object.keys(Types);
      var definition; // eslint-disable-next-line no-return-assign

      var setDefinition = function setDefinition(d) {
        return definition = d;
      };

      return /*#__PURE__*/function (_Struct) {
        _inherits(_class, _Struct);

        var _super2 = _createSuper(_class);

        function _class(registry, value) {
          var _this2;

          _classCallCheck(this, _class);

          _this2 = _super2.call(this, registry, Types, value, jsonMap, {
            definition: definition,
            setDefinition: setDefinition
          });
          (0, _util.objectProperties)(_assertThisInitialized(_this2), keys, function (k) {
            return _this2.get(k);
          });
          return _this2;
        }

        return _createClass(_class);
      }(Struct);
    }
  }]);

  return Struct;
}( /*#__PURE__*/_wrapNativeSuper(Map));

exports.Struct = Struct;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../utils/index.js":"node_modules/@polkadot/types-codec/utils/index.js"}],"node_modules/@polkadot/types-codec/extended/Map.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CodecMap = void 0;

var _util = require("@polkadot/util");

var _Array = require("../abstract/Array.js");

var _Enum = require("../base/Enum.js");

var _Struct = require("../native/Struct.js");

var _index = require("../utils/index.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var l = (0, _util.logger)('Map');
/** @internal */

function decodeMapFromU8a(registry, KeyClass, ValClass, u8a) {
  var output = new Map();

  var _compactFromU8aLim = (0, _util.compactFromU8aLim)(u8a),
      _compactFromU8aLim2 = _slicedToArray(_compactFromU8aLim, 2),
      offset = _compactFromU8aLim2[0],
      count = _compactFromU8aLim2[1];

  var types = [];

  for (var i = 0; i < count; i++) {
    types.push(KeyClass, ValClass);
  }

  var _decodeU8a = (0, _index.decodeU8a)(registry, new Array(types.length), u8a.subarray(offset), [types, []]),
      _decodeU8a2 = _slicedToArray(_decodeU8a, 2),
      values = _decodeU8a2[0],
      decodedLength = _decodeU8a2[1];

  for (var i = 0; i < values.length; i += 2) {
    output.set(values[i], values[i + 1]);
  }

  return [KeyClass, ValClass, output, offset + decodedLength];
}
/** @internal */


function decodeMapFromMap(registry, KeyClass, ValClass, value) {
  var output = new Map();

  var _iterator = _createForOfIteratorHelper(value.entries()),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var _step$value = _slicedToArray(_step.value, 2),
          key = _step$value[0],
          val = _step$value[1];

      var isComplex = KeyClass.prototype instanceof _Array.AbstractArray || KeyClass.prototype instanceof _Struct.Struct || KeyClass.prototype instanceof _Enum.Enum;

      try {
        output.set(key instanceof KeyClass ? key : new KeyClass(registry, isComplex ? JSON.parse(key) : key), val instanceof ValClass ? val : new ValClass(registry, val));
      } catch (error) {
        l.error('Failed to decode key or value:', error.message);
        throw error;
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  return [KeyClass, ValClass, output, 0];
}
/**
 * Decode input to pass into constructor.
 *
 * @param KeyClass - Type of the map key
 * @param ValClass - Type of the map value
 * @param value - Value to decode, one of:
 * - null
 * - undefined
 * - hex
 * - Uint8Array
 * - Map<any, any>, where both key and value types are either
 *   constructors or decodeable values for their types.
 * @param jsonMap
 * @internal
 */


function decodeMap(registry, keyType, valType, value) {
  var KeyClass = (0, _index.typeToConstructor)(registry, keyType);
  var ValClass = (0, _index.typeToConstructor)(registry, valType);

  if (!value) {
    return [KeyClass, ValClass, new Map(), 0];
  } else if ((0, _util.isU8a)(value) || (0, _util.isHex)(value)) {
    return decodeMapFromU8a(registry, KeyClass, ValClass, (0, _util.u8aToU8a)(value));
  } else if (value instanceof Map) {
    return decodeMapFromMap(registry, KeyClass, ValClass, value);
  } else if ((0, _util.isObject)(value)) {
    return decodeMapFromMap(registry, KeyClass, ValClass, new Map(Object.entries(value)));
  }

  throw new Error('Map: cannot decode type');
}

var _KeyClass = /*#__PURE__*/new WeakMap();

var _ValClass = /*#__PURE__*/new WeakMap();

var _type = /*#__PURE__*/new WeakMap();

var CodecMap = /*#__PURE__*/function (_Map) {
  _inherits(CodecMap, _Map);

  var _super = _createSuper(CodecMap);

  function CodecMap(registry, keyType, valType, rawValue) {
    var _this;

    var type = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'HashMap';

    _classCallCheck(this, CodecMap);

    var _decodeMap = decodeMap(registry, keyType, valType, rawValue),
        _decodeMap2 = _slicedToArray(_decodeMap, 4),
        KeyClass = _decodeMap2[0],
        ValClass = _decodeMap2[1],
        decoded = _decodeMap2[2],
        decodedLength = _decodeMap2[3];

    _this = _super.call(this, type === 'BTreeMap' ? (0, _index.sortMap)(decoded) : decoded);

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _KeyClass, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _ValClass, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _type, {
      writable: true,
      value: void 0
    });

    _this.registry = registry;
    _this.initialU8aLength = decodedLength;

    _classPrivateFieldSet(_assertThisInitialized(_this), _KeyClass, KeyClass);

    _classPrivateFieldSet(_assertThisInitialized(_this), _ValClass, ValClass);

    _classPrivateFieldSet(_assertThisInitialized(_this), _type, type);

    return _this;
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  _createClass(CodecMap, [{
    key: "encodedLength",
    get: function get() {
      var len = (0, _util.compactToU8a)(this.size).length;

      var _iterator2 = _createForOfIteratorHelper(this.entries()),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var _step2$value = _slicedToArray(_step2.value, 2),
              k = _step2$value[0],
              v = _step2$value[1];

          len += k.encodedLength + v.encodedLength;
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }

      return len;
    }
    /**
     * @description Returns a hash of the value
     */

  }, {
    key: "hash",
    get: function get() {
      return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the value is an empty value
     */

  }, {
    key: "isEmpty",
    get: function get() {
      return this.size === 0;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */

  }, {
    key: "eq",
    value: function eq(other) {
      return (0, _index.compareMap)(this, other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */

  }, {
    key: "inspect",
    value: function inspect() {
      var inner = new Array();

      var _iterator3 = _createForOfIteratorHelper(this.entries()),
          _step3;

      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var _step3$value = _slicedToArray(_step3.value, 2),
              k = _step3$value[0],
              v = _step3$value[1];

          inner.push(k.inspect());
          inner.push(v.inspect());
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }

      return {
        inner: inner,
        outer: [(0, _util.compactToU8a)(this.size)]
      };
    }
    /**
     * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation
     */

  }, {
    key: "toHex",
    value: function toHex() {
      return (0, _util.u8aToHex)(this.toU8a());
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */

  }, {
    key: "toHuman",
    value: function toHuman(isExtended) {
      var json = {};

      var _iterator4 = _createForOfIteratorHelper(this.entries()),
          _step4;

      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
          var _step4$value = _slicedToArray(_step4.value, 2),
              k = _step4$value[0],
              v = _step4$value[1];

          json[k.toString()] = v.toHuman(isExtended);
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }

      return json;
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      var json = {};

      var _iterator5 = _createForOfIteratorHelper(this.entries()),
          _step5;

      try {
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
          var _step5$value = _slicedToArray(_step5.value, 2),
              k = _step5$value[0],
              v = _step5$value[1];

          json[k.toString()] = v.toJSON();
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }

      return json;
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return "".concat(_classPrivateFieldGet(this, _type), "<").concat(this.registry.getClassName(_classPrivateFieldGet(this, _KeyClass)) || new (_classPrivateFieldGet(this, _KeyClass))(this.registry).toRawType(), ",").concat(this.registry.getClassName(_classPrivateFieldGet(this, _ValClass)) || new (_classPrivateFieldGet(this, _ValClass))(this.registry).toRawType(), ">");
    }
    /**
     * @description Returns the string representation of the value
     */

  }, {
    key: "toString",
    value: function toString() {
      return (0, _util.stringify)(this.toJSON());
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */

  }, {
    key: "toU8a",
    value: function toU8a(isBare) {
      var encoded = new Array();

      if (!isBare) {
        encoded.push((0, _util.compactToU8a)(this.size));
      }

      var _iterator6 = _createForOfIteratorHelper(this.entries()),
          _step6;

      try {
        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
          var _step6$value = _slicedToArray(_step6.value, 2),
              k = _step6$value[0],
              v = _step6$value[1];

          encoded.push(k.toU8a(isBare), v.toU8a(isBare));
        }
      } catch (err) {
        _iterator6.e(err);
      } finally {
        _iterator6.f();
      }

      return (0, _util.u8aConcatStrict)(encoded);
    }
  }]);

  return CodecMap;
}( /*#__PURE__*/_wrapNativeSuper(Map));

exports.CodecMap = CodecMap;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../abstract/Array.js":"node_modules/@polkadot/types-codec/abstract/Array.js","../base/Enum.js":"node_modules/@polkadot/types-codec/base/Enum.js","../native/Struct.js":"node_modules/@polkadot/types-codec/native/Struct.js","../utils/index.js":"node_modules/@polkadot/types-codec/utils/index.js"}],"node_modules/@polkadot/types-codec/extended/BTreeMap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BTreeMap = void 0;

var _Map = require("./Map.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var BTreeMap = /*#__PURE__*/function (_CodecMap) {
  _inherits(BTreeMap, _CodecMap);

  var _super = _createSuper(BTreeMap);

  function BTreeMap() {
    _classCallCheck(this, BTreeMap);

    return _super.apply(this, arguments);
  }

  _createClass(BTreeMap, null, [{
    key: "with",
    value: function _with(keyType, valType) {
      return /*#__PURE__*/function (_BTreeMap) {
        _inherits(_class, _BTreeMap);

        var _super2 = _createSuper(_class);

        function _class(registry, value) {
          _classCallCheck(this, _class);

          return _super2.call(this, registry, keyType, valType, value, 'BTreeMap');
        }

        return _createClass(_class);
      }(BTreeMap);
    }
  }]);

  return BTreeMap;
}(_Map.CodecMap);

exports.BTreeMap = BTreeMap;
},{"./Map.js":"node_modules/@polkadot/types-codec/extended/Map.js"}],"node_modules/@polkadot/types-codec/extended/BTreeSet.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BTreeSet = void 0;

var _util = require("@polkadot/util");

var _index = require("../utils/index.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var l = (0, _util.logger)('BTreeSet');
/** @internal */

function decodeSetFromU8a(registry, ValClass, u8a) {
  var output = new Set();

  var _compactFromU8aLim = (0, _util.compactFromU8aLim)(u8a),
      _compactFromU8aLim2 = _slicedToArray(_compactFromU8aLim, 2),
      offset = _compactFromU8aLim2[0],
      count = _compactFromU8aLim2[1];

  var result = new Array(count);

  var _decodeU8aVec = (0, _index.decodeU8aVec)(registry, result, u8a, offset, ValClass),
      _decodeU8aVec2 = _slicedToArray(_decodeU8aVec, 1),
      decodedLength = _decodeU8aVec2[0];

  for (var i = 0; i < count; i++) {
    output.add(result[i]);
  }

  return [ValClass, output, decodedLength];
}
/** @internal */


function decodeSetFromSet(registry, ValClass, value) {
  var output = new Set();
  value.forEach(function (val) {
    try {
      output.add(val instanceof ValClass ? val : new ValClass(registry, val));
    } catch (error) {
      l.error('Failed to decode key or value:', error.message);
      throw error;
    }
  });
  return [ValClass, output, 0];
}
/**
 * Decode input to pass into constructor.
 *
 * @param ValClass - Type of the map value
 * @param value - Value to decode, one of:
 * - null
 * - undefined
 * - hex
 * - Uint8Array
 * - Set<any>, where both key and value types are either
 *   constructors or decodeable values for their types.
 * @param jsonSet
 * @internal
 */


function decodeSet(registry, valType, value) {
  var ValClass = (0, _index.typeToConstructor)(registry, valType);

  if (!value) {
    return [ValClass, new Set(), 0];
  } else if ((0, _util.isU8a)(value) || (0, _util.isHex)(value)) {
    return decodeSetFromU8a(registry, ValClass, (0, _util.u8aToU8a)(value));
  } else if (Array.isArray(value) || value instanceof Set) {
    return decodeSetFromSet(registry, ValClass, value);
  }

  throw new Error('BTreeSet: cannot decode type');
}

var _ValClass = /*#__PURE__*/new WeakMap();

var BTreeSet = /*#__PURE__*/function (_Set) {
  _inherits(BTreeSet, _Set);

  var _super = _createSuper(BTreeSet);

  function BTreeSet(registry, valType, rawValue) {
    var _this;

    _classCallCheck(this, BTreeSet);

    var _decodeSet = decodeSet(registry, valType, rawValue),
        _decodeSet2 = _slicedToArray(_decodeSet, 3),
        ValClass = _decodeSet2[0],
        values = _decodeSet2[1],
        decodedLength = _decodeSet2[2];

    _this = _super.call(this, (0, _index.sortSet)(values));

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _ValClass, {
      writable: true,
      value: void 0
    });

    _this.registry = registry;
    _this.initialU8aLength = decodedLength;

    _classPrivateFieldSet(_assertThisInitialized(_this), _ValClass, ValClass);

    return _this;
  }

  _createClass(BTreeSet, [{
    key: "encodedLength",
    get:
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    function get() {
      var len = (0, _util.compactToU8a)(this.size).length;

      var _iterator = _createForOfIteratorHelper(this.values()),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var v = _step.value;
          len += v.encodedLength;
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      return len;
    }
    /**
     * @description Returns a hash of the value
     */

  }, {
    key: "hash",
    get: function get() {
      return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the value is an empty value
     */

  }, {
    key: "isEmpty",
    get: function get() {
      return this.size === 0;
    }
    /**
     * @description The actual set values as a string[]
     */

  }, {
    key: "strings",
    get: function get() {
      return _toConsumableArray(_get(_getPrototypeOf(BTreeSet.prototype), "values", this).call(this)).map(function (v) {
        return v.toString();
      });
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */

  }, {
    key: "eq",
    value: function eq(other) {
      return (0, _index.compareSet)(this, other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */

  }, {
    key: "inspect",
    value: function inspect() {
      var inner = new Array();

      var _iterator2 = _createForOfIteratorHelper(this.values()),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var v = _step2.value;
          inner.push(v.inspect());
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }

      return {
        inner: inner,
        outer: [(0, _util.compactToU8a)(this.size)]
      };
    }
    /**
     * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation
     */

  }, {
    key: "toHex",
    value: function toHex() {
      return (0, _util.u8aToHex)(this.toU8a());
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */

  }, {
    key: "toHuman",
    value: function toHuman(isExtended) {
      var json = [];

      var _iterator3 = _createForOfIteratorHelper(this.values()),
          _step3;

      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var v = _step3.value;
          json.push(v.toHuman(isExtended));
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }

      return json;
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      var json = [];

      var _iterator4 = _createForOfIteratorHelper(this.values()),
          _step4;

      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
          var v = _step4.value;
          json.push(v.toJSON());
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }

      return json;
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return "BTreeSet<".concat(this.registry.getClassName(_classPrivateFieldGet(this, _ValClass)) || new (_classPrivateFieldGet(this, _ValClass))(this.registry).toRawType(), ">");
    }
    /**
     * @description Returns the string representation of the value
     */

  }, {
    key: "toString",
    value: function toString() {
      return (0, _util.stringify)(this.toJSON());
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */

  }, {
    key: "toU8a",
    value: function toU8a(isBare) {
      var encoded = new Array();

      if (!isBare) {
        encoded.push((0, _util.compactToU8a)(this.size));
      }

      var _iterator5 = _createForOfIteratorHelper(this.values()),
          _step5;

      try {
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
          var v = _step5.value;
          encoded.push(v.toU8a(isBare));
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }

      return (0, _util.u8aConcatStrict)(encoded);
    }
  }], [{
    key: "with",
    value: function _with(valType) {
      return /*#__PURE__*/function (_BTreeSet) {
        _inherits(_class, _BTreeSet);

        var _super2 = _createSuper(_class);

        function _class(registry, value) {
          _classCallCheck(this, _class);

          return _super2.call(this, registry, valType, value);
        }

        return _createClass(_class);
      }(BTreeSet);
    }
  }]);

  return BTreeSet;
}( /*#__PURE__*/_wrapNativeSuper(Set));

exports.BTreeSet = BTreeSet;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../utils/index.js":"node_modules/@polkadot/types-codec/utils/index.js"}],"node_modules/@polkadot/types-codec/extended/Bytes.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Bytes = void 0;

var _util = require("@polkadot/util");

var _Raw2 = require("../native/Raw.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

// Bytes are used for things like on-chain code, so it has a healthy limit
var MAX_LENGTH = 10 * 1024 * 1024;
/** @internal */

function decodeBytesU8a(value) {
  if (!value.length) {
    return [new Uint8Array(), 0];
  } // handle all other Uint8Array inputs, these do have a length prefix


  var _compactFromU8aLim = (0, _util.compactFromU8aLim)(value),
      _compactFromU8aLim2 = _slicedToArray(_compactFromU8aLim, 2),
      offset = _compactFromU8aLim2[0],
      length = _compactFromU8aLim2[1];

  var total = offset + length;

  if (length > MAX_LENGTH) {
    throw new Error("Bytes length ".concat(length.toString(), " exceeds ").concat(MAX_LENGTH));
  } else if (total > value.length) {
    throw new Error("Bytes: required length less than remainder, expected at least ".concat(total, ", found ").concat(value.length));
  }

  return [value.subarray(offset, total), total];
}
/**
 * @name Bytes
 * @description
 * A Bytes wrapper for Vec<u8>. The significant difference between this and a normal Uint8Array
 * is that this version allows for length-encoding. (i.e. it is a variable-item codec, the same
 * as what is found in [[Text]] and [[Vec]])
 */


var Bytes = /*#__PURE__*/function (_Raw) {
  _inherits(Bytes, _Raw);

  var _super = _createSuper(Bytes);

  function Bytes(registry, value) {
    _classCallCheck(this, Bytes);

    var _ref = (0, _util.isU8a)(value) && !(value instanceof _Raw2.Raw) ? decodeBytesU8a(value) : Array.isArray(value) || (0, _util.isString)(value) ? [(0, _util.u8aToU8a)(value), 0] : [value, 0],
        _ref2 = _slicedToArray(_ref, 2),
        u8a = _ref2[0],
        decodedLength = _ref2[1];

    return _super.call(this, registry, u8a, decodedLength);
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  _createClass(Bytes, [{
    key: "encodedLength",
    get: function get() {
      return this.length + (0, _util.compactToU8a)(this.length).length;
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */

  }, {
    key: "inspect",
    value: function inspect(isBare) {
      var clength = (0, _util.compactToU8a)(this.length);
      return {
        outer: isBare ? [_get(_getPrototypeOf(Bytes.prototype), "toU8a", this).call(this)] : this.length ? [clength, _get(_getPrototypeOf(Bytes.prototype), "toU8a", this).call(this)] : [clength]
      };
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return 'Bytes';
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */

  }, {
    key: "toU8a",
    value: function toU8a(isBare) {
      return isBare ? _get(_getPrototypeOf(Bytes.prototype), "toU8a", this).call(this, isBare) : (0, _util.compactAddLength)(this);
    }
  }]);

  return Bytes;
}(_Raw2.Raw);

exports.Bytes = Bytes;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../native/Raw.js":"node_modules/@polkadot/types-codec/native/Raw.js"}],"node_modules/@polkadot/types-codec/extended/HashMap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HashMap = void 0;

var _Map = require("./Map.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var HashMap = /*#__PURE__*/function (_CodecMap) {
  _inherits(HashMap, _CodecMap);

  var _super = _createSuper(HashMap);

  function HashMap() {
    _classCallCheck(this, HashMap);

    return _super.apply(this, arguments);
  }

  _createClass(HashMap, null, [{
    key: "with",
    value: function _with(keyType, valType) {
      return /*#__PURE__*/function (_HashMap) {
        _inherits(_class, _HashMap);

        var _super2 = _createSuper(_class);

        function _class(registry, value) {
          _classCallCheck(this, _class);

          return _super2.call(this, registry, keyType, valType, value);
        }

        return _createClass(_class);
      }(HashMap);
    }
  }]);

  return HashMap;
}(_Map.CodecMap);

exports.HashMap = HashMap;
},{"./Map.js":"node_modules/@polkadot/types-codec/extended/Map.js"}],"node_modules/@polkadot/types-codec/extended/Linkage.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LinkageResult = exports.Linkage = void 0;

var _Option = require("../base/Option.js");

var _Tuple2 = require("../base/Tuple.js");

var _Vec = require("../base/Vec.js");

var _Struct2 = require("../native/Struct.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var EMPTY = new Uint8Array();
/**
 * @name Linkage
 * @description The wrapper for the result from a LinkedMap
 */

var Linkage = /*#__PURE__*/function (_Struct) {
  _inherits(Linkage, _Struct);

  var _super = _createSuper(Linkage);

  function Linkage(registry, Type, value) {
    _classCallCheck(this, Linkage);

    return _super.call(this, registry, {
      previous: _Option.Option.with(Type),
      // eslint-disable-next-line sort-keys
      next: _Option.Option.with(Type)
    }, value);
  }

  _createClass(Linkage, [{
    key: "previous",
    get: function get() {
      return this.get('previous');
    }
  }, {
    key: "next",
    get: function get() {
      return this.get('next');
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return "Linkage<".concat(this.next.toRawType(true), ">");
    }
    /**
     * @description Custom toU8a which with bare mode does not return the linkage if empty
     */

  }, {
    key: "toU8a",
    value: function toU8a() {
      // As part of a storage query (where these appear), in the case of empty, the values
      // are NOT populated by the node - follow the same logic, leaving it empty
      return this.isEmpty ? EMPTY : _get(_getPrototypeOf(Linkage.prototype), "toU8a", this).call(this);
    }
  }], [{
    key: "withKey",
    value: function withKey(Type) {
      return /*#__PURE__*/function (_Linkage) {
        _inherits(_class, _Linkage);

        var _super2 = _createSuper(_class);

        function _class(registry, value) {
          _classCallCheck(this, _class);

          return _super2.call(this, registry, Type, value);
        }

        return _createClass(_class);
      }(Linkage);
    }
  }]);

  return Linkage;
}(_Struct2.Struct);
/**
 * @name LinkageResult
 * @description A Linkage keys/Values tuple
 */


exports.Linkage = Linkage;

var LinkageResult = /*#__PURE__*/function (_Tuple) {
  _inherits(LinkageResult, _Tuple);

  var _super3 = _createSuper(LinkageResult);

  function LinkageResult(registry, _ref, _ref2) {
    var _ref3 = _slicedToArray(_ref, 2),
        TypeKey = _ref3[0],
        keys = _ref3[1];

    var _ref4 = _slicedToArray(_ref2, 2),
        TypeValue = _ref4[0],
        values = _ref4[1];

    _classCallCheck(this, LinkageResult);

    return _super3.call(this, registry, {
      Keys: _Vec.Vec.with(TypeKey),
      Values: _Vec.Vec.with(TypeValue)
    }, [keys, values]);
  }

  return _createClass(LinkageResult);
}(_Tuple2.Tuple);

exports.LinkageResult = LinkageResult;
},{"../base/Option.js":"node_modules/@polkadot/types-codec/base/Option.js","../base/Tuple.js":"node_modules/@polkadot/types-codec/base/Tuple.js","../base/Vec.js":"node_modules/@polkadot/types-codec/base/Vec.js","../native/Struct.js":"node_modules/@polkadot/types-codec/native/Struct.js"}],"node_modules/@polkadot/types-codec/native/Bool.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bool = void 0;

var _util = require("@polkadot/util");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/**
 * @name bool
 * @description
 * Representation for a boolean value in the system. It extends the base JS `Boolean` class
 * @noInheritDoc
 */
var bool = /*#__PURE__*/function (_Boolean) {
  _inherits(bool, _Boolean);

  var _super = _createSuper(bool);

  function bool(registry) {
    var _this;

    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    _classCallCheck(this, bool);

    _this = _super.call(this, (0, _util.isU8a)(value) ? value[0] === 1 : value instanceof Boolean ? value.valueOf() : !!value);
    _this.registry = registry;
    return _this;
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  _createClass(bool, [{
    key: "encodedLength",
    get: function get() {
      return 1;
    }
    /**
     * @description returns a hash of the contents
     */

  }, {
    key: "hash",
    get: function get() {
      return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the value is an empty value (true when it wraps false/default)
     */

  }, {
    key: "isEmpty",
    get: function get() {
      return this.isFalse;
    }
    /**
     * @description Checks if the value is an empty value (always false)
     */

  }, {
    key: "isFalse",
    get: function get() {
      return !this.isTrue;
    }
    /**
     * @description Checks if the value is an empty value (always false)
     */

  }, {
    key: "isTrue",
    get: function get() {
      return this.valueOf();
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */

  }, {
    key: "eq",
    value: function eq(other) {
      return this.valueOf() === (other instanceof Boolean ? other.valueOf() : other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */

  }, {
    key: "inspect",
    value: function inspect() {
      return {
        outer: [this.toU8a()]
      };
    }
    /**
     * @description Returns a hex string representation of the value
     */

  }, {
    key: "toHex",
    value: function toHex() {
      return (0, _util.u8aToHex)(this.toU8a());
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */

  }, {
    key: "toHuman",
    value: function toHuman() {
      return this.toJSON();
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      return this.valueOf();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return 'bool';
    }
    /**
     * @description Returns the string representation of the value
     */

  }, {
    key: "toString",
    value: function toString() {
      return this.toJSON().toString();
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */
    // eslint-disable-next-line @typescript-eslint/no-unused-vars

  }, {
    key: "toU8a",
    value: function toU8a(isBare) {
      return new Uint8Array([this.valueOf() ? 1 : 0]);
    }
  }]);

  return bool;
}( /*#__PURE__*/_wrapNativeSuper(Boolean));

exports.bool = bool;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types-codec/extended/OptionBool.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.OptionBool = void 0;

var _util = require("@polkadot/util");

var _Option2 = require("../base/Option.js");

var _Bool = require("../native/Bool.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function decodeU8a(registry, value) {
  // Encoded as -
  //  - 0 = None
  //  - 1 = True
  //  - 2 = False
  return value[0] === 0 ? null : new _Bool.bool(registry, value[0] === 1);
}
/**
 * @name OptionBool
 * @description A specific implementation of Option<bool> than allows for single-byte encoding
 */


var OptionBool = /*#__PURE__*/function (_Option) {
  _inherits(OptionBool, _Option);

  var _super = _createSuper(OptionBool);

  function OptionBool(registry, value) {
    var _this;

    _classCallCheck(this, OptionBool);

    _this = _super.call(this, registry, _Bool.bool, (0, _util.isU8a)(value) || (0, _util.isHex)(value) ? decodeU8a(registry, (0, _util.u8aToU8a)(value)) : value);
    _this.initialU8aLength = 1;
    return _this;
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  _createClass(OptionBool, [{
    key: "encodedLength",
    get: function get() {
      return 1;
    }
    /**
     * @description Checks if the value is an empty value (always false)
     */

  }, {
    key: "isFalse",
    get: function get() {
      return this.isSome ? !this.value.valueOf() : false;
    }
    /**
     * @description Checks if the value is an empty value (always false)
     */

  }, {
    key: "isTrue",
    get: function get() {
      return this.isSome ? this.value.valueOf() : false;
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */

  }, {
    key: "inspect",
    value: function inspect() {
      return {
        outer: [this.toU8a()]
      };
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType(isBare) {
      return isBare ? 'bool' : 'Option<bool>';
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */

  }, {
    key: "toU8a",
    value: function toU8a(isBare) {
      if (isBare) {
        return _get(_getPrototypeOf(OptionBool.prototype), "toU8a", this).call(this, true);
      }

      return this.isSome ? new Uint8Array([this.isTrue ? 1 : 2]) : new Uint8Array([0]);
    }
  }]);

  return OptionBool;
}(_Option2.Option);

exports.OptionBool = OptionBool;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../base/Option.js":"node_modules/@polkadot/types-codec/base/Option.js","../native/Bool.js":"node_modules/@polkadot/types-codec/native/Bool.js"}],"node_modules/@polkadot/types-codec/extended/Range.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Range = void 0;

var _Tuple2 = require("../base/Tuple.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

var _rangeName = /*#__PURE__*/new WeakMap();

/**
 * @name Range
 * @description
 * Rust `Range<T>` representation
 */
var Range = /*#__PURE__*/function (_Tuple) {
  _inherits(Range, _Tuple);

  var _super = _createSuper(Range);

  function Range(registry, Type, value) {
    var _this;

    var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
        _ref$rangeName = _ref.rangeName,
        rangeName = _ref$rangeName === void 0 ? 'Range' : _ref$rangeName;

    _classCallCheck(this, Range);

    _this = _super.call(this, registry, [Type, Type], value);

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _rangeName, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldSet(_assertThisInitialized(_this), _rangeName, rangeName);

    return _this;
  }

  _createClass(Range, [{
    key: "start",
    get:
    /**
     * @description Returns the starting range value
     */
    function get() {
      return this[0];
    }
    /**
     * @description Returns the ending range value
     */

  }, {
    key: "end",
    get: function get() {
      return this[1];
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return "".concat(_classPrivateFieldGet(this, _rangeName), "<").concat(this.start.toRawType(), ">");
    }
  }], [{
    key: "with",
    value: function _with(Type) {
      return /*#__PURE__*/function (_Range) {
        _inherits(_class, _Range);

        var _super2 = _createSuper(_class);

        function _class(registry, value) {
          _classCallCheck(this, _class);

          return _super2.call(this, registry, Type, value);
        }

        return _createClass(_class);
      }(Range);
    }
  }]);

  return Range;
}(_Tuple2.Tuple);

exports.Range = Range;
},{"../base/Tuple.js":"node_modules/@polkadot/types-codec/base/Tuple.js"}],"node_modules/@polkadot/types-codec/extended/RangeInclusive.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RangeInclusive = void 0;

var _Range2 = require("./Range.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var RangeInclusive = /*#__PURE__*/function (_Range) {
  _inherits(RangeInclusive, _Range);

  var _super = _createSuper(RangeInclusive);

  function RangeInclusive(registry, Type, value) {
    _classCallCheck(this, RangeInclusive);

    return _super.call(this, registry, Type, value, {
      rangeName: 'RangeInclusive'
    });
  }

  _createClass(RangeInclusive, null, [{
    key: "with",
    value: function _with(Type) {
      return /*#__PURE__*/function (_RangeInclusive) {
        _inherits(_class, _RangeInclusive);

        var _super2 = _createSuper(_class);

        function _class(registry, value) {
          _classCallCheck(this, _class);

          return _super2.call(this, registry, Type, value);
        }

        return _createClass(_class);
      }(RangeInclusive);
    }
  }]);

  return RangeInclusive;
}(_Range2.Range);

exports.RangeInclusive = RangeInclusive;
},{"./Range.js":"node_modules/@polkadot/types-codec/extended/Range.js"}],"node_modules/@polkadot/types-codec/native/Text.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Text = void 0;

var _util = require("@polkadot/util");

var _Raw = require("./Raw.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var MAX_LENGTH = 128 * 1024;
/** @internal */

function decodeText(value) {
  if ((0, _util.isU8a)(value)) {
    if (!value.length) {
      return ['', 0];
    } // for Raw, the internal buffer does not have an internal length
    // (the same applies in e.g. Bytes, where length is added at encoding-time)


    if (value instanceof _Raw.Raw) {
      return [(0, _util.u8aToString)(value), 0];
    }

    var _compactFromU8aLim = (0, _util.compactFromU8aLim)(value),
        _compactFromU8aLim2 = _slicedToArray(_compactFromU8aLim, 2),
        offset = _compactFromU8aLim2[0],
        length = _compactFromU8aLim2[1];

    var total = offset + length;

    if (length > MAX_LENGTH) {
      throw new Error("Text: length ".concat(length.toString(), " exceeds ").concat(MAX_LENGTH));
    } else if (total > value.length) {
      throw new Error("Text: required length less than remainder, expected at least ".concat(total, ", found ").concat(value.length));
    }

    return [(0, _util.u8aToString)(value.subarray(offset, total)), total];
  } else if ((0, _util.isHex)(value)) {
    return [(0, _util.u8aToString)((0, _util.hexToU8a)(value)), 0];
  }

  return [value ? value.toString() : '', 0];
}
/**
 * @name Text
 * @description
 * This is a string wrapper, along with the length. It is used both for strings as well
 * as items such as documentation. It simply extends the standard JS `String` built-in
 * object, inheriting all methods exposed from `String`.
 * @noInheritDoc
 */


var _override = /*#__PURE__*/new WeakMap();

var Text = /*#__PURE__*/function (_String) {
  _inherits(Text, _String);

  var _super = _createSuper(Text);

  function Text(registry, value) {
    var _this;

    _classCallCheck(this, Text);

    var _decodeText = decodeText(value),
        _decodeText2 = _slicedToArray(_decodeText, 2),
        str = _decodeText2[0],
        decodedLength = _decodeText2[1];

    _this = _super.call(this, str);

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _override, {
      writable: true,
      value: null
    });

    _this.registry = registry;
    _this.initialU8aLength = decodedLength;
    return _this;
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  _createClass(Text, [{
    key: "encodedLength",
    get: function get() {
      return this.toU8a().length;
    }
    /**
     * @description returns a hash of the contents
     */

  }, {
    key: "hash",
    get: function get() {
      return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the value is an empty value
     */

  }, {
    key: "isEmpty",
    get: function get() {
      return this.length === 0;
    }
    /**
     * @description The length of the value
     */

  }, {
    key: "length",
    get: function get() {
      // only included here since we ignore inherited docs
      return _get(_getPrototypeOf(Text.prototype), "length", this);
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */

  }, {
    key: "eq",
    value: function eq(other) {
      return (0, _util.isString)(other) ? this.toString() === other.toString() : false;
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */

  }, {
    key: "inspect",
    value: function inspect() {
      var value = (0, _util.stringToU8a)(_get(_getPrototypeOf(Text.prototype), "toString", this).call(this));
      return {
        outer: value.length ? [(0, _util.compactToU8a)(value.length), value] : [(0, _util.compactToU8a)(value.length)]
      };
    }
    /**
     * @description Set an override value for this
     */

  }, {
    key: "setOverride",
    value: function setOverride(override) {
      _classPrivateFieldSet(this, _override, override);
    }
    /**
     * @description Returns a hex string representation of the value
     */

  }, {
    key: "toHex",
    value: function toHex() {
      // like with Vec<u8>, when we are encoding to hex, we don't actually add
      // the length prefix (it is already implied by the actual string length)
      return (0, _util.u8aToHex)(this.toU8a(true));
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */

  }, {
    key: "toHuman",
    value: function toHuman() {
      return this.toJSON();
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      return this.toString();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return 'Text';
    }
    /**
     * @description Returns the string representation of the value
     */

  }, {
    key: "toString",
    value: function toString() {
      return _classPrivateFieldGet(this, _override) || _get(_getPrototypeOf(Text.prototype), "toString", this).call(this);
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */

  }, {
    key: "toU8a",
    value: function toU8a(isBare) {
      // NOTE Here we use the super toString (we are not taking overrides into account,
      // rather encoding the original value the string was constructed with)
      var encoded = (0, _util.stringToU8a)(_get(_getPrototypeOf(Text.prototype), "toString", this).call(this));
      return isBare ? encoded : (0, _util.compactAddLength)(encoded);
    }
  }]);

  return Text;
}( /*#__PURE__*/_wrapNativeSuper(String));

exports.Text = Text;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./Raw.js":"node_modules/@polkadot/types-codec/native/Raw.js"}],"node_modules/@polkadot/types-codec/extended/Type.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Type = void 0;

var _Text2 = require("../native/Text.js");

var _index = require("../utils/index.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/**
 * @name Type
 * @description
 * This is a extended version of Text, specifically to handle types. Here we rely fully
 * on what Text provides us, however we also adjust the types received from the runtime,
 * i.e. we remove the `T::` prefixes found in some types for consistency across implementation.
 */
var Type = /*#__PURE__*/function (_Text) {
  _inherits(Type, _Text);

  var _super = _createSuper(Type);

  function Type(registry) {
    var _this;

    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

    _classCallCheck(this, Type);

    _this = _super.call(this, registry, value);

    _this.setOverride((0, _index.sanitize)(_this.toString()));

    return _this;
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  _createClass(Type, [{
    key: "toRawType",
    value: function toRawType() {
      return 'Type';
    }
  }]);

  return Type;
}(_Text2.Text);

exports.Type = Type;
},{"../native/Text.js":"node_modules/@polkadot/types-codec/native/Text.js","../utils/index.js":"node_modules/@polkadot/types-codec/utils/index.js"}],"node_modules/@polkadot/types-codec/extended/U8aFixed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.U8aFixed = void 0;

var _util = require("@polkadot/util");

var _Raw2 = require("../native/Raw.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/** @internal */
function decodeU8aFixed(value, bitLength) {
  var u8a = (0, _util.u8aToU8a)(value);
  var byteLength = bitLength / 8;

  if (!u8a.length) {
    return [new Uint8Array(byteLength), 0];
  }

  if ((0, _util.isU8a)(value) ? u8a.length < byteLength : u8a.length !== byteLength) {
    throw new Error("Expected input with ".concat(byteLength, " bytes (").concat(bitLength, " bits), found ").concat(u8a.length, " bytes"));
  }

  return [u8a.subarray(0, byteLength), byteLength];
}
/**
 * @name U8aFixed
 * @description
 * A U8a that manages a a sequence of bytes up to the specified bitLength. Not meant
 * to be used directly, rather is should be subclassed with the specific lengths.
 */


var U8aFixed = /*#__PURE__*/function (_Raw) {
  _inherits(U8aFixed, _Raw);

  var _super = _createSuper(U8aFixed);

  function U8aFixed(registry) {
    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Uint8Array();
    var bitLength = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 256;

    _classCallCheck(this, U8aFixed);

    var _decodeU8aFixed = decodeU8aFixed(value, bitLength),
        _decodeU8aFixed2 = _slicedToArray(_decodeU8aFixed, 2),
        u8a = _decodeU8aFixed2[0],
        decodedLength = _decodeU8aFixed2[1];

    return _super.call(this, registry, u8a, decodedLength);
  }

  _createClass(U8aFixed, [{
    key: "toRawType",
    value:
    /**
     * @description Returns the base runtime type name for this instance
     */
    function toRawType() {
      return "[u8;".concat(this.length, "]");
    }
  }], [{
    key: "with",
    value: function _with(bitLength, typeName) {
      return /*#__PURE__*/function (_U8aFixed) {
        _inherits(_class, _U8aFixed);

        var _super2 = _createSuper(_class);

        function _class(registry, value) {
          _classCallCheck(this, _class);

          return _super2.call(this, registry, value, bitLength);
        }

        _createClass(_class, [{
          key: "toRawType",
          value: function toRawType() {
            return typeName || _get(_getPrototypeOf(_class.prototype), "toRawType", this).call(this);
          }
        }]);

        return _class;
      }(U8aFixed);
    }
  }]);

  return U8aFixed;
}(_Raw2.Raw);

exports.U8aFixed = U8aFixed;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../native/Raw.js":"node_modules/@polkadot/types-codec/native/Raw.js"}],"node_modules/@polkadot/types-codec/extended/WrapperKeepOpaque.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WrapperKeepOpaque = void 0;

var _util = require("@polkadot/util");

var _Raw = require("../native/Raw.js");

var _index = require("../utils/index.js");

var _Bytes2 = require("./Bytes.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function decodeRaw(registry, typeName, value) {
  var Type = (0, _index.typeToConstructor)(registry, typeName);

  if ((0, _util.isU8a)(value) || (0, _util.isHex)(value)) {
    try {
      var _ref = (0, _util.isHex)(value) || value instanceof _Raw.Raw ? [0, value] : (0, _util.compactStripLength)(value),
          _ref2 = _slicedToArray(_ref, 2),
          u8a = _ref2[1];

      return [Type, new Type(registry, u8a), value];
    } catch (_unused) {
      return [Type, null, value];
    }
  }

  var instance = new Type(registry, value);
  return [Type, instance, (0, _util.compactAddLength)(instance.toU8a())];
}

var _Type = /*#__PURE__*/new WeakMap();

var _decoded = /*#__PURE__*/new WeakMap();

var _opaqueName = /*#__PURE__*/new WeakMap();

var WrapperKeepOpaque = /*#__PURE__*/function (_Bytes) {
  _inherits(WrapperKeepOpaque, _Bytes);

  var _super = _createSuper(WrapperKeepOpaque);

  function WrapperKeepOpaque(registry, typeName, value) {
    var _this;

    var _ref3 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
        _ref3$opaqueName = _ref3.opaqueName,
        opaqueName = _ref3$opaqueName === void 0 ? 'WrapperKeepOpaque' : _ref3$opaqueName;

    _classCallCheck(this, WrapperKeepOpaque);

    var _decodeRaw = decodeRaw(registry, typeName, value),
        _decodeRaw2 = _slicedToArray(_decodeRaw, 3),
        Type = _decodeRaw2[0],
        decoded = _decodeRaw2[1],
        u8a = _decodeRaw2[2];

    _this = _super.call(this, registry, u8a);

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _Type, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _decoded, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _opaqueName, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldSet(_assertThisInitialized(_this), _Type, Type);

    _classPrivateFieldSet(_assertThisInitialized(_this), _decoded, decoded);

    _classPrivateFieldSet(_assertThisInitialized(_this), _opaqueName, opaqueName);

    return _this;
  }

  _createClass(WrapperKeepOpaque, [{
    key: "isDecoded",
    get:
    /**
     * @description Checks if the wrapper is decodable
     */
    function get() {
      return !!_classPrivateFieldGet(this, _decoded);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */

  }, {
    key: "inspect",
    value: function inspect() {
      return _classPrivateFieldGet(this, _decoded) ? {
        inner: [_classPrivateFieldGet(this, _decoded).inspect()],
        outer: [(0, _util.compactToU8a)(this.length)]
      } : {
        outer: [(0, _util.compactToU8a)(this.length), this.toU8a(true)]
      };
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */

  }, {
    key: "toHuman",
    value: function toHuman(isExtended) {
      return _classPrivateFieldGet(this, _decoded) ? _classPrivateFieldGet(this, _decoded).toHuman(isExtended) : _get(_getPrototypeOf(WrapperKeepOpaque.prototype), "toHuman", this).call(this);
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return "".concat(_classPrivateFieldGet(this, _opaqueName), "<").concat(this.registry.getClassName(_classPrivateFieldGet(this, _Type)) || (_classPrivateFieldGet(this, _decoded) ? _classPrivateFieldGet(this, _decoded).toRawType() : new (_classPrivateFieldGet(this, _Type))(this.registry).toRawType()), ">");
    }
    /**
     * @description Converts the Object to to a string (either decoded or bytes)
     */

  }, {
    key: "toString",
    value: function toString() {
      return _classPrivateFieldGet(this, _decoded) ? _classPrivateFieldGet(this, _decoded).toString() : _get(_getPrototypeOf(WrapperKeepOpaque.prototype), "toString", this).call(this);
    }
    /**
     * @description Returns the decoded that the WrapperKeepOpaque represents (if available), throws if non-decodable
     */

  }, {
    key: "unwrap",
    value: function unwrap() {
      if (!_classPrivateFieldGet(this, _decoded)) {
        throw new Error("".concat(_classPrivateFieldGet(this, _opaqueName), ": unwrapping an undecodable value"));
      }

      return _classPrivateFieldGet(this, _decoded);
    }
  }], [{
    key: "with",
    value: function _with(Type) {
      return /*#__PURE__*/function (_WrapperKeepOpaque) {
        _inherits(_class, _WrapperKeepOpaque);

        var _super2 = _createSuper(_class);

        function _class(registry, value) {
          _classCallCheck(this, _class);

          return _super2.call(this, registry, Type, value);
        }

        return _createClass(_class);
      }(WrapperKeepOpaque);
    }
  }]);

  return WrapperKeepOpaque;
}(_Bytes2.Bytes);

exports.WrapperKeepOpaque = WrapperKeepOpaque;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../native/Raw.js":"node_modules/@polkadot/types-codec/native/Raw.js","../utils/index.js":"node_modules/@polkadot/types-codec/utils/index.js","./Bytes.js":"node_modules/@polkadot/types-codec/extended/Bytes.js"}],"node_modules/@polkadot/types-codec/extended/WrapperOpaque.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WrapperOpaque = void 0;

var _WrapperKeepOpaque2 = require("./WrapperKeepOpaque.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var WrapperOpaque = /*#__PURE__*/function (_WrapperKeepOpaque) {
  _inherits(WrapperOpaque, _WrapperKeepOpaque);

  var _super = _createSuper(WrapperOpaque);

  function WrapperOpaque(registry, typeName, value) {
    _classCallCheck(this, WrapperOpaque);

    return _super.call(this, registry, typeName, value, {
      opaqueName: 'WrapperOpaque'
    });
  }

  _createClass(WrapperOpaque, [{
    key: "inner",
    get:
    /**
     * @description The inner value for this wrapper, in all cases it _should_ be decodable (unlike KeepOpaque)
     */
    function get() {
      return this.unwrap();
    }
  }], [{
    key: "with",
    value: function _with(Type) {
      return /*#__PURE__*/function (_WrapperOpaque) {
        _inherits(_class, _WrapperOpaque);

        var _super2 = _createSuper(_class);

        function _class(registry, value) {
          _classCallCheck(this, _class);

          return _super2.call(this, registry, Type, value);
        }

        return _createClass(_class);
      }(WrapperOpaque);
    }
  }]);

  return WrapperOpaque;
}(_WrapperKeepOpaque2.WrapperKeepOpaque);

exports.WrapperOpaque = WrapperOpaque;
},{"./WrapperKeepOpaque.js":"node_modules/@polkadot/types-codec/extended/WrapperKeepOpaque.js"}],"node_modules/@polkadot/types-codec/extended/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BTreeMap", {
  enumerable: true,
  get: function () {
    return _BTreeMap.BTreeMap;
  }
});
Object.defineProperty(exports, "BTreeSet", {
  enumerable: true,
  get: function () {
    return _BTreeSet.BTreeSet;
  }
});
Object.defineProperty(exports, "BitVec", {
  enumerable: true,
  get: function () {
    return _BitVec.BitVec;
  }
});
Object.defineProperty(exports, "Bytes", {
  enumerable: true,
  get: function () {
    return _Bytes.Bytes;
  }
});
Object.defineProperty(exports, "CodecMap", {
  enumerable: true,
  get: function () {
    return _Map.CodecMap;
  }
});
Object.defineProperty(exports, "HashMap", {
  enumerable: true,
  get: function () {
    return _HashMap.HashMap;
  }
});
Object.defineProperty(exports, "Linkage", {
  enumerable: true,
  get: function () {
    return _Linkage.Linkage;
  }
});
Object.defineProperty(exports, "Map", {
  enumerable: true,
  get: function () {
    return _Map.CodecMap;
  }
});
Object.defineProperty(exports, "OptionBool", {
  enumerable: true,
  get: function () {
    return _OptionBool.OptionBool;
  }
});
Object.defineProperty(exports, "Range", {
  enumerable: true,
  get: function () {
    return _Range.Range;
  }
});
Object.defineProperty(exports, "RangeInclusive", {
  enumerable: true,
  get: function () {
    return _RangeInclusive.RangeInclusive;
  }
});
Object.defineProperty(exports, "Type", {
  enumerable: true,
  get: function () {
    return _Type.Type;
  }
});
Object.defineProperty(exports, "U8aFixed", {
  enumerable: true,
  get: function () {
    return _U8aFixed.U8aFixed;
  }
});
Object.defineProperty(exports, "WrapperKeepOpaque", {
  enumerable: true,
  get: function () {
    return _WrapperKeepOpaque.WrapperKeepOpaque;
  }
});
Object.defineProperty(exports, "WrapperOpaque", {
  enumerable: true,
  get: function () {
    return _WrapperOpaque.WrapperOpaque;
  }
});

var _BitVec = require("./BitVec.js");

var _BTreeMap = require("./BTreeMap.js");

var _BTreeSet = require("./BTreeSet.js");

var _Bytes = require("./Bytes.js");

var _HashMap = require("./HashMap.js");

var _Linkage = require("./Linkage.js");

var _Map = require("./Map.js");

var _OptionBool = require("./OptionBool.js");

var _Range = require("./Range.js");

var _RangeInclusive = require("./RangeInclusive.js");

var _Type = require("./Type.js");

var _U8aFixed = require("./U8aFixed.js");

var _WrapperKeepOpaque = require("./WrapperKeepOpaque.js");

var _WrapperOpaque = require("./WrapperOpaque.js");
},{"./BitVec.js":"node_modules/@polkadot/types-codec/extended/BitVec.js","./BTreeMap.js":"node_modules/@polkadot/types-codec/extended/BTreeMap.js","./BTreeSet.js":"node_modules/@polkadot/types-codec/extended/BTreeSet.js","./Bytes.js":"node_modules/@polkadot/types-codec/extended/Bytes.js","./HashMap.js":"node_modules/@polkadot/types-codec/extended/HashMap.js","./Linkage.js":"node_modules/@polkadot/types-codec/extended/Linkage.js","./Map.js":"node_modules/@polkadot/types-codec/extended/Map.js","./OptionBool.js":"node_modules/@polkadot/types-codec/extended/OptionBool.js","./Range.js":"node_modules/@polkadot/types-codec/extended/Range.js","./RangeInclusive.js":"node_modules/@polkadot/types-codec/extended/RangeInclusive.js","./Type.js":"node_modules/@polkadot/types-codec/extended/Type.js","./U8aFixed.js":"node_modules/@polkadot/types-codec/extended/U8aFixed.js","./WrapperKeepOpaque.js":"node_modules/@polkadot/types-codec/extended/WrapperKeepOpaque.js","./WrapperOpaque.js":"node_modules/@polkadot/types-codec/extended/WrapperOpaque.js"}],"node_modules/@polkadot/types-codec/native/Date.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CodecDate = void 0;

var _util = require("@polkadot/util");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var BITLENGTH = 64;

function decodeDate(value) {
  if ((0, _util.isU8a)(value)) {
    value = (0, _util.u8aToBn)(value.subarray(0, BITLENGTH / 8));
  } else if (value instanceof Date) {
    return value;
  } else if ((0, _util.isString)(value)) {
    value = new _util.BN(value.toString(), 10, 'le');
  }

  return new Date((0, _util.bnToBn)(value).toNumber() * 1000);
}
/**
 * @name Date
 * @description
 * A wrapper around seconds/timestamps. Internally the representation only has
 * second precicion (aligning with Rust), so any numbers passed an/out are always
 * per-second. For any encoding/decoding the 1000 multiplier would be applied to
 * get it in line with JavaScript formats. It extends the base JS `Date` object
 * and has all the methods available that are applicable to any `Date`
 * @noInheritDoc
 */


var CodecDate = /*#__PURE__*/function (_Date) {
  _inherits(CodecDate, _Date);

  var _super = _createSuper(CodecDate);

  function CodecDate(registry) {
    var _this;

    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

    _classCallCheck(this, CodecDate);

    _this = _super.call(this, decodeDate(value));
    _this.registry = registry;
    return _this;
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  _createClass(CodecDate, [{
    key: "encodedLength",
    get: function get() {
      return BITLENGTH / 8;
    }
    /**
     * @description returns a hash of the contents
     */

  }, {
    key: "hash",
    get: function get() {
      return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the value is an empty value
     */

  }, {
    key: "isEmpty",
    get: function get() {
      return this.getTime() === 0;
    }
    /**
     * @description Returns the number of bits in the value
     */

  }, {
    key: "bitLength",
    value: function bitLength() {
      return BITLENGTH;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */

  }, {
    key: "eq",
    value: function eq(other) {
      return decodeDate(other).getTime() === this.getTime();
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */

  }, {
    key: "inspect",
    value: function inspect() {
      return {
        outer: [this.toU8a()]
      };
    }
    /**
     * @description Returns a BigInt representation of the number
     */

  }, {
    key: "toBigInt",
    value: function toBigInt() {
      return BigInt(this.toNumber());
    }
    /**
     * @description Returns the BN representation of the timestamp
     */

  }, {
    key: "toBn",
    value: function toBn() {
      return new _util.BN(this.toNumber());
    }
    /**
     * @description Returns a hex string representation of the value
     */

  }, {
    key: "toHex",
    value: function toHex() {
      var isLe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      return (0, _util.bnToHex)(this.toBn(), {
        bitLength: BITLENGTH,
        isLe: isLe,
        isNegative: false
      });
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */

  }, {
    key: "toHuman",
    value: function toHuman() {
      return this.toISOString();
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      // FIXME Return type should be number, but conflicts with Date.toJSON()
      // which returns string
      return this.toNumber();
    }
    /**
     * @description Returns the number representation for the timestamp
     */

  }, {
    key: "toNumber",
    value: function toNumber() {
      return Math.ceil(this.getTime() / 1000);
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return 'Moment';
    }
    /**
     * @description Returns the string representation of the value
     */

  }, {
    key: "toString",
    value: function toString() {
      // only included here since we do not inherit docs
      return _get(_getPrototypeOf(CodecDate.prototype), "toString", this).call(this);
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */
    // eslint-disable-next-line @typescript-eslint/no-unused-vars

  }, {
    key: "toU8a",
    value: function toU8a(isBare) {
      return (0, _util.bnToU8a)(this.toNumber(), BITLENGTH, true);
    }
  }]);

  return CodecDate;
}( /*#__PURE__*/_wrapNativeSuper(Date));

exports.CodecDate = CodecDate;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types-codec/native/Float.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Float = void 0;

var _util = require("@polkadot/util");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

var _bitLength = /*#__PURE__*/new WeakMap();

/**
 * @name Float
 * @description
 * A Codec wrapper for F32 & F64 values. You generally don't want to be using
 * f32/f64 in your runtime, operations on fixed points numbers are preferable. This class
 * was explicitly added since scale-codec has a flag that enables this and it is available
 * in some eth_* RPCs
 */
var Float = /*#__PURE__*/function (_Number) {
  _inherits(Float, _Number);

  var _super = _createSuper(Float);

  function Float(registry, value) {
    var _this;

    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
        _ref$bitLength = _ref.bitLength,
        bitLength = _ref$bitLength === void 0 ? 32 : _ref$bitLength;

    _classCallCheck(this, Float);

    _this = _super.call(this, (0, _util.isU8a)(value) || (0, _util.isHex)(value) ? value.length === 0 ? 0 : (0, _util.u8aToFloat)((0, _util.u8aToU8a)(value), {
      bitLength: bitLength
    }) : value || 0);

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _bitLength, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldSet(_assertThisInitialized(_this), _bitLength, bitLength);

    _this.encodedLength = bitLength / 8;
    _this.initialU8aLength = _this.encodedLength;
    _this.registry = registry;
    return _this;
  }

  _createClass(Float, [{
    key: "hash",
    get:
    /**
     * @description returns a hash of the contents
     */
    function get() {
      return this.registry.hash(this.toU8a());
    }
    /**
     * @description Returns true if the type wraps an empty/default all-0 value
     */

  }, {
    key: "isEmpty",
    get: function get() {
      return this.valueOf() === 0;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */

  }, {
    key: "eq",
    value: function eq(other) {
      return this.valueOf() === Number(other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */

  }, {
    key: "inspect",
    value: function inspect() {
      return {
        outer: [this.toU8a()]
      };
    }
    /**
     * @description Returns a hex string representation of the value
     */

  }, {
    key: "toHex",
    value: function toHex() {
      return (0, _util.u8aToHex)(this.toU8a());
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */

  }, {
    key: "toHuman",
    value: function toHuman() {
      return this.toString();
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      // Not sure if this is actually a hex or a string value
      // (would need to check against RPCs to see the result here)
      return this.toHex();
    }
    /**
     * @description Returns the number representation (Same as valueOf)
     */

  }, {
    key: "toNumber",
    value: function toNumber() {
      return this.valueOf();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return "f".concat(_classPrivateFieldGet(this, _bitLength));
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     */

  }, {
    key: "toU8a",
    value: function toU8a() {
      return (0, _util.floatToU8a)(this, {
        bitLength: _classPrivateFieldGet(this, _bitLength)
      });
    }
  }], [{
    key: "with",
    value: function _with(bitLength) {
      return /*#__PURE__*/function (_Float) {
        _inherits(_class, _Float);

        var _super2 = _createSuper(_class);

        function _class(registry, value) {
          _classCallCheck(this, _class);

          return _super2.call(this, registry, value, {
            bitLength: bitLength
          });
        }

        return _createClass(_class);
      }(Float);
    }
  }]);

  return Float;
}( /*#__PURE__*/_wrapNativeSuper(Number));

exports.Float = Float;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types-codec/native/Json.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Json = void 0;

var _util = require("@polkadot/util");

var _index = require("../utils/index.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/** @internal */
function decodeJson(value) {
  return Object.entries(value || {});
}
/**
 * @name Json
 * @description
 * Wraps the a JSON structure retrieve via RPC. It extends the standard JS Map with. While it
 * implements a Codec, it is limited in that it can only be used with input objects via RPC,
 * i.e. no hex decoding. Unlike a struct, this waps a JSON object with unknown keys
 * @noInheritDoc
 */


var Json = /*#__PURE__*/function (_Map) {
  _inherits(Json, _Map);

  var _super = _createSuper(Json);

  function Json(registry, value) {
    var _this;

    _classCallCheck(this, Json);

    var decoded = decodeJson(value);
    _this = _super.call(this, decoded);
    _this.registry = registry;
    (0, _util.objectProperties)(_assertThisInitialized(_this), decoded.map(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 1),
          k = _ref2[0];

      return k;
    }), function (k) {
      return _this.get(k);
    });
    return _this;
  }
  /**
   * @description Always 0, never encodes as a Uint8Array
   */


  _createClass(Json, [{
    key: "encodedLength",
    get: function get() {
      return 0;
    }
    /**
     * @description returns a hash of the contents
     */

  }, {
    key: "hash",
    get: function get() {
      return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the value is an empty value
     */

  }, {
    key: "isEmpty",
    get: function get() {
      return _toConsumableArray(this.keys()).length === 0;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */

  }, {
    key: "eq",
    value: function eq(other) {
      return (0, _index.compareMap)(this, other);
    }
    /**
     * @description Returns a typed value from the internal map
     */

  }, {
    key: "getT",
    value: function getT(key) {
      return this.get(key);
    }
    /**
     * @description Unimplemented, will throw
     */

  }, {
    key: "inspect",
    value: function inspect() {
      throw new Error('Unimplemented');
    }
    /**
     * @description Unimplemented, will throw
     */

  }, {
    key: "toHex",
    value: function toHex() {
      throw new Error('Unimplemented');
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */

  }, {
    key: "toHuman",
    value: function toHuman() {
      return _toConsumableArray(this.entries()).reduce(function (json, _ref3) {
        var _ref4 = _slicedToArray(_ref3, 2),
            key = _ref4[0],
            value = _ref4[1];

        json[key] = (0, _util.isFunction)(value.toHuman) ? value.toHuman() : value;
        return json;
      }, {});
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      return _toConsumableArray(this.entries()).reduce(function (json, _ref5) {
        var _ref6 = _slicedToArray(_ref5, 2),
            key = _ref6[0],
            value = _ref6[1];

        json[key] = value;
        return json;
      }, {});
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return 'Json';
    }
    /**
     * @description Returns the string representation of the value
     */

  }, {
    key: "toString",
    value: function toString() {
      return (0, _util.stringify)(this.toJSON());
    }
    /**
     * @description Unimplemented, will throw
     */
    // eslint-disable-next-line @typescript-eslint/no-unused-vars

  }, {
    key: "toU8a",
    value: function toU8a(isBare) {
      throw new Error('Unimplemented');
    }
  }]);

  return Json;
}( /*#__PURE__*/_wrapNativeSuper(Map));

exports.Json = Json;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../utils/index.js":"node_modules/@polkadot/types-codec/utils/index.js"}],"node_modules/@polkadot/types-codec/native/Set.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CodecSet = void 0;

var _util = require("@polkadot/util");

var _index = require("../utils/index.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function encodeSet(setValues, values) {
  var encoded = new _util.BN(0);

  for (var i = 0; i < values.length; i++) {
    encoded.ior((0, _util.bnToBn)(setValues[values[i]] || 0));
  }

  return encoded;
}
/** @internal */


function decodeSetArray(setValues, values) {
  var result = new Array(values.length);

  for (var i = 0; i < values.length; i++) {
    var key = values[i];

    if ((0, _util.isUndefined)(setValues[key])) {
      throw new Error("Set: Invalid key '".concat(key, "' passed to Set, allowed ").concat(Object.keys(setValues).join(', ')));
    }

    result[i] = key;
  }

  return result;
}
/** @internal */


function decodeSetNumber(setValues, _value) {
  var bn = (0, _util.bnToBn)(_value);
  var keys = Object.keys(setValues);
  var result = [];

  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];

    if (bn.and((0, _util.bnToBn)(setValues[key])).eq((0, _util.bnToBn)(setValues[key]))) {
      result.push(key);
    }
  }

  var computed = encodeSet(setValues, result);

  if (!bn.eq(computed)) {
    throw new Error("Set: Mismatch decoding '".concat(bn.toString(), "', computed as '").concat(computed.toString(), "' with ").concat(result.join(', ')));
  }

  return result;
}
/** @internal */


function decodeSet(setValues) {
  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var bitLength = arguments.length > 2 ? arguments[2] : undefined;

  if (bitLength % 8 !== 0) {
    throw new Error("Expected valid bitLength, power of 8, found ".concat(bitLength));
  }

  var byteLength = bitLength / 8;

  if ((0, _util.isU8a)(value)) {
    return value.length === 0 ? [] : decodeSetNumber(setValues, (0, _util.u8aToBn)(value.subarray(0, byteLength), {
      isLe: true
    }));
  } else if ((0, _util.isString)(value)) {
    return decodeSet(setValues, (0, _util.u8aToU8a)(value), byteLength);
  } else if (value instanceof Set || Array.isArray(value)) {
    var input = Array.isArray(value) ? value : _toConsumableArray(value.values());
    return decodeSetArray(setValues, input);
  }

  return decodeSetNumber(setValues, value);
}
/**
 * @name Set
 * @description
 * An Set is an array of string values, represented an an encoded type by
 * a bitwise representation of the values.
 */


var _allowed = /*#__PURE__*/new WeakMap();

var _byteLength = /*#__PURE__*/new WeakMap();

var CodecSet = /*#__PURE__*/function (_Set) {
  _inherits(CodecSet, _Set);

  var _super = _createSuper(CodecSet);

  function CodecSet(registry, setValues, value) {
    var _thisSuper, _this;

    var bitLength = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 8;

    _classCallCheck(this, CodecSet);

    _this = _super.call(this, decodeSet(setValues, value, bitLength));

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _allowed, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _byteLength, {
      writable: true,
      value: void 0
    });

    _defineProperty(_assertThisInitialized(_this), "add", function (key) {
      // ^^^ add = () property done to assign this instance's this, otherwise Set.add creates "some" chaos
      // we have the isUndefined(this._setValues) in here as well, add is used internally
      // in the Set constructor (so it is undefined at this point, and should allow)
      if (_classPrivateFieldGet(_assertThisInitialized(_this), _allowed) && (0, _util.isUndefined)(_classPrivateFieldGet(_assertThisInitialized(_this), _allowed)[key])) {
        throw new Error("Set: Invalid key '".concat(key, "' on add"));
      }

      _get((_thisSuper = _assertThisInitialized(_this), _getPrototypeOf(CodecSet.prototype)), "add", _thisSuper).call(_thisSuper, key);

      return _assertThisInitialized(_this);
    });

    _this.registry = registry;

    _classPrivateFieldSet(_assertThisInitialized(_this), _allowed, setValues);

    _classPrivateFieldSet(_assertThisInitialized(_this), _byteLength, bitLength / 8);

    return _this;
  }

  _createClass(CodecSet, [{
    key: "encodedLength",
    get:
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    function get() {
      return _classPrivateFieldGet(this, _byteLength);
    }
    /**
     * @description returns a hash of the contents
     */

  }, {
    key: "hash",
    get: function get() {
      return this.registry.hash(this.toU8a());
    }
    /**
     * @description true is the Set contains no values
     */

  }, {
    key: "isEmpty",
    get: function get() {
      return this.size === 0;
    }
    /**
     * @description The actual set values as a string[]
     */

  }, {
    key: "strings",
    get: function get() {
      return _toConsumableArray(_get(_getPrototypeOf(CodecSet.prototype), "values", this).call(this));
    }
    /**
     * @description The encoded value for the set members
     */

  }, {
    key: "valueEncoded",
    get: function get() {
      return encodeSet(_classPrivateFieldGet(this, _allowed), this.strings);
    }
    /**
     * @description adds a value to the Set (extended to allow for validity checking)
     */

  }, {
    key: "eq",
    value:
    /**
     * @description Compares the value of the input to see if there is a match
     */
    function eq(other) {
      if (Array.isArray(other)) {
        // we don't actually care about the order, sort the values
        return (0, _index.compareArray)(this.strings.sort(), other.sort());
      } else if (other instanceof Set) {
        return this.eq(_toConsumableArray(other.values()));
      } else if ((0, _util.isNumber)(other) || (0, _util.isBn)(other)) {
        return this.valueEncoded.eq((0, _util.bnToBn)(other));
      }

      return false;
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */

  }, {
    key: "inspect",
    value: function inspect() {
      return {
        outer: [this.toU8a()]
      };
    }
    /**
     * @description Returns a hex string representation of the value
     */

  }, {
    key: "toHex",
    value: function toHex() {
      return (0, _util.u8aToHex)(this.toU8a());
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */

  }, {
    key: "toHuman",
    value: function toHuman() {
      return this.toJSON();
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      return this.strings;
    }
    /**
     * @description The encoded value for the set members
     */

  }, {
    key: "toNumber",
    value: function toNumber() {
      return this.valueEncoded.toNumber();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return (0, _util.stringify)({
        _set: _classPrivateFieldGet(this, _allowed)
      });
    }
    /**
     * @description Returns the string representation of the value
     */

  }, {
    key: "toString",
    value: function toString() {
      return "[".concat(this.strings.join(', '), "]");
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */
    // eslint-disable-next-line @typescript-eslint/no-unused-vars

  }, {
    key: "toU8a",
    value: function toU8a(isBare) {
      return (0, _util.bnToU8a)(this.valueEncoded, {
        bitLength: _classPrivateFieldGet(this, _byteLength) * 8,
        isLe: true
      });
    }
  }], [{
    key: "with",
    value: function _with(values, bitLength) {
      var keys = Object.keys(values);
      var isKeys = new Array(keys.length);

      for (var i = 0; i < keys.length; i++) {
        isKeys[i] = "is".concat((0, _util.stringPascalCase)(keys[i]));
      }

      return /*#__PURE__*/function (_CodecSet) {
        _inherits(_class, _CodecSet);

        var _super2 = _createSuper(_class);

        function _class(registry, value) {
          var _this2;

          _classCallCheck(this, _class);

          _this2 = _super2.call(this, registry, values, value, bitLength);
          (0, _util.objectProperties)(_assertThisInitialized(_this2), isKeys, function (_, i) {
            return _this2.strings.includes(keys[i]);
          });
          return _this2;
        }

        return _createClass(_class);
      }(CodecSet);
    }
  }]);

  return CodecSet;
}( /*#__PURE__*/_wrapNativeSuper(Set));

exports.CodecSet = CodecSet;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../utils/index.js":"node_modules/@polkadot/types-codec/utils/index.js"}],"node_modules/@polkadot/types-codec/native/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Bool", {
  enumerable: true,
  get: function () {
    return _Bool.bool;
  }
});
Object.defineProperty(exports, "CodecDate", {
  enumerable: true,
  get: function () {
    return _Date.CodecDate;
  }
});
Object.defineProperty(exports, "CodecSet", {
  enumerable: true,
  get: function () {
    return _Set.CodecSet;
  }
});
Object.defineProperty(exports, "Date", {
  enumerable: true,
  get: function () {
    return _Date.CodecDate;
  }
});
Object.defineProperty(exports, "Float", {
  enumerable: true,
  get: function () {
    return _Float.Float;
  }
});
Object.defineProperty(exports, "Json", {
  enumerable: true,
  get: function () {
    return _Json.Json;
  }
});
Object.defineProperty(exports, "Raw", {
  enumerable: true,
  get: function () {
    return _Raw.Raw;
  }
});
Object.defineProperty(exports, "Set", {
  enumerable: true,
  get: function () {
    return _Set.CodecSet;
  }
});
Object.defineProperty(exports, "Struct", {
  enumerable: true,
  get: function () {
    return _Struct.Struct;
  }
});
Object.defineProperty(exports, "Text", {
  enumerable: true,
  get: function () {
    return _Text.Text;
  }
});
Object.defineProperty(exports, "bool", {
  enumerable: true,
  get: function () {
    return _Bool.bool;
  }
});

var _Bool = require("./Bool.js");

var _Date = require("./Date.js");

var _Float = require("./Float.js");

var _Json = require("./Json.js");

var _Raw = require("./Raw.js");

var _Set = require("./Set.js");

var _Struct = require("./Struct.js");

var _Text = require("./Text.js");
},{"./Bool.js":"node_modules/@polkadot/types-codec/native/Bool.js","./Date.js":"node_modules/@polkadot/types-codec/native/Date.js","./Float.js":"node_modules/@polkadot/types-codec/native/Float.js","./Json.js":"node_modules/@polkadot/types-codec/native/Json.js","./Raw.js":"node_modules/@polkadot/types-codec/native/Raw.js","./Set.js":"node_modules/@polkadot/types-codec/native/Set.js","./Struct.js":"node_modules/@polkadot/types-codec/native/Struct.js","./Text.js":"node_modules/@polkadot/types-codec/native/Text.js"}],"node_modules/@polkadot/types-codec/primitive/F32.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.f32 = void 0;

var _Float = require("../native/Float.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * @name f32
 * @description
 * A 32-bit float
 */
var f32 = /*#__PURE__*/function (_Float$with) {
  _inherits(f32, _Float$with);

  var _super = _createSuper(f32);

  function f32() {
    var _this;

    _classCallCheck(this, f32);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "__FloatType", 'f32');

    return _this;
  }

  return _createClass(f32);
}(_Float.Float.with(32));

exports.f32 = f32;
},{"../native/Float.js":"node_modules/@polkadot/types-codec/native/Float.js"}],"node_modules/@polkadot/types-codec/primitive/F64.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.f64 = void 0;

var _Float = require("../native/Float.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * @name f64
 * @description
 * A 64-bit float
 */
var f64 = /*#__PURE__*/function (_Float$with) {
  _inherits(f64, _Float$with);

  var _super = _createSuper(f64);

  function f64() {
    var _this;

    _classCallCheck(this, f64);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "__FloatType", 'f64');

    return _this;
  }

  return _createClass(f64);
}(_Float.Float.with(64));

exports.f64 = f64;
},{"../native/Float.js":"node_modules/@polkadot/types-codec/native/Float.js"}],"node_modules/@polkadot/types-codec/primitive/I8.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.i8 = void 0;

var _Int = require("../base/Int.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * @name i8
 * @description
 * An 8-bit signed integer
 */
var i8 = /*#__PURE__*/function (_Int$with) {
  _inherits(i8, _Int$with);

  var _super = _createSuper(i8);

  function i8() {
    var _this;

    _classCallCheck(this, i8);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "__IntType", 'i8');

    return _this;
  }

  return _createClass(i8);
}(_Int.Int.with(8));

exports.i8 = i8;
},{"../base/Int.js":"node_modules/@polkadot/types-codec/base/Int.js"}],"node_modules/@polkadot/types-codec/primitive/I16.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.i16 = void 0;

var _Int = require("../base/Int.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * @name i16
 * @description
 * A 16-bit signed integer
 */
var i16 = /*#__PURE__*/function (_Int$with) {
  _inherits(i16, _Int$with);

  var _super = _createSuper(i16);

  function i16() {
    var _this;

    _classCallCheck(this, i16);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "__IntType", 'i16');

    return _this;
  }

  return _createClass(i16);
}(_Int.Int.with(16));

exports.i16 = i16;
},{"../base/Int.js":"node_modules/@polkadot/types-codec/base/Int.js"}],"node_modules/@polkadot/types-codec/primitive/I32.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.i32 = void 0;

var _Int = require("../base/Int.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * @name i32
 * @description
 * A 32-bit signed integer
 */
var i32 = /*#__PURE__*/function (_Int$with) {
  _inherits(i32, _Int$with);

  var _super = _createSuper(i32);

  function i32() {
    var _this;

    _classCallCheck(this, i32);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "__IntType", 'i32');

    return _this;
  }

  return _createClass(i32);
}(_Int.Int.with(32));

exports.i32 = i32;
},{"../base/Int.js":"node_modules/@polkadot/types-codec/base/Int.js"}],"node_modules/@polkadot/types-codec/primitive/I64.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.i64 = void 0;

var _Int = require("../base/Int.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * @name i64
 * @description
 * A 64-bit signed integer
 */
var i64 = /*#__PURE__*/function (_Int$with) {
  _inherits(i64, _Int$with);

  var _super = _createSuper(i64);

  function i64() {
    var _this;

    _classCallCheck(this, i64);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "__IntType", 'i64');

    return _this;
  }

  return _createClass(i64);
}(_Int.Int.with(64));

exports.i64 = i64;
},{"../base/Int.js":"node_modules/@polkadot/types-codec/base/Int.js"}],"node_modules/@polkadot/types-codec/primitive/I128.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.i128 = void 0;

var _Int = require("../base/Int.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * @name i128
 * @description
 * A 128-bit signed integer
 */
var i128 = /*#__PURE__*/function (_Int$with) {
  _inherits(i128, _Int$with);

  var _super = _createSuper(i128);

  function i128() {
    var _this;

    _classCallCheck(this, i128);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "__IntType", 'i128');

    return _this;
  }

  return _createClass(i128);
}(_Int.Int.with(128));

exports.i128 = i128;
},{"../base/Int.js":"node_modules/@polkadot/types-codec/base/Int.js"}],"node_modules/@polkadot/types-codec/primitive/I256.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.i256 = void 0;

var _Int = require("../base/Int.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * @name i256
 * @description
 * A 256-bit signed integer
 */
var i256 = /*#__PURE__*/function (_Int$with) {
  _inherits(i256, _Int$with);

  var _super = _createSuper(i256);

  function i256() {
    var _this;

    _classCallCheck(this, i256);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "__IntType", 'i256');

    return _this;
  }

  return _createClass(i256);
}(_Int.Int.with(256));

exports.i256 = i256;
},{"../base/Int.js":"node_modules/@polkadot/types-codec/base/Int.js"}],"node_modules/@polkadot/types-codec/primitive/U8.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.u8 = void 0;

var _UInt = require("../base/UInt.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * @name u8
 * @description
 * An 8-bit unsigned integer
 */
var u8 = /*#__PURE__*/function (_UInt$with) {
  _inherits(u8, _UInt$with);

  var _super = _createSuper(u8);

  function u8() {
    var _this;

    _classCallCheck(this, u8);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "__UIntType", 'u8');

    return _this;
  }

  return _createClass(u8);
}(_UInt.UInt.with(8));

exports.u8 = u8;
},{"../base/UInt.js":"node_modules/@polkadot/types-codec/base/UInt.js"}],"node_modules/@polkadot/types-codec/primitive/U16.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.u16 = void 0;

var _UInt = require("../base/UInt.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * @name u16
 * @description
 * A 16-bit unsigned integer
 */
var u16 = /*#__PURE__*/function (_UInt$with) {
  _inherits(u16, _UInt$with);

  var _super = _createSuper(u16);

  function u16() {
    var _this;

    _classCallCheck(this, u16);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "__UIntType", 'u16');

    return _this;
  }

  return _createClass(u16);
}(_UInt.UInt.with(16));

exports.u16 = u16;
},{"../base/UInt.js":"node_modules/@polkadot/types-codec/base/UInt.js"}],"node_modules/@polkadot/types-codec/primitive/U32.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.u32 = void 0;

var _UInt = require("../base/UInt.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * @name u32
 * @description
 * A 32-bit unsigned integer
 */
var u32 = /*#__PURE__*/function (_UInt$with) {
  _inherits(u32, _UInt$with);

  var _super = _createSuper(u32);

  function u32() {
    var _this;

    _classCallCheck(this, u32);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "__UIntType", 'u32');

    return _this;
  }

  return _createClass(u32);
}(_UInt.UInt.with(32));

exports.u32 = u32;
},{"../base/UInt.js":"node_modules/@polkadot/types-codec/base/UInt.js"}],"node_modules/@polkadot/types-codec/primitive/U64.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.u64 = void 0;

var _UInt = require("../base/UInt.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * @name u64
 * @description
 * A 64-bit unsigned integer
 */
var u64 = /*#__PURE__*/function (_UInt$with) {
  _inherits(u64, _UInt$with);

  var _super = _createSuper(u64);

  function u64() {
    var _this;

    _classCallCheck(this, u64);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "__UIntType", 'u64');

    return _this;
  }

  return _createClass(u64);
}(_UInt.UInt.with(64));

exports.u64 = u64;
},{"../base/UInt.js":"node_modules/@polkadot/types-codec/base/UInt.js"}],"node_modules/@polkadot/types-codec/primitive/U128.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.u128 = void 0;

var _UInt = require("../base/UInt.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * @name u128
 * @description
 * A 128-bit unsigned integer
 */
var u128 = /*#__PURE__*/function (_UInt$with) {
  _inherits(u128, _UInt$with);

  var _super = _createSuper(u128);

  function u128() {
    var _this;

    _classCallCheck(this, u128);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "__UIntType", 'u128');

    return _this;
  }

  return _createClass(u128);
}(_UInt.UInt.with(128));

exports.u128 = u128;
},{"../base/UInt.js":"node_modules/@polkadot/types-codec/base/UInt.js"}],"node_modules/@polkadot/types-codec/primitive/U256.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.u256 = void 0;

var _UInt = require("../base/UInt.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * @name u256
 * @description
 * A 256-bit unsigned integer
 */
var u256 = /*#__PURE__*/function (_UInt$with) {
  _inherits(u256, _UInt$with);

  var _super = _createSuper(u256);

  function u256() {
    var _this;

    _classCallCheck(this, u256);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "__UIntType", 'u256');

    return _this;
  }

  return _createClass(u256);
}(_UInt.UInt.with(256));

exports.u256 = u256;
},{"../base/UInt.js":"node_modules/@polkadot/types-codec/base/UInt.js"}],"node_modules/@polkadot/types-codec/primitive/USize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.usize = void 0;

var _U = require("./U32.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/**
 * @name USize
 * @description
 * A System default unsigned number, typically used in RPC to report non-consensus
 * data. It is a wrapper for [[U32]] as a WASM default (as generated by Rust bindings).
 * It is not to be used, since it created consensus mismatches.
 */
var usize = /*#__PURE__*/function (_u) {
  _inherits(usize, _u);

  var _super = _createSuper(usize);

  function usize(registry, value) {
    var _this;

    _classCallCheck(this, usize);

    _this = _super.call(this, registry, value);
    throw new Error('The `usize` type should not be used. Since it is platform-specific, it creates incompatibilities between native (generally u64) and WASM (always u32) code. Use one of the `u32` or `u64` types explicitly.');
    return _this;
  }

  return _createClass(usize);
}(_U.u32);

exports.usize = usize;
},{"./U32.js":"node_modules/@polkadot/types-codec/primitive/U32.js"}],"node_modules/@polkadot/types-codec/primitive/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "F32", {
  enumerable: true,
  get: function () {
    return _F.f32;
  }
});
Object.defineProperty(exports, "F64", {
  enumerable: true,
  get: function () {
    return _F2.f64;
  }
});
Object.defineProperty(exports, "I128", {
  enumerable: true,
  get: function () {
    return _I5.i128;
  }
});
Object.defineProperty(exports, "I16", {
  enumerable: true,
  get: function () {
    return _I2.i16;
  }
});
Object.defineProperty(exports, "I256", {
  enumerable: true,
  get: function () {
    return _I6.i256;
  }
});
Object.defineProperty(exports, "I32", {
  enumerable: true,
  get: function () {
    return _I3.i32;
  }
});
Object.defineProperty(exports, "I64", {
  enumerable: true,
  get: function () {
    return _I4.i64;
  }
});
Object.defineProperty(exports, "I8", {
  enumerable: true,
  get: function () {
    return _I.i8;
  }
});
Object.defineProperty(exports, "U128", {
  enumerable: true,
  get: function () {
    return _U5.u128;
  }
});
Object.defineProperty(exports, "U16", {
  enumerable: true,
  get: function () {
    return _U2.u16;
  }
});
Object.defineProperty(exports, "U256", {
  enumerable: true,
  get: function () {
    return _U6.u256;
  }
});
Object.defineProperty(exports, "U32", {
  enumerable: true,
  get: function () {
    return _U3.u32;
  }
});
Object.defineProperty(exports, "U64", {
  enumerable: true,
  get: function () {
    return _U4.u64;
  }
});
Object.defineProperty(exports, "U8", {
  enumerable: true,
  get: function () {
    return _U.u8;
  }
});
Object.defineProperty(exports, "USize", {
  enumerable: true,
  get: function () {
    return _USize.usize;
  }
});
Object.defineProperty(exports, "f32", {
  enumerable: true,
  get: function () {
    return _F.f32;
  }
});
Object.defineProperty(exports, "f64", {
  enumerable: true,
  get: function () {
    return _F2.f64;
  }
});
Object.defineProperty(exports, "i128", {
  enumerable: true,
  get: function () {
    return _I5.i128;
  }
});
Object.defineProperty(exports, "i16", {
  enumerable: true,
  get: function () {
    return _I2.i16;
  }
});
Object.defineProperty(exports, "i256", {
  enumerable: true,
  get: function () {
    return _I6.i256;
  }
});
Object.defineProperty(exports, "i32", {
  enumerable: true,
  get: function () {
    return _I3.i32;
  }
});
Object.defineProperty(exports, "i64", {
  enumerable: true,
  get: function () {
    return _I4.i64;
  }
});
Object.defineProperty(exports, "i8", {
  enumerable: true,
  get: function () {
    return _I.i8;
  }
});
Object.defineProperty(exports, "u128", {
  enumerable: true,
  get: function () {
    return _U5.u128;
  }
});
Object.defineProperty(exports, "u16", {
  enumerable: true,
  get: function () {
    return _U2.u16;
  }
});
Object.defineProperty(exports, "u256", {
  enumerable: true,
  get: function () {
    return _U6.u256;
  }
});
Object.defineProperty(exports, "u32", {
  enumerable: true,
  get: function () {
    return _U3.u32;
  }
});
Object.defineProperty(exports, "u64", {
  enumerable: true,
  get: function () {
    return _U4.u64;
  }
});
Object.defineProperty(exports, "u8", {
  enumerable: true,
  get: function () {
    return _U.u8;
  }
});
Object.defineProperty(exports, "usize", {
  enumerable: true,
  get: function () {
    return _USize.usize;
  }
});

var _F = require("./F32.js");

var _F2 = require("./F64.js");

var _I = require("./I8.js");

var _I2 = require("./I16.js");

var _I3 = require("./I32.js");

var _I4 = require("./I64.js");

var _I5 = require("./I128.js");

var _I6 = require("./I256.js");

var _U = require("./U8.js");

var _U2 = require("./U16.js");

var _U3 = require("./U32.js");

var _U4 = require("./U64.js");

var _U5 = require("./U128.js");

var _U6 = require("./U256.js");

var _USize = require("./USize.js");
},{"./F32.js":"node_modules/@polkadot/types-codec/primitive/F32.js","./F64.js":"node_modules/@polkadot/types-codec/primitive/F64.js","./I8.js":"node_modules/@polkadot/types-codec/primitive/I8.js","./I16.js":"node_modules/@polkadot/types-codec/primitive/I16.js","./I32.js":"node_modules/@polkadot/types-codec/primitive/I32.js","./I64.js":"node_modules/@polkadot/types-codec/primitive/I64.js","./I128.js":"node_modules/@polkadot/types-codec/primitive/I128.js","./I256.js":"node_modules/@polkadot/types-codec/primitive/I256.js","./U8.js":"node_modules/@polkadot/types-codec/primitive/U8.js","./U16.js":"node_modules/@polkadot/types-codec/primitive/U16.js","./U32.js":"node_modules/@polkadot/types-codec/primitive/U32.js","./U64.js":"node_modules/@polkadot/types-codec/primitive/U64.js","./U128.js":"node_modules/@polkadot/types-codec/primitive/U128.js","./U256.js":"node_modules/@polkadot/types-codec/primitive/U256.js","./USize.js":"node_modules/@polkadot/types-codec/primitive/USize.js"}],"node_modules/@polkadot/types-codec/bundle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  packageInfo: true
};
Object.defineProperty(exports, "packageInfo", {
  enumerable: true,
  get: function () {
    return _packageInfo.packageInfo;
  }
});

var _packageInfo = require("./packageInfo.js");

var _index = require("./abstract/index.js");

Object.keys(_index).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index[key];
    }
  });
});

var _index2 = require("./base/index.js");

Object.keys(_index2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index2[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index2[key];
    }
  });
});

var _index3 = require("./extended/index.js");

Object.keys(_index3).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index3[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index3[key];
    }
  });
});

var _index4 = require("./native/index.js");

Object.keys(_index4).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index4[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index4[key];
    }
  });
});

var _index5 = require("./primitive/index.js");

Object.keys(_index5).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index5[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index5[key];
    }
  });
});

var _index6 = require("./utils/index.js");

Object.keys(_index6).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index6[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index6[key];
    }
  });
});
},{"./packageInfo.js":"node_modules/@polkadot/types-codec/packageInfo.js","./abstract/index.js":"node_modules/@polkadot/types-codec/abstract/index.js","./base/index.js":"node_modules/@polkadot/types-codec/base/index.js","./extended/index.js":"node_modules/@polkadot/types-codec/extended/index.js","./native/index.js":"node_modules/@polkadot/types-codec/native/index.js","./primitive/index.js":"node_modules/@polkadot/types-codec/primitive/index.js","./utils/index.js":"node_modules/@polkadot/types-codec/utils/index.js"}],"node_modules/@polkadot/types-codec/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

require("./detectPackage.js");

var _bundle = require("./bundle.js");

Object.keys(_bundle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _bundle[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bundle[key];
    }
  });
});
},{"./detectPackage.js":"node_modules/@polkadot/types-codec/detectPackage.js","./bundle.js":"node_modules/@polkadot/types-codec/bundle.js"}],"node_modules/@polkadot/types-create/util/typeSplit.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.typeSplit = typeSplit;

// Copyright 2017-2022 @polkadot/types-create authors & contributors
// SPDX-License-Identifier: Apache-2.0
// safely split a string on ', ' while taking care of any nested occurences
function typeSplit(type) {
  var result = []; // these are the depths of the various tokens: <, [, {, (

  var c = 0;
  var f = 0;
  var s = 0;
  var t = 0; // current start position

  var start = 0;

  for (var i = 0; i < type.length; i++) {
    switch (type[i]) {
      // if we are not nested, add the type
      case ',':
        {
          if (!(c || f || s || t)) {
            result.push(type.substring(start, i).trim());
            start = i + 1;
          }

          break;
        }
      // adjust compact/vec (and friends) depth

      case '<':
        c++;
        break;

      case '>':
        c--;
        break;
      // adjust fixed vec depths

      case '[':
        f++;
        break;

      case ']':
        f--;
        break;
      // adjust struct depth

      case '{':
        s++;
        break;

      case '}':
        s--;
        break;
      // adjust tuple depth

      case '(':
        t++;
        break;

      case ')':
        t--;
        break;
    }
  } // ensure we have all the terminators taken care of


  if (c || f || s || t) {
    throw new Error("Invalid definition (missing terminators) found in ".concat(type));
  } // the final leg of the journey


  result.push(type.substring(start, type.length).trim());
  return result;
}
},{}],"node_modules/@polkadot/types-create/util/getTypeDef.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getTypeDef = getTypeDef;

var _typesCodec = require("@polkadot/types-codec");

var _util = require("@polkadot/util");

var _index = require("../types/index.js");

var _typeSplit = require("./typeSplit.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var KNOWN_INTERNALS = ['_alias', '_fallback'];

function getTypeString(typeOrObj) {
  return (0, _util.isString)(typeOrObj) ? typeOrObj.toString() : JSON.stringify(typeOrObj);
}

function isRustEnum(details) {
  var values = Object.values(details);

  if (values.some(function (v) {
    return (0, _util.isNumber)(v);
  })) {
    if (!values.every(function (v) {
      return (0, _util.isNumber)(v) && v >= 0 && v <= 255;
    })) {
      throw new Error('Invalid number-indexed enum definition');
    }

    return false;
  }

  return true;
} // decode an enum of either of the following forms
//  { _enum: ['A', 'B', 'C'] }
//  { _enum: { A: AccountId, B: Balance, C: u32 } }
//  { _enum: { A: 1, B: 2 } }


function _decodeEnum(value, details, count, fallbackType) {
  value.info = _index.TypeDefInfo.Enum;
  value.fallbackType = fallbackType; // not as pretty, but remain compatible with oo7 for both struct and Array types

  if (Array.isArray(details)) {
    value.sub = details.map(function (name, index) {
      return {
        index: index,
        info: _index.TypeDefInfo.Plain,
        name: name,
        type: 'Null'
      };
    });
  } else if (isRustEnum(details)) {
    value.sub = Object.entries(details).map(function (_ref, index) {
      var _ref2 = _slicedToArray(_ref, 2),
          name = _ref2[0],
          typeOrObj = _ref2[1];

      return (0, _util.objectSpread)({}, getTypeDef(getTypeString(typeOrObj || 'Null'), {
        name: name
      }, count), {
        index: index
      });
    });
  } else {
    value.sub = Object.entries(details).map(function (_ref3) {
      var _ref4 = _slicedToArray(_ref3, 2),
          name = _ref4[0],
          index = _ref4[1];

      return {
        index: index,
        info: _index.TypeDefInfo.Plain,
        name: name,
        type: 'Null'
      };
    });
  }

  return value;
} // decode a set of the form
//   { _set: { A: 0b0001, B: 0b0010, C: 0b0100 } }


function _decodeSet(value, details, fallbackType) {
  value.info = _index.TypeDefInfo.Set;
  value.fallbackType = fallbackType;
  value.length = details._bitLength;
  value.sub = Object.entries(details).filter(function (_ref5) {
    var _ref6 = _slicedToArray(_ref5, 1),
        name = _ref6[0];

    return !name.startsWith('_');
  }).map(function (_ref7) {
    var _ref8 = _slicedToArray(_ref7, 2),
        name = _ref8[0],
        index = _ref8[1];

    return {
      index: index,
      info: _index.TypeDefInfo.Plain,
      name: name,
      type: 'Null'
    };
  });
  return value;
} // decode a struct, set or enum
// eslint-disable-next-line @typescript-eslint/no-unused-vars


function _decodeStruct(value, type, _, count) {
  var parsed = JSON.parse(type);
  var keys = Object.keys(parsed);

  if (keys.includes('_enum')) {
    return _decodeEnum(value, parsed._enum, count, parsed._fallback);
  } else if (keys.includes('_set')) {
    return _decodeSet(value, parsed._set, parsed._fallback);
  }

  value.alias = parsed._alias ? new Map(Object.entries(parsed._alias)) : undefined;
  value.fallbackType = parsed._fallback;
  value.sub = keys.filter(function (name) {
    return !KNOWN_INTERNALS.includes(name);
  }).map(function (name) {
    return getTypeDef(getTypeString(parsed[name]), {
      name: name
    }, count);
  });
  return value;
} // decode a fixed vector, e.g. [u8;32]
// eslint-disable-next-line @typescript-eslint/no-unused-vars


function _decodeFixedVec(value, type, _, count) {
  var max = type.length - 1;
  var index = -1;
  var inner = 0;

  for (var i = 1; i < max && index === -1; i++) {
    switch (type[i]) {
      case ';':
        {
          if (inner === 0) {
            index = i;
          }

          break;
        }

      case '[':
      case '(':
      case '<':
        inner++;
        break;

      case ']':
      case ')':
      case '>':
        inner--;
        break;
    }
  }

  if (index === -1) {
    throw new Error("".concat(type, ": Unable to extract location of ';'"));
  }

  var vecType = type.substring(1, index);

  var _type$substring$split = type.substring(index + 1, max).split(';'),
      _type$substring$split2 = _slicedToArray(_type$substring$split, 2),
      strLength = _type$substring$split2[0],
      displayName = _type$substring$split2[1];

  var length = parseInt(strLength.trim(), 10);

  if (length > 2048) {
    throw new Error("".concat(type, ": Only support for [Type; <length>], where length <= 2048"));
  }

  value.displayName = displayName;
  value.length = length;
  value.sub = getTypeDef(vecType, {}, count);
  return value;
} // decode a tuple


function _decodeTuple(value, _, subType, count) {
  value.sub = subType.length === 0 ? [] : (0, _typeSplit.typeSplit)(subType).map(function (inner) {
    return getTypeDef(inner, {}, count);
  });
  return value;
} // decode a Int/UInt<bitLength[, name]>
// eslint-disable-next-line @typescript-eslint/no-unused-vars


function _decodeAnyInt(value, type, _, clazz) {
  var _type$substring$split3 = type.substring(clazz.length + 1, type.length - 1).split(','),
      _type$substring$split4 = _slicedToArray(_type$substring$split3, 2),
      strLength = _type$substring$split4[0],
      displayName = _type$substring$split4[1];

  var length = parseInt(strLength.trim(), 10);

  if (length > 8192 || length % 8) {
    throw new Error("".concat(type, ": Only support for ").concat(clazz, "<bitLength>, where length <= 8192 and a power of 8, found ").concat(length));
  }

  value.displayName = displayName;
  value.length = length;
  return value;
}

function _decodeInt(value, type, subType) {
  return _decodeAnyInt(value, type, subType, 'Int');
}

function _decodeUInt(value, type, subType) {
  return _decodeAnyInt(value, type, subType, 'UInt');
} // eslint-disable-next-line @typescript-eslint/no-unused-vars


function _decodeDoNotConstruct(value, type, _) {
  var NAME_LENGTH = 'DoNotConstruct'.length;
  value.displayName = type.substring(NAME_LENGTH + 1, type.length - 1);
  return value;
}

function hasWrapper(type, _ref9) {
  var _ref10 = _slicedToArray(_ref9, 2),
      start = _ref10[0],
      end = _ref10[1];

  return type.substring(0, start.length) === start && type.slice(-1 * end.length) === end;
}

var nestedExtraction = [['[', ']', _index.TypeDefInfo.VecFixed, _decodeFixedVec], ['{', '}', _index.TypeDefInfo.Struct, _decodeStruct], ['(', ')', _index.TypeDefInfo.Tuple, _decodeTuple], // the inner for these are the same as tuple, multiple values
['BTreeMap<', '>', _index.TypeDefInfo.BTreeMap, _decodeTuple], ['HashMap<', '>', _index.TypeDefInfo.HashMap, _decodeTuple], ['Int<', '>', _index.TypeDefInfo.Int, _decodeInt], ['Result<', '>', _index.TypeDefInfo.Result, _decodeTuple], ['UInt<', '>', _index.TypeDefInfo.UInt, _decodeUInt], ['DoNotConstruct<', '>', _index.TypeDefInfo.DoNotConstruct, _decodeDoNotConstruct]];
var wrappedExtraction = [['BTreeSet<', '>', _index.TypeDefInfo.BTreeSet], ['Compact<', '>', _index.TypeDefInfo.Compact], ['Linkage<', '>', _index.TypeDefInfo.Linkage], ['Option<', '>', _index.TypeDefInfo.Option], ['Range<', '>', _index.TypeDefInfo.Range], ['RangeInclusive<', '>', _index.TypeDefInfo.RangeInclusive], ['Vec<', '>', _index.TypeDefInfo.Vec], ['WrapperKeepOpaque<', '>', _index.TypeDefInfo.WrapperKeepOpaque], ['WrapperOpaque<', '>', _index.TypeDefInfo.WrapperOpaque]];

function extractSubType(type, _ref11) {
  var _ref12 = _slicedToArray(_ref11, 2),
      start = _ref12[0],
      end = _ref12[1];

  return type.substring(start.length, type.length - end.length);
}

function getTypeDef(_type) {
  var _ref13 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      displayName = _ref13.displayName,
      name = _ref13.name;

  var count = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
  // create the type via Type, allowing types to be sanitized
  var type = (0, _typesCodec.sanitize)(_type);
  var value = {
    displayName: displayName,
    info: _index.TypeDefInfo.Plain,
    name: name,
    type: type
  };

  if (++count > 64) {
    throw new Error('getTypeDef: Maximum nested limit reached');
  }

  var nested = nestedExtraction.find(function (nested) {
    return hasWrapper(type, nested);
  });

  if (nested) {
    value.info = nested[2];
    return nested[3](value, type, extractSubType(type, nested), count);
  }

  var wrapped = wrappedExtraction.find(function (wrapped) {
    return hasWrapper(type, wrapped);
  });

  if (wrapped) {
    value.info = wrapped[2];
    value.sub = getTypeDef(extractSubType(type, wrapped), {}, count);
  }

  return value;
}
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../types/index.js":"node_modules/@polkadot/types-create/types/index.js","./typeSplit.js":"node_modules/@polkadot/types-create/util/typeSplit.js"}],"node_modules/@polkadot/types-create/create/class.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.constructTypeClass = constructTypeClass;
exports.createClassUnsafe = createClassUnsafe;
exports.getTypeClass = getTypeClass;

var _typesCodec = require("@polkadot/types-codec");

var _util = require("@polkadot/util");

var _index = require("../types/index.js");

var _getTypeDef = require("../util/getTypeDef.js");

var _infoMapping;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function getTypeDefType(_ref) {
  var lookupName = _ref.lookupName,
      type = _ref.type;
  return lookupName || type;
}

function getSubDefArray(value) {
  if (!Array.isArray(value.sub)) {
    throw new Error("Expected subtype as TypeDef[] in ".concat((0, _util.stringify)(value)));
  }

  return value.sub;
}

function getSubDef(value) {
  if (!value.sub || Array.isArray(value.sub)) {
    throw new Error("Expected subtype as TypeDef in ".concat((0, _util.stringify)(value)));
  }

  return value.sub;
}

function getSubType(value) {
  return getTypeDefType(getSubDef(value));
} // create a maps of type string CodecClasss from the input


function getTypeClassMap(value) {
  var subs = getSubDefArray(value);
  var map = {};

  for (var i = 0; i < subs.length; i++) {
    map[subs[i].name] = getTypeDefType(subs[i]);
  }

  return map;
} // create an array of type string CodecClasss from the input


function getTypeClassArray(value) {
  return getSubDefArray(value).map(getTypeDefType);
}

function createInt(Clazz, _ref2) {
  var displayName = _ref2.displayName,
      length = _ref2.length;

  if (!(0, _util.isNumber)(length)) {
    throw new Error("Expected bitLength information for ".concat(displayName || Clazz.constructor.name, "<bitLength>"));
  }

  return Clazz.with(length, displayName);
}

function createHashMap(Clazz, value) {
  var _getTypeClassArray = getTypeClassArray(value),
      _getTypeClassArray2 = _slicedToArray(_getTypeClassArray, 2),
      keyType = _getTypeClassArray2[0],
      valueType = _getTypeClassArray2[1];

  return Clazz.with(keyType, valueType);
}

function createWithSub(Clazz, value) {
  return Clazz.with(getSubType(value));
}

var infoMapping = (_infoMapping = {}, _defineProperty(_infoMapping, _index.TypeDefInfo.BTreeMap, function (registry, value) {
  return createHashMap(_typesCodec.BTreeMap, value);
}), _defineProperty(_infoMapping, _index.TypeDefInfo.BTreeSet, function (registry, value) {
  return createWithSub(_typesCodec.BTreeSet, value);
}), _defineProperty(_infoMapping, _index.TypeDefInfo.Compact, function (registry, value) {
  return createWithSub(_typesCodec.Compact, value);
}), _defineProperty(_infoMapping, _index.TypeDefInfo.DoNotConstruct, function (registry, value) {
  return _typesCodec.DoNotConstruct.with(value.displayName || value.type);
}), _defineProperty(_infoMapping, _index.TypeDefInfo.Enum, function (registry, value) {
  var subs = getSubDefArray(value);
  return _typesCodec.Enum.with(subs.every(function (_ref3) {
    var type = _ref3.type;
    return type === 'Null';
  }) ? subs.reduce(function (out, _ref4, count) {
    var index = _ref4.index,
        name = _ref4.name;
    out[name] = index || count;
    return out;
  }, {}) : getTypeClassMap(value));
}), _defineProperty(_infoMapping, _index.TypeDefInfo.HashMap, function (registry, value) {
  return createHashMap(_typesCodec.HashMap, value);
}), _defineProperty(_infoMapping, _index.TypeDefInfo.Int, function (registry, value) {
  return createInt(_typesCodec.Int, value);
}), _defineProperty(_infoMapping, _index.TypeDefInfo.Linkage, function (registry, value) {
  var type = "Option<".concat(getSubType(value), ">"); // eslint-disable-next-line sort-keys

  var Clazz = _typesCodec.Struct.with({
    previous: type,
    next: type
  }); // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access


  Clazz.prototype.toRawType = function () {
    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call
    return "Linkage<".concat(this.next.toRawType(true), ">");
  };

  return Clazz;
}), _defineProperty(_infoMapping, _index.TypeDefInfo.Null, function (registry, _) {
  return _typesCodec.Null;
}), _defineProperty(_infoMapping, _index.TypeDefInfo.Option, function (registry, value) {
  if (!value.sub || Array.isArray(value.sub)) {
    throw new Error('Expected type information for Option');
  } // NOTE This is opt-in (unhandled), not by default
  // if (value.sub.type === 'bool') {
  //   return OptionBool;
  // }


  return createWithSub(_typesCodec.Option, value);
}), _defineProperty(_infoMapping, _index.TypeDefInfo.Plain, function (registry, value) {
  return registry.getOrUnknown(value.type);
}), _defineProperty(_infoMapping, _index.TypeDefInfo.Range, function (registry, value) {
  return createWithSub(_typesCodec.Range, value);
}), _defineProperty(_infoMapping, _index.TypeDefInfo.RangeInclusive, function (registry, value) {
  return createWithSub(_typesCodec.RangeInclusive, value);
}), _defineProperty(_infoMapping, _index.TypeDefInfo.Result, function (registry, value) {
  var _getTypeClassArray3 = getTypeClassArray(value),
      _getTypeClassArray4 = _slicedToArray(_getTypeClassArray3, 2),
      Ok = _getTypeClassArray4[0],
      Err = _getTypeClassArray4[1]; // eslint-disable-next-line @typescript-eslint/no-use-before-define


  return _typesCodec.Result.with({
    Err: Err,
    Ok: Ok
  });
}), _defineProperty(_infoMapping, _index.TypeDefInfo.Set, function (registry, value) {
  return _typesCodec.CodecSet.with(getSubDefArray(value).reduce(function (result, _ref5) {
    var index = _ref5.index,
        name = _ref5.name;
    result[name] = index;
    return result;
  }, {}), value.length);
}), _defineProperty(_infoMapping, _index.TypeDefInfo.Si, function (registry, value) {
  return getTypeClass(registry, registry.lookup.getTypeDef(value.type));
}), _defineProperty(_infoMapping, _index.TypeDefInfo.Struct, function (registry, value) {
  return _typesCodec.Struct.with(getTypeClassMap(value), value.alias);
}), _defineProperty(_infoMapping, _index.TypeDefInfo.Tuple, function (registry, value) {
  return _typesCodec.Tuple.with(getTypeClassArray(value));
}), _defineProperty(_infoMapping, _index.TypeDefInfo.UInt, function (registry, value) {
  return createInt(_typesCodec.UInt, value);
}), _defineProperty(_infoMapping, _index.TypeDefInfo.Vec, function (registry, _ref6) {
  var sub = _ref6.sub;

  if (!sub || Array.isArray(sub)) {
    throw new Error('Expected type information for vector');
  }

  return sub.type === 'u8' ? _typesCodec.Bytes : _typesCodec.Vec.with(getTypeDefType(sub));
}), _defineProperty(_infoMapping, _index.TypeDefInfo.VecFixed, function (registry, _ref7) {
  var displayName = _ref7.displayName,
      length = _ref7.length,
      sub = _ref7.sub;

  if (!(0, _util.isNumber)(length) || !sub || Array.isArray(sub)) {
    throw new Error('Expected length & type information for fixed vector');
  }

  return sub.type === 'u8' ? _typesCodec.U8aFixed.with(length * 8, displayName) : _typesCodec.VecFixed.with(getTypeDefType(sub), length);
}), _defineProperty(_infoMapping, _index.TypeDefInfo.WrapperKeepOpaque, function (registry, value) {
  return createWithSub(_typesCodec.WrapperKeepOpaque, value);
}), _defineProperty(_infoMapping, _index.TypeDefInfo.WrapperOpaque, function (registry, value) {
  return createWithSub(_typesCodec.WrapperOpaque, value);
}), _infoMapping);

function constructTypeClass(registry, typeDef) {
  try {
    var Type = infoMapping[typeDef.info](registry, typeDef);

    if (!Type) {
      throw new Error('No class created');
    } // don't clobber any existing


    if (!Type.__fallbackType && typeDef.fallbackType) {
      // eslint-disable-next-line @typescript-eslint/ban-ts-comment
      // @ts-ignore ...this is the only place we we actually assign this...
      Type.__fallbackType = typeDef.fallbackType;
    }

    return Type;
  } catch (error) {
    throw new Error("Unable to construct class from ".concat((0, _util.stringify)(typeDef), ": ").concat(error.message));
  }
} // Returns the type Class for construction


function getTypeClass(registry, typeDef) {
  return registry.getUnsafe(typeDef.type, false, typeDef);
}

function createClassUnsafe(registry, type) {
  return (// just retrieve via name, no creation via typeDef
    registry.getUnsafe(type) || // we don't have an existing type, create the class via typeDef
    getTypeClass(registry, registry.isLookupType(type) ? registry.lookup.getTypeDef(type) : (0, _getTypeDef.getTypeDef)(type))
  );
}
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../types/index.js":"node_modules/@polkadot/types-create/types/index.js","../util/getTypeDef.js":"node_modules/@polkadot/types-create/util/getTypeDef.js"}],"node_modules/@polkadot/types-create/create/type.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createTypeUnsafe = createTypeUnsafe;

var _typesCodec = require("@polkadot/types-codec");

var _util = require("@polkadot/util");

var _class = require("./class.js");

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

// With isPedantic, actually check that the encoding matches that supplied. This
// is much slower, but verifies that we have the correct types defined
function checkInstance(created, matcher) {
  var u8a = created.toU8a();
  var rawType = created.toRawType();
  var isOk = // full match, all ok
  (0, _util.u8aEq)(u8a, matcher) || // on a length-prefixed type, just check the actual length
  ['Bytes', 'Text', 'Type'].includes(rawType) && matcher.length === created.length || // when the created is empty and matcher is also empty, let it slide...
  created.isEmpty && matcher.every(function (v) {
    return !v;
  });

  if (!isOk) {
    throw new Error("".concat(rawType, ":: Decoded input doesn't match input, received ").concat((0, _util.u8aToHex)(matcher, 512), " (").concat(matcher.length, " bytes), created ").concat((0, _util.u8aToHex)(u8a, 512), " (").concat(u8a.length, " bytes)"));
  }
}

function checkPedantic(created, _ref) {
  var _ref2 = _slicedToArray(_ref, 1),
      value = _ref2[0];

  if ((0, _util.isU8a)(value)) {
    checkInstance(created, value);
  } else if ((0, _util.isHex)(value)) {
    checkInstance(created, (0, _util.u8aToU8a)(value));
  }
} // Initializes a type with a value. This also checks for fallbacks and in the cases
// where isPedantic is specified (storage decoding), also check the format/structure


function initType(registry, Type) {
  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

  var _ref3 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
      blockHash = _ref3.blockHash,
      isOptional = _ref3.isOptional,
      isPedantic = _ref3.isPedantic;

  var created = _construct(isOptional ? _typesCodec.Option.with(Type) : Type, [registry].concat(_toConsumableArray(params)));

  isPedantic && checkPedantic(created, params);

  if (blockHash) {
    created.createdAtHash = createTypeUnsafe(registry, 'Hash', [blockHash]);
  }

  return created;
} // An unsafe version of the `createType` below. It's unsafe because the `type`
// argument here can be any string, which, when it cannot parse, will yield a
// runtime error.


function createTypeUnsafe(registry, type) {
  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
  var Clazz = null;
  var firstError = null;

  try {
    Clazz = (0, _class.createClassUnsafe)(registry, type);
    return initType(registry, Clazz, params, options);
  } catch (error) {
    firstError = new Error("createType(".concat(type, "):: ").concat(error.message));
  }

  if (Clazz && Clazz.__fallbackType) {
    try {
      Clazz = (0, _class.createClassUnsafe)(registry, Clazz.__fallbackType);
      return initType(registry, Clazz, params, options);
    } catch (_unused) {// swallow, we will throw the first error again
    }
  }

  throw firstError;
}
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","./class.js":"node_modules/@polkadot/types-create/create/class.js"}],"node_modules/@polkadot/types-create/create/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _class = require("./class.js");

Object.keys(_class).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _class[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _class[key];
    }
  });
});

var _type = require("./type.js");

Object.keys(_type).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _type[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _type[key];
    }
  });
});
},{"./class.js":"node_modules/@polkadot/types-create/create/class.js","./type.js":"node_modules/@polkadot/types-create/create/type.js"}],"node_modules/@polkadot/types-create/util/encodeTypes.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.encodeTypeDef = encodeTypeDef;
exports.paramsNotation = paramsNotation;
exports.withTypeString = withTypeString;

var _util = require("@polkadot/util");

var _index = require("../types/index.js");

var _encoders;

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var stringIdentity = function stringIdentity(value) {
  return value.toString();
};

var INFO_WRAP = ['BTreeMap', 'BTreeSet', 'Compact', 'HashMap', 'Option', 'Result', 'Vec'];

function paramsNotation(outer, inner) {
  var transform = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringIdentity;
  return "".concat(outer).concat(inner ? "<".concat((Array.isArray(inner) ? inner : [inner]).map(transform).join(', '), ">") : '');
}

function encodeWithParams(registry, typeDef, outer) {
  var info = typeDef.info,
      sub = typeDef.sub;

  switch (info) {
    case _index.TypeDefInfo.BTreeMap:
    case _index.TypeDefInfo.BTreeSet:
    case _index.TypeDefInfo.Compact:
    case _index.TypeDefInfo.HashMap:
    case _index.TypeDefInfo.Linkage:
    case _index.TypeDefInfo.Option:
    case _index.TypeDefInfo.Range:
    case _index.TypeDefInfo.RangeInclusive:
    case _index.TypeDefInfo.Result:
    case _index.TypeDefInfo.Vec:
    case _index.TypeDefInfo.WrapperKeepOpaque:
    case _index.TypeDefInfo.WrapperOpaque:
      return paramsNotation(outer, sub, function (p) {
        return encodeTypeDef(registry, p);
      });
  }

  throw new Error("Unable to encode ".concat((0, _util.stringify)(typeDef), " with params"));
}

function encodeSubTypes(registry, sub, asEnum, extra) {
  var names = sub.map(function (_ref) {
    var name = _ref.name;
    return name;
  });

  if (!names.every(function (n) {
    return !!n;
  })) {
    throw new Error("Subtypes does not have consistent names, ".concat(names.join(', ')));
  }

  var inner = (0, _util.objectSpread)({}, extra);

  for (var i = 0; i < sub.length; i++) {
    var def = sub[i];
    inner[def.name] = encodeTypeDef(registry, def);
  }

  return (0, _util.stringify)(asEnum ? {
    _enum: inner
  } : inner);
} // We setup a record here to ensure we have comprehensive coverage (any item not covered will result
// in a compile-time error with the missing index)


var encoders = (_encoders = {}, _defineProperty(_encoders, _index.TypeDefInfo.BTreeMap, function (registry, typeDef) {
  return encodeWithParams(registry, typeDef, 'BTreeMap');
}), _defineProperty(_encoders, _index.TypeDefInfo.BTreeSet, function (registry, typeDef) {
  return encodeWithParams(registry, typeDef, 'BTreeSet');
}), _defineProperty(_encoders, _index.TypeDefInfo.Compact, function (registry, typeDef) {
  return encodeWithParams(registry, typeDef, 'Compact');
}), _defineProperty(_encoders, _index.TypeDefInfo.DoNotConstruct, function (registry, _ref2) {
  var displayName = _ref2.displayName,
      lookupIndex = _ref2.lookupIndex,
      lookupName = _ref2.lookupName;
  return "DoNotConstruct<".concat(lookupName || displayName || ((0, _util.isUndefined)(lookupIndex) ? 'Unknown' : registry.createLookupType(lookupIndex)), ">");
}), _defineProperty(_encoders, _index.TypeDefInfo.Enum, function (registry, _ref3) {
  var sub = _ref3.sub;

  if (!Array.isArray(sub)) {
    throw new Error('Unable to encode Enum type');
  } // c-like enums have all Null entries
  // TODO We need to take the disciminant into account and auto-add empty entries


  return sub.every(function (_ref4) {
    var type = _ref4.type;
    return type === 'Null';
  }) ? (0, _util.stringify)({
    _enum: sub.map(function (_ref5, index) {
      var name = _ref5.name;
      return "".concat(name || "Empty".concat(index));
    })
  }) : encodeSubTypes(registry, sub, true);
}), _defineProperty(_encoders, _index.TypeDefInfo.HashMap, function (registry, typeDef) {
  return encodeWithParams(registry, typeDef, 'HashMap');
}), _defineProperty(_encoders, _index.TypeDefInfo.Int, function (registry, _ref6) {
  var _ref6$length = _ref6.length,
      length = _ref6$length === void 0 ? 32 : _ref6$length;
  return "Int<".concat(length, ">");
}), _defineProperty(_encoders, _index.TypeDefInfo.Linkage, function (registry, typeDef) {
  return encodeWithParams(registry, typeDef, 'Linkage');
}), _defineProperty(_encoders, _index.TypeDefInfo.Null, function (registry, typeDef) {
  return 'Null';
}), _defineProperty(_encoders, _index.TypeDefInfo.Option, function (registry, typeDef) {
  return encodeWithParams(registry, typeDef, 'Option');
}), _defineProperty(_encoders, _index.TypeDefInfo.Plain, function (registry, _ref7) {
  var displayName = _ref7.displayName,
      type = _ref7.type;
  return displayName || type;
}), _defineProperty(_encoders, _index.TypeDefInfo.Range, function (registry, typeDef) {
  return encodeWithParams(registry, typeDef, 'Range');
}), _defineProperty(_encoders, _index.TypeDefInfo.RangeInclusive, function (registry, typeDef) {
  return encodeWithParams(registry, typeDef, 'RangeInclusive');
}), _defineProperty(_encoders, _index.TypeDefInfo.Result, function (registry, typeDef) {
  return encodeWithParams(registry, typeDef, 'Result');
}), _defineProperty(_encoders, _index.TypeDefInfo.Set, function (registry, _ref8) {
  var _ref8$length = _ref8.length,
      length = _ref8$length === void 0 ? 8 : _ref8$length,
      sub = _ref8.sub;

  if (!Array.isArray(sub)) {
    throw new Error('Unable to encode Set type');
  }

  return (0, _util.stringify)({
    _set: sub.reduce(function (all, _ref9, count) {
      var index = _ref9.index,
          name = _ref9.name;
      return (0, _util.objectSpread)(all, _defineProperty({}, "".concat(name || "Unknown".concat(index || count)), index || count));
    }, {
      _bitLength: length || 8
    })
  });
}), _defineProperty(_encoders, _index.TypeDefInfo.Si, function (registry, _ref10) {
  var lookupName = _ref10.lookupName,
      type = _ref10.type;
  return lookupName || type;
}), _defineProperty(_encoders, _index.TypeDefInfo.Struct, function (registry, _ref11) {
  var alias = _ref11.alias,
      sub = _ref11.sub;

  if (!Array.isArray(sub)) {
    throw new Error('Unable to encode Struct type');
  }

  return encodeSubTypes(registry, sub, false, alias ? {
    _alias: _toConsumableArray(alias.entries()).reduce(function (all, _ref12) {
      var _ref13 = _slicedToArray(_ref12, 2),
          k = _ref13[0],
          v = _ref13[1];

      return (0, _util.objectSpread)(all, _defineProperty({}, k, v));
    }, {})
  } : {});
}), _defineProperty(_encoders, _index.TypeDefInfo.Tuple, function (registry, _ref14) {
  var sub = _ref14.sub;

  if (!Array.isArray(sub)) {
    throw new Error('Unable to encode Tuple type');
  }

  return "(".concat(sub.map(function (type) {
    return encodeTypeDef(registry, type);
  }).join(','), ")");
}), _defineProperty(_encoders, _index.TypeDefInfo.UInt, function (registry, _ref15) {
  var _ref15$length = _ref15.length,
      length = _ref15$length === void 0 ? 32 : _ref15$length;
  return "UInt<".concat(length, ">");
}), _defineProperty(_encoders, _index.TypeDefInfo.Vec, function (registry, typeDef) {
  return encodeWithParams(registry, typeDef, 'Vec');
}), _defineProperty(_encoders, _index.TypeDefInfo.VecFixed, function (registry, _ref16) {
  var length = _ref16.length,
      sub = _ref16.sub;

  if (!(0, _util.isNumber)(length) || !sub || Array.isArray(sub)) {
    throw new Error('Unable to encode VecFixed type');
  }

  return "[".concat(sub.type, ";").concat(length, "]");
}), _defineProperty(_encoders, _index.TypeDefInfo.WrapperKeepOpaque, function (registry, typeDef) {
  return encodeWithParams(registry, typeDef, 'WrapperKeepOpaque');
}), _defineProperty(_encoders, _index.TypeDefInfo.WrapperOpaque, function (registry, typeDef) {
  return encodeWithParams(registry, typeDef, 'WrapperOpaque');
}), _encoders);

function encodeType(registry, typeDef) {
  var withLookup = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  return withLookup && typeDef.lookupName ? typeDef.lookupName : encoders[typeDef.info](registry, typeDef);
}

function encodeTypeDef(registry, typeDef) {
  // In the case of contracts we do have the unfortunate situation where the displayName would
  // refer to "Option" when it is an option. For these, string it out, only using when actually
  // not a top-level element to be used
  return typeDef.displayName && !INFO_WRAP.some(function (i) {
    return typeDef.displayName === i;
  }) ? typeDef.displayName : encodeType(registry, typeDef);
}

function withTypeString(registry, typeDef) {
  return (0, _util.objectSpread)({}, typeDef, {
    type: encodeType(registry, typeDef, false)
  });
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../types/index.js":"node_modules/@polkadot/types-create/types/index.js"}],"node_modules/@polkadot/types-create/util/xcm.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.XCM_MAPPINGS = void 0;
exports.mapXcmTypes = mapXcmTypes;

var _util = require("@polkadot/util");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var XCM_MAPPINGS = ['AssetInstance', 'Fungibility', 'Junction', 'Junctions', 'MultiAsset', 'MultiAssetFilter', 'MultiLocation', 'Response', 'WildFungibility', 'WildMultiAsset', 'Xcm', 'XcmError', 'XcmOrder'];
exports.XCM_MAPPINGS = XCM_MAPPINGS;

function mapXcmTypes(version) {
  return XCM_MAPPINGS.reduce(function (all, key) {
    return (0, _util.objectSpread)(all, _defineProperty({}, key, "".concat(key).concat(version)));
  }, {});
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types-create/util/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _encodeTypes = require("./encodeTypes.js");

Object.keys(_encodeTypes).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _encodeTypes[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _encodeTypes[key];
    }
  });
});

var _getTypeDef = require("./getTypeDef.js");

Object.keys(_getTypeDef).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _getTypeDef[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _getTypeDef[key];
    }
  });
});

var _typeSplit = require("./typeSplit.js");

Object.keys(_typeSplit).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _typeSplit[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _typeSplit[key];
    }
  });
});

var _xcm = require("./xcm.js");

Object.keys(_xcm).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _xcm[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _xcm[key];
    }
  });
});
},{"./encodeTypes.js":"node_modules/@polkadot/types-create/util/encodeTypes.js","./getTypeDef.js":"node_modules/@polkadot/types-create/util/getTypeDef.js","./typeSplit.js":"node_modules/@polkadot/types-create/util/typeSplit.js","./xcm.js":"node_modules/@polkadot/types-create/util/xcm.js"}],"node_modules/@polkadot/types-create/bundle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  packageInfo: true,
  TypeDefInfo: true
};
Object.defineProperty(exports, "TypeDefInfo", {
  enumerable: true,
  get: function () {
    return _index.TypeDefInfo;
  }
});
Object.defineProperty(exports, "packageInfo", {
  enumerable: true,
  get: function () {
    return _packageInfo.packageInfo;
  }
});

var _packageInfo = require("./packageInfo.js");

var _index = require("./types/index.js");

var _index2 = require("./create/index.js");

Object.keys(_index2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index2[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index2[key];
    }
  });
});

var _index3 = require("./util/index.js");

Object.keys(_index3).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index3[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index3[key];
    }
  });
});
},{"./packageInfo.js":"node_modules/@polkadot/types-create/packageInfo.js","./types/index.js":"node_modules/@polkadot/types-create/types/index.js","./create/index.js":"node_modules/@polkadot/types-create/create/index.js","./util/index.js":"node_modules/@polkadot/types-create/util/index.js"}],"node_modules/@polkadot/types-create/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

require("./detectPackage.js");

var _bundle = require("./bundle.js");

Object.keys(_bundle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _bundle[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bundle[key];
    }
  });
});
},{"./detectPackage.js":"node_modules/@polkadot/types-create/detectPackage.js","./bundle.js":"node_modules/@polkadot/types-create/bundle.js"}],"node_modules/@polkadot/types/interfaces/xcm/v0.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.v0 = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var v0 = {
  FungibilityV0: 'FungibilityV1',
  WildFungibilityV0: 'WildFungibilityV1',
  AssetInstanceV0: {
    _enum: {
      Undefined: 'Null',
      Index8: 'u8',
      Index16: 'Compact<u16>',
      Index32: 'Compact<u32>',
      Index64: 'Compact<u64>',
      Index128: 'Compact<u128>',
      Array4: '[u8; 4]',
      Array8: '[u8; 8]',
      Array16: '[u8; 16]',
      Array32: '[u8; 32]',
      Blob: 'Vec<u8>'
    }
  },
  JunctionV0: {
    _enum: {
      Parent: 'Null',
      Parachain: 'Compact<u32>',
      AccountId32: {
        network: 'NetworkId',
        id: 'AccountId'
      },
      AccountIndex64: {
        network: 'NetworkId',
        index: 'Compact<u64>'
      },
      AccountKey20: {
        network: 'NetworkId',
        key: '[u8; 20]'
      },
      PalletInstance: 'u8',
      GeneralIndex: 'Compact<u128>',
      GeneralKey: 'Vec<u8>',
      OnlyChild: 'Null',
      Plurality: {
        id: 'BodyId',
        part: 'BodyPart'
      }
    }
  },
  MultiAssetV0: {
    _enum: {
      None: 'Null',
      All: 'Null',
      AllFungible: 'Null',
      AllNonFungible: 'Null',
      AllAbstractFungible: 'Vec<u8>',
      AllAbstractNonFungible: 'Vec<u8>',
      AllConcreteFungible: 'MultiLocationV0',
      AllConcreteNonFungible: 'MultiLocationV0',
      AbstractFungible: {
        id: 'Vec<u8>',
        instance: 'Compact<u128>'
      },
      AbstractNonFungible: {
        class: 'Vec<u8>',
        instance: 'AssetInstanceV0'
      },
      ConcreteFungible: {
        id: 'MultiLocationV0',
        amount: 'Compact<u128>'
      },
      ConcreteNonFungible: {
        class: 'MultiLocationV0',
        instance: 'AssetInstanceV0'
      }
    }
  },
  MultiLocationV0: {
    _enum: {
      Here: 'Null',
      X1: 'JunctionV0',
      X2: '(JunctionV0, JunctionV0)',
      X3: '(JunctionV0, JunctionV0, JunctionV0)',
      X4: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0)',
      X5: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)',
      X6: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)',
      X7: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)',
      X8: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)'
    }
  },
  OriginKindV0: {
    _enum: ['Native', 'SovereignAccount', 'Superuser', 'Xcm']
  },
  ResponseV0: {
    _enum: {
      Assets: 'Vec<MultiAssetV0>'
    }
  },
  XcmV0: {
    _enum: {
      WithdrawAsset: {
        assets: 'Vec<MultiAssetV0>',
        effects: 'Vec<XcmOrderV0>'
      },
      ReserveAssetDeposit: {
        assets: 'Vec<MultiAssetV0>',
        effects: 'Vec<XcmOrderV0>'
      },
      ReceiveTeleportedAsset: {
        assets: 'Vec<MultiAssetV0>',
        effects: 'Vec<XcmOrderV0>'
      },
      QueryResponse: {
        queryId: 'Compact<u64>',
        response: 'ResponseV0'
      },
      TransferAsset: {
        assets: 'Vec<MultiAssetV0>',
        dest: 'MultiLocationV0'
      },
      TransferReserveAsset: {
        assets: 'Vec<MultiAssetV0>',
        dest: 'MultiLocationV0',
        effects: 'Vec<XcmOrderV0>'
      },
      Transact: {
        originType: 'XcmOriginKind',
        requireWeightAtMost: 'u64',
        call: 'DoubleEncodedCall'
      },
      HrmpNewChannelOpenRequest: {
        sender: 'Compact<u32>',
        maxMessageSize: 'Compact<u32>',
        maxCapacity: 'Compact<u32>'
      },
      HrmpChannelAccepted: {
        recipient: 'Compact<u32>'
      },
      HrmpChannelClosing: {
        initiator: 'Compact<u32>',
        sender: 'Compact<u32>',
        recipient: 'Compact<u32>'
      },
      RelayedFrom: {
        who: 'MultiLocationV0',
        message: 'XcmV0'
      }
    }
  },
  XcmErrorV0: {
    _enum: {
      Undefined: 'Null',
      Overflow: 'Null',
      Unimplemented: 'Null',
      UnhandledXcmVersion: 'Null',
      UnhandledXcmMessage: 'Null',
      UnhandledEffect: 'Null',
      EscalationOfPrivilege: 'Null',
      UntrustedReserveLocation: 'Null',
      UntrustedTeleportLocation: 'Null',
      DestinationBufferOverflow: 'Null',
      SendFailed: 'Null',
      CannotReachDestination: '(MultiLocation, Xcm)',
      MultiLocationFull: 'Null',
      FailedToDecode: 'Null',
      BadOrigin: 'Null',
      ExceedsMaxMessageSize: 'Null',
      FailedToTransactAsset: 'Null',
      WeightLimitReached: 'Weight',
      Wildcard: 'Null',
      TooMuchWeightRequired: 'Null',
      NotHoldingFees: 'Null',
      WeightNotComputable: 'Null',
      Barrier: 'Null',
      NotWithdrawable: 'Null',
      LocationCannotHold: 'Null',
      TooExpensive: 'Null',
      AssetNotFound: 'Null',
      RecursionLimitReached: 'Null'
    }
  },
  XcmOrderV0: {
    _enum: {
      Null: 'Null',
      DepositAsset: {
        assets: 'Vec<MultiAssetV0>',
        dest: 'MultiLocationV0'
      },
      DepositReserveAsset: {
        assets: 'Vec<MultiAssetV0>',
        dest: 'MultiLocationV0',
        effects: 'Vec<XcmOrderV0>'
      },
      ExchangeAsset: {
        give: 'Vec<MultiAssetV0>',
        receive: 'Vec<MultiAssetV0>'
      },
      InitiateReserveWithdraw: {
        assets: 'Vec<MultiAssetV0>',
        reserve: 'MultiLocationV0',
        effects: 'Vec<XcmOrderV0>'
      },
      InitiateTeleport: {
        assets: 'Vec<MultiAsset>',
        dest: 'MultiLocationV0',
        effects: 'Vec<XcmOrderV0>'
      },
      QueryHolding: {
        queryId: 'Compact<u64>',
        dest: 'MultiLocationV0',
        assets: 'Vec<MultiAssetV0>'
      },
      BuyExecution: {
        fees: 'MultiAsset',
        weight: 'u64',
        debt: 'u64',
        haltOnError: 'bool',
        xcm: 'Vec<XcmV0>'
      }
    }
  }
};
exports.v0 = v0;
},{}],"node_modules/@polkadot/types/interfaces/xcm/v1.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.v1 = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var v1 = {
  AssetInstanceV1: {
    _enum: {
      Undefined: 'Null',
      Index: 'Compact<u128>',
      Array4: '[u8; 4]',
      Array8: '[u8; 8]',
      Array16: '[u8; 16]',
      Array32: '[u8; 32]',
      Blob: 'Bytes'
    }
  },
  FungibilityV1: {
    _enum: {
      Fungible: 'Compact<u128>',
      NonFungible: 'AssetInstanceV1'
    }
  },
  JunctionV1: {
    _enum: {
      Parachain: 'Compact<u32>',
      AccountId32: {
        network: 'NetworkId',
        id: 'AccountId'
      },
      AccountIndex64: {
        network: 'NetworkId',
        index: 'Compact<u64>'
      },
      AccountKey20: {
        network: 'NetworkId',
        key: '[u8; 20]'
      },
      PalletInstance: 'u8',
      GeneralIndex: 'Compact<u128>',
      GeneralKey: 'Vec<u8>',
      OnlyChild: 'Null',
      Plurality: {
        id: 'BodyId',
        part: 'BodyPart'
      }
    }
  },
  JunctionsV1: {
    _enum: {
      Here: 'Null',
      X1: 'JunctionV1',
      X2: '(JunctionV1, JunctionV1)',
      X3: '(JunctionV1, JunctionV1, JunctionV1)',
      X4: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1)',
      X5: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)',
      X6: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)',
      X7: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)',
      X8: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)'
    }
  },
  MultiAssetsV1: 'Vec<MultiAssetV1>',
  MultiAssetV1: {
    id: 'XcmAssetId',
    fungibility: 'FungibilityV1'
  },
  MultiAssetFilterV1: {
    _enum: {
      Definite: 'MultiAssetsV1',
      Wild: 'WildMultiAssetV1'
    }
  },
  MultiLocationV1: {
    parents: 'u8',
    interior: 'JunctionsV1'
  },
  OriginKindV1: 'OriginKindV0',
  ResponseV1: {
    _enum: {
      Assets: 'MultiAssetsV1'
    }
  },
  WildFungibilityV1: {
    _enum: ['Fungible', 'NonFungible']
  },
  WildMultiAssetV1: {
    _enum: {
      All: 'Null',
      AllOf: {
        id: 'XcmAssetId',
        fungibility: 'WildFungibilityV1'
      }
    }
  },
  XcmV1: {
    _enum: {
      WithdrawAsset: {
        assets: 'MultiAssetsV1',
        effects: 'Vec<XcmOrderV1>'
      },
      ReserveAssetDeposit: {
        assets: 'MultiAssetsV1',
        effects: 'Vec<XcmOrderV1>'
      },
      ReceiveTeleportedAsset: {
        assets: 'MultiAssetsV1',
        effects: 'Vec<XcmOrderV1>'
      },
      QueryResponse: {
        queryId: 'Compact<u64>',
        response: 'ResponseV1'
      },
      TransferAsset: {
        assets: 'MultiAssetsV1',
        dest: 'MultiLocationV1'
      },
      TransferReserveAsset: {
        assets: 'MultiAssetsV1',
        dest: 'MultiLocationV1',
        effects: 'Vec<XcmOrderV1>'
      },
      Transact: {
        originType: 'XcmOriginKind',
        requireWeightAtMost: 'u64',
        call: 'DoubleEncodedCall'
      },
      HrmpNewChannelOpenRequest: {
        sender: 'Compact<u32>',
        maxMessageSize: 'Compact<u32>',
        maxCapacity: 'Compact<u32>'
      },
      HrmpChannelAccepted: {
        recipient: 'Compact<u32>'
      },
      HrmpChannelClosing: {
        initiator: 'Compact<u32>',
        sender: 'Compact<u32>',
        recipient: 'Compact<u32>'
      },
      RelayedFrom: {
        who: 'MultiLocationV1',
        message: 'XcmV1'
      }
    }
  },
  XcmErrorV1: {
    _enum: {
      Undefined: 'Null',
      Overflow: 'Null',
      Unimplemented: 'Null',
      UnhandledXcmVersion: 'Null',
      UnhandledXcmMessage: 'Null',
      UnhandledEffect: 'Null',
      EscalationOfPrivilege: 'Null',
      UntrustedReserveLocation: 'Null',
      UntrustedTeleportLocation: 'Null',
      DestinationBufferOverflow: 'Null',
      SendFailed: 'Null',
      CannotReachDestination: '(MultiLocationV1, XcmV1)',
      MultiLocationFull: 'Null',
      FailedToDecode: 'Null',
      BadOrigin: 'Null',
      ExceedsMaxMessageSize: 'Null',
      FailedToTransactAsset: 'Null',
      WeightLimitReached: 'Weight',
      Wildcard: 'Null',
      TooMuchWeightRequired: 'Null',
      NotHoldingFees: 'Null',
      WeightNotComputable: 'Null',
      Barrier: 'Null',
      NotWithdrawable: 'Null',
      LocationCannotHold: 'Null',
      TooExpensive: 'Null',
      AssetNotFound: 'Null',
      DestinationUnsupported: 'Null',
      RecursionLimitReached: 'Null'
    }
  },
  XcmOrderV1: {
    _enum: {
      Noop: 'Null',
      DepositAsset: {
        assets: 'MultiAssetFilterV1',
        maxAssets: 'u32',
        beneficiary: 'MultiLocationV1'
      },
      DepositReserveAsset: {
        assets: 'MultiAssetFilterV1',
        maxAssets: 'u32',
        dest: 'MultiLocationV1',
        effects: 'Vec<XcmOrderV1>'
      },
      ExchangeAsset: {
        give: 'MultiAssetFilterV1',
        receive: 'MultiAssetsV1'
      },
      InitiateReserveWithdraw: {
        assets: 'MultiAssetFilterV1',
        reserve: 'MultiLocationV1',
        effects: 'Vec<XcmOrderV1>'
      },
      InitiateTeleport: {
        assets: 'MultiAssetFilterV1',
        dest: 'MultiLocationV1',
        effects: 'Vec<XcmOrderV1>'
      },
      QueryHolding: {
        queryId: 'Compact<u64>',
        dest: 'MultiLocationV1',
        assets: 'MultiAssetFilterV1'
      },
      BuyExecution: {
        fees: 'MultiAssetV1',
        weight: 'u64',
        debt: 'u64',
        haltOnError: 'bool',
        instructions: 'Vec<XcmV1>'
      }
    }
  }
};
exports.v1 = v1;
},{}],"node_modules/@polkadot/types/interfaces/xcm/v2.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.v2 = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var v2 = {
  AssetInstanceV2: 'AssetInstanceV1',
  FungibilityV2: 'FungibilityV1',
  JunctionV2: 'JunctionV1',
  JunctionsV2: 'JunctionsV1',
  MultiAssetsV2: 'MultiAssetsV1',
  MultiAssetV2: 'MultiAssetV1',
  MultiAssetFilterV2: 'MultiAssetFilterV1',
  MultiLocationV2: 'MultiLocationV1',
  OriginKindV2: 'OriginKindV1',
  WildFungibilityV2: 'WildFungibilityV1',
  ResponseV2: {
    _enum: {
      Null: 'Null',
      Assets: 'MultiAssetsV2',
      ExecutionResult: 'ResponseV2Result'
    }
  },
  ResponseV2Error: '(u32, XcmErrorV2)',
  ResponseV2Result: 'Result<Null, ResponseV2Error>',
  WeightLimitV2: {
    _enum: {
      Unlimited: 'Null',
      Limited: 'Compact<u64>'
    }
  },
  InstructionV2: {
    _enum: {
      WithdrawAsset: 'MultiAssetsV2',
      ReserveAssetDeposited: 'MultiAssetsV2',
      ReceiveTeleportedAsset: 'MultiAssetsV2',
      QueryResponse: {
        queryId: 'Compact<u64>',
        response: 'ResponseV2',
        maxWeight: 'Compact<u64>'
      },
      TransferAsset: {
        assets: 'MultiAssetsV2',
        beneficiary: 'MultiLocationV2'
      },
      TransferReserveAsset: {
        assets: 'MultiAssetsV2',
        dest: 'MultiLocationV2',
        xcm: 'XcmV2'
      },
      Transact: {
        originType: 'OriginKindV2',
        requireWeightAtMost: 'u64',
        call: 'DoubleEncodedCall'
      },
      HrmpNewChannelOpenRequest: {
        sender: 'Compact<u32>',
        maxMessageSize: 'Compact<u32>',
        maxCapacity: 'Compact<u32>'
      },
      HrmpChannelAccepted: {
        recipient: 'Compact<u32>'
      },
      HrmpChannelClosing: {
        initiator: 'Compact<u32>',
        sender: 'Compact<u32>',
        recipient: 'Compact<u32>'
      },
      ClearOrigin: 'Null',
      DescendOrigin: 'InteriorMultiLocation',
      ReportError: {
        queryId: 'Compact<u64>',
        dest: 'MultiLocationV2',
        maxResponseWeight: 'Compact<u64>'
      },
      DepositAsset: {
        assets: 'MultiAssetFilterV2',
        maxAssets: 'u32',
        beneficiary: 'MultiLocationV2'
      },
      DepositReserveAsset: {
        assets: 'MultiAssetFilterV2',
        maxAssets: 'u32',
        dest: 'MultiLocationV2',
        xcm: 'XcmV2'
      },
      ExchangeAsset: {
        give: 'MultiAssetFilterV2',
        receive: 'MultiAssetsV2'
      },
      InitiateReserveWithdraw: {
        assets: 'MultiAssetFilterV2',
        reserve: 'MultiLocationV2',
        xcm: 'XcmV2'
      },
      InitiateTeleport: {
        assets: 'MultiAssetFilterV2',
        dest: 'MultiLocationV2',
        xcm: 'XcmV2'
      },
      QueryHolding: {
        query_id: 'Compact<u64>',
        dest: 'MultiLocationV2',
        assets: 'MultiAssetFilterV2',
        maxResponse_Weight: 'Compact<u64>'
      },
      BuyExecution: {
        fees: 'MultiAssetV2',
        weightLimit: 'WeightLimitV2'
      },
      RefundSurplus: 'Null',
      SetErrorHandler: 'XcmV2',
      SetAppendix: 'XcmV2',
      ClearError: 'Null',
      ClaimAsset: {
        assets: 'MultiAssetsV2',
        ticket: 'MultiLocationV2'
      },
      Trap: 'u64'
    }
  },
  WildMultiAssetV2: 'WildMultiAssetV1',
  XcmV2: 'Vec<InstructionV2>',
  XcmErrorV2: {
    _enum: {
      Undefined: 'Null',
      Overflow: 'Null',
      Unimplemented: 'Null',
      UnhandledXcmVersion: 'Null',
      UnhandledXcmMessage: 'Null',
      UnhandledEffect: 'Null',
      EscalationOfPrivilege: 'Null',
      UntrustedReserveLocation: 'Null',
      UntrustedTeleportLocation: 'Null',
      DestinationBufferOverflow: 'Null',
      MultiLocationFull: 'Null',
      MultiLocationNotInvertible: 'Null',
      FailedToDecode: 'Null',
      BadOrigin: 'Null',
      ExceedsMaxMessageSize: 'Null',
      FailedToTransactAsset: 'Null',
      WeightLimitReached: 'Weight',
      Wildcard: 'Null',
      TooMuchWeightRequired: 'Null',
      NotHoldingFees: 'Null',
      WeightNotComputable: 'Null',
      Barrier: 'Null',
      NotWithdrawable: 'Null',
      LocationCannotHold: 'Null',
      TooExpensive: 'Null',
      AssetNotFound: 'Null',
      DestinationUnsupported: 'Null',
      RecursionLimitReached: 'Null',
      Transport: 'Null',
      Unroutable: 'Null',
      UnknownWeightRequired: 'Null',
      Trap: 'u64',
      UnknownClaim: 'Null',
      InvalidLocation: 'Null'
    }
  },
  XcmOrderV2: 'XcmOrderV1'
};
exports.v2 = v2;
},{}],"node_modules/@polkadot/types/interfaces/xcm/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _typesCreate = require("@polkadot/types-create");

var _util = require("@polkadot/util");

var _v = require("./v0.js");

var _v2 = require("./v1.js");

var _v3 = require("./v2.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var XCM_LATEST = 'V2';
var xcm = {
  XcmOrigin: {
    _enum: {
      Xcm: 'MultiLocation'
    }
  },
  XcmpMessageFormat: {
    _enum: ['ConcatenatedVersionedXcm', 'ConcatenatedEncodedBlob', 'Signals']
  },
  XcmAssetId: {
    _enum: {
      Concrete: 'MultiLocation',
      Abstract: 'Bytes'
    }
  },
  InboundStatus: {
    _enum: ['Ok', 'Suspended']
  },
  OutboundStatus: {
    _enum: ['Ok', 'Suspended']
  },
  MultiAssets: 'Vec<MultiAsset>'
};
var location = {
  BodyId: {
    _enum: {
      Unit: 'Null',
      Named: 'Vec<u8>',
      Index: 'Compact<u32>',
      Executive: 'Null',
      Technical: 'Null',
      Legislative: 'Null',
      Judicial: 'Null'
    }
  },
  BodyPart: {
    _enum: {
      Voice: 'Null',
      Members: 'Compact<u32>',
      Fraction: {
        nom: 'Compact<u32>',
        denom: 'Compact<u32>'
      },
      AtLeastProportion: {
        nom: 'Compact<u32>',
        denom: 'Compact<u32>'
      },
      MoreThanProportion: {
        nom: 'Compact<u32>',
        denom: 'Compact<u32>'
      }
    }
  },
  InteriorMultiLocation: 'Junctions',
  NetworkId: {
    _enum: {
      Any: 'Null',
      Named: 'Vec<u8>',
      Polkadot: 'Null',
      Kusama: 'Null'
    }
  }
};
var _default = {
  rpc: {},
  types: (0, _util.objectSpread)({}, location, xcm, _v.v0, _v2.v1, _v3.v2, (0, _typesCreate.mapXcmTypes)(XCM_LATEST), {
    DoubleEncodedCall: {
      encoded: 'Vec<u8>'
    },
    XcmOriginKind: {
      _enum: ['Native', 'SovereignAccount', 'Superuser', 'Xcm']
    },
    Outcome: {
      _enum: {
        Complete: 'Weight',
        Incomplete: '(Weight, XcmErrorV0)',
        Error: 'XcmErrorV0'
      }
    },
    QueryId: 'u64',
    QueryStatus: {
      _enum: {
        Pending: {
          responder: 'VersionedMultiLocation',
          maybeNotify: 'Option<(u8, u8)>',
          timeout: 'BlockNumber'
        },
        Ready: {
          response: 'VersionedResponse',
          at: 'BlockNumber'
        }
      }
    },
    QueueConfigData: {
      suspendThreshold: 'u32',
      dropThreshold: 'u32',
      resumeThreshold: 'u32',
      thresholdWeight: 'Weight',
      weightRestrictDecay: 'Weight'
    },
    VersionMigrationStage: {
      _enum: {
        MigrateSupportedVersion: 'Null',
        MigrateVersionNotifiers: 'Null',
        NotifyCurrentTargets: 'Option<Bytes>',
        MigrateAndNotifyOldTargets: 'Null'
      }
    },
    VersionedMultiAsset: {
      _enum: {
        V0: 'MultiAssetV0',
        V1: 'MultiAssetV1',
        V2: 'MultiAssetV2'
      }
    },
    VersionedMultiAssets: {
      _enum: {
        V0: 'Vec<MultiAssetV0>',
        V1: 'MultiAssetsV1',
        V2: 'MultiAssetsV2'
      }
    },
    VersionedMultiLocation: {
      _enum: {
        V0: 'MultiLocationV0',
        V1: 'MultiLocationV1',
        V2: 'MultiLocationV2'
      }
    },
    VersionedResponse: {
      V0: 'ResponseV0',
      V1: 'ResponseV1',
      V2: 'ResponseV2'
    },
    VersionedXcm: {
      _enum: {
        V0: 'XcmV0',
        V1: 'XcmV1',
        V2: 'XcmV2'
      }
    },
    XcmVersion: 'u32'
  })
};
exports.default = _default;
},{"@polkadot/types-create":"node_modules/@polkadot/types-create/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","./v0.js":"node_modules/@polkadot/types/interfaces/xcm/v0.js","./v1.js":"node_modules/@polkadot/types/interfaces/xcm/v1.js","./v2.js":"node_modules/@polkadot/types/interfaces/xcm/v2.js"}],"node_modules/@polkadot/types/interfaces/contractsAbi/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var layout = {
  ContractCryptoHasher: {
    _enum: ['Blake2x256', 'Sha2x256', 'Keccak256']
  },
  ContractDiscriminant: 'u32',
  ContractLayoutArray: {
    offset: 'ContractLayoutKey',
    len: 'u32',
    cellsPerElem: 'u64',
    layout: 'ContractStorageLayout'
  },
  ContractLayoutCell: {
    key: 'ContractLayoutKey',
    ty: 'SiLookupTypeId'
  },
  ContractLayoutEnum: {
    dispatchKey: 'ContractLayoutKey',
    variants: 'BTreeMap<ContractDiscriminant, ContractLayoutStruct>'
  },
  ContractLayoutHash: {
    offset: 'ContractLayoutKey',
    strategy: 'ContractLayoutHashingStrategy',
    layout: 'ContractStorageLayout'
  },
  ContractLayoutHashingStrategy: {
    hasher: 'ContractCryptoHasher',
    postfix: 'Vec<u8>',
    prefix: 'Vec<u8>'
  },
  ContractLayoutKey: '[u8; 32]',
  ContractLayoutStruct: {
    fields: 'Vec<ContractLayoutStructField>'
  },
  ContractLayoutStructField: {
    layout: 'ContractStorageLayout',
    name: 'Text'
  },
  ContractStorageLayout: {
    _enum: {
      Cell: 'ContractLayoutCell',
      Hash: 'ContractLayoutHash',
      Array: 'ContractLayoutArray',
      Struct: 'ContractLayoutStruct',
      Enum: 'ContractLayoutEnum'
    }
  }
};
var spec = {
  ContractConstructorSpecV0: {
    name: 'Text',
    selector: 'ContractSelector',
    args: 'Vec<ContractMessageParamSpecV0>',
    docs: 'Vec<Text>'
  },
  ContractConstructorSpecV1: {
    name: 'Vec<Text>',
    selector: 'ContractSelector',
    args: 'Vec<ContractMessageParamSpecV0>',
    docs: 'Vec<Text>'
  },
  ContractConstructorSpecV2: {
    label: 'Text',
    selector: 'ContractSelector',
    args: 'Vec<ContractMessageParamSpecV2>',
    docs: 'Vec<Text>'
  },
  ContractConstructorSpecV3: {
    label: 'Text',
    selector: 'ContractSelector',
    payable: 'bool',
    args: 'Vec<ContractMessageParamSpecV2>',
    docs: 'Vec<Text>'
  },
  ContractContractSpecV0: {
    constructors: 'Vec<ContractConstructorSpecV0>',
    messages: 'Vec<ContractMessageSpecV0>',
    events: 'Vec<ContractEventSpecV0>',
    docs: 'Vec<Text>'
  },
  ContractContractSpecV1: {
    constructors: 'Vec<ContractConstructorSpecV1>',
    messages: 'Vec<ContractMessageSpecV1>',
    events: 'Vec<ContractEventSpecV1>',
    docs: 'Vec<Text>'
  },
  ContractContractSpecV2: {
    constructors: 'Vec<ContractConstructorSpecV2>',
    messages: 'Vec<ContractMessageSpecV2>',
    events: 'Vec<ContractEventSpecV2>',
    docs: 'Vec<Text>'
  },
  ContractContractSpecV3: {
    constructors: 'Vec<ContractConstructorSpecV3>',
    messages: 'Vec<ContractMessageSpecV2>',
    events: 'Vec<ContractEventSpecV2>',
    docs: 'Vec<Text>'
  },
  ContractDisplayName: 'SiPath',
  ContractEventParamSpecV0: {
    name: 'Text',
    indexed: 'bool',
    type: 'ContractTypeSpec',
    docs: 'Vec<Text>'
  },
  ContractEventParamSpecV2: {
    label: 'Text',
    indexed: 'bool',
    type: 'ContractTypeSpec',
    docs: 'Vec<Text>'
  },
  ContractEventSpecV0: {
    name: 'Text',
    args: 'Vec<ContractEventParamSpecV0>',
    docs: 'Vec<Text>'
  },
  ContractEventSpecV1: {
    name: 'Text',
    args: 'Vec<ContractEventParamSpecV0>',
    docs: 'Vec<Text>'
  },
  ContractEventSpecV2: {
    label: 'Text',
    args: 'Vec<ContractEventParamSpecV2>',
    docs: 'Vec<Text>'
  },
  ContractMessageParamSpecV0: {
    name: 'Text',
    type: 'ContractTypeSpec'
  },
  ContractMessageParamSpecV2: {
    label: 'Text',
    type: 'ContractTypeSpec'
  },
  ContractMessageSpecV0: {
    name: 'Text',
    selector: 'ContractSelector',
    mutates: 'bool',
    payable: 'bool',
    args: 'Vec<ContractMessageParamSpecV0>',
    returnType: 'Option<ContractTypeSpec>',
    docs: 'Vec<Text>'
  },
  ContractMessageSpecV1: {
    name: 'Vec<Text>',
    selector: 'ContractSelector',
    mutates: 'bool',
    payable: 'bool',
    args: 'Vec<ContractMessageParamSpecV0>',
    returnType: 'Option<ContractTypeSpec>',
    docs: 'Vec<Text>'
  },
  ContractMessageSpecV2: {
    label: 'Text',
    selector: 'ContractSelector',
    mutates: 'bool',
    payable: 'bool',
    args: 'Vec<ContractMessageParamSpecV2>',
    returnType: 'Option<ContractTypeSpec>',
    docs: 'Vec<Text>'
  },
  ContractSelector: '[u8; 4]',
  ContractTypeSpec: {
    type: 'SiLookupTypeId',
    displayName: 'ContractDisplayName'
  }
};
var ContractMetadataV0 = {
  types: 'Vec<Si0Type>',
  spec: 'ContractContractSpecV0'
};
var ContractMetadataV1 = {
  types: 'Vec<PortableType>',
  spec: 'ContractContractSpecV1'
};
var ContractMetadataV2 = {
  types: 'Vec<PortableType>',
  spec: 'ContractContractSpecV2'
};
var ContractMetadataV3 = {
  types: 'Vec<PortableType>',
  spec: 'ContractContractSpecV3'
};
var ContractProjectInfo = {
  source: 'ContractProjectSource',
  contract: 'ContractProjectContract'
};
var latest = {
  ContractConstructorSpecLatest: 'ContractConstructorSpecV3',
  ContractEventSpecLatest: 'ContractEventSpecV2',
  ContractEventParamSpecLatest: 'ContractEventParamSpecV2',
  ContractMessageParamSpecLatest: 'ContractMessageParamSpecV2',
  ContractMessageSpecLatest: 'ContractMessageSpecV2',
  ContractMetadataLatest: 'ContractMetadataV3'
};
var _default = {
  rpc: {},
  types: (0, _util.objectSpread)({}, layout, spec, latest, {
    ContractProjectInfo: ContractProjectInfo,
    ContractMetadataV0: ContractMetadataV0,
    ContractMetadataV1: ContractMetadataV1,
    ContractMetadataV2: ContractMetadataV2,
    ContractMetadataV3: ContractMetadataV3,
    ContractMetadata: {
      _enum: {
        V0: 'ContractMetadataV0',
        V1: 'ContractMetadataV1',
        V2: 'ContractMetadataV2',
        V3: 'ContractMetadataV3'
      }
    },
    ContractProjectV0: (0, _util.objectSpread)({
      metadataVersion: 'Text'
    }, ContractProjectInfo, ContractMetadataV0),
    ContractProject: '(ContractProjectInfo, ContractMetadata)',
    ContractProjectContract: {
      _alias: {
        docs: 'documentation'
      },
      name: 'Text',
      version: 'Text',
      authors: 'Vec<Text>',
      description: 'Option<Text>',
      docs: 'Option<Text>',
      repository: 'Option<Text>',
      homepage: 'Option<Text>',
      license: 'Option<Text>'
    },
    ContractProjectSource: {
      _alias: {
        wasmHash: 'hash'
      },
      wasmHash: '[u8; 32]',
      language: 'Text',
      compiler: 'Text',
      wasm: 'Raw'
    }
  })
};
exports.default = _default;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types/interfaces/eth/rpc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rpc = void 0;

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// As per frontier
// We use aliasSection here to override since these are in another namespace
var netRpc = {
  listening: {
    aliasSection: 'net',
    description: 'Returns true if client is actively listening for network connections. Otherwise false.',
    params: [],
    type: 'bool'
  },
  peerCount: {
    aliasSection: 'net',
    description: 'Returns number of peers connected to node.',
    params: [],
    type: 'String'
  },
  version: {
    aliasSection: 'net',
    description: 'Returns protocol version.',
    params: [],
    type: 'String'
  }
};
var web3Rpc = {
  clientVersion: {
    aliasSection: 'web3',
    description: 'Returns current client version.',
    params: [],
    type: 'String'
  },
  sha3: {
    aliasSection: 'web3',
    description: 'Returns sha3 of the given data',
    params: [{
      name: 'data',
      type: 'Bytes'
    }],
    type: 'H256'
  }
};
var rpc = (0, _util.objectSpread)({}, netRpc, web3Rpc, {
  accounts: {
    description: 'Returns accounts list.',
    params: [],
    type: 'Vec<H160>'
  },
  blockNumber: {
    description: 'Returns the blockNumber',
    params: [],
    type: 'U256'
  },
  call: {
    description: 'Call contract, returning the output data.',
    params: [{
      name: 'request',
      type: 'EthCallRequest'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'number',
      type: 'BlockNumber'
    }],
    type: 'Bytes'
  },
  chainId: {
    description: 'Returns the chain ID used for transaction signing at the current best block. None is returned if not available.',
    params: [],
    type: 'U64'
  },
  coinbase: {
    description: 'Returns block author.',
    params: [],
    type: 'H160'
  },
  estimateGas: {
    description: 'Estimate gas needed for execution of given contract.',
    params: [{
      name: 'request',
      type: 'EthCallRequest'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'number',
      type: 'BlockNumber'
    }],
    type: 'U256'
  },
  feeHistory: {
    description: 'Returns fee history for given block count & reward percentiles',
    params: [{
      name: 'blockCount',
      type: 'U256'
    }, {
      name: 'newestBlock',
      type: 'BlockNumber'
    }, {
      name: 'rewardPercentiles',
      type: 'Option<Vec<f64>>'
    }],
    type: 'EthFeeHistory'
  },
  gasPrice: {
    description: 'Returns current gas price.',
    params: [],
    type: 'U256'
  },
  getBalance: {
    description: 'Returns balance of the given account.',
    params: [{
      name: 'address',
      type: 'H160'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'number',
      type: 'BlockNumber'
    }],
    type: 'U256'
  },
  getBlockByHash: {
    description: 'Returns block with given hash.',
    params: [{
      name: 'hash',
      type: 'H256'
    }, {
      name: 'full',
      type: 'bool'
    }],
    type: 'Option<EthRichBlock>'
  },
  getBlockByNumber: {
    description: 'Returns block with given number.',
    params: [{
      name: 'block',
      type: 'BlockNumber'
    }, {
      name: 'full',
      type: 'bool'
    }],
    type: 'Option<EthRichBlock>'
  },
  getBlockTransactionCountByHash: {
    description: 'Returns the number of transactions in a block with given hash.',
    params: [{
      name: 'hash',
      type: 'H256'
    }],
    type: 'U256'
  },
  getBlockTransactionCountByNumber: {
    description: 'Returns the number of transactions in a block with given block number.',
    params: [{
      name: 'block',
      type: 'BlockNumber'
    }],
    type: 'U256'
  },
  getCode: {
    description: 'Returns the code at given address at given time (block number).',
    params: [{
      name: 'address',
      type: 'H160'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'number',
      type: 'BlockNumber'
    }],
    type: 'Bytes'
  },
  getFilterChanges: {
    description: 'Returns filter changes since last poll.',
    params: [{
      name: 'index',
      type: 'U256'
    }],
    type: 'EthFilterChanges'
  },
  getFilterLogs: {
    description: 'Returns all logs matching given filter (in a range \'from\' - \'to\').',
    params: [{
      name: 'index',
      type: 'U256'
    }],
    type: 'Vec<EthLog>'
  },
  getLogs: {
    description: 'Returns logs matching given filter object.',
    params: [{
      name: 'filter',
      type: 'EthFilter'
    }],
    type: 'Vec<EthLog>'
  },
  getProof: {
    description: 'Returns proof for account and storage.',
    params: [{
      name: 'address',
      type: 'H160'
    }, {
      name: 'storageKeys',
      type: 'Vec<H256>'
    }, {
      name: 'number',
      type: 'BlockNumber'
    }],
    type: 'EthAccount'
  },
  getStorageAt: {
    description: 'Returns content of the storage at given address.',
    params: [{
      name: 'address',
      type: 'H160'
    }, {
      name: 'index',
      type: 'U256'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'number',
      type: 'BlockNumber'
    }],
    type: 'H256'
  },
  getTransactionByBlockHashAndIndex: {
    description: 'Returns transaction at given block hash and index.',
    params: [{
      name: 'hash',
      type: 'H256'
    }, {
      name: 'index',
      type: 'U256'
    }],
    type: 'EthTransaction'
  },
  getTransactionByBlockNumberAndIndex: {
    description: 'Returns transaction by given block number and index.',
    params: [{
      name: 'number',
      type: 'BlockNumber'
    }, {
      name: 'index',
      type: 'U256'
    }],
    type: 'EthTransaction'
  },
  getTransactionByHash: {
    description: 'Get transaction by its hash.',
    params: [{
      name: 'hash',
      type: 'H256'
    }],
    type: 'EthTransaction'
  },
  getTransactionCount: {
    description: 'Returns the number of transactions sent from given address at given time (block number).',
    params: [{
      name: 'hash',
      type: 'H256'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'number',
      type: 'BlockNumber'
    }],
    type: 'U256'
  },
  getTransactionReceipt: {
    description: 'Returns transaction receipt by transaction hash.',
    params: [{
      name: 'hash',
      type: 'H256'
    }],
    type: 'EthReceipt'
  },
  getUncleByBlockHashAndIndex: {
    description: 'Returns an uncles at given block and index.',
    params: [{
      name: 'hash',
      type: 'H256'
    }, {
      name: 'index',
      type: 'U256'
    }],
    type: 'EthRichBlock'
  },
  getUncleByBlockNumberAndIndex: {
    description: 'Returns an uncles at given block and index.',
    params: [{
      name: 'number',
      type: 'BlockNumber'
    }, {
      name: 'index',
      type: 'U256'
    }],
    type: 'EthRichBlock'
  },
  getUncleCountByBlockHash: {
    description: 'Returns the number of uncles in a block with given hash.',
    params: [{
      name: 'hash',
      type: 'H256'
    }],
    type: 'U256'
  },
  getUncleCountByBlockNumber: {
    description: 'Returns the number of uncles in a block with given block number.',
    params: [{
      name: 'number',
      type: 'BlockNumber'
    }],
    type: 'U256'
  },
  getWork: {
    description: 'Returns the hash of the current block, the seedHash, and the boundary condition to be met.',
    params: [],
    type: 'EthWork'
  },
  hashrate: {
    description: 'Returns the number of hashes per second that the node is mining with.',
    params: [],
    type: 'U256'
  },
  maxPriorityFeePerGas: {
    description: 'Returns max priority fee per gas',
    params: [],
    type: 'U256'
  },
  mining: {
    description: 'Returns true if client is actively mining new blocks.',
    params: [],
    type: 'bool'
  },
  newBlockFilter: {
    description: 'Returns id of new block filter.',
    params: [],
    type: 'U256'
  },
  newFilter: {
    description: 'Returns id of new filter.',
    params: [{
      name: 'filter',
      type: 'EthFilter'
    }],
    type: 'U256'
  },
  newPendingTransactionFilter: {
    description: 'Returns id of new block filter.',
    params: [],
    type: 'U256'
  },
  protocolVersion: {
    description: 'Returns protocol version encoded as a string (quotes are necessary).',
    params: [],
    type: 'u64'
  },
  sendRawTransaction: {
    description: 'Sends signed transaction, returning its hash.',
    params: [{
      name: 'bytes',
      type: 'Bytes'
    }],
    type: 'H256'
  },
  sendTransaction: {
    description: 'Sends transaction; will block waiting for signer to return the transaction hash',
    params: [{
      name: 'tx',
      type: 'EthTransactionRequest'
    }],
    type: 'H256'
  },
  submitHashrate: {
    description: 'Used for submitting mining hashrate.',
    params: [{
      name: 'index',
      type: 'U256'
    }, {
      name: 'hash',
      type: 'H256'
    }],
    type: 'bool'
  },
  submitWork: {
    description: 'Used for submitting a proof-of-work solution.',
    params: [{
      name: 'nonce',
      type: 'H64'
    }, {
      name: 'headerHash',
      type: 'H256'
    }, {
      name: 'mixDigest',
      type: 'H256'
    }],
    type: 'bool'
  },
  subscribe: {
    description: 'Subscribe to Eth subscription.',
    params: [{
      name: 'kind',
      type: 'EthSubKind'
    }, {
      isOptional: true,
      name: 'params',
      type: 'EthSubParams'
    }],
    pubsub: ['subscription', 'subscribe', 'unsubscribe'],
    type: 'Null'
  },
  syncing: {
    description: 'Returns an object with data about the sync status or false.',
    params: [],
    type: 'EthSyncStatus'
  },
  uninstallFilter: {
    description: 'Uninstalls filter.',
    params: [{
      name: 'index',
      type: 'U256'
    }],
    type: 'bool'
  }
});
exports.rpc = rpc;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types/interfaces/eth/runtime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.runtime = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var runtime = {
  ConvertTransactionRuntimeApi: [{
    methods: {
      convert_transaction: {
        description: 'Converts an Ethereum-style transaction to Extrinsic',
        params: [{
          name: 'transaction',
          type: 'TransactionV2'
        }],
        type: 'Extrinsic'
      }
    },
    version: 2
  }],
  EthereumRuntimeRPCApi: [{
    methods: {
      account_basic: {
        description: 'Returns pallet_evm::Accounts by address.',
        params: [{
          name: 'address',
          type: 'H160'
        }],
        type: 'EvmAccount'
      },
      account_code_at: {
        description: 'For a given account address, returns pallet_evm::AccountCodes.',
        params: [{
          name: 'address',
          type: 'H160'
        }],
        type: 'Bytes'
      },
      author: {
        description: 'Returns the converted FindAuthor::find_author authority id.',
        params: [],
        type: 'H160'
      },
      call: {
        description: 'Returns a frame_ethereum::call response. If `estimate` is true,',
        params: [{
          name: 'from',
          type: 'H160'
        }, {
          name: 'to',
          type: 'H160'
        }, {
          name: 'data',
          type: 'Vec<u8>'
        }, {
          name: 'value',
          type: 'U256'
        }, {
          name: 'gasLimit',
          type: 'U256'
        }, {
          name: 'maxFeePerGas',
          type: 'Option<U256>'
        }, {
          name: 'maxPriorityFeePerGas',
          type: 'Option<U256>'
        }, {
          name: 'nonce',
          type: 'Option<U256>'
        }, {
          name: 'estimate',
          type: 'bool'
        }, {
          name: 'accessList',
          type: 'Option<Vec<(H160, Vec<H256>)>>'
        }],
        type: 'Result<EvmCallInfo, DispatchError>'
      },
      chain_id: {
        description: 'Returns runtime defined pallet_evm::ChainId.',
        params: [],
        type: 'u64'
      },
      create: {
        description: 'Returns a frame_ethereum::call response. If `estimate` is true,',
        params: [{
          name: 'from',
          type: 'H160'
        }, {
          name: 'data',
          type: 'Vec<u8>'
        }, {
          name: 'value',
          type: 'U256'
        }, {
          name: 'gasLimit',
          type: 'U256'
        }, {
          name: 'maxFeePerGas',
          type: 'Option<U256>'
        }, {
          name: 'maxPriorityFeePerGas',
          type: 'Option<U256>'
        }, {
          name: 'nonce',
          type: 'Option<U256>'
        }, {
          name: 'estimate',
          type: 'bool'
        }, {
          name: 'accessList',
          type: 'Option<Vec<(H160, Vec<H256>)>>'
        }],
        type: 'Result<EvmCreateInfo, DispatchError>'
      },
      current_all: {
        description: 'Return all the current data for a block in a single runtime call.',
        params: [],
        type: '(Option<BlockV2>, Option<Vec<ReceiptV0>>, Option<Vec<TransactionStatus>>)'
      },
      current_block: {
        description: 'Return the current block.',
        params: [],
        type: 'BlockV2'
      },
      current_receipts: {
        description: 'Return the current receipt.',
        params: [],
        type: 'Option<Vec<EthReceiptV3>>'
      },
      current_transaction_statuses: {
        description: 'Return the current transaction status.',
        params: [],
        type: 'Option<Vec<EthTransactionStatus>>'
      },
      elasticity: {
        description: 'Return the elasticity multiplier.',
        params: [],
        type: 'Option<Permill>'
      },
      extrinsic_filter: {
        description: 'Receives a `Vec<OpaqueExtrinsic>` and filters all the ethereum transactions.',
        params: [{
          name: 'xts',
          type: 'Vec<Extrinsic>'
        }],
        type: 'Vec<TransactionV2>'
      },
      gas_price: {
        description: 'Returns FixedGasPrice::min_gas_price',
        params: [],
        type: 'u256'
      },
      storage_at: {
        description: 'For a given account address and index, returns pallet_evm::AccountStorages.',
        params: [{
          name: 'address',
          type: 'H160'
        }, {
          name: 'index',
          type: 'u256'
        }],
        type: 'H256'
      }
    },
    version: 4
  }]
};
exports.runtime = runtime;
},{}],"node_modules/@polkadot/types/interfaces/eth/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _util = require("@polkadot/util");

var _rpc = require("./rpc.js");

var _runtime = require("./runtime.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
// As per frontier
var V0 = {
  BlockV0: {
    header: 'EthHeader',
    transactions: 'Vec<TransactionV0>',
    ommers: 'Vec<EthHeader>'
  },
  LegacyTransaction: {
    nonce: 'U256',
    gasPrice: 'U256',
    gasLimit: 'U256',
    action: 'EthTransactionAction',
    value: 'U256',
    input: 'Bytes',
    signature: 'EthTransactionSignature'
  },
  TransactionV0: 'LegacyTransaction'
};
var V1 = {
  BlockV1: {
    header: 'EthHeader',
    transactions: 'Vec<TransactionV1>',
    ommers: 'Vec<EthHeader>'
  },
  EIP2930Transaction: {
    chainId: 'u64',
    nonce: 'U256',
    gasPrice: 'U256',
    gasLimit: 'U256',
    action: 'EthTransactionAction',
    value: 'U256',
    input: 'Bytes',
    accessList: 'EthAccessList',
    oddYParity: 'bool',
    r: 'H256',
    s: 'H256'
  },
  TransactionV1: {
    _enum: {
      Legacy: 'LegacyTransaction',
      EIP2930: 'EIP2930Transaction'
    }
  }
};
var V2 = {
  BlockV2: {
    header: 'EthHeader',
    transactions: 'Vec<TransactionV2>',
    ommers: 'Vec<EthHeader>'
  },
  EIP1559Transaction: {
    chainId: 'u64',
    nonce: 'U256',
    maxPriorityFeePerGas: 'U256',
    maxFeePerGas: 'U256',
    gasLimit: 'U256',
    action: 'EthTransactionAction',
    value: 'U256',
    input: 'Bytes',
    accessList: 'EthAccessList',
    oddYParity: 'bool',
    r: 'H256',
    s: 'H256'
  },
  TransactionV2: {
    _enum: {
      Legacy: 'LegacyTransaction',
      EIP2930: 'EIP2930Transaction',
      EIP1559: 'EIP1559Transaction'
    }
  }
};
var types = (0, _util.objectSpread)({}, V0, V1, V2, {
  EthereumAccountId: 'GenericEthereumAccountId',
  EthereumAddress: 'GenericEthereumAccountId',
  EthereumLookupSource: 'GenericEthereumLookupSource',
  EthereumSignature: '[u8; 65]',
  EthAccessListItem: {
    address: 'EthAddress',
    slots: 'Vec<H256>'
  },
  EthAccessList: 'Vec<EthAccessListItem>',
  EthAccount: {
    address: 'EthAddress',
    balance: 'U256',
    nonce: 'U256',
    codeHash: 'H256',
    storageHash: 'H256',
    accountProof: 'Vec<Bytes>',
    storageProof: 'Vec<EthStorageProof>'
  },
  EthAddress: 'H160',
  EthBlock: {
    header: 'EthHeader',
    transactions: 'Vec<EthTransaction>',
    ommers: 'Vec<EthHeader>'
  },
  EthHeader: {
    parentHash: 'H256',
    ommersHash: 'H256',
    beneficiary: 'EthAddress',
    stateRoot: 'H256',
    transactionsRoot: 'H256',
    receiptsRoot: 'H256',
    logsBloom: 'EthBloom',
    difficulty: 'U256',
    number: 'U256',
    gasLimit: 'U256',
    gasUsed: 'U256',
    timestamp: 'u64',
    extraData: 'Bytes',
    mixMash: 'H256',
    nonce: 'H64'
  },
  EthRichBlock: {
    _alias: {
      blockHash: 'hash',
      blockSize: 'size'
    },
    blockHash: 'Option<H256>',
    parentHash: 'H256',
    sha3Uncles: 'H256',
    author: 'EthAddress',
    miner: 'EthAddress',
    stateRoot: 'H256',
    transactionsRoot: 'H256',
    receiptsRoot: 'H256',
    number: 'Option<U256>',
    gasUsed: 'U256',
    gasLimit: 'U256',
    extraData: 'Bytes',
    logsBloom: 'EthBloom',
    timestamp: 'U256',
    difficulty: 'U256',
    totalDifficulty: 'Option<U256>',
    sealFields: 'Vec<Bytes>',
    uncles: 'Vec<H256>',
    transactions: 'Vec<EthTransaction>',
    blockSize: 'Option<U256>'
  },
  EthBloom: 'H2048',
  EthCallRequest: {
    from: 'Option<EthAddress>',
    to: 'Option<EthAddress>',
    gasPrice: 'Option<U256>',
    gas: 'Option<U256>',
    value: 'Option<U256>',
    data: 'Option<Bytes>',
    nonce: 'Option<U256>'
  },
  EthFeeHistory: {
    oldestBlock: 'U256',
    baseFeePerGas: 'Vec<U256>',
    gasUsedRatio: 'Vec<f64>',
    reward: 'Option<Vec<Vec<U256>>>'
  },
  EthFilter: {
    fromBlock: 'Option<BlockNumber>',
    toBlock: 'Option<BlockNumber>',
    blockHash: 'Option<H256>',
    address: 'Option<EthFilterAddress>',
    topics: 'Option<EthFilterTopic>'
  },
  EthFilterAddress: {
    _enum: {
      Single: 'EthAddress',
      Multiple: 'Vec<EthAddress>',
      Null: 'Null'
    }
  },
  EthFilterChanges: {
    _enum: {
      Logs: 'Vec<EthLog>',
      Hashes: 'Vec<H256>',
      Empty: 'Null'
    }
  },
  EthFilterTopic: {
    _enum: {
      Single: 'EthFilterTopicInner',
      Multiple: 'Vec<EthFilterTopicInner>',
      Null: 'Null'
    }
  },
  EthFilterTopicEntry: 'Option<H256>',
  EthFilterTopicInner: {
    _enum: {
      Single: 'EthFilterTopicEntry',
      Multiple: 'Vec<EthFilterTopicEntry>',
      Null: 'Null'
    }
  },
  EthRichHeader: {
    _alias: {
      blockHash: 'hash',
      blockSize: 'size'
    },
    blockHash: 'Option<H256>',
    parentHash: 'H256',
    sha3Uncles: 'H256',
    author: 'EthAddress',
    miner: 'EthAddress',
    stateRoot: 'H256',
    transactionsRoot: 'H256',
    receiptsRoot: 'H256',
    number: 'Option<U256>',
    gasUsed: 'U256',
    gasLimit: 'U256',
    extraData: 'Bytes',
    logsBloom: 'EthBloom',
    timestamp: 'U256',
    difficulty: 'U256',
    sealFields: 'Vec<Bytes>',
    blockSize: 'Option<U256>'
  },
  EthLog: {
    address: 'EthAddress',
    topics: 'Vec<H256>',
    data: 'Bytes',
    blockHash: 'Option<H256>',
    blockNumber: 'Option<U256>',
    transactionHash: 'Option<H256>',
    transactionIndex: 'Option<U256>',
    logIndex: 'Option<U256>',
    transactionLogIndex: 'Option<U256>',
    removed: 'bool'
  },
  EthReceipt: {
    transactionHash: 'Option<H256>',
    transactionIndex: 'Option<U256>',
    blockHash: 'Option<H256>',
    from: 'Option<EthAddress>',
    to: 'Option<EthAddress>',
    blockNumber: 'Option<U256>',
    cumulativeGasUsed: 'U256',
    gasUsed: 'Option<U256>',
    contractAddress: 'Option<EthAddress>',
    logs: 'Vec<EthLog>',
    root: 'Option<H256>',
    logsBloom: 'EthBloom',
    statusCode: 'Option<U64>'
  },
  // not convinced, however the original commit matches, so... (maybe V3 is incorrect?)
  EthReceiptV0: 'EthReceipt',
  EthReceiptV3: 'EthReceipt',
  EthStorageProof: {
    key: 'U256',
    value: 'U256',
    proof: 'Vec<Bytes>'
  },
  EthSubKind: {
    _enum: ['newHeads', 'logs', 'newPendingTransactions', 'syncing']
  },
  EthSubParams: {
    _enum: {
      None: 'Null',
      Logs: 'EthFilter'
    }
  },
  EthSubResult: {
    _enum: {
      Header: 'EthRichHeader',
      Log: 'EthLog',
      TransactionHash: 'H256',
      SyncState: 'EthSyncStatus'
    }
  },
  EthSyncInfo: {
    startingBlock: 'U256',
    currentBlock: 'U256',
    highestBlock: 'U256',
    warpChunksAmount: 'Option<U256>',
    warpChunksProcessed: 'Option<U256>'
  },
  EthSyncStatus: {
    _enum: {
      Info: 'EthSyncInfo',
      None: 'Null'
    }
  },
  EthTransaction: 'LegacyTransaction',
  EthTransactionSignature: {
    v: 'u64',
    r: 'H256',
    s: 'H256'
  },
  EthTransactionAction: {
    _enum: {
      Call: 'H160',
      Create: 'Null'
    }
  },
  EthTransactionCondition: {
    _enum: {
      block: 'u64',
      time: 'u64'
    }
  },
  EthTransactionRequest: {
    from: 'Option<EthAddress>',
    to: 'Option<EthAddress>',
    gasPrice: 'Option<U256>',
    gas: 'Option<U256>',
    value: 'Option<U256>',
    data: 'Option<Bytes>',
    nonce: 'Option<U256>'
  },
  EthTransactionStatus: {
    transactionHash: 'H256',
    transactionIndex: 'u32',
    from: 'EthAddress',
    to: 'Option<EthAddress>',
    contractAddress: 'Option<EthAddress>',
    logs: 'Vec<EthLog>',
    logsBloom: 'EthBloom'
  },
  EthWork: {
    powHash: 'H256',
    seedHash: 'H256',
    target: 'H256',
    number: 'Option<u64>'
  }
});
var _default = {
  rpc: _rpc.rpc,
  runtime: _runtime.runtime,
  types: types
};
exports.default = _default;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./rpc.js":"node_modules/@polkadot/types/interfaces/eth/rpc.js","./runtime.js":"node_modules/@polkadot/types/interfaces/eth/runtime.js"}],"node_modules/@polkadot/types/interfaces/ormlOracle/runtime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.runtime = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var runtime = {
  // https://github.com/open-web3-stack/open-runtime-module-library/blob/b57f88b39cd547e2fb51727d8bb9bcc64fddf8b5/oracle/rpc/runtime-api/src/lib.rs#L12-L21
  OracleApi: [{
    methods: {
      get_all_values: {
        description: 'Retrieves all values',
        params: [{
          name: 'providerId',
          // This is a Codec type
          type: 'Raw'
        }],
        // This won't actually work as expected - since we have
        // no information about the actual Raw sizes, we cannot
        // handle it in this format (it would need an override
        // for the specific Codec). So return the Raw value.
        // type: 'Vec<(Raw, Option<Raw>)>'
        type: 'Raw'
      },
      get_value: {
        description: 'Retrieves a single value',
        params: [{
          name: 'providerId',
          // This is a Codec type
          type: 'Raw'
        }, {
          name: 'key',
          // This is a Codec type
          type: 'Raw'
        }],
        // This is an Option<Codec> type
        type: 'Option<Raw>'
      }
    },
    version: 1
  }]
};
exports.runtime = runtime;
},{}],"node_modules/@polkadot/types/interfaces/ormlOracle/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _runtime = require("./runtime.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  runtime: _runtime.runtime,
  types: {}
};
exports.default = _default;
},{"./runtime.js":"node_modules/@polkadot/types/interfaces/ormlOracle/runtime.js"}],"node_modules/@polkadot/types/interfaces/ormlTokens/runtime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.runtime = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var runtime = {
  // https://github.com/open-web3-stack/open-runtime-module-library/blob/b57f88b39cd547e2fb51727d8bb9bcc64fddf8b5/tokens/rpc/runtime-api/src/lib.rs#L11-L18
  TokensApi: [{
    methods: {
      query_existential_deposit: {
        description: 'Query the existential amount for a specific currency',
        params: [{
          name: 'currencyId',
          // This is CurrencyId, as per the return value, we are unsure
          // if this is specialized and/or global to the chain or not
          type: 'Raw'
        }],
        // This is Balance - since we don't understand enough about the way
        // in which this is used, we default to u128 here (it certainly could
        // be a specialized type that doesn't map to the on-chain Balance)
        type: 'u128'
      }
    },
    version: 1
  }]
};
exports.runtime = runtime;
},{}],"node_modules/@polkadot/types/interfaces/ormlTokens/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _runtime = require("./runtime.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: {},
  runtime: _runtime.runtime,
  types: {}
};
exports.default = _default;
},{"./runtime.js":"node_modules/@polkadot/types/interfaces/ormlTokens/runtime.js"}],"node_modules/@polkadot/types/interfaces/rpc/rpc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rpc = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var rpc = {
  methods: {
    description: 'Retrieves the list of RPC methods that are exposed by the node',
    params: [],
    type: 'RpcMethods'
  }
};
exports.rpc = rpc;
},{}],"node_modules/@polkadot/types/interfaces/rpc/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _rpc = require("./rpc.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: _rpc.rpc,
  types: {
    RpcMethods: {
      version: 'u32',
      methods: 'Vec<Text>'
    }
  }
};
exports.default = _default;
},{"./rpc.js":"node_modules/@polkadot/types/interfaces/rpc/rpc.js"}],"node_modules/@polkadot/types/interfaces/author/rpc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rpc = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var rpc = {
  hasKey: {
    description: 'Returns true if the keystore has private keys for the given public key and key type.',
    params: [{
      name: 'publicKey',
      type: 'Bytes'
    }, {
      name: 'keyType',
      type: 'Text'
    }],
    type: 'bool'
  },
  hasSessionKeys: {
    description: 'Returns true if the keystore has private keys for the given session public keys.',
    params: [{
      name: 'sessionKeys',
      type: 'Bytes'
    }],
    type: 'bool'
  },
  insertKey: {
    description: 'Insert a key into the keystore.',
    params: [{
      name: 'keyType',
      type: 'Text'
    }, {
      name: 'suri',
      type: 'Text'
    }, {
      name: 'publicKey',
      type: 'Bytes'
    }],
    type: 'Bytes'
  },
  pendingExtrinsics: {
    description: 'Returns all pending extrinsics, potentially grouped by sender',
    params: [],
    type: 'Vec<Extrinsic>'
  },
  removeExtrinsic: {
    description: 'Remove given extrinsic from the pool and temporarily ban it to prevent reimporting',
    params: [{
      name: 'bytesOrHash',
      type: 'Vec<ExtrinsicOrHash>'
    }],
    type: 'Vec<Hash>'
  },
  rotateKeys: {
    description: 'Generate new session keys and returns the corresponding public keys',
    params: [],
    type: 'Bytes'
  },
  submitAndWatchExtrinsic: {
    description: 'Submit and subscribe to watch an extrinsic until unsubscribed',
    isSigned: true,
    params: [{
      name: 'extrinsic',
      type: 'Extrinsic'
    }],
    pubsub: ['extrinsicUpdate', 'submitAndWatchExtrinsic', 'unwatchExtrinsic'],
    type: 'ExtrinsicStatus'
  },
  submitExtrinsic: {
    description: 'Submit a fully formatted extrinsic for block inclusion',
    isSigned: true,
    params: [{
      name: 'extrinsic',
      type: 'Extrinsic'
    }],
    type: 'Hash'
  }
};
exports.rpc = rpc;
},{}],"node_modules/@polkadot/types/interfaces/author/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _rpc = require("./rpc.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: _rpc.rpc,
  types: {
    ExtrinsicOrHash: {
      _enum: {
        Hash: 'Hash',
        Extrinsic: 'Bytes'
      }
    },
    ExtrinsicStatus: {
      _enum: {
        Future: 'Null',
        Ready: 'Null',
        Broadcast: 'Vec<Text>',
        InBlock: 'Hash',
        Retracted: 'Hash',
        FinalityTimeout: 'Hash',
        Finalized: 'Hash',
        Usurped: 'Hash',
        Dropped: 'Null',
        Invalid: 'Null'
      }
    }
  }
};
exports.default = _default;
},{"./rpc.js":"node_modules/@polkadot/types/interfaces/author/rpc.js"}],"node_modules/@polkadot/types/interfaces/chain/rpc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rpc = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var rpc = {
  getBlock: {
    description: 'Get header and body of a relay chain block',
    params: [{
      isHistoric: true,
      isOptional: true,
      name: 'hash',
      type: 'BlockHash'
    }],
    type: 'SignedBlock'
  },
  getBlockHash: {
    description: 'Get the block hash for a specific block',
    params: [{
      isOptional: true,
      name: 'blockNumber',
      type: 'BlockNumber'
    }],
    type: 'BlockHash'
  },
  getFinalizedHead: {
    alias: ['chain_getFinalisedHead'],
    description: 'Get hash of the last finalized block in the canon chain',
    params: [],
    type: 'BlockHash'
  },
  getHeader: {
    alias: ['chain_getHead'],
    description: 'Retrieves the header for a specific block',
    params: [{
      isHistoric: true,
      isOptional: true,
      name: 'hash',
      type: 'BlockHash'
    }],
    type: 'Header'
  },
  subscribeAllHeads: {
    description: 'Retrieves the newest header via subscription',
    params: [],
    pubsub: ['allHead', 'subscribeAllHeads', 'unsubscribeAllHeads'],
    type: 'Header'
  },
  subscribeFinalizedHeads: {
    alias: ['chain_subscribeFinalisedHeads', 'chain_unsubscribeFinalisedHeads'],
    description: 'Retrieves the best finalized header via subscription',
    params: [],
    pubsub: ['finalizedHead', 'subscribeFinalizedHeads', 'unsubscribeFinalizedHeads'],
    type: 'Header'
  },
  subscribeNewHeads: {
    alias: ['chain_unsubscribeNewHeads', 'subscribe_newHead', 'unsubscribe_newHead'],
    description: 'Retrieves the best header via subscription',
    params: [],
    // NOTE These still has the aliassed version, compatible with 1.x
    pubsub: ['newHead', 'subscribeNewHead', 'unsubscribeNewHead'],
    type: 'Header'
  }
};
exports.rpc = rpc;
},{}],"node_modules/@polkadot/types/interfaces/chain/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _rpc = require("./rpc.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: _rpc.rpc,
  types: {
    BlockHash: 'Hash'
  }
};
exports.default = _default;
},{"./rpc.js":"node_modules/@polkadot/types/interfaces/chain/rpc.js"}],"node_modules/@polkadot/types/interfaces/childstate/rpc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rpc = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var rpc = {
  getKeys: {
    description: 'Returns the keys with prefix from a child storage, leave empty to get all the keys',
    params: [{
      name: 'childKey',
      type: 'PrefixedStorageKey'
    }, {
      name: 'prefix',
      type: 'StorageKey'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'Hash'
    }],
    type: 'Vec<StorageKey>'
  },
  getKeysPaged: {
    alias: ['childstate_getKeysPagedAt'],
    description: 'Returns the keys with prefix from a child storage with pagination support',
    params: [{
      name: 'childKey',
      type: 'PrefixedStorageKey'
    }, {
      name: 'prefix',
      type: 'StorageKey'
    }, {
      name: 'count',
      type: 'u32'
    }, {
      isOptional: true,
      name: 'startKey',
      type: 'StorageKey'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'Hash'
    }],
    type: 'Vec<StorageKey>'
  },
  getStorage: {
    description: 'Returns a child storage entry at a specific block state',
    params: [{
      name: 'childKey',
      type: 'PrefixedStorageKey'
    }, {
      name: 'key',
      type: 'StorageKey'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'Hash'
    }],
    type: 'Option<StorageData>'
  },
  getStorageEntries: {
    description: 'Returns child storage entries for multiple keys at a specific block state',
    params: [{
      name: 'childKey',
      type: 'PrefixedStorageKey'
    }, {
      name: 'keys',
      type: 'Vec<StorageKey>'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'Hash'
    }],
    type: 'Vec<Option<StorageData>>'
  },
  getStorageHash: {
    description: 'Returns the hash of a child storage entry at a block state',
    params: [{
      name: 'childKey',
      type: 'PrefixedStorageKey'
    }, {
      name: 'key',
      type: 'StorageKey'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'Hash'
    }],
    type: 'Option<Hash>'
  },
  getStorageSize: {
    description: 'Returns the size of a child storage entry at a block state',
    params: [{
      name: 'childKey',
      type: 'PrefixedStorageKey'
    }, {
      name: 'key',
      type: 'StorageKey'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'Hash'
    }],
    type: 'Option<u64>'
  }
};
exports.rpc = rpc;
},{}],"node_modules/@polkadot/types/interfaces/childstate/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _rpc = require("./rpc.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: _rpc.rpc,
  types: {
    // StorageKey extends Bytes
    PrefixedStorageKey: 'StorageKey'
  }
};
exports.default = _default;
},{"./rpc.js":"node_modules/@polkadot/types/interfaces/childstate/rpc.js"}],"node_modules/@polkadot/types/interfaces/offchain/rpc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rpc = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var rpc = {
  localStorageGet: {
    description: 'Get offchain local storage under given key and prefix',
    params: [{
      name: 'kind',
      type: 'StorageKind'
    }, {
      name: 'key',
      type: 'Bytes'
    }],
    type: 'Option<Bytes>'
  },
  localStorageSet: {
    description: 'Set offchain local storage under given key and prefix',
    params: [{
      name: 'kind',
      type: 'StorageKind'
    }, {
      name: 'key',
      type: 'Bytes'
    }, {
      name: 'value',
      type: 'Bytes'
    }],
    type: 'Null'
  }
};
exports.rpc = rpc;
},{}],"node_modules/@polkadot/types/interfaces/offchain/runtime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.runtime = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var runtime = {
  OffchainWorkerApi: [{
    methods: {
      offchain_worker: {
        description: 'Starts the off-chain task for given block header.',
        params: [{
          name: 'header',
          type: 'Header'
        }],
        type: 'Null'
      }
    },
    version: 2
  }, {
    methods: {
      offchain_worker: {
        description: 'Starts the off-chain task for given block header.',
        params: [{
          name: 'number',
          type: 'BlockNumber'
        }],
        type: 'Null'
      }
    },
    version: 1
  }]
};
exports.runtime = runtime;
},{}],"node_modules/@polkadot/types/interfaces/offchain/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _rpc = require("./rpc.js");

var _runtime = require("./runtime.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: _rpc.rpc,
  runtime: _runtime.runtime,
  types: {
    StorageKind: {
      _enum: {
        PERSISTENT: 1,
        LOCAL: 2
      }
    }
  }
};
exports.default = _default;
},{"./rpc.js":"node_modules/@polkadot/types/interfaces/offchain/rpc.js","./runtime.js":"node_modules/@polkadot/types/interfaces/offchain/runtime.js"}],"node_modules/@polkadot/types/interfaces/payment/rpc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rpc = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var rpc = {
  queryFeeDetails: {
    description: 'Query the detailed fee of a given encoded extrinsic',
    params: [{
      name: 'extrinsic',
      type: 'Bytes'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'BlockHash'
    }],
    type: 'FeeDetails'
  },
  queryInfo: {
    description: 'Retrieves the fee information for an encoded extrinsic',
    params: [{
      name: 'extrinsic',
      type: 'Bytes'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'BlockHash'
    }],
    type: 'RuntimeDispatchInfo'
  }
};
exports.rpc = rpc;
},{}],"node_modules/@polkadot/types/interfaces/payment/runtime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.runtime = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var runtime = {
  TransactionPaymentApi: [{
    methods: {
      query_fee_details: {
        description: 'The transaction fee details',
        params: [{
          name: 'uxt',
          type: 'Extrinsic'
        }, {
          name: 'len',
          type: 'u32'
        }],
        type: 'FeeDetails'
      },
      query_info: {
        description: 'The transaction info',
        params: [{
          name: 'uxt',
          type: 'Extrinsic'
        }, {
          name: 'len',
          type: 'u32'
        }],
        type: 'RuntimeDispatchInfo'
      }
    },
    version: 1
  }]
};
exports.runtime = runtime;
},{}],"node_modules/@polkadot/types/interfaces/payment/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _rpc = require("./rpc.js");

var _runtime = require("./runtime.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: _rpc.rpc,
  runtime: _runtime.runtime,
  types: {
    FeeDetails: {
      inclusionFee: 'Option<InclusionFee>' // skipped in serde
      // tip: 'Balance'

    },
    InclusionFee: {
      baseFee: 'Balance',
      lenFee: 'Balance',
      adjustedWeightFee: 'Balance'
    },
    RuntimeDispatchInfo: {
      weight: 'Weight',
      class: 'DispatchClass',
      partialFee: 'Balance'
    }
  }
};
exports.default = _default;
},{"./rpc.js":"node_modules/@polkadot/types/interfaces/payment/rpc.js","./runtime.js":"node_modules/@polkadot/types/interfaces/payment/runtime.js"}],"node_modules/@polkadot/types/interfaces/state/rpc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rpc = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var rpc = {
  call: {
    alias: ['state_callAt'],
    description: 'Perform a call to a builtin on the chain',
    params: [{
      name: 'method',
      type: 'Text'
    }, {
      name: 'data',
      type: 'Bytes'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'BlockHash'
    }],
    type: 'Bytes'
  },
  getChildKeys: {
    description: 'Retrieves the keys with prefix of a specific child storage',
    params: [{
      name: 'childStorageKey',
      type: 'StorageKey'
    }, {
      name: 'childDefinition',
      type: 'StorageKey'
    }, {
      name: 'childType',
      type: 'u32'
    }, {
      name: 'key',
      type: 'StorageKey'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'BlockHash'
    }],
    type: 'Vec<StorageKey>'
  },
  getChildReadProof: {
    description: 'Returns proof of storage for child key entries at a specific block state.',
    params: [{
      name: 'childStorageKey',
      type: 'PrefixedStorageKey'
    }, {
      name: 'keys',
      type: 'Vec<StorageKey>'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'BlockHash'
    }],
    type: 'ReadProof'
  },
  getChildStorage: {
    description: 'Retrieves the child storage for a key',
    params: [{
      name: 'childStorageKey',
      type: 'StorageKey'
    }, {
      name: 'childDefinition',
      type: 'StorageKey'
    }, {
      name: 'childType',
      type: 'u32'
    }, {
      name: 'key',
      type: 'StorageKey'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'BlockHash'
    }],
    type: 'StorageData'
  },
  getChildStorageHash: {
    description: 'Retrieves the child storage hash',
    params: [{
      name: 'childStorageKey',
      type: 'StorageKey'
    }, {
      name: 'childDefinition',
      type: 'StorageKey'
    }, {
      name: 'childType',
      type: 'u32'
    }, {
      name: 'key',
      type: 'StorageKey'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'BlockHash'
    }],
    type: 'Hash'
  },
  getChildStorageSize: {
    description: 'Retrieves the child storage size',
    params: [{
      name: 'childStorageKey',
      type: 'StorageKey'
    }, {
      name: 'childDefinition',
      type: 'StorageKey'
    }, {
      name: 'childType',
      type: 'u32'
    }, {
      name: 'key',
      type: 'StorageKey'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'BlockHash'
    }],
    type: 'u64'
  },
  getKeys: {
    description: 'Retrieves the keys with a certain prefix',
    params: [{
      name: 'key',
      type: 'StorageKey'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'BlockHash'
    }],
    type: 'Vec<StorageKey>'
  },
  getKeysPaged: {
    alias: ['state_getKeysPagedAt'],
    description: 'Returns the keys with prefix with pagination support.',
    params: [{
      name: 'key',
      type: 'StorageKey'
    }, {
      name: 'count',
      type: 'u32'
    }, {
      isOptional: true,
      name: 'startKey',
      type: 'StorageKey'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'BlockHash'
    }],
    type: 'Vec<StorageKey>'
  },
  getMetadata: {
    description: 'Returns the runtime metadata',
    params: [{
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'BlockHash'
    }],
    type: 'Metadata'
  },
  getPairs: {
    description: 'Returns the keys with prefix, leave empty to get all the keys (deprecated: Use getKeysPaged)',
    params: [{
      name: 'prefix',
      type: 'StorageKey'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'BlockHash'
    }],
    type: 'Vec<KeyValue>'
  },
  getReadProof: {
    description: 'Returns proof of storage entries at a specific block state',
    params: [{
      name: 'keys',
      type: 'Vec<StorageKey>'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'BlockHash'
    }],
    type: 'ReadProof'
  },
  getRuntimeVersion: {
    alias: ['chain_getRuntimeVersion'],
    description: 'Get the runtime version',
    params: [{
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'BlockHash'
    }],
    type: 'RuntimeVersion'
  },
  getStorage: {
    alias: ['state_getStorageAt'],
    description: 'Retrieves the storage for a key',
    params: [{
      name: 'key',
      type: 'StorageKey'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'BlockHash'
    }],
    type: 'StorageData'
  },
  getStorageHash: {
    alias: ['state_getStorageHashAt'],
    description: 'Retrieves the storage hash',
    params: [{
      name: 'key',
      type: 'StorageKey'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'BlockHash'
    }],
    type: 'Hash'
  },
  getStorageSize: {
    alias: ['state_getStorageSizeAt'],
    description: 'Retrieves the storage size',
    params: [{
      name: 'key',
      type: 'StorageKey'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'BlockHash'
    }],
    type: 'u64'
  },
  queryStorage: {
    description: 'Query historical storage entries (by key) starting from a start block',
    params: [{
      name: 'keys',
      type: 'Vec<StorageKey>'
    }, {
      name: 'fromBlock',
      type: 'Hash'
    }, {
      isOptional: true,
      name: 'toBlock',
      type: 'BlockHash'
    }],
    type: 'Vec<StorageChangeSet>'
  },
  queryStorageAt: {
    description: 'Query storage entries (by key) starting at block hash given as the second parameter',
    params: [{
      name: 'keys',
      type: 'Vec<StorageKey>'
    }, {
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'BlockHash'
    }],
    type: 'Vec<StorageChangeSet>'
  },
  subscribeRuntimeVersion: {
    alias: ['chain_subscribeRuntimeVersion', 'chain_unsubscribeRuntimeVersion'],
    description: 'Retrieves the runtime version via subscription',
    params: [],
    pubsub: ['runtimeVersion', 'subscribeRuntimeVersion', 'unsubscribeRuntimeVersion'],
    type: 'RuntimeVersion'
  },
  subscribeStorage: {
    description: 'Subscribes to storage changes for the provided keys',
    params: [{
      isOptional: true,
      name: 'keys',
      type: 'Vec<StorageKey>'
    }],
    pubsub: ['storage', 'subscribeStorage', 'unsubscribeStorage'],
    type: 'StorageChangeSet'
  },
  traceBlock: {
    description: 'Provides a way to trace the re-execution of a single block',
    params: [{
      name: 'block',
      type: 'Hash'
    }, {
      name: 'targets',
      type: 'Option<Text>'
    }, {
      name: 'storageKeys',
      type: 'Option<Text>'
    }, {
      name: 'methods',
      type: 'Option<Text>'
    }],
    type: 'TraceBlockResponse'
  },
  trieMigrationStatus: {
    description: 'Check current migration state',
    params: [{
      isHistoric: true,
      isOptional: true,
      name: 'at',
      type: 'BlockHash'
    }],
    type: 'MigrationStatusResult'
  }
};
exports.rpc = rpc;
},{}],"node_modules/@polkadot/types/interfaces/state/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _rpc = require("./rpc.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
var _default = {
  rpc: _rpc.rpc,
  types: {
    ApiId: '[u8; 8]',
    BlockTrace: {
      blockHash: 'Text',
      parentHash: 'Text',
      tracingTargets: 'Text',
      storageKeys: 'Text',
      spans: 'Vec<BlockTraceSpan>',
      events: 'Vec<BlockTraceEvent>'
    },
    BlockTraceEvent: {
      target: 'Text',
      data: 'BlockTraceEventData',
      parentId: 'Option<u64>'
    },
    BlockTraceEventData: {
      stringValues: 'HashMap<Text, Text>'
    },
    BlockTraceSpan: {
      id: 'u64',
      parentId: 'Option<u64>',
      name: 'Text',
      target: 'Text',
      wasm: 'bool'
    },
    KeyValueOption: '(StorageKey, Option<StorageData>)',
    MigrationStatusResult: {
      topRemainingToMigrate: 'u64',
      childRemainingToMigrate: 'u64'
    },
    ReadProof: {
      at: 'Hash',
      proof: 'Vec<Bytes>'
    },
    RuntimeVersionApi: '(ApiId, u32)',
    RuntimeVersion: {
      specName: 'Text',
      implName: 'Text',
      authoringVersion: 'u32',
      specVersion: 'u32',
      implVersion: 'u32',
      apis: 'Vec<RuntimeVersionApi>',
      transactionVersion: 'u32',
      stateVersion: 'u8'
    },
    RuntimeVersionPre4: {
      specName: 'Text',
      implName: 'Text',
      authoringVersion: 'u32',
      specVersion: 'u32',
      implVersion: 'u32',
      apis: 'Vec<RuntimeVersionApi>',
      transactionVersion: 'u32'
    },
    RuntimeVersionPre3: {
      specName: 'Text',
      implName: 'Text',
      authoringVersion: 'u32',
      specVersion: 'u32',
      implVersion: 'u32',
      apis: 'Vec<RuntimeVersionApi>'
    },
    RuntimeVersionPartial: {
      specName: 'Text',
      specVersion: 'u32',
      apis: 'Vec<RuntimeVersionApi>'
    },
    SpecVersion: 'u32',
    StorageChangeSet: {
      block: 'Hash',
      changes: 'Vec<KeyValueOption>'
    },
    TraceBlockResponse: {
      _enum: {
        TraceError: 'TraceError',
        BlockTrace: 'BlockTrace'
      }
    },
    TraceError: {
      error: 'Text'
    }
  }
};
exports.default = _default;
},{"./rpc.js":"node_modules/@polkadot/types/interfaces/state/rpc.js"}],"node_modules/@polkadot/types/interfaces/definitions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  assets: true,
  authorship: true,
  aura: true,
  babe: true,
  balances: true,
  beefy: true,
  benchmark: true,
  blockbuilder: true,
  collective: true,
  consensus: true,
  contracts: true,
  democracy: true,
  dev: true,
  discovery: true,
  elections: true,
  engine: true,
  evm: true,
  extrinsics: true,
  genericAsset: true,
  gilt: true,
  grandpa: true,
  identity: true,
  imOnline: true,
  lottery: true,
  mmr: true,
  offences: true,
  pow: true,
  proxy: true,
  recovery: true,
  scheduler: true,
  session: true,
  society: true,
  staking: true,
  support: true,
  syncstate: true,
  system: true,
  treasury: true,
  txpayment: true,
  txqueue: true,
  uniques: true,
  utility: true,
  vesting: true,
  attestations: true,
  bridges: true,
  claims: true,
  crowdloan: true,
  cumulus: true,
  finality: true,
  parachains: true,
  poll: true,
  purchase: true,
  xcm: true,
  contractsAbi: true,
  eth: true,
  ormlOracle: true,
  ormlTokens: true,
  rpc: true,
  author: true,
  chain: true,
  childstate: true,
  offchain: true,
  payment: true,
  state: true
};
Object.defineProperty(exports, "assets", {
  enumerable: true,
  get: function () {
    return _definitions.default;
  }
});
Object.defineProperty(exports, "attestations", {
  enumerable: true,
  get: function () {
    return _definitions43.default;
  }
});
Object.defineProperty(exports, "aura", {
  enumerable: true,
  get: function () {
    return _definitions3.default;
  }
});
Object.defineProperty(exports, "author", {
  enumerable: true,
  get: function () {
    return _definitions58.default;
  }
});
Object.defineProperty(exports, "authorship", {
  enumerable: true,
  get: function () {
    return _definitions2.default;
  }
});
Object.defineProperty(exports, "babe", {
  enumerable: true,
  get: function () {
    return _definitions4.default;
  }
});
Object.defineProperty(exports, "balances", {
  enumerable: true,
  get: function () {
    return _definitions5.default;
  }
});
Object.defineProperty(exports, "beefy", {
  enumerable: true,
  get: function () {
    return _definitions6.default;
  }
});
Object.defineProperty(exports, "benchmark", {
  enumerable: true,
  get: function () {
    return _definitions7.default;
  }
});
Object.defineProperty(exports, "blockbuilder", {
  enumerable: true,
  get: function () {
    return _definitions8.default;
  }
});
Object.defineProperty(exports, "bridges", {
  enumerable: true,
  get: function () {
    return _definitions44.default;
  }
});
Object.defineProperty(exports, "chain", {
  enumerable: true,
  get: function () {
    return _definitions59.default;
  }
});
Object.defineProperty(exports, "childstate", {
  enumerable: true,
  get: function () {
    return _definitions60.default;
  }
});
Object.defineProperty(exports, "claims", {
  enumerable: true,
  get: function () {
    return _definitions45.default;
  }
});
Object.defineProperty(exports, "collective", {
  enumerable: true,
  get: function () {
    return _definitions9.default;
  }
});
Object.defineProperty(exports, "consensus", {
  enumerable: true,
  get: function () {
    return _definitions10.default;
  }
});
Object.defineProperty(exports, "contracts", {
  enumerable: true,
  get: function () {
    return _definitions11.default;
  }
});
Object.defineProperty(exports, "contractsAbi", {
  enumerable: true,
  get: function () {
    return _definitions53.default;
  }
});
Object.defineProperty(exports, "crowdloan", {
  enumerable: true,
  get: function () {
    return _definitions46.default;
  }
});
Object.defineProperty(exports, "cumulus", {
  enumerable: true,
  get: function () {
    return _definitions47.default;
  }
});
Object.defineProperty(exports, "democracy", {
  enumerable: true,
  get: function () {
    return _definitions12.default;
  }
});
Object.defineProperty(exports, "dev", {
  enumerable: true,
  get: function () {
    return _definitions13.default;
  }
});
Object.defineProperty(exports, "discovery", {
  enumerable: true,
  get: function () {
    return _definitions14.default;
  }
});
Object.defineProperty(exports, "elections", {
  enumerable: true,
  get: function () {
    return _definitions15.default;
  }
});
Object.defineProperty(exports, "engine", {
  enumerable: true,
  get: function () {
    return _definitions16.default;
  }
});
Object.defineProperty(exports, "eth", {
  enumerable: true,
  get: function () {
    return _definitions54.default;
  }
});
Object.defineProperty(exports, "evm", {
  enumerable: true,
  get: function () {
    return _definitions17.default;
  }
});
Object.defineProperty(exports, "extrinsics", {
  enumerable: true,
  get: function () {
    return _definitions18.default;
  }
});
Object.defineProperty(exports, "finality", {
  enumerable: true,
  get: function () {
    return _definitions48.default;
  }
});
Object.defineProperty(exports, "genericAsset", {
  enumerable: true,
  get: function () {
    return _definitions19.default;
  }
});
Object.defineProperty(exports, "gilt", {
  enumerable: true,
  get: function () {
    return _definitions20.default;
  }
});
Object.defineProperty(exports, "grandpa", {
  enumerable: true,
  get: function () {
    return _definitions21.default;
  }
});
Object.defineProperty(exports, "identity", {
  enumerable: true,
  get: function () {
    return _definitions22.default;
  }
});
Object.defineProperty(exports, "imOnline", {
  enumerable: true,
  get: function () {
    return _definitions23.default;
  }
});
Object.defineProperty(exports, "lottery", {
  enumerable: true,
  get: function () {
    return _definitions24.default;
  }
});
Object.defineProperty(exports, "mmr", {
  enumerable: true,
  get: function () {
    return _definitions25.default;
  }
});
Object.defineProperty(exports, "offchain", {
  enumerable: true,
  get: function () {
    return _definitions61.default;
  }
});
Object.defineProperty(exports, "offences", {
  enumerable: true,
  get: function () {
    return _definitions26.default;
  }
});
Object.defineProperty(exports, "ormlOracle", {
  enumerable: true,
  get: function () {
    return _definitions55.default;
  }
});
Object.defineProperty(exports, "ormlTokens", {
  enumerable: true,
  get: function () {
    return _definitions56.default;
  }
});
Object.defineProperty(exports, "parachains", {
  enumerable: true,
  get: function () {
    return _definitions49.default;
  }
});
Object.defineProperty(exports, "payment", {
  enumerable: true,
  get: function () {
    return _definitions62.default;
  }
});
Object.defineProperty(exports, "poll", {
  enumerable: true,
  get: function () {
    return _definitions50.default;
  }
});
Object.defineProperty(exports, "pow", {
  enumerable: true,
  get: function () {
    return _definitions27.default;
  }
});
Object.defineProperty(exports, "proxy", {
  enumerable: true,
  get: function () {
    return _definitions28.default;
  }
});
Object.defineProperty(exports, "purchase", {
  enumerable: true,
  get: function () {
    return _definitions51.default;
  }
});
Object.defineProperty(exports, "recovery", {
  enumerable: true,
  get: function () {
    return _definitions29.default;
  }
});
Object.defineProperty(exports, "rpc", {
  enumerable: true,
  get: function () {
    return _definitions57.default;
  }
});
Object.defineProperty(exports, "scheduler", {
  enumerable: true,
  get: function () {
    return _definitions30.default;
  }
});
Object.defineProperty(exports, "session", {
  enumerable: true,
  get: function () {
    return _definitions31.default;
  }
});
Object.defineProperty(exports, "society", {
  enumerable: true,
  get: function () {
    return _definitions32.default;
  }
});
Object.defineProperty(exports, "staking", {
  enumerable: true,
  get: function () {
    return _definitions33.default;
  }
});
Object.defineProperty(exports, "state", {
  enumerable: true,
  get: function () {
    return _definitions63.default;
  }
});
Object.defineProperty(exports, "support", {
  enumerable: true,
  get: function () {
    return _definitions34.default;
  }
});
Object.defineProperty(exports, "syncstate", {
  enumerable: true,
  get: function () {
    return _definitions35.default;
  }
});
Object.defineProperty(exports, "system", {
  enumerable: true,
  get: function () {
    return _definitions36.default;
  }
});
Object.defineProperty(exports, "treasury", {
  enumerable: true,
  get: function () {
    return _definitions37.default;
  }
});
Object.defineProperty(exports, "txpayment", {
  enumerable: true,
  get: function () {
    return _definitions38.default;
  }
});
Object.defineProperty(exports, "txqueue", {
  enumerable: true,
  get: function () {
    return _definitions39.default;
  }
});
Object.defineProperty(exports, "uniques", {
  enumerable: true,
  get: function () {
    return _definitions40.default;
  }
});
Object.defineProperty(exports, "utility", {
  enumerable: true,
  get: function () {
    return _definitions41.default;
  }
});
Object.defineProperty(exports, "vesting", {
  enumerable: true,
  get: function () {
    return _definitions42.default;
  }
});
Object.defineProperty(exports, "xcm", {
  enumerable: true,
  get: function () {
    return _definitions52.default;
  }
});

var _essentials = require("./essentials.js");

Object.keys(_essentials).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _essentials[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _essentials[key];
    }
  });
});

var _definitions = _interopRequireDefault(require("./assets/definitions.js"));

var _definitions2 = _interopRequireDefault(require("./authorship/definitions.js"));

var _definitions3 = _interopRequireDefault(require("./aura/definitions.js"));

var _definitions4 = _interopRequireDefault(require("./babe/definitions.js"));

var _definitions5 = _interopRequireDefault(require("./balances/definitions.js"));

var _definitions6 = _interopRequireDefault(require("./beefy/definitions.js"));

var _definitions7 = _interopRequireDefault(require("./benchmark/definitions.js"));

var _definitions8 = _interopRequireDefault(require("./blockbuilder/definitions.js"));

var _definitions9 = _interopRequireDefault(require("./collective/definitions.js"));

var _definitions10 = _interopRequireDefault(require("./consensus/definitions.js"));

var _definitions11 = _interopRequireDefault(require("./contracts/definitions.js"));

var _definitions12 = _interopRequireDefault(require("./democracy/definitions.js"));

var _definitions13 = _interopRequireDefault(require("./dev/definitions.js"));

var _definitions14 = _interopRequireDefault(require("./discovery/definitions.js"));

var _definitions15 = _interopRequireDefault(require("./elections/definitions.js"));

var _definitions16 = _interopRequireDefault(require("./engine/definitions.js"));

var _definitions17 = _interopRequireDefault(require("./evm/definitions.js"));

var _definitions18 = _interopRequireDefault(require("./extrinsics/definitions.js"));

var _definitions19 = _interopRequireDefault(require("./genericAsset/definitions.js"));

var _definitions20 = _interopRequireDefault(require("./gilt/definitions.js"));

var _definitions21 = _interopRequireDefault(require("./grandpa/definitions.js"));

var _definitions22 = _interopRequireDefault(require("./identity/definitions.js"));

var _definitions23 = _interopRequireDefault(require("./imOnline/definitions.js"));

var _definitions24 = _interopRequireDefault(require("./lottery/definitions.js"));

var _definitions25 = _interopRequireDefault(require("./mmr/definitions.js"));

var _definitions26 = _interopRequireDefault(require("./offences/definitions.js"));

var _definitions27 = _interopRequireDefault(require("./pow/definitions.js"));

var _definitions28 = _interopRequireDefault(require("./proxy/definitions.js"));

var _definitions29 = _interopRequireDefault(require("./recovery/definitions.js"));

var _definitions30 = _interopRequireDefault(require("./scheduler/definitions.js"));

var _definitions31 = _interopRequireDefault(require("./session/definitions.js"));

var _definitions32 = _interopRequireDefault(require("./society/definitions.js"));

var _definitions33 = _interopRequireDefault(require("./staking/definitions.js"));

var _definitions34 = _interopRequireDefault(require("./support/definitions.js"));

var _definitions35 = _interopRequireDefault(require("./syncstate/definitions.js"));

var _definitions36 = _interopRequireDefault(require("./system/definitions.js"));

var _definitions37 = _interopRequireDefault(require("./treasury/definitions.js"));

var _definitions38 = _interopRequireDefault(require("./txpayment/definitions.js"));

var _definitions39 = _interopRequireDefault(require("./txqueue/definitions.js"));

var _definitions40 = _interopRequireDefault(require("./uniques/definitions.js"));

var _definitions41 = _interopRequireDefault(require("./utility/definitions.js"));

var _definitions42 = _interopRequireDefault(require("./vesting/definitions.js"));

var _definitions43 = _interopRequireDefault(require("./attestations/definitions.js"));

var _definitions44 = _interopRequireDefault(require("./bridges/definitions.js"));

var _definitions45 = _interopRequireDefault(require("./claims/definitions.js"));

var _definitions46 = _interopRequireDefault(require("./crowdloan/definitions.js"));

var _definitions47 = _interopRequireDefault(require("./cumulus/definitions.js"));

var _definitions48 = _interopRequireDefault(require("./finality/definitions.js"));

var _definitions49 = _interopRequireDefault(require("./parachains/definitions.js"));

var _definitions50 = _interopRequireDefault(require("./poll/definitions.js"));

var _definitions51 = _interopRequireDefault(require("./purchase/definitions.js"));

var _definitions52 = _interopRequireDefault(require("./xcm/definitions.js"));

var _definitions53 = _interopRequireDefault(require("./contractsAbi/definitions.js"));

var _definitions54 = _interopRequireDefault(require("./eth/definitions.js"));

var _definitions55 = _interopRequireDefault(require("./ormlOracle/definitions.js"));

var _definitions56 = _interopRequireDefault(require("./ormlTokens/definitions.js"));

var _definitions57 = _interopRequireDefault(require("./rpc/definitions.js"));

var _definitions58 = _interopRequireDefault(require("./author/definitions.js"));

var _definitions59 = _interopRequireDefault(require("./chain/definitions.js"));

var _definitions60 = _interopRequireDefault(require("./childstate/definitions.js"));

var _definitions61 = _interopRequireDefault(require("./offchain/definitions.js"));

var _definitions62 = _interopRequireDefault(require("./payment/definitions.js"));

var _definitions63 = _interopRequireDefault(require("./state/definitions.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./essentials.js":"node_modules/@polkadot/types/interfaces/essentials.js","./assets/definitions.js":"node_modules/@polkadot/types/interfaces/assets/definitions.js","./authorship/definitions.js":"node_modules/@polkadot/types/interfaces/authorship/definitions.js","./aura/definitions.js":"node_modules/@polkadot/types/interfaces/aura/definitions.js","./babe/definitions.js":"node_modules/@polkadot/types/interfaces/babe/definitions.js","./balances/definitions.js":"node_modules/@polkadot/types/interfaces/balances/definitions.js","./beefy/definitions.js":"node_modules/@polkadot/types/interfaces/beefy/definitions.js","./benchmark/definitions.js":"node_modules/@polkadot/types/interfaces/benchmark/definitions.js","./blockbuilder/definitions.js":"node_modules/@polkadot/types/interfaces/blockbuilder/definitions.js","./collective/definitions.js":"node_modules/@polkadot/types/interfaces/collective/definitions.js","./consensus/definitions.js":"node_modules/@polkadot/types/interfaces/consensus/definitions.js","./contracts/definitions.js":"node_modules/@polkadot/types/interfaces/contracts/definitions.js","./democracy/definitions.js":"node_modules/@polkadot/types/interfaces/democracy/definitions.js","./dev/definitions.js":"node_modules/@polkadot/types/interfaces/dev/definitions.js","./discovery/definitions.js":"node_modules/@polkadot/types/interfaces/discovery/definitions.js","./elections/definitions.js":"node_modules/@polkadot/types/interfaces/elections/definitions.js","./engine/definitions.js":"node_modules/@polkadot/types/interfaces/engine/definitions.js","./evm/definitions.js":"node_modules/@polkadot/types/interfaces/evm/definitions.js","./extrinsics/definitions.js":"node_modules/@polkadot/types/interfaces/extrinsics/definitions.js","./genericAsset/definitions.js":"node_modules/@polkadot/types/interfaces/genericAsset/definitions.js","./gilt/definitions.js":"node_modules/@polkadot/types/interfaces/gilt/definitions.js","./grandpa/definitions.js":"node_modules/@polkadot/types/interfaces/grandpa/definitions.js","./identity/definitions.js":"node_modules/@polkadot/types/interfaces/identity/definitions.js","./imOnline/definitions.js":"node_modules/@polkadot/types/interfaces/imOnline/definitions.js","./lottery/definitions.js":"node_modules/@polkadot/types/interfaces/lottery/definitions.js","./mmr/definitions.js":"node_modules/@polkadot/types/interfaces/mmr/definitions.js","./offences/definitions.js":"node_modules/@polkadot/types/interfaces/offences/definitions.js","./pow/definitions.js":"node_modules/@polkadot/types/interfaces/pow/definitions.js","./proxy/definitions.js":"node_modules/@polkadot/types/interfaces/proxy/definitions.js","./recovery/definitions.js":"node_modules/@polkadot/types/interfaces/recovery/definitions.js","./scheduler/definitions.js":"node_modules/@polkadot/types/interfaces/scheduler/definitions.js","./session/definitions.js":"node_modules/@polkadot/types/interfaces/session/definitions.js","./society/definitions.js":"node_modules/@polkadot/types/interfaces/society/definitions.js","./staking/definitions.js":"node_modules/@polkadot/types/interfaces/staking/definitions.js","./support/definitions.js":"node_modules/@polkadot/types/interfaces/support/definitions.js","./syncstate/definitions.js":"node_modules/@polkadot/types/interfaces/syncstate/definitions.js","./system/definitions.js":"node_modules/@polkadot/types/interfaces/system/definitions.js","./treasury/definitions.js":"node_modules/@polkadot/types/interfaces/treasury/definitions.js","./txpayment/definitions.js":"node_modules/@polkadot/types/interfaces/txpayment/definitions.js","./txqueue/definitions.js":"node_modules/@polkadot/types/interfaces/txqueue/definitions.js","./uniques/definitions.js":"node_modules/@polkadot/types/interfaces/uniques/definitions.js","./utility/definitions.js":"node_modules/@polkadot/types/interfaces/utility/definitions.js","./vesting/definitions.js":"node_modules/@polkadot/types/interfaces/vesting/definitions.js","./attestations/definitions.js":"node_modules/@polkadot/types/interfaces/attestations/definitions.js","./bridges/definitions.js":"node_modules/@polkadot/types/interfaces/bridges/definitions.js","./claims/definitions.js":"node_modules/@polkadot/types/interfaces/claims/definitions.js","./crowdloan/definitions.js":"node_modules/@polkadot/types/interfaces/crowdloan/definitions.js","./cumulus/definitions.js":"node_modules/@polkadot/types/interfaces/cumulus/definitions.js","./finality/definitions.js":"node_modules/@polkadot/types/interfaces/finality/definitions.js","./parachains/definitions.js":"node_modules/@polkadot/types/interfaces/parachains/definitions.js","./poll/definitions.js":"node_modules/@polkadot/types/interfaces/poll/definitions.js","./purchase/definitions.js":"node_modules/@polkadot/types/interfaces/purchase/definitions.js","./xcm/definitions.js":"node_modules/@polkadot/types/interfaces/xcm/definitions.js","./contractsAbi/definitions.js":"node_modules/@polkadot/types/interfaces/contractsAbi/definitions.js","./eth/definitions.js":"node_modules/@polkadot/types/interfaces/eth/definitions.js","./ormlOracle/definitions.js":"node_modules/@polkadot/types/interfaces/ormlOracle/definitions.js","./ormlTokens/definitions.js":"node_modules/@polkadot/types/interfaces/ormlTokens/definitions.js","./rpc/definitions.js":"node_modules/@polkadot/types/interfaces/rpc/definitions.js","./author/definitions.js":"node_modules/@polkadot/types/interfaces/author/definitions.js","./chain/definitions.js":"node_modules/@polkadot/types/interfaces/chain/definitions.js","./childstate/definitions.js":"node_modules/@polkadot/types/interfaces/childstate/definitions.js","./offchain/definitions.js":"node_modules/@polkadot/types/interfaces/offchain/definitions.js","./payment/definitions.js":"node_modules/@polkadot/types/interfaces/payment/definitions.js","./state/definitions.js":"node_modules/@polkadot/types/interfaces/state/definitions.js"}],"node_modules/@polkadot/types/interfaces/jsonrpc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _util = require("@polkadot/util");

var defs = _interopRequireWildcard(require("./definitions.js"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var jsonrpc = {};
Object.keys(defs).forEach(function (s) {
  return Object.entries(defs[s].rpc || {}).forEach(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
        method = _ref2[0],
        def = _ref2[1];

    // allow for section overrides
    var section = def.aliasSection || s;

    if (!jsonrpc[section]) {
      jsonrpc[section] = {};
    }

    jsonrpc[section][method] = (0, _util.objectSpread)({}, def, {
      isSubscription: !!def.pubsub,
      jsonrpc: "".concat(section, "_").concat(method),
      method: method,
      section: section
    });
  });
});
var _default = jsonrpc;
exports.default = _default;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./definitions.js":"node_modules/@polkadot/types/interfaces/definitions.js"}],"node_modules/@polkadot/types/codec/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BTreeMap", {
  enumerable: true,
  get: function () {
    return _typesCodec.BTreeMap;
  }
});
Object.defineProperty(exports, "BTreeSet", {
  enumerable: true,
  get: function () {
    return _typesCodec.BTreeSet;
  }
});
Object.defineProperty(exports, "CodecMap", {
  enumerable: true,
  get: function () {
    return _typesCodec.CodecMap;
  }
});
Object.defineProperty(exports, "CodecSet", {
  enumerable: true,
  get: function () {
    return _typesCodec.CodecSet;
  }
});
Object.defineProperty(exports, "Compact", {
  enumerable: true,
  get: function () {
    return _typesCodec.Compact;
  }
});
Object.defineProperty(exports, "DoNotConstruct", {
  enumerable: true,
  get: function () {
    return _typesCodec.DoNotConstruct;
  }
});
Object.defineProperty(exports, "Enum", {
  enumerable: true,
  get: function () {
    return _typesCodec.Enum;
  }
});
Object.defineProperty(exports, "HashMap", {
  enumerable: true,
  get: function () {
    return _typesCodec.HashMap;
  }
});
Object.defineProperty(exports, "Int", {
  enumerable: true,
  get: function () {
    return _typesCodec.Int;
  }
});
Object.defineProperty(exports, "Json", {
  enumerable: true,
  get: function () {
    return _typesCodec.Json;
  }
});
Object.defineProperty(exports, "Linkage", {
  enumerable: true,
  get: function () {
    return _typesCodec.Linkage;
  }
});
Object.defineProperty(exports, "Map", {
  enumerable: true,
  get: function () {
    return _typesCodec.Map;
  }
});
Object.defineProperty(exports, "Option", {
  enumerable: true,
  get: function () {
    return _typesCodec.Option;
  }
});
Object.defineProperty(exports, "Range", {
  enumerable: true,
  get: function () {
    return _typesCodec.Range;
  }
});
Object.defineProperty(exports, "RangeInclusive", {
  enumerable: true,
  get: function () {
    return _typesCodec.RangeInclusive;
  }
});
Object.defineProperty(exports, "Raw", {
  enumerable: true,
  get: function () {
    return _typesCodec.Raw;
  }
});
Object.defineProperty(exports, "Result", {
  enumerable: true,
  get: function () {
    return _typesCodec.Result;
  }
});
Object.defineProperty(exports, "Set", {
  enumerable: true,
  get: function () {
    return _typesCodec.Set;
  }
});
Object.defineProperty(exports, "Struct", {
  enumerable: true,
  get: function () {
    return _typesCodec.Struct;
  }
});
Object.defineProperty(exports, "Tuple", {
  enumerable: true,
  get: function () {
    return _typesCodec.Tuple;
  }
});
Object.defineProperty(exports, "U8aFixed", {
  enumerable: true,
  get: function () {
    return _typesCodec.U8aFixed;
  }
});
Object.defineProperty(exports, "UInt", {
  enumerable: true,
  get: function () {
    return _typesCodec.UInt;
  }
});
Object.defineProperty(exports, "Vec", {
  enumerable: true,
  get: function () {
    return _typesCodec.Vec;
  }
});
Object.defineProperty(exports, "VecFixed", {
  enumerable: true,
  get: function () {
    return _typesCodec.VecFixed;
  }
});
Object.defineProperty(exports, "WrapperKeepOpaque", {
  enumerable: true,
  get: function () {
    return _typesCodec.WrapperKeepOpaque;
  }
});
Object.defineProperty(exports, "WrapperOpaque", {
  enumerable: true,
  get: function () {
    return _typesCodec.WrapperOpaque;
  }
});

var _typesCodec = require("@polkadot/types-codec");
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js"}],"node_modules/@polkadot/types/create/createClass.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createClass = createClass;

var _typesCreate = require("@polkadot/types-create");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
function createClass(registry, type) {
  return (0, _typesCreate.createClassUnsafe)(registry, type);
}
},{"@polkadot/types-create":"node_modules/@polkadot/types-create/index.js"}],"node_modules/@polkadot/types/create/createType.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createType = createType;

var _typesCreate = require("@polkadot/types-create");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * Create an instance of a `type` with a given `params`.
 * @param type - A recognizable string representing the type to create an
 * instance from
 * @param params - The value to instantiate the type with
 */
function createType(registry, type) {
  for (var _len = arguments.length, params = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    params[_key - 2] = arguments[_key];
  }

  return (0, _typesCreate.createTypeUnsafe)(registry, type, params);
}
},{"@polkadot/types-create":"node_modules/@polkadot/types-create/index.js"}],"node_modules/@polkadot/types/create/lazy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.lazyVariants = lazyVariants;

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
function lazyVariants(lookup, _ref, getName, creator) {
  var type = _ref.type;
  var result = {};
  var variants = lookup.getSiType(type).def.asVariant.variants;

  for (var i = 0; i < variants.length; i++) {
    (0, _util.lazyMethod)(result, variants[i], creator, getName);
  }

  return result;
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types/extrinsic/signedExtensions/emptyCheck.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.emptyCheck = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var emptyCheck = {
  extrinsic: {},
  payload: {}
};
exports.emptyCheck = emptyCheck;
},{}],"node_modules/@polkadot/types/extrinsic/signedExtensions/polkadot.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.polkadot = void 0;

var _emptyCheck = require("./emptyCheck.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var polkadot = {
  LimitParathreadCommits: _emptyCheck.emptyCheck,
  OnlyStakingAndClaims: _emptyCheck.emptyCheck,
  PrevalidateAttests: _emptyCheck.emptyCheck,
  RestrictFunctionality: _emptyCheck.emptyCheck,
  TransactionCallFilter: _emptyCheck.emptyCheck,
  ValidateDoubleVoteReports: _emptyCheck.emptyCheck
};
exports.polkadot = polkadot;
},{"./emptyCheck.js":"node_modules/@polkadot/types/extrinsic/signedExtensions/emptyCheck.js"}],"node_modules/@polkadot/types/extrinsic/signedExtensions/shell.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.shell = void 0;

var _emptyCheck = require("./emptyCheck.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var shell = {
  DisallowSigned: _emptyCheck.emptyCheck
};
exports.shell = shell;
},{"./emptyCheck.js":"node_modules/@polkadot/types/extrinsic/signedExtensions/emptyCheck.js"}],"node_modules/@polkadot/types/extrinsic/signedExtensions/statemint.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.statemint = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var statemint = {
  ChargeAssetTxPayment: {
    extrinsic: {
      tip: 'Compact<Balance>',
      // eslint-disable-next-line sort-keys
      assetId: 'Option<AssetId>'
    },
    payload: {}
  }
};
exports.statemint = statemint;
},{}],"node_modules/@polkadot/types/extrinsic/signedExtensions/substrate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.substrate = void 0;

var _emptyCheck = require("./emptyCheck.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var CheckMortality = {
  extrinsic: {
    era: 'ExtrinsicEra'
  },
  payload: {
    blockHash: 'Hash'
  }
};
var substrate = {
  ChargeTransactionPayment: {
    extrinsic: {
      tip: 'Compact<Balance>'
    },
    payload: {}
  },
  CheckBlockGasLimit: _emptyCheck.emptyCheck,
  CheckEra: CheckMortality,
  CheckGenesis: {
    extrinsic: {},
    payload: {
      genesisHash: 'Hash'
    }
  },
  CheckMortality: CheckMortality,
  CheckNonZeroSender: _emptyCheck.emptyCheck,
  CheckNonce: {
    extrinsic: {
      nonce: 'Compact<Index>'
    },
    payload: {}
  },
  CheckSpecVersion: {
    extrinsic: {},
    payload: {
      specVersion: 'u32'
    }
  },
  CheckTxVersion: {
    extrinsic: {},
    payload: {
      transactionVersion: 'u32'
    }
  },
  CheckVersion: {
    extrinsic: {},
    payload: {
      specVersion: 'u32'
    }
  },
  CheckWeight: _emptyCheck.emptyCheck,
  LockStakingStatus: _emptyCheck.emptyCheck,
  ValidateEquivocationReport: _emptyCheck.emptyCheck
};
exports.substrate = substrate;
},{"./emptyCheck.js":"node_modules/@polkadot/types/extrinsic/signedExtensions/emptyCheck.js"}],"node_modules/@polkadot/types/extrinsic/signedExtensions/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.allExtensions = void 0;
exports.expandExtensionTypes = expandExtensionTypes;
exports.fallbackExtensions = void 0;
exports.findUnknownExtensions = findUnknownExtensions;

var _util = require("@polkadot/util");

var _polkadot = require("./polkadot.js");

var _shell = require("./shell.js");

var _statemint = require("./statemint.js");

var _substrate = require("./substrate.js");

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

// A mapping of the known signed extensions to the extra fields that they
// contain. Unlike in the actual extensions, we define the extra fields not
// as a Tuple, but rather as a struct so they can be named. These will be
// expanded into the various fields when added to the payload (we only
// support V4 onwards with these, V3 and earlier are deemed fixed))
var allExtensions = (0, _util.objectSpread)({}, _substrate.substrate, _polkadot.polkadot, _shell.shell, _statemint.statemint); // the v4 signed extensions prior to the point of exposing these to the
// metadata. This may not match 100% with the current defaults and are used
// when not specified in the metadata (which is for very old chains). The
// order is important here, as applied by default

exports.allExtensions = allExtensions;
var fallbackExtensions = ['CheckVersion', 'CheckGenesis', 'CheckEra', 'CheckNonce', 'CheckWeight', 'ChargeTransactionPayment', 'CheckBlockGasLimit'];
exports.fallbackExtensions = fallbackExtensions;

function findUnknownExtensions(extensions) {
  var userExtensions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var names = [].concat(_toConsumableArray(Object.keys(allExtensions)), _toConsumableArray(Object.keys(userExtensions)));
  return extensions.filter(function (k) {
    return !names.includes(k);
  });
}

function expandExtensionTypes(extensions, type) {
  var userExtensions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  return extensions // Always allow user extensions first - these should provide overrides
  .map(function (k) {
    return userExtensions[k] || allExtensions[k];
  }).filter(function (info) {
    return !!info;
  }).reduce(function (result, info) {
    return (0, _util.objectSpread)(result, info[type]);
  }, {});
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./polkadot.js":"node_modules/@polkadot/types/extrinsic/signedExtensions/polkadot.js","./shell.js":"node_modules/@polkadot/types/extrinsic/signedExtensions/shell.js","./statemint.js":"node_modules/@polkadot/types/extrinsic/signedExtensions/statemint.js","./substrate.js":"node_modules/@polkadot/types/extrinsic/signedExtensions/substrate.js"}],"node_modules/@polkadot/types/generic/Event.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GenericEventData = exports.GenericEvent = void 0;

var _typesCodec = require("@polkadot/types-codec");

var _util = require("@polkadot/util");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

/** @internal */
function decodeEvent(registry, value) {
  if (!value || !value.length) {
    return {
      DataType: _typesCodec.Null
    };
  }

  var index = value.subarray(0, 2);
  return {
    DataType: registry.findMetaEvent(index),
    value: {
      data: value.subarray(2),
      index: index
    }
  };
}
/**
 * @name GenericEventData
 * @description
 * Wrapper for the actual data that forms part of an [[Event]]
 */


var _meta = /*#__PURE__*/new WeakMap();

var _method = /*#__PURE__*/new WeakMap();

var _names = /*#__PURE__*/new WeakMap();

var _section = /*#__PURE__*/new WeakMap();

var _typeDef = /*#__PURE__*/new WeakMap();

var GenericEventData = /*#__PURE__*/function (_Tuple) {
  _inherits(GenericEventData, _Tuple);

  var _super = _createSuper(GenericEventData);

  function GenericEventData(registry, value, meta) {
    var _this;

    var section = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '<unknown>';
    var method = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '<unknown>';

    _classCallCheck(this, GenericEventData);

    var fields = (meta === null || meta === void 0 ? void 0 : meta.fields) || [];
    _this = _super.call(this, registry, fields.map(function (_ref) {
      var type = _ref.type;
      return registry.createLookupType(type);
    }), value);

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _meta, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _method, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _names, {
      writable: true,
      value: null
    });

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _section, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _typeDef, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldSet(_assertThisInitialized(_this), _meta, meta);

    _classPrivateFieldSet(_assertThisInitialized(_this), _method, method);

    _classPrivateFieldSet(_assertThisInitialized(_this), _section, section);

    _classPrivateFieldSet(_assertThisInitialized(_this), _typeDef, fields.map(function (_ref2) {
      var type = _ref2.type;
      return registry.lookup.getTypeDef(type);
    }));

    var names = fields.map(function (_ref3) {
      var name = _ref3.name;
      return registry.lookup.sanitizeField(name)[0];
    }).filter(function (n) {
      return !!n;
    });

    if (names.length === fields.length) {
      _classPrivateFieldSet(_assertThisInitialized(_this), _names, names);

      (0, _util.objectProperties)(_assertThisInitialized(_this), names, function (_, i) {
        return _this[i];
      });
    }

    return _this;
  }
  /**
   * @description The wrapped [[EventMetadata]]
   */


  _createClass(GenericEventData, [{
    key: "meta",
    get: function get() {
      return _classPrivateFieldGet(this, _meta);
    }
    /**
     * @description The method as a string
     */

  }, {
    key: "method",
    get: function get() {
      return _classPrivateFieldGet(this, _method);
    }
    /**
     * @description The field names (as available)
     */

  }, {
    key: "names",
    get: function get() {
      return _classPrivateFieldGet(this, _names);
    }
    /**
     * @description The section as a string
     */

  }, {
    key: "section",
    get: function get() {
      return _classPrivateFieldGet(this, _section);
    }
    /**
     * @description The [[TypeDef]] for this event
     */

  }, {
    key: "typeDef",
    get: function get() {
      return _classPrivateFieldGet(this, _typeDef);
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */

  }, {
    key: "toHuman",
    value: function toHuman(isExtended) {
      if (_classPrivateFieldGet(this, _names) !== null) {
        var json = {};

        for (var i = 0; i < _classPrivateFieldGet(this, _names).length; i++) {
          json[_classPrivateFieldGet(this, _names)[i]] = this[i].toHuman(isExtended);
        }

        return json;
      }

      return _get(_getPrototypeOf(GenericEventData.prototype), "toHuman", this).call(this, isExtended);
    }
  }]);

  return GenericEventData;
}(_typesCodec.Tuple);
/**
 * @name GenericEvent
 * @description
 * A representation of a system event. These are generated via the [[Metadata]] interfaces and
 * specific to a specific Substrate runtime
 */


exports.GenericEventData = GenericEventData;

var GenericEvent = /*#__PURE__*/function (_Struct) {
  _inherits(GenericEvent, _Struct);

  var _super2 = _createSuper(GenericEvent);

  // Currently we _only_ decode from Uint8Array, since we expect it to
  // be used via EventRecord
  function GenericEvent(registry, _value) {
    _classCallCheck(this, GenericEvent);

    var _decodeEvent = decodeEvent(registry, _value),
        DataType = _decodeEvent.DataType,
        value = _decodeEvent.value;

    return _super2.call(this, registry, {
      index: 'EventId',
      // eslint-disable-next-line sort-keys
      data: DataType
    }, value);
  }
  /**
   * @description The wrapped [[EventData]]
   */


  _createClass(GenericEvent, [{
    key: "data",
    get: function get() {
      return this.getT('data');
    }
    /**
     * @description The [[EventId]], identifying the raw event
     */

  }, {
    key: "index",
    get: function get() {
      return this.getT('index');
    }
    /**
     * @description The [[EventMetadata]] with the documentation
     */

  }, {
    key: "meta",
    get: function get() {
      return this.data.meta;
    }
    /**
     * @description The method string identifying the event
     */

  }, {
    key: "method",
    get: function get() {
      return this.data.method;
    }
    /**
     * @description The section string identifying the event
     */

  }, {
    key: "section",
    get: function get() {
      return this.data.section;
    }
    /**
     * @description The [[TypeDef]] for the event
     */

  }, {
    key: "typeDef",
    get: function get() {
      return this.data.typeDef;
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */

  }, {
    key: "toHuman",
    value: function toHuman(isExpanded) {
      return (0, _util.objectSpread)({
        method: this.method,
        section: this.section
      }, isExpanded ? {
        docs: this.meta.docs.map(function (d) {
          return d.toString();
        })
      } : null, _get(_getPrototypeOf(GenericEvent.prototype), "toHuman", this).call(this, isExpanded));
    }
  }]);

  return GenericEvent;
}(_typesCodec.Struct);

exports.GenericEvent = GenericEvent;
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types/extrinsic/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UNMASK_VERSION = exports.IMMORTAL_ERA = exports.EMPTY_U8A = exports.DEFAULT_VERSION = exports.BIT_UNSIGNED = exports.BIT_SIGNED = void 0;
// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var BIT_SIGNED = 128;
exports.BIT_SIGNED = BIT_SIGNED;
var BIT_UNSIGNED = 0;
exports.BIT_UNSIGNED = BIT_UNSIGNED;
var EMPTY_U8A = new Uint8Array();
exports.EMPTY_U8A = EMPTY_U8A;
var DEFAULT_VERSION = 4;
exports.DEFAULT_VERSION = DEFAULT_VERSION;
var IMMORTAL_ERA = new Uint8Array([0]);
exports.IMMORTAL_ERA = IMMORTAL_ERA;
var UNMASK_VERSION = 127;
exports.UNMASK_VERSION = UNMASK_VERSION;
},{}],"node_modules/@polkadot/types/extrinsic/v4/Extrinsic.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GenericExtrinsicV4 = exports.EXTRINSIC_VERSION = void 0;

var _typesCodec = require("@polkadot/types-codec");

var _util = require("@polkadot/util");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var EXTRINSIC_VERSION = 4;
/**
 * @name GenericExtrinsicV4
 * @description
 * The third generation of compact extrinsics
 */

exports.EXTRINSIC_VERSION = EXTRINSIC_VERSION;

var GenericExtrinsicV4 = /*#__PURE__*/function (_Struct) {
  _inherits(GenericExtrinsicV4, _Struct);

  var _super = _createSuper(GenericExtrinsicV4);

  function GenericExtrinsicV4(registry, value) {
    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
        isSigned = _ref.isSigned;

    _classCallCheck(this, GenericExtrinsicV4);

    return _super.call(this, registry, {
      signature: 'ExtrinsicSignatureV4',
      // eslint-disable-next-line sort-keys
      method: 'Call'
    }, GenericExtrinsicV4.decodeExtrinsic(registry, value, isSigned));
  }
  /** @internal */


  _createClass(GenericExtrinsicV4, [{
    key: "encodedLength",
    get:
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    function get() {
      return this.toU8a().length;
    }
    /**
     * @description The [[Call]] this extrinsic wraps
     */

  }, {
    key: "method",
    get: function get() {
      return this.getT('method');
    }
    /**
     * @description The [[ExtrinsicSignatureV4]]
     */

  }, {
    key: "signature",
    get: function get() {
      return this.getT('signature');
    }
    /**
     * @description The version for the signature
     */

  }, {
    key: "version",
    get: function get() {
      return EXTRINSIC_VERSION;
    }
    /**
     * @description Add an [[ExtrinsicSignatureV4]] to the extrinsic (already generated)
     */

  }, {
    key: "addSignature",
    value: function addSignature(signer, signature, payload) {
      this.signature.addSignature(signer, signature, payload);
      return this;
    }
    /**
     * @description Sign the extrinsic with a specific keypair
     */

  }, {
    key: "sign",
    value: function sign(account, options) {
      this.signature.sign(this.method, account, options);
      return this;
    }
    /**
     * @describe Adds a fake signature to the extrinsic
     */

  }, {
    key: "signFake",
    value: function signFake(signer, options) {
      this.signature.signFake(this.method, signer, options);
      return this;
    }
  }], [{
    key: "decodeExtrinsic",
    value: function decodeExtrinsic(registry, value) {
      var isSigned = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

      if (value instanceof GenericExtrinsicV4) {
        return value;
      } else if (value instanceof registry.createClassUnsafe('Call')) {
        return {
          method: value
        };
      } else if ((0, _util.isU8a)(value)) {
        // here we decode manually since we need to pull through the version information
        var signature = registry.createTypeUnsafe('ExtrinsicSignatureV4', [value, {
          isSigned: isSigned
        }]);
        var method = registry.createTypeUnsafe('Call', [value.subarray(signature.encodedLength)]);
        return {
          method: method,
          signature: signature
        };
      }

      return value || {};
    }
  }]);

  return GenericExtrinsicV4;
}(_typesCodec.Struct);

exports.GenericExtrinsicV4 = GenericExtrinsicV4;
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types/extrinsic/Extrinsic.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GenericExtrinsic = void 0;
Object.defineProperty(exports, "LATEST_EXTRINSIC_VERSION", {
  enumerable: true,
  get: function () {
    return _Extrinsic.EXTRINSIC_VERSION;
  }
});

var _typesCodec = require("@polkadot/types-codec");

var _util = require("@polkadot/util");

var _constants = require("./constants.js");

var _Extrinsic = require("./v4/Extrinsic.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var VERSIONS = ['ExtrinsicUnknown', // v0 is unknown
'ExtrinsicUnknown', 'ExtrinsicUnknown', 'ExtrinsicUnknown', 'ExtrinsicV4'];

/** @internal */
function newFromValue(registry, value, version) {
  if (value instanceof GenericExtrinsic) {
    return value.unwrap();
  }

  var isSigned = (version & _constants.BIT_SIGNED) === _constants.BIT_SIGNED;
  var type = VERSIONS[version & _constants.UNMASK_VERSION] || VERSIONS[0]; // we cast here since the VERSION definition is incredibly broad - we don't have a
  // slice for "only add extrinsic types", and more string definitions become unwieldy

  return registry.createTypeUnsafe(type, [value, {
    isSigned: isSigned,
    version: version
  }]);
}
/** @internal */


function decodeExtrinsic(registry, value) {
  var version = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants.DEFAULT_VERSION;

  if ((0, _util.isU8a)(value) || Array.isArray(value) || (0, _util.isHex)(value)) {
    return decodeU8a(registry, (0, _util.u8aToU8a)(value), version);
  } else if (value instanceof registry.createClassUnsafe('Call')) {
    return newFromValue(registry, {
      method: value
    }, version);
  }

  return newFromValue(registry, value, version);
}
/** @internal */


function decodeU8a(registry, value, version) {
  if (!value.length) {
    return newFromValue(registry, new Uint8Array(), version);
  }

  var _compactFromU8a = (0, _util.compactFromU8a)(value),
      _compactFromU8a2 = _slicedToArray(_compactFromU8a, 2),
      offset = _compactFromU8a2[0],
      length = _compactFromU8a2[1];

  var total = offset + length.toNumber();

  if (total > value.length) {
    throw new Error("Extrinsic: length less than remainder, expected at least ".concat(total, ", found ").concat(value.length));
  }

  var data = value.subarray(offset, total);
  return newFromValue(registry, data.subarray(1), data[0]);
}

var ExtrinsicBase = /*#__PURE__*/function (_AbstractBase) {
  _inherits(ExtrinsicBase, _AbstractBase);

  var _super = _createSuper(ExtrinsicBase);

  function ExtrinsicBase(registry, value, initialU8aLength) {
    var _this;

    _classCallCheck(this, ExtrinsicBase);

    _this = _super.call(this, registry, value, initialU8aLength);
    var signKeys = Object.keys(registry.getSignedExtensionTypes());

    var getter = function getter(key) {
      return _this.inner.signature[key];
    }; // This is on the abstract class, ensuring that hasOwnProperty operates
    // correctly, i.e. it needs to be on the base class exposing it


    for (var i = 0; i < signKeys.length; i++) {
      (0, _util.objectProperty)(_assertThisInitialized(_this), signKeys[i], getter);
    }

    return _this;
  }
  /**
   * @description The arguments passed to for the call, exposes args so it is compatible with [[Call]]
   */


  _createClass(ExtrinsicBase, [{
    key: "args",
    get: function get() {
      return this.method.args;
    }
    /**
     * @description The argument definitions, compatible with [[Call]]
     */

  }, {
    key: "argsDef",
    get: function get() {
      return this.method.argsDef;
    }
    /**
     * @description The actual `[sectionIndex, methodIndex]` as used in the Call
     */

  }, {
    key: "callIndex",
    get: function get() {
      return this.method.callIndex;
    }
    /**
     * @description The actual data for the Call
     */

  }, {
    key: "data",
    get: function get() {
      return this.method.data;
    }
    /**
     * @description The era for this extrinsic
     */

  }, {
    key: "era",
    get: function get() {
      return this.inner.signature.era;
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */

  }, {
    key: "encodedLength",
    get: function get() {
      return this.toU8a().length;
    }
    /**
     * @description `true` id the extrinsic is signed
     */

  }, {
    key: "isSigned",
    get: function get() {
      return this.inner.signature.isSigned;
    }
    /**
     * @description The length of the actual data, excluding prefix
     */

  }, {
    key: "length",
    get: function get() {
      return this.toU8a(true).length;
    }
    /**
     * @description The [[FunctionMetadataLatest]] that describes the extrinsic
     */

  }, {
    key: "meta",
    get: function get() {
      return this.method.meta;
    }
    /**
     * @description The [[Call]] this extrinsic wraps
     */

  }, {
    key: "method",
    get: function get() {
      return this.inner.method;
    }
    /**
     * @description The nonce for this extrinsic
     */

  }, {
    key: "nonce",
    get: function get() {
      return this.inner.signature.nonce;
    }
    /**
     * @description The actual [[EcdsaSignature]], [[Ed25519Signature]] or [[Sr25519Signature]]
     */

  }, {
    key: "signature",
    get: function get() {
      return this.inner.signature.signature;
    }
    /**
     * @description The [[Address]] that signed
     */

  }, {
    key: "signer",
    get: function get() {
      return this.inner.signature.signer;
    }
    /**
     * @description Forwards compat
     */

  }, {
    key: "tip",
    get: function get() {
      return this.inner.signature.tip;
    }
    /**
     * @description Returns the raw transaction version (not flagged with signing information)
    */

  }, {
    key: "type",
    get: function get() {
      return this.inner.version;
    }
  }, {
    key: "inner",
    get: function get() {
      return this.unwrap();
    }
    /**
     * @description Returns the encoded version flag
    */

  }, {
    key: "version",
    get: function get() {
      return this.type | (this.isSigned ? _constants.BIT_SIGNED : _constants.BIT_UNSIGNED);
    }
    /**
     * @description Checks if the source matches this in type
     */

  }, {
    key: "is",
    value: function is(other) {
      return this.method.is(other);
    }
  }, {
    key: "unwrap",
    value: function unwrap() {
      return _get(_getPrototypeOf(ExtrinsicBase.prototype), "unwrap", this).call(this);
    }
  }]);

  return ExtrinsicBase;
}(_typesCodec.AbstractBase);
/**
 * @name GenericExtrinsic
 * @description
 * Representation of an Extrinsic in the system. It contains the actual call,
 * (optional) signature and encodes with an actual length prefix
 *
 * {@link https://github.com/paritytech/wiki/blob/master/Extrinsic.md#the-extrinsic-format-for-node}.
 *
 * Can be:
 * - signed, to create a transaction
 * - left as is, to create an inherent
 */


var _hashCache = /*#__PURE__*/new WeakMap();

var GenericExtrinsic = /*#__PURE__*/function (_ExtrinsicBase) {
  _inherits(GenericExtrinsic, _ExtrinsicBase);

  var _super2 = _createSuper(GenericExtrinsic);

  function GenericExtrinsic(registry, value) {
    var _this2;

    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
        version = _ref.version;

    _classCallCheck(this, GenericExtrinsic);

    _this2 = _super2.call(this, registry, decodeExtrinsic(registry, value, version));

    _classPrivateFieldInitSpec(_assertThisInitialized(_this2), _hashCache, {
      writable: true,
      value: void 0
    });

    return _this2;
  }
  /**
   * @description returns a hash of the contents
   */


  _createClass(GenericExtrinsic, [{
    key: "hash",
    get: function get() {
      if (!_classPrivateFieldGet(this, _hashCache)) {
        _classPrivateFieldSet(this, _hashCache, _get(_getPrototypeOf(GenericExtrinsic.prototype), "hash", this));
      }

      return _classPrivateFieldGet(this, _hashCache);
    }
    /**
     * @description Injects an already-generated signature into the extrinsic
     */

  }, {
    key: "addSignature",
    value: function addSignature(signer, signature, payload) {
      this.inner.addSignature(signer, signature, payload);

      _classPrivateFieldSet(this, _hashCache, undefined);

      return this;
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */

  }, {
    key: "inspect",
    value: function inspect() {
      var encoded = _util.u8aConcat.apply(void 0, _toConsumableArray(this.toU8aInner()));

      return {
        inner: this.isSigned ? this.inner.inspect().inner : this.inner.method.inspect().inner,
        outer: [(0, _util.compactToU8a)(encoded.length), new Uint8Array([this.version])]
      };
    }
    /**
     * @description Sign the extrinsic with a specific keypair
     */

  }, {
    key: "sign",
    value: function sign(account, options) {
      this.inner.sign(account, options);

      _classPrivateFieldSet(this, _hashCache, undefined);

      return this;
    }
    /**
     * @describe Adds a fake signature to the extrinsic
     */

  }, {
    key: "signFake",
    value: function signFake(signer, options) {
      this.inner.signFake(signer, options);

      _classPrivateFieldSet(this, _hashCache, undefined);

      return this;
    }
    /**
     * @description Returns a hex string representation of the value
     */

  }, {
    key: "toHex",
    value: function toHex(isBare) {
      return (0, _util.u8aToHex)(this.toU8a(isBare));
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */

  }, {
    key: "toHuman",
    value: function toHuman(isExpanded) {
      return (0, _util.objectSpread)({}, {
        isSigned: this.isSigned,
        method: this.method.toHuman(isExpanded)
      }, this.isSigned ? {
        era: this.era.toHuman(isExpanded),
        nonce: this.nonce.toHuman(isExpanded),
        signature: this.signature.toHex(),
        signer: this.signer.toHuman(isExpanded),
        tip: this.tip.toHuman(isExpanded)
      } : null);
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      return this.toHex();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return 'Extrinsic';
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value is not length-prefixed
     */

  }, {
    key: "toU8a",
    value: function toU8a(isBare) {
      var encoded = _util.u8aConcat.apply(void 0, _toConsumableArray(this.toU8aInner()));

      return isBare ? encoded : (0, _util.compactAddLength)(encoded);
    }
  }, {
    key: "toU8aInner",
    value: function toU8aInner() {
      // we do not apply bare to the internal values, rather this only determines out length addition,
      // where we strip all lengths this creates an extrinsic that cannot be decoded
      return [new Uint8Array([this.version]), this.inner.toU8a()];
    }
  }]);

  return GenericExtrinsic;
}(ExtrinsicBase);

exports.GenericExtrinsic = GenericExtrinsic;
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","./constants.js":"node_modules/@polkadot/types/extrinsic/constants.js","./v4/Extrinsic.js":"node_modules/@polkadot/types/extrinsic/v4/Extrinsic.js"}],"node_modules/@polkadot/types/extrinsic/ExtrinsicEra.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MortalEra = exports.ImmortalEra = exports.GenericExtrinsicEra = void 0;

var _typesCodec = require("@polkadot/types-codec");

var _util = require("@polkadot/util");

var _constants = require("./constants.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function getTrailingZeros(period) {
  var binary = period.toString(2);
  var index = 0;

  while (binary[binary.length - 1 - index] === '0') {
    index++;
  }

  return index;
}
/** @internal */


function decodeMortalEra(registry, value) {
  if ((0, _util.isU8a)(value) || (0, _util.isHex)(value) || Array.isArray(value)) {
    return decodeMortalU8a(registry, (0, _util.u8aToU8a)(value));
  } else if (!value) {
    return [new _typesCodec.U64(registry), new _typesCodec.U64(registry)];
  } else if ((0, _util.isObject)(value)) {
    return decodeMortalObject(registry, value);
  }

  throw new Error('Invalid data passed to Mortal era');
}
/** @internal */


function decodeMortalObject(registry, value) {
  var current = value.current,
      period = value.period;
  var calPeriod = Math.pow(2, Math.ceil(Math.log2(period)));
  calPeriod = Math.min(Math.max(calPeriod, 4), 1 << 16);
  var phase = current % calPeriod;
  var quantizeFactor = Math.max(calPeriod >> 12, 1);
  var quantizedPhase = phase / quantizeFactor * quantizeFactor;
  return [new _typesCodec.U64(registry, calPeriod), new _typesCodec.U64(registry, quantizedPhase)];
}
/** @internal */


function decodeMortalU8a(registry, value) {
  if (value.length === 0) {
    return [new _typesCodec.U64(registry), new _typesCodec.U64(registry)];
  }

  var first = (0, _util.u8aToBn)(value.subarray(0, 1)).toNumber();
  var second = (0, _util.u8aToBn)(value.subarray(1, 2)).toNumber();
  var encoded = first + (second << 8);
  var period = 2 << encoded % (1 << 4);
  var quantizeFactor = Math.max(period >> 12, 1);
  var phase = (encoded >> 4) * quantizeFactor;

  if (period < 4 || phase >= period) {
    throw new Error('Invalid data passed to Mortal era');
  }

  return [new _typesCodec.U64(registry, period), new _typesCodec.U64(registry, phase)];
}
/** @internal */
// eslint-disable-next-line @typescript-eslint/ban-types


function decodeExtrinsicEra() {
  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Uint8Array();

  if ((0, _util.isU8a)(value)) {
    return !value.length || value[0] === 0 ? new Uint8Array([0]) : new Uint8Array([1, value[0], value[1]]);
  } else if (!value) {
    return new Uint8Array([0]);
  } else if (value instanceof GenericExtrinsicEra) {
    return decodeExtrinsicEra(value.toU8a());
  } else if ((0, _util.isHex)(value)) {
    return decodeExtrinsicEra((0, _util.hexToU8a)(value));
  } else if ((0, _util.isObject)(value)) {
    var entries = Object.entries(value).map(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          k = _ref2[0],
          v = _ref2[1];

      return [k.toLowerCase(), v];
    });
    var mortal = entries.find(function (_ref3) {
      var _ref4 = _slicedToArray(_ref3, 1),
          k = _ref4[0];

      return k.toLowerCase() === 'mortalera';
    });
    var immortal = entries.find(function (_ref5) {
      var _ref6 = _slicedToArray(_ref5, 1),
          k = _ref6[0];

      return k.toLowerCase() === 'immortalera';
    }); // this is to de-serialize from JSON

    return mortal ? {
      MortalEra: mortal[1]
    } : immortal ? {
      ImmortalEra: immortal[1]
    } : {
      MortalEra: value
    };
  }

  throw new Error('Invalid data passed to Era');
}
/**
 * @name ImmortalEra
 * @description
 * The ImmortalEra for an extrinsic
 */


var ImmortalEra = /*#__PURE__*/function (_Raw) {
  _inherits(ImmortalEra, _Raw);

  var _super = _createSuper(ImmortalEra);

  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  function ImmortalEra(registry, value) {
    _classCallCheck(this, ImmortalEra);

    // For immortals, we always provide the known value (i.e. treated as a
    // constant no matter how it is constructed - it is a fixed structure)
    return _super.call(this, registry, _constants.IMMORTAL_ERA);
  }

  return _createClass(ImmortalEra);
}(_typesCodec.Raw);
/**
 * @name MortalEra
 * @description
 * The MortalEra for an extrinsic, indicating period and phase
 */


exports.ImmortalEra = ImmortalEra;

var MortalEra = /*#__PURE__*/function (_Tuple) {
  _inherits(MortalEra, _Tuple);

  var _super2 = _createSuper(MortalEra);

  function MortalEra(registry, value) {
    _classCallCheck(this, MortalEra);

    return _super2.call(this, registry, {
      period: _typesCodec.U64,
      phase: _typesCodec.U64
    }, decodeMortalEra(registry, value));
  }
  /**
   * @description Encoded length for mortals occupy 2 bytes, different from the actual Tuple since it is encoded. This is a shortcut fro `toU8a().length`
   */


  _createClass(MortalEra, [{
    key: "encodedLength",
    get: function get() {
      return 2;
    }
    /**
     * @description The period of this Mortal wraps as a [[U64]]
     */

  }, {
    key: "period",
    get: function get() {
      return this[0];
    }
    /**
     * @description The phase of this Mortal wraps as a [[U64]]
     */

  }, {
    key: "phase",
    get: function get() {
      return this[1];
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */

  }, {
    key: "toHuman",
    value: function toHuman() {
      return {
        period: (0, _util.formatNumber)(this.period),
        phase: (0, _util.formatNumber)(this.phase)
      };
    }
    /**
     * @description Returns a JSON representation of the actual value
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      return this.toHex();
    }
    /**
     * @description Encodes the value as a Uint8Array as per the parity-codec specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     * Period and phase are encoded:
     *   - The period of validity from the block hash found in the signing material.
     *   - The phase in the period that this transaction's lifetime begins (and, importantly,
     *     implies which block hash is included in the signature material). If the `period` is
     *     greater than 1 << 12, then it will be a factor of the times greater than 1<<12 that
     *     `period` is.
     */
    // eslint-disable-next-line @typescript-eslint/no-unused-vars

  }, {
    key: "toU8a",
    value: function toU8a(isBare) {
      var period = this.period.toNumber();
      var encoded = Math.min(15, Math.max(1, getTrailingZeros(period) - 1)) + (this.phase.toNumber() / Math.max(period >> 12, 1) << 4);
      return new Uint8Array([encoded & 0xff, encoded >> 8]);
    }
    /**
     * @description Get the block number of the start of the era whose properties this object describes that `current` belongs to.
     */

  }, {
    key: "birth",
    value: function birth(current) {
      var phase = this.phase.toNumber();
      var period = this.period.toNumber(); // FIXME No toNumber() here

      return ~~((Math.max((0, _util.bnToBn)(current).toNumber(), phase) - phase) / period) * period + phase;
    }
    /**
     * @description Get the block number of the first block at which the era has ended.
     */

  }, {
    key: "death",
    value: function death(current) {
      // FIXME No toNumber() here
      return this.birth(current) + this.period.toNumber();
    }
  }]);

  return MortalEra;
}(_typesCodec.Tuple);
/**
 * @name GenericExtrinsicEra
 * @description
 * The era for an extrinsic, indicating either a mortal or immortal extrinsic
 */


exports.MortalEra = MortalEra;

var GenericExtrinsicEra = /*#__PURE__*/function (_Enum) {
  _inherits(GenericExtrinsicEra, _Enum);

  var _super3 = _createSuper(GenericExtrinsicEra);

  function GenericExtrinsicEra(registry, value) {
    _classCallCheck(this, GenericExtrinsicEra);

    return _super3.call(this, registry, {
      ImmortalEra: ImmortalEra,
      MortalEra: MortalEra
    }, decodeExtrinsicEra(value));
  }
  /**
   * @description Override the encoded length method
   */


  _createClass(GenericExtrinsicEra, [{
    key: "encodedLength",
    get: function get() {
      return this.isImmortalEra ? this.asImmortalEra.encodedLength : this.asMortalEra.encodedLength;
    }
    /**
     * @description Returns the item as a [[ImmortalEra]]
     */

  }, {
    key: "asImmortalEra",
    get: function get() {
      if (!this.isImmortalEra) {
        throw new Error("Cannot convert '".concat(this.type, "' via asImmortalEra"));
      }

      return this.inner;
    }
    /**
     * @description Returns the item as a [[MortalEra]]
     */

  }, {
    key: "asMortalEra",
    get: function get() {
      if (!this.isMortalEra) {
        throw new Error("Cannot convert '".concat(this.type, "' via asMortalEra"));
      }

      return this.inner;
    }
    /**
     * @description `true` if Immortal
     */

  }, {
    key: "isImmortalEra",
    get: function get() {
      return this.index === 0;
    }
    /**
     * @description `true` if Mortal
     */

  }, {
    key: "isMortalEra",
    get: function get() {
      return this.index > 0;
    }
    /**
     * @description Encodes the value as a Uint8Array as per the parity-codec specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */

  }, {
    key: "toU8a",
    value: function toU8a(isBare) {
      return this.isMortalEra ? this.asMortalEra.toU8a(isBare) : this.asImmortalEra.toU8a(isBare);
    }
  }]);

  return GenericExtrinsicEra;
}(_typesCodec.Enum);

exports.GenericExtrinsicEra = GenericExtrinsicEra;
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","./constants.js":"node_modules/@polkadot/types/extrinsic/constants.js"}],"node_modules/@polkadot/types/extrinsic/ExtrinsicPayload.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GenericExtrinsicPayload = void 0;

var _typesCodec = require("@polkadot/types-codec");

var _util = require("@polkadot/util");

var _constants = require("./constants.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var VERSIONS = ['ExtrinsicPayloadUnknown', // v0 is unknown
'ExtrinsicPayloadUnknown', 'ExtrinsicPayloadUnknown', 'ExtrinsicPayloadUnknown', 'ExtrinsicPayloadV4'];
/** @internal */

function decodeExtrinsicPayload(registry, value) {
  var version = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants.DEFAULT_VERSION;

  if (value instanceof GenericExtrinsicPayload) {
    return value.unwrap();
  }

  return registry.createTypeUnsafe(VERSIONS[version] || VERSIONS[0], [value, {
    version: version
  }]);
}
/**
 * @name GenericExtrinsicPayload
 * @description
 * A signing payload for an [[Extrinsic]]. For the final encoding, it is variable length based
 * on the contents included
 */


var GenericExtrinsicPayload = /*#__PURE__*/function (_AbstractBase) {
  _inherits(GenericExtrinsicPayload, _AbstractBase);

  var _super = _createSuper(GenericExtrinsicPayload);

  function GenericExtrinsicPayload(registry, value) {
    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
        version = _ref.version;

    _classCallCheck(this, GenericExtrinsicPayload);

    return _super.call(this, registry, decodeExtrinsicPayload(registry, value, version));
  }
  /**
   * @description The block [[Hash]] the signature applies to (mortal/immortal)
   */


  _createClass(GenericExtrinsicPayload, [{
    key: "blockHash",
    get: function get() {
      return this.inner.blockHash;
    }
    /**
     * @description The [[ExtrinsicEra]]
     */

  }, {
    key: "era",
    get: function get() {
      return this.inner.era;
    }
    /**
     * @description The genesis block [[Hash]] the signature applies to
     */

  }, {
    key: "genesisHash",
    get: function get() {
      // NOTE only v3+
      return this.inner.genesisHash || this.registry.createTypeUnsafe('Hash', []);
    }
    /**
     * @description The [[Raw]] contained in the payload
     */

  }, {
    key: "method",
    get: function get() {
      return this.inner.method;
    }
    /**
     * @description The [[Index]]
     */

  }, {
    key: "nonce",
    get: function get() {
      return this.inner.nonce;
    }
    /**
     * @description The specVersion as a [[u32]] for this payload
     */

  }, {
    key: "specVersion",
    get: function get() {
      // NOTE only v3+
      return this.inner.specVersion || this.registry.createTypeUnsafe('u32', []);
    }
    /**
     * @description The [[Balance]]
     */

  }, {
    key: "tip",
    get: function get() {
      // NOTE from v2+
      return this.inner.tip || this.registry.createTypeUnsafe('Compact<Balance>', []);
    }
    /**
     * @description The transaction version as a [[u32]] for this payload
     */

  }, {
    key: "transactionVersion",
    get: function get() {
      // NOTE only v4+
      return this.inner.transactionVersion || this.registry.createTypeUnsafe('u32', []);
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */

  }, {
    key: "eq",
    value: function eq(other) {
      return this.inner.eq(other);
    }
    /**
     * @description Sign the payload with the keypair
     */

  }, {
    key: "sign",
    value: function sign(signerPair) {
      var signature = this.inner.sign(signerPair); // This is extensible, so we could quite readily extend to send back extra
      // information, such as for instance the payload, i.e. `payload: this.toHex()`
      // For the case here we sign via the extrinsic, we ignore the return, so generally
      // this is applicable for external signing

      return {
        signature: (0, _util.u8aToHex)(signature)
      };
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */

  }, {
    key: "toHuman",
    value: function toHuman(isExtended) {
      return this.inner.toHuman(isExtended);
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      return this.toHex();
    }
    /**
     * @description Returns the string representation of the value
     */

  }, {
    key: "toString",
    value: function toString() {
      return this.toHex();
    }
    /**
     * @description Returns a serialized u8a form
     */

  }, {
    key: "toU8a",
    value: function toU8a(isBare) {
      // call our parent, with only the method stripped
      return _get(_getPrototypeOf(GenericExtrinsicPayload.prototype), "toU8a", this).call(this, isBare ? {
        method: true
      } : false);
    }
  }]);

  return GenericExtrinsicPayload;
}(_typesCodec.AbstractBase);

exports.GenericExtrinsicPayload = GenericExtrinsicPayload;
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","./constants.js":"node_modules/@polkadot/types/extrinsic/constants.js"}],"node_modules/@polkadot/types/extrinsic/ExtrinsicPayloadUnknown.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GenericExtrinsicPayloadUnknown = void 0;

var _typesCodec = require("@polkadot/types-codec");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/**
 * @name GenericExtrinsicPayloadUnknown
 * @description
 * A default handler for payloads where the version is not known (default throw)
 */
var GenericExtrinsicPayloadUnknown = /*#__PURE__*/function (_Struct) {
  _inherits(GenericExtrinsicPayloadUnknown, _Struct);

  var _super = _createSuper(GenericExtrinsicPayloadUnknown);

  function GenericExtrinsicPayloadUnknown(registry, value) {
    var _this;

    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
        _ref$version = _ref.version,
        version = _ref$version === void 0 ? 0 : _ref$version;

    _classCallCheck(this, GenericExtrinsicPayloadUnknown);

    _this = _super.call(this, registry, {});
    throw new Error("Unsupported extrinsic payload version ".concat(version));
    return _this;
  }

  return _createClass(GenericExtrinsicPayloadUnknown);
}(_typesCodec.Struct);

exports.GenericExtrinsicPayloadUnknown = GenericExtrinsicPayloadUnknown;
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js"}],"node_modules/@polkadot/types/extrinsic/ExtrinsicUnknown.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GenericExtrinsicUnknown = void 0;

var _typesCodec = require("@polkadot/types-codec");

var _constants = require("./constants.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/**
 * @name GenericExtrinsicUnknown
 * @description
 * A default handler for extrinsics where the version is not known (default throw)
 */
var GenericExtrinsicUnknown = /*#__PURE__*/function (_Struct) {
  _inherits(GenericExtrinsicUnknown, _Struct);

  var _super = _createSuper(GenericExtrinsicUnknown);

  function GenericExtrinsicUnknown(registry, value) {
    var _this;

    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
        _ref$isSigned = _ref.isSigned,
        isSigned = _ref$isSigned === void 0 ? false : _ref$isSigned,
        _ref$version = _ref.version,
        version = _ref$version === void 0 ? 0 : _ref$version;

    _classCallCheck(this, GenericExtrinsicUnknown);

    _this = _super.call(this, registry, {});
    throw new Error("Unsupported ".concat(isSigned ? '' : 'un', "signed extrinsic version ").concat(version & _constants.UNMASK_VERSION));
    return _this;
  }

  return _createClass(GenericExtrinsicUnknown);
}(_typesCodec.Struct);

exports.GenericExtrinsicUnknown = GenericExtrinsicUnknown;
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","./constants.js":"node_modules/@polkadot/types/extrinsic/constants.js"}],"node_modules/@polkadot/types/extrinsic/SignerPayload.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GenericSignerPayload = void 0;

var _typesCodec = require("@polkadot/types-codec");

var _util = require("@polkadot/util");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

var knownTypes = {
  address: 'Address',
  blockHash: 'Hash',
  blockNumber: 'BlockNumber',
  era: 'ExtrinsicEra',
  genesisHash: 'Hash',
  method: 'Call',
  nonce: 'Compact<Index>',
  runtimeVersion: 'RuntimeVersion',
  signedExtensions: 'Vec<Text>',
  tip: 'Compact<Balance>',
  version: 'u8'
};
/**
 * @name GenericSignerPayload
 * @description
 * A generic signer payload that can be used for serialization between API and signer
 */

var _extraTypes = /*#__PURE__*/new WeakMap();

var GenericSignerPayload = /*#__PURE__*/function (_Struct) {
  _inherits(GenericSignerPayload, _Struct);

  var _super = _createSuper(GenericSignerPayload);

  function GenericSignerPayload(registry, value) {
    var _this;

    _classCallCheck(this, GenericSignerPayload);

    var extensionTypes = (0, _util.objectSpread)({}, registry.getSignedExtensionTypes(), registry.getSignedExtensionExtra());
    _this = _super.call(this, registry, (0, _util.objectSpread)({}, extensionTypes, knownTypes), value);

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _extraTypes, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldSet(_assertThisInitialized(_this), _extraTypes, {});

    var getter = function getter(key) {
      return _this.get(key);
    }; // add all extras that are not in the base types


    for (var _i = 0, _Object$entries = Object.entries(extensionTypes); _i < _Object$entries.length; _i++) {
      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),
          key = _Object$entries$_i[0],
          type = _Object$entries$_i[1];

      if (!knownTypes[key]) {
        _classPrivateFieldGet(_assertThisInitialized(_this), _extraTypes)[key] = type;
      }

      (0, _util.objectProperty)(_assertThisInitialized(_this), key, getter);
    }

    return _this;
  }

  _createClass(GenericSignerPayload, [{
    key: "address",
    get: function get() {
      return this.getT('address');
    }
  }, {
    key: "blockHash",
    get: function get() {
      return this.getT('blockHash');
    }
  }, {
    key: "blockNumber",
    get: function get() {
      return this.getT('blockNumber');
    }
  }, {
    key: "era",
    get: function get() {
      return this.getT('era');
    }
  }, {
    key: "genesisHash",
    get: function get() {
      return this.getT('genesisHash');
    }
  }, {
    key: "method",
    get: function get() {
      return this.getT('method');
    }
  }, {
    key: "nonce",
    get: function get() {
      return this.getT('nonce');
    }
  }, {
    key: "runtimeVersion",
    get: function get() {
      return this.getT('runtimeVersion');
    }
  }, {
    key: "signedExtensions",
    get: function get() {
      return this.getT('signedExtensions');
    }
  }, {
    key: "tip",
    get: function get() {
      return this.getT('tip');
    }
  }, {
    key: "version",
    get: function get() {
      return this.getT('version');
    }
    /**
     * @description Creates an representation of the structure as an ISignerPayload JSON
     */

  }, {
    key: "toPayload",
    value: function toPayload() {
      var result = {};
      var keys = Object.keys(_classPrivateFieldGet(this, _extraTypes)); // add any explicit overrides we may have

      for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        var value = this.get(key);
        var isOption = value instanceof _typesCodec.Option; // Don't include Option.isNone

        if (!isOption || value.isSome) {
          result[key] = value.toHex();
        }
      }

      return (0, _util.objectSpread)(result, {
        // the known defaults as managed explicitly and has different
        // formatting in cases, e.g. we mostly expose a hex format here
        address: this.address.toString(),
        blockHash: this.blockHash.toHex(),
        blockNumber: this.blockNumber.toHex(),
        era: this.era.toHex(),
        genesisHash: this.genesisHash.toHex(),
        method: this.method.toHex(),
        nonce: this.nonce.toHex(),
        signedExtensions: this.signedExtensions.map(function (e) {
          return e.toString();
        }),
        specVersion: this.runtimeVersion.specVersion.toHex(),
        tip: this.tip.toHex(),
        transactionVersion: this.runtimeVersion.transactionVersion.toHex(),
        version: this.version.toNumber()
      });
    }
    /**
     * @description Creates a representation of the payload in raw Exrinsic form
     */

  }, {
    key: "toRaw",
    value: function toRaw() {
      var payload = this.toPayload();
      var data = (0, _util.u8aToHex)(this.registry.createTypeUnsafe('ExtrinsicPayload', [payload, {
        version: payload.version
      }]) // NOTE Explicitly pass the bare flag so the method is encoded un-prefixed (non-decodable, for signing only)
      .toU8a({
        method: true
      }));
      return {
        address: payload.address,
        data: data,
        type: 'payload'
      };
    }
  }]);

  return GenericSignerPayload;
}(_typesCodec.Struct);

exports.GenericSignerPayload = GenericSignerPayload;
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types/extrinsic/util.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sign = sign;

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// a helper function for both types of payloads, Raw and metadata-known
function sign(registry, signerPair, u8a, options) {
  var encoded = u8a.length > 256 ? registry.hash(u8a) : u8a;
  return signerPair.sign(encoded, options);
}
},{}],"node_modules/@polkadot/types/extrinsic/v4/ExtrinsicPayload.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GenericExtrinsicPayloadV4 = void 0;

var _typesCodec = require("@polkadot/types-codec");

var _util = require("@polkadot/util");

var _util2 = require("../util.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

var _signOptions = /*#__PURE__*/new WeakMap();

/**
 * @name GenericExtrinsicPayloadV4
 * @description
 * A signing payload for an [[Extrinsic]]. For the final encoding, it is
 * variable length based on the contents included
 */
var GenericExtrinsicPayloadV4 = /*#__PURE__*/function (_Struct) {
  _inherits(GenericExtrinsicPayloadV4, _Struct);

  var _super = _createSuper(GenericExtrinsicPayloadV4);

  function GenericExtrinsicPayloadV4(registry, value) {
    var _this;

    _classCallCheck(this, GenericExtrinsicPayloadV4);

    _this = _super.call(this, registry, (0, _util.objectSpread)({
      method: 'Bytes'
    }, registry.getSignedExtensionTypes(), registry.getSignedExtensionExtra()), value); // Do detection for the type of extrinsic, in the case of MultiSignature
    // this is an enum, in the case of AnySignature, this is a Hash only
    // (which may be 64 or 65 bytes)

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _signOptions, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldSet(_assertThisInitialized(_this), _signOptions, {
      withType: registry.createTypeUnsafe('ExtrinsicSignature', []) instanceof _typesCodec.Enum
    });

    return _this;
  }
  /**
   * @description Returns a breakdown of the hex encoding for this Codec
   */


  _createClass(GenericExtrinsicPayloadV4, [{
    key: "inspect",
    value: function inspect() {
      return _get(_getPrototypeOf(GenericExtrinsicPayloadV4.prototype), "inspect", this).call(this, {
        method: true
      });
    }
    /**
     * @description The block [[Hash]] the signature applies to (mortal/immortal)
     */

  }, {
    key: "blockHash",
    get: function get() {
      return this.getT('blockHash');
    }
    /**
     * @description The [[ExtrinsicEra]]
     */

  }, {
    key: "era",
    get: function get() {
      return this.getT('era');
    }
    /**
     * @description The genesis [[Hash]] the signature applies to (mortal/immortal)
     */

  }, {
    key: "genesisHash",
    get: function get() {
      return this.getT('genesisHash');
    }
    /**
     * @description The [[Bytes]] contained in the payload
     */

  }, {
    key: "method",
    get: function get() {
      return this.getT('method');
    }
    /**
     * @description The [[Index]]
     */

  }, {
    key: "nonce",
    get: function get() {
      return this.getT('nonce');
    }
    /**
     * @description The specVersion for this signature
     */

  }, {
    key: "specVersion",
    get: function get() {
      return this.getT('specVersion');
    }
    /**
     * @description The tip [[Balance]]
     */

  }, {
    key: "tip",
    get: function get() {
      return this.getT('tip');
    }
    /**
     * @description The transactionVersion for this signature
     */

  }, {
    key: "transactionVersion",
    get: function get() {
      return this.getT('transactionVersion');
    }
    /**
     * @description
     * The (optional) asset id for this signature for chains that support transaction fees in assets
     */

  }, {
    key: "assetId",
    get: function get() {
      return this.getT('assetId');
    }
    /**
     * @description Sign the payload with the keypair
     */

  }, {
    key: "sign",
    value: function sign(signerPair) {
      // NOTE The `toU8a({ method: true })` argument is absolutely critical, we
      // don't want the method (Bytes) to have the length prefix included. This
      // means that the data-as-signed is un-decodable, but is also doesn't need
      // the extra information, only the pure data (and is not decoded) ...
      // The same applies to V1..V3, if we have a V5, carrythis comment
      return (0, _util2.sign)(this.registry, signerPair, this.toU8a({
        method: true
      }), _classPrivateFieldGet(this, _signOptions));
    }
  }]);

  return GenericExtrinsicPayloadV4;
}(_typesCodec.Struct);

exports.GenericExtrinsicPayloadV4 = GenericExtrinsicPayloadV4;
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../util.js":"node_modules/@polkadot/types/extrinsic/util.js"}],"node_modules/@polkadot/types/extrinsic/v4/ExtrinsicSignature.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GenericExtrinsicSignatureV4 = void 0;

var _typesCodec = require("@polkadot/types-codec");

var _util = require("@polkadot/util");

var _constants = require("../constants.js");

var _ExtrinsicPayload = require("./ExtrinsicPayload.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

// Ensure we have enough data for all types of signatures
var FAKE_SIGNATURE = new Uint8Array(256).fill(1);

function toAddress(registry, address) {
  return registry.createTypeUnsafe('Address', [(0, _util.isU8a)(address) ? (0, _util.u8aToHex)(address) : address]);
}
/**
 * @name GenericExtrinsicSignatureV4
 * @description
 * A container for the [[Signature]] associated with a specific [[Extrinsic]]
 */


var _signKeys = /*#__PURE__*/new WeakMap();

var GenericExtrinsicSignatureV4 = /*#__PURE__*/function (_Struct) {
  _inherits(GenericExtrinsicSignatureV4, _Struct);

  var _super = _createSuper(GenericExtrinsicSignatureV4);

  function GenericExtrinsicSignatureV4(registry, value) {
    var _this;

    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
        isSigned = _ref.isSigned;

    _classCallCheck(this, GenericExtrinsicSignatureV4);

    var signTypes = registry.getSignedExtensionTypes();
    _this = _super.call(this, registry, (0, _util.objectSpread)( // eslint-disable-next-line sort-keys
    {
      signer: 'Address',
      signature: 'ExtrinsicSignature'
    }, signTypes), GenericExtrinsicSignatureV4.decodeExtrinsicSignature(value, isSigned));

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _signKeys, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldSet(_assertThisInitialized(_this), _signKeys, Object.keys(signTypes));

    (0, _util.objectProperties)(_assertThisInitialized(_this), _classPrivateFieldGet(_assertThisInitialized(_this), _signKeys), function (k) {
      return _this.get(k);
    });
    return _this;
  }
  /** @internal */


  _createClass(GenericExtrinsicSignatureV4, [{
    key: "encodedLength",
    get:
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    function get() {
      return this.isSigned ? _get(_getPrototypeOf(GenericExtrinsicSignatureV4.prototype), "encodedLength", this) : 0;
    }
    /**
     * @description `true` if the signature is valid
     */

  }, {
    key: "isSigned",
    get: function get() {
      return !this.signature.isEmpty;
    }
    /**
     * @description The [[ExtrinsicEra]] (mortal or immortal) this signature applies to
     */

  }, {
    key: "era",
    get: function get() {
      return this.getT('era');
    }
    /**
     * @description The [[Index]] for the signature
     */

  }, {
    key: "nonce",
    get: function get() {
      return this.getT('nonce');
    }
    /**
     * @description The actual [[EcdsaSignature]], [[Ed25519Signature]] or [[Sr25519Signature]]
     */

  }, {
    key: "signature",
    get: function get() {
      // the second case here is when we don't have an enum signature, treat as raw
      return this.multiSignature.value || this.multiSignature;
    }
    /**
     * @description The raw [[ExtrinsicSignature]]
     */

  }, {
    key: "multiSignature",
    get: function get() {
      return this.getT('signature');
    }
    /**
     * @description The [[Address]] that signed
     */

  }, {
    key: "signer",
    get: function get() {
      return this.getT('signer');
    }
    /**
     * @description The [[Balance]] tip
     */

  }, {
    key: "tip",
    get: function get() {
      return this.getT('tip');
    }
  }, {
    key: "_injectSignature",
    value: function _injectSignature(signer, signature, payload) {
      // use the fields exposed to guide the getters
      for (var i = 0; i < _classPrivateFieldGet(this, _signKeys).length; i++) {
        var k = _classPrivateFieldGet(this, _signKeys)[i];

        var v = payload.get(k);

        if (!(0, _util.isUndefined)(v)) {
          this.set(k, v);
        }
      } // additional fields (exposed in struct itself)


      this.set('signer', signer);
      this.set('signature', signature);
      return this;
    }
    /**
     * @description Adds a raw signature
     */

  }, {
    key: "addSignature",
    value: function addSignature(signer, signature, payload) {
      return this._injectSignature(toAddress(this.registry, signer), this.registry.createTypeUnsafe('ExtrinsicSignature', [signature]), new _ExtrinsicPayload.GenericExtrinsicPayloadV4(this.registry, payload));
    }
    /**
     * @description Creates a payload from the supplied options
     */

  }, {
    key: "createPayload",
    value: function createPayload(method, options) {
      var era = options.era,
          _options$runtimeVersi = options.runtimeVersion,
          specVersion = _options$runtimeVersi.specVersion,
          transactionVersion = _options$runtimeVersi.transactionVersion;
      return new _ExtrinsicPayload.GenericExtrinsicPayloadV4(this.registry, (0, _util.objectSpread)({}, options, {
        era: era || _constants.IMMORTAL_ERA,
        method: method.toHex(),
        specVersion: specVersion,
        transactionVersion: transactionVersion
      }));
    }
    /**
     * @description Generate a payload and applies the signature from a keypair
     */

  }, {
    key: "sign",
    value: function sign(method, account, options) {
      if (!account || !account.addressRaw) {
        throw new Error("Expected a valid keypair for signing, found ".concat((0, _util.stringify)(account)));
      }

      var payload = this.createPayload(method, options);
      return this._injectSignature(toAddress(this.registry, account.addressRaw), this.registry.createTypeUnsafe('ExtrinsicSignature', [payload.sign(account)]), payload);
    }
    /**
     * @description Generate a payload and applies a fake signature
     */

  }, {
    key: "signFake",
    value: function signFake(method, address, options) {
      if (!address) {
        throw new Error("Expected a valid address for signing, found ".concat((0, _util.stringify)(address)));
      }

      var payload = this.createPayload(method, options);
      return this._injectSignature(toAddress(this.registry, address), this.registry.createTypeUnsafe('ExtrinsicSignature', [FAKE_SIGNATURE]), payload);
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */

  }, {
    key: "toU8a",
    value: function toU8a(isBare) {
      return this.isSigned ? _get(_getPrototypeOf(GenericExtrinsicSignatureV4.prototype), "toU8a", this).call(this, isBare) : _constants.EMPTY_U8A;
    }
  }], [{
    key: "decodeExtrinsicSignature",
    value: function decodeExtrinsicSignature(value) {
      var isSigned = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      if (!value) {
        return _constants.EMPTY_U8A;
      } else if (value instanceof GenericExtrinsicSignatureV4) {
        return value;
      }

      return isSigned ? value : _constants.EMPTY_U8A;
    }
  }]);

  return GenericExtrinsicSignatureV4;
}(_typesCodec.Struct);

exports.GenericExtrinsicSignatureV4 = GenericExtrinsicSignatureV4;
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../constants.js":"node_modules/@polkadot/types/extrinsic/constants.js","./ExtrinsicPayload.js":"node_modules/@polkadot/types/extrinsic/v4/ExtrinsicPayload.js"}],"node_modules/@polkadot/types/extrinsic/v4/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "GenericExtrinsicPayloadV4", {
  enumerable: true,
  get: function () {
    return _ExtrinsicPayload.GenericExtrinsicPayloadV4;
  }
});
Object.defineProperty(exports, "GenericExtrinsicSignatureV4", {
  enumerable: true,
  get: function () {
    return _ExtrinsicSignature.GenericExtrinsicSignatureV4;
  }
});
Object.defineProperty(exports, "GenericExtrinsicV4", {
  enumerable: true,
  get: function () {
    return _Extrinsic.GenericExtrinsicV4;
  }
});

var _Extrinsic = require("./Extrinsic.js");

var _ExtrinsicPayload = require("./ExtrinsicPayload.js");

var _ExtrinsicSignature = require("./ExtrinsicSignature.js");
},{"./Extrinsic.js":"node_modules/@polkadot/types/extrinsic/v4/Extrinsic.js","./ExtrinsicPayload.js":"node_modules/@polkadot/types/extrinsic/v4/ExtrinsicPayload.js","./ExtrinsicSignature.js":"node_modules/@polkadot/types/extrinsic/v4/ExtrinsicSignature.js"}],"node_modules/@polkadot/types/extrinsic/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  GenericExtrinsic: true,
  GenericExtrinsicEra: true,
  GenericMortalEra: true,
  GenericImmortalEra: true,
  GenericExtrinsicPayload: true,
  GenericExtrinsicPayloadUnknown: true,
  GenericExtrinsicUnknown: true,
  GenericSignerPayload: true
};
Object.defineProperty(exports, "GenericExtrinsic", {
  enumerable: true,
  get: function () {
    return _Extrinsic.GenericExtrinsic;
  }
});
Object.defineProperty(exports, "GenericExtrinsicEra", {
  enumerable: true,
  get: function () {
    return _ExtrinsicEra.GenericExtrinsicEra;
  }
});
Object.defineProperty(exports, "GenericExtrinsicPayload", {
  enumerable: true,
  get: function () {
    return _ExtrinsicPayload.GenericExtrinsicPayload;
  }
});
Object.defineProperty(exports, "GenericExtrinsicPayloadUnknown", {
  enumerable: true,
  get: function () {
    return _ExtrinsicPayloadUnknown.GenericExtrinsicPayloadUnknown;
  }
});
Object.defineProperty(exports, "GenericExtrinsicUnknown", {
  enumerable: true,
  get: function () {
    return _ExtrinsicUnknown.GenericExtrinsicUnknown;
  }
});
Object.defineProperty(exports, "GenericImmortalEra", {
  enumerable: true,
  get: function () {
    return _ExtrinsicEra.ImmortalEra;
  }
});
Object.defineProperty(exports, "GenericMortalEra", {
  enumerable: true,
  get: function () {
    return _ExtrinsicEra.MortalEra;
  }
});
Object.defineProperty(exports, "GenericSignerPayload", {
  enumerable: true,
  get: function () {
    return _SignerPayload.GenericSignerPayload;
  }
});

var _Extrinsic = require("./Extrinsic.js");

var _ExtrinsicEra = require("./ExtrinsicEra.js");

var _ExtrinsicPayload = require("./ExtrinsicPayload.js");

var _ExtrinsicPayloadUnknown = require("./ExtrinsicPayloadUnknown.js");

var _ExtrinsicUnknown = require("./ExtrinsicUnknown.js");

var _SignerPayload = require("./SignerPayload.js");

var _index = require("./v4/index.js");

Object.keys(_index).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index[key];
    }
  });
});
},{"./Extrinsic.js":"node_modules/@polkadot/types/extrinsic/Extrinsic.js","./ExtrinsicEra.js":"node_modules/@polkadot/types/extrinsic/ExtrinsicEra.js","./ExtrinsicPayload.js":"node_modules/@polkadot/types/extrinsic/ExtrinsicPayload.js","./ExtrinsicPayloadUnknown.js":"node_modules/@polkadot/types/extrinsic/ExtrinsicPayloadUnknown.js","./ExtrinsicUnknown.js":"node_modules/@polkadot/types/extrinsic/ExtrinsicUnknown.js","./SignerPayload.js":"node_modules/@polkadot/types/extrinsic/SignerPayload.js","./v4/index.js":"node_modules/@polkadot/types/extrinsic/v4/index.js"}],"node_modules/@polkadot/types/ethereum/AccountId.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GenericEthereumAccountId = void 0;

var _typesCodec = require("@polkadot/types-codec");

var _util = require("@polkadot/util");

var _utilCrypto = require("@polkadot/util-crypto");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/** @internal */
function decodeAccountId(value) {
  if ((0, _util.isU8a)(value) || Array.isArray(value)) {
    return (0, _util.u8aToU8a)(value);
  } else if ((0, _util.isHex)(value) || (0, _utilCrypto.isEthereumAddress)(value.toString())) {
    return (0, _util.hexToU8a)(value.toString());
  } else if ((0, _util.isString)(value)) {
    return (0, _util.u8aToU8a)(value);
  }

  return value;
}
/**
 * @name GenericEthereumAccountId
 * @description
 * A wrapper around an Ethereum-compatible AccountId. Since we are dealing with
 * underlying addresses (20 bytes in length), we extend from U8aFixed which is
 * just a Uint8Array wrapper with a fixed length.
 */


var GenericEthereumAccountId = /*#__PURE__*/function (_U8aFixed) {
  _inherits(GenericEthereumAccountId, _U8aFixed);

  var _super = _createSuper(GenericEthereumAccountId);

  function GenericEthereumAccountId(registry) {
    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Uint8Array();

    _classCallCheck(this, GenericEthereumAccountId);

    return _super.call(this, registry, decodeAccountId(value), 160);
  }
  /**
   * @description Compares the value of the input to see if there is a match
   */


  _createClass(GenericEthereumAccountId, [{
    key: "eq",
    value: function eq(other) {
      return _get(_getPrototypeOf(GenericEthereumAccountId.prototype), "eq", this).call(this, decodeAccountId(other));
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */

  }, {
    key: "toHuman",
    value: function toHuman() {
      return this.toJSON();
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      return this.toString();
    }
    /**
     * @description Returns the string representation of the value
     */

  }, {
    key: "toString",
    value: function toString() {
      return (0, _utilCrypto.ethereumEncode)(this);
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return 'AccountId';
    }
  }]);

  return GenericEthereumAccountId;
}(_typesCodec.U8aFixed);

exports.GenericEthereumAccountId = GenericEthereumAccountId;
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/util-crypto":"node_modules/@polkadot/util-crypto/index.js"}],"node_modules/@polkadot/types/generic/AccountIndex.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GenericAccountIndex = void 0;

var _typesCodec = require("@polkadot/types-codec");

var _util = require("@polkadot/util");

var _utilCrypto = require("@polkadot/util-crypto");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var PREFIX_1BYTE = 0xef;
var PREFIX_2BYTE = 0xfc;
var PREFIX_4BYTE = 0xfd;
var PREFIX_8BYTE = 0xfe;
var MAX_1BYTE = new _util.BN(PREFIX_1BYTE);
var MAX_2BYTE = new _util.BN(1).shln(16);
var MAX_4BYTE = new _util.BN(1).shln(32);
/** @internal */

function decodeAccountIndex(value) {
  // eslint-disable-next-line @typescript-eslint/no-use-before-define
  if (value instanceof GenericAccountIndex) {
    // `value.toBn()` on AccountIndex returns a pure BN (i.e. not an
    // AccountIndex), which has the initial `toString()` implementation.
    return value.toBn();
  } else if ((0, _util.isBn)(value) || (0, _util.isNumber)(value) || (0, _util.isHex)(value) || (0, _util.isU8a)(value) || (0, _util.isBigInt)(value)) {
    return value;
  }

  return decodeAccountIndex((0, _utilCrypto.decodeAddress)(value));
}
/**
 * @name GenericAccountIndex
 * @description
 * A wrapper around an AccountIndex, which is a shortened, variable-length encoding
 * for an Account. We extends from [[U32]] to provide the number-like properties.
 */


var GenericAccountIndex = /*#__PURE__*/function (_u) {
  _inherits(GenericAccountIndex, _u);

  var _super = _createSuper(GenericAccountIndex);

  function GenericAccountIndex(registry) {
    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new _util.BN(0);

    _classCallCheck(this, GenericAccountIndex);

    return _super.call(this, registry, decodeAccountIndex(value));
  }

  _createClass(GenericAccountIndex, [{
    key: "eq",
    value:
    /**
     * @description Compares the value of the input to see if there is a match
     */
    function eq(other) {
      // shortcut for BN or Number, don't create an object
      if ((0, _util.isBn)(other) || (0, _util.isNumber)(other)) {
        return _get(_getPrototypeOf(GenericAccountIndex.prototype), "eq", this).call(this, other);
      } // convert and compare


      return _get(_getPrototypeOf(GenericAccountIndex.prototype), "eq", this).call(this, this.registry.createTypeUnsafe('AccountIndex', [other]));
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */

  }, {
    key: "toHuman",
    value: function toHuman() {
      return this.toJSON();
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      return this.toString();
    }
    /**
     * @description Returns the string representation of the value
     */

  }, {
    key: "toString",
    value: function toString() {
      var length = GenericAccountIndex.calcLength(this);
      return (0, _utilCrypto.encodeAddress)(this.toU8a().subarray(0, length), this.registry.chainSS58);
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return 'AccountIndex';
    }
  }], [{
    key: "calcLength",
    value: function calcLength(_value) {
      var value = (0, _util.bnToBn)(_value);

      if (value.lte(MAX_1BYTE)) {
        return 1;
      } else if (value.lt(MAX_2BYTE)) {
        return 2;
      } else if (value.lt(MAX_4BYTE)) {
        return 4;
      }

      return 8;
    }
  }, {
    key: "readLength",
    value: function readLength(input) {
      var first = input[0];

      if (first === PREFIX_2BYTE) {
        return [1, 2];
      } else if (first === PREFIX_4BYTE) {
        return [1, 4];
      } else if (first === PREFIX_8BYTE) {
        return [1, 8];
      }

      return [0, 1];
    }
  }, {
    key: "writeLength",
    value: function writeLength(input) {
      switch (input.length) {
        case 2:
          return new Uint8Array([PREFIX_2BYTE]);

        case 4:
          return new Uint8Array([PREFIX_4BYTE]);

        case 8:
          return new Uint8Array([PREFIX_8BYTE]);

        default:
          return new Uint8Array([]);
      }
    }
  }]);

  return GenericAccountIndex;
}(_typesCodec.u32);

exports.GenericAccountIndex = GenericAccountIndex;
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/util-crypto":"node_modules/@polkadot/util-crypto/index.js"}],"node_modules/@polkadot/types/ethereum/LookupSource.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GenericEthereumLookupSource = exports.ACCOUNT_ID_PREFIX = void 0;

var _typesCodec = require("@polkadot/types-codec");

var _util = require("@polkadot/util");

var _utilCrypto = require("@polkadot/util-crypto");

var _AccountIndex = require("../generic/AccountIndex.js");

var _AccountId = require("./AccountId.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

// eslint-disable-next-line no-use-before-define
var ACCOUNT_ID_PREFIX = new Uint8Array([0xff]);
/** @internal */

exports.ACCOUNT_ID_PREFIX = ACCOUNT_ID_PREFIX;

function decodeString(registry, value) {
  var decoded = (0, _utilCrypto.decodeAddress)(value);
  return decoded.length === 20 ? registry.createTypeUnsafe('EthereumAccountId', [decoded]) : registry.createTypeUnsafe('AccountIndex', [(0, _util.u8aToBn)(decoded, true)]);
}
/** @internal */


function decodeU8a(registry, value) {
  // This allows us to instantiate an address with a raw publicKey. Do this first before
  // we checking the first byte, otherwise we may split an already-existent valid address
  if (value.length === 20) {
    return registry.createTypeUnsafe('EthereumAccountId', [value]);
  } else if (value[0] === 0xff) {
    return registry.createTypeUnsafe('EthereumAccountId', [value.subarray(1)]);
  }

  var _GenericAccountIndex$ = _AccountIndex.GenericAccountIndex.readLength(value),
      _GenericAccountIndex$2 = _slicedToArray(_GenericAccountIndex$, 2),
      offset = _GenericAccountIndex$2[0],
      length = _GenericAccountIndex$2[1];

  return registry.createTypeUnsafe('AccountIndex', [(0, _util.u8aToBn)(value.subarray(offset, offset + length))]);
}

function decodeAddressOrIndex(registry, value) {
  return value instanceof GenericEthereumLookupSource ? value.inner : value instanceof _AccountId.GenericEthereumAccountId || value instanceof _AccountIndex.GenericAccountIndex ? value : (0, _util.isU8a)(value) || Array.isArray(value) || (0, _util.isHex)(value) ? decodeU8a(registry, (0, _util.u8aToU8a)(value)) : (0, _util.isBn)(value) || (0, _util.isNumber)(value) || (0, _util.isBigInt)(value) ? registry.createTypeUnsafe('AccountIndex', [value]) : decodeString(registry, value);
}
/**
 * @name GenericEthereumLookupSource
 * @description
 * A wrapper around an EthereumAccountId and/or AccountIndex that is encoded with a prefix.
 * Since we are dealing with underlying publicKeys (or shorter encoded addresses),
 * we extend from Base with an AccountId/AccountIndex wrapper. Basically the Address
 * is encoded as `[ <prefix-byte>, ...publicKey/...bytes ]` as per spec
 */


var GenericEthereumLookupSource = /*#__PURE__*/function (_AbstractBase) {
  _inherits(GenericEthereumLookupSource, _AbstractBase);

  var _super = _createSuper(GenericEthereumLookupSource);

  function GenericEthereumLookupSource(registry) {
    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Uint8Array();

    _classCallCheck(this, GenericEthereumLookupSource);

    return _super.call(this, registry, decodeAddressOrIndex(registry, value));
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  _createClass(GenericEthereumLookupSource, [{
    key: "encodedLength",
    get: function get() {
      var rawLength = this._rawLength;
      return rawLength + ( // for 1 byte AccountIndexes, we are not adding a specific prefix
      rawLength > 1 ? 1 : 0);
    }
    /**
     * @description The length of the raw value, either AccountIndex or AccountId
     */

  }, {
    key: "_rawLength",
    get: function get() {
      return this.inner instanceof _AccountIndex.GenericAccountIndex ? _AccountIndex.GenericAccountIndex.calcLength(this.inner) : this.inner.encodedLength;
    }
    /**
     * @description Returns a hex string representation of the value
     */

  }, {
    key: "toHex",
    value: function toHex() {
      return (0, _util.u8aToHex)(this.toU8a());
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return 'Address';
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */

  }, {
    key: "toU8a",
    value: function toU8a(isBare) {
      var encoded = this.inner.toU8a().subarray(0, this._rawLength);
      return isBare ? encoded : (0, _util.u8aConcat)(this.inner instanceof _AccountIndex.GenericAccountIndex ? _AccountIndex.GenericAccountIndex.writeLength(encoded) : ACCOUNT_ID_PREFIX, encoded);
    }
  }]);

  return GenericEthereumLookupSource;
}(_typesCodec.AbstractBase);

exports.GenericEthereumLookupSource = GenericEthereumLookupSource;
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/util-crypto":"node_modules/@polkadot/util-crypto/index.js","../generic/AccountIndex.js":"node_modules/@polkadot/types/generic/AccountIndex.js","./AccountId.js":"node_modules/@polkadot/types/ethereum/AccountId.js"}],"node_modules/@polkadot/types/ethereum/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "GenericEthereumAccountId", {
  enumerable: true,
  get: function () {
    return _AccountId.GenericEthereumAccountId;
  }
});
Object.defineProperty(exports, "GenericEthereumLookupSource", {
  enumerable: true,
  get: function () {
    return _LookupSource.GenericEthereumLookupSource;
  }
});

var _AccountId = require("./AccountId.js");

var _LookupSource = require("./LookupSource.js");
},{"./AccountId.js":"node_modules/@polkadot/types/ethereum/AccountId.js","./LookupSource.js":"node_modules/@polkadot/types/ethereum/LookupSource.js"}],"node_modules/@polkadot/types/generic/AccountId.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GenericAccountId = void 0;

var _typesCodec = require("@polkadot/types-codec");

var _util = require("@polkadot/util");

var _utilCrypto = require("@polkadot/util-crypto");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

/** @internal */
function decodeAccountId(value) {
  if ((0, _util.isU8a)(value) || Array.isArray(value)) {
    return (0, _util.u8aToU8a)(value);
  } else if (!value) {
    return new Uint8Array();
  } else if ((0, _util.isHex)(value)) {
    return (0, _util.hexToU8a)(value);
  } else if ((0, _util.isString)(value)) {
    return (0, _utilCrypto.decodeAddress)(value.toString());
  }

  throw new Error("Unknown type passed to AccountId constructor, found typeof ".concat(_typeof(value)));
}
/**
 * @name GenericAccountId
 * @description
 * A wrapper around an AccountId/PublicKey representation. Since we are dealing with
 * underlying PublicKeys (32 bytes in length), we extend from U8aFixed which is
 * just a Uint8Array wrapper with a fixed length.
 */


var GenericAccountId = /*#__PURE__*/function (_U8aFixed) {
  _inherits(GenericAccountId, _U8aFixed);

  var _super = _createSuper(GenericAccountId);

  function GenericAccountId(registry, value) {
    _classCallCheck(this, GenericAccountId);

    var decoded = decodeAccountId(value); // Part of stream containing >= 32 bytes or a all empty (defaults)

    if (decoded.length < 32 && decoded.some(function (b) {
      return b;
    })) {
      throw new Error("Invalid AccountId provided, expected 32 bytes, found ".concat(decoded.length));
    }

    return _super.call(this, registry, decoded, 256);
  }
  /**
   * @description Compares the value of the input to see if there is a match
   */


  _createClass(GenericAccountId, [{
    key: "eq",
    value: function eq(other) {
      return _get(_getPrototypeOf(GenericAccountId.prototype), "eq", this).call(this, decodeAccountId(other));
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */

  }, {
    key: "toHuman",
    value: function toHuman() {
      return this.toJSON();
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      return this.toString();
    }
    /**
     * @description Returns the string representation of the value
     */

  }, {
    key: "toString",
    value: function toString() {
      return (0, _utilCrypto.encodeAddress)(this, this.registry.chainSS58);
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return 'AccountId';
    }
  }]);

  return GenericAccountId;
}(_typesCodec.U8aFixed);

exports.GenericAccountId = GenericAccountId;
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/util-crypto":"node_modules/@polkadot/util-crypto/index.js"}],"node_modules/@polkadot/types/generic/Block.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GenericBlock = void 0;

var _typesCodec = require("@polkadot/types-codec");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/**
 * @name GenericBlock
 * @description
 * A block encoded with header and extrinsics
 */
var GenericBlock = /*#__PURE__*/function (_Struct) {
  _inherits(GenericBlock, _Struct);

  var _super = _createSuper(GenericBlock);

  function GenericBlock(registry, value) {
    _classCallCheck(this, GenericBlock);

    return _super.call(this, registry, {
      header: 'Header',
      // eslint-disable-next-line sort-keys
      extrinsics: 'Vec<Extrinsic>'
    }, value);
  }
  /**
   * @description Encodes a content [[Hash]] for the block
   */


  _createClass(GenericBlock, [{
    key: "contentHash",
    get: function get() {
      return this.registry.hash(this.toU8a());
    }
    /**
     * @description The [[Extrinsic]] contained in the block
     */

  }, {
    key: "extrinsics",
    get: function get() {
      return this.getT('extrinsics');
    }
    /**
     * @description Block/header [[Hash]]
     */

  }, {
    key: "hash",
    get: function get() {
      return this.header.hash;
    }
    /**
     * @description The [[Header]] of the block
     */

  }, {
    key: "header",
    get: function get() {
      return this.getT('header');
    }
  }]);

  return GenericBlock;
}(_typesCodec.Struct);

exports.GenericBlock = GenericBlock;
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js"}],"node_modules/@polkadot/types/generic/Call.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GenericCallIndex = exports.GenericCall = void 0;

var _typesCodec = require("@polkadot/types-codec");

var _util = require("@polkadot/util");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

/**
 * Get a mapping of `argument name -> argument type` for the function, from
 * its metadata.
 *
 * @param meta - The function metadata used to get the definition.
 * @internal
 */
function getArgsDef(registry, meta) {
  return meta.fields.reduce(function (result, _ref, index) {
    var name = _ref.name,
        type = _ref.type;
    result[name.unwrapOr("param".concat(index)).toString()] = registry.createLookupType(type);
    return result;
  }, {});
}
/** @internal */


function decodeCallViaObject(registry, value, _meta) {
  // we only pass args/methodsIndex out
  var args = value.args,
      callIndex = value.callIndex; // Get the correct lookupIndex
  // eslint-disable-next-line @typescript-eslint/no-use-before-define

  var lookupIndex = callIndex instanceof GenericCallIndex ? callIndex.toU8a() : callIndex; // Find metadata with callIndex

  var meta = _meta || registry.findMetaCall(lookupIndex).meta;

  return {
    args: args,
    argsDef: getArgsDef(registry, meta),
    callIndex: callIndex,
    meta: meta
  };
}
/** @internal */


function decodeCallViaU8a(registry, value, _meta) {
  // We need 2 bytes for the callIndex
  var callIndex = registry.firstCallIndex.slice();
  callIndex.set(value.subarray(0, 2), 0); // Find metadata with callIndex

  var meta = _meta || registry.findMetaCall(callIndex).meta;

  return {
    args: value.subarray(2),
    argsDef: getArgsDef(registry, meta),
    callIndex: callIndex,
    meta: meta
  };
}
/**
 * Decode input to pass into constructor.
 *
 * @param value - Value to decode, one of:
 * - hex
 * - Uint8Array
 * - {@see DecodeMethodInput}
 * @param _meta - Metadata to use, so that `injectMethods` lookup is not
 * necessary.
 * @internal
 */


function decodeCall(registry) {
  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Uint8Array();

  var _meta = arguments.length > 2 ? arguments[2] : undefined;

  if ((0, _util.isU8a)(value) || (0, _util.isHex)(value)) {
    return decodeCallViaU8a(registry, (0, _util.u8aToU8a)(value), _meta);
  } else if ((0, _util.isObject)(value) && value.callIndex && value.args) {
    return decodeCallViaObject(registry, value, _meta);
  }

  throw new Error("Call: Cannot decode value '".concat(value, "' of type ").concat(_typeof(value)));
}
/**
 * @name GenericCallIndex
 * @description
 * A wrapper around the `[sectionIndex, methodIndex]` value that uniquely identifies a method
 */


var GenericCallIndex = /*#__PURE__*/function (_U8aFixed) {
  _inherits(GenericCallIndex, _U8aFixed);

  var _super = _createSuper(GenericCallIndex);

  function GenericCallIndex(registry, value) {
    _classCallCheck(this, GenericCallIndex);

    return _super.call(this, registry, value, 16);
  }

  return _createClass(GenericCallIndex);
}(_typesCodec.U8aFixed);
/**
 * @name GenericCall
 * @description
 * Extrinsic function descriptor
 */


exports.GenericCallIndex = GenericCallIndex;

var GenericCall = /*#__PURE__*/function (_Struct) {
  _inherits(GenericCall, _Struct);

  var _super2 = _createSuper(GenericCall);

  function GenericCall(registry, value, meta) {
    var _this;

    _classCallCheck(this, GenericCall);

    var decoded = decodeCall(registry, value, meta);

    try {
      _this = _super2.call(this, registry, {
        callIndex: GenericCallIndex,
        // eslint-disable-next-line sort-keys
        args: _typesCodec.Struct.with(decoded.argsDef)
      }, decoded);
    } catch (error) {
      var method = 'unknown.unknown';

      try {
        var c = registry.findMetaCall(decoded.callIndex);
        method = "".concat(c.section, ".").concat(c.method);
      } catch (error) {// ignore
      }

      throw new Error("Call: failed decoding ".concat(method, ":: ").concat(error.message));
    }

    _this._meta = decoded.meta;
    return _this;
  }
  /**
   * @description The arguments for the function call
   */


  _createClass(GenericCall, [{
    key: "args",
    get: function get() {
      return _toConsumableArray(this.getT('args').values());
    }
    /**
     * @description The argument definitions
     */

  }, {
    key: "argsDef",
    get: function get() {
      return getArgsDef(this.registry, this.meta);
    }
    /**
     * @description The argument entries
     */

  }, {
    key: "argsEntries",
    get: function get() {
      return _toConsumableArray(this.getT('args').entries());
    }
    /**
     * @description The encoded `[sectionIndex, methodIndex]` identifier
     */

  }, {
    key: "callIndex",
    get: function get() {
      return this.getT('callIndex').toU8a();
    }
    /**
     * @description The encoded data
     */

  }, {
    key: "data",
    get: function get() {
      return this.getT('args').toU8a();
    }
    /**
     * @description The [[FunctionMetadata]]
     */

  }, {
    key: "meta",
    get: function get() {
      return this._meta;
    }
    /**
     * @description Returns the name of the method
     */

  }, {
    key: "method",
    get: function get() {
      return this.registry.findMetaCall(this.callIndex).method;
    }
    /**
     * @description Returns the module containing the method
     */

  }, {
    key: "section",
    get: function get() {
      return this.registry.findMetaCall(this.callIndex).section;
    }
    /**
     * @description Checks if the source matches this in type
     */

  }, {
    key: "is",
    value: function is(other) {
      return other.callIndex[0] === this.callIndex[0] && other.callIndex[1] === this.callIndex[1];
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */

  }, {
    key: "toHuman",
    value: function toHuman(isExpanded) {
      var _call, _call2;

      var call;

      try {
        call = this.registry.findMetaCall(this.callIndex);
      } catch (error) {// swallow
      }

      return (0, _util.objectSpread)({
        args: this.argsEntries.reduce(function (args, _ref2) {
          var _ref3 = _slicedToArray(_ref2, 2),
              n = _ref3[0],
              a = _ref3[1];

          return (0, _util.objectSpread)(args, _defineProperty({}, n, a.toHuman(isExpanded)));
        }, {}),
        method: (_call = call) === null || _call === void 0 ? void 0 : _call.method,
        section: (_call2 = call) === null || _call2 === void 0 ? void 0 : _call2.section
      }, isExpanded && call ? {
        docs: call.meta.docs.map(function (d) {
          return d.toString();
        })
      } : null);
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return 'Call';
    }
  }]);

  return GenericCall;
}(_typesCodec.Struct);

exports.GenericCall = GenericCall;
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types/generic/ChainProperties.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GenericChainProperties = void 0;

var _typesCodec = require("@polkadot/types-codec");

var _util = require("@polkadot/util");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function createValue(registry, type, value) {
  var asArray = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;

  // We detect codec here as well - when found, generally this is constructed from itself
  if (value && (0, _util.isFunction)(value.unwrapOrDefault)) {
    return value;
  }

  return registry.createTypeUnsafe(type, [asArray ? (0, _util.isNull)(value) || (0, _util.isUndefined)(value) ? null : Array.isArray(value) ? value : [value] : value]);
}

function decodeValue(registry, key, value) {
  return key === 'ss58Format' ? createValue(registry, 'Option<u32>', value, false) : key === 'tokenDecimals' ? createValue(registry, 'Option<Vec<u32>>', value) : key === 'tokenSymbol' ? createValue(registry, 'Option<Vec<Text>>', value) : value;
}

function decode(registry, value) {
  return ( // allow decoding from a map as well (ourselves)
  value && (0, _util.isFunction)(value.entries) ? _toConsumableArray(value.entries()) : Object.entries(value || {})).reduce(function (all, _ref) {
    var _ref2 = _slicedToArray(_ref, 2),
        key = _ref2[0],
        value = _ref2[1];

    all[key] = decodeValue(registry, key, value);
    return all;
  }, {
    ss58Format: registry.createTypeUnsafe('Option<u32>', []),
    tokenDecimals: registry.createTypeUnsafe('Option<Vec<u32>>', []),
    tokenSymbol: registry.createTypeUnsafe('Option<Vec<Text>>', [])
  });
}

var GenericChainProperties = /*#__PURE__*/function (_Json) {
  _inherits(GenericChainProperties, _Json);

  var _super = _createSuper(GenericChainProperties);

  function GenericChainProperties(registry, value) {
    _classCallCheck(this, GenericChainProperties);

    return _super.call(this, registry, decode(registry, value));
  }
  /**
   * @description The chain ss58Format
   */


  _createClass(GenericChainProperties, [{
    key: "ss58Format",
    get: function get() {
      return this.getT('ss58Format');
    }
    /**
     * @description The decimals for each of the tokens
     */

  }, {
    key: "tokenDecimals",
    get: function get() {
      return this.getT('tokenDecimals');
    }
    /**
     * @description The symbols for the tokens
     */

  }, {
    key: "tokenSymbol",
    get: function get() {
      return this.getT('tokenSymbol');
    }
  }]);

  return GenericChainProperties;
}(_typesCodec.Json);

exports.GenericChainProperties = GenericChainProperties;
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types/generic/ConsensusEngineId.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GenericConsensusEngineId = exports.CID_POW = exports.CID_GRPA = exports.CID_BABE = exports.CID_AURA = void 0;

var _typesCodec = require("@polkadot/types-codec");

var _util = require("@polkadot/util");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var CID_AURA = (0, _util.stringToU8a)('aura');
exports.CID_AURA = CID_AURA;
var CID_BABE = (0, _util.stringToU8a)('BABE');
exports.CID_BABE = CID_BABE;
var CID_GRPA = (0, _util.stringToU8a)('FRNK');
exports.CID_GRPA = CID_GRPA;
var CID_POW = (0, _util.stringToU8a)('pow_');
exports.CID_POW = CID_POW;

function getAuraAuthor(registry, bytes, sessionValidators) {
  return sessionValidators[registry.createTypeUnsafe('RawAuraPreDigest', [bytes.toU8a(true)]).slotNumber.mod(new _util.BN(sessionValidators.length)).toNumber()];
}

function getBabeAuthor(registry, bytes, sessionValidators) {
  var digest = registry.createTypeUnsafe('RawBabePreDigestCompat', [bytes.toU8a(true)]);
  return sessionValidators[digest.value.toNumber()];
}

function getBytesAsAuthor(registry, bytes) {
  return registry.createTypeUnsafe('AccountId', [bytes]);
}
/**
 * @name GenericConsensusEngineId
 * @description
 * A 4-byte identifier identifying the engine
 */


var GenericConsensusEngineId = /*#__PURE__*/function (_U8aFixed) {
  _inherits(GenericConsensusEngineId, _U8aFixed);

  var _super = _createSuper(GenericConsensusEngineId);

  function GenericConsensusEngineId(registry, value) {
    _classCallCheck(this, GenericConsensusEngineId);

    return _super.call(this, registry, (0, _util.isNumber)(value) ? (0, _util.bnToU8a)(value, {
      isLe: false
    }) : value, 32);
  }
  /**
   * @description `true` if the engine matches aura
   */


  _createClass(GenericConsensusEngineId, [{
    key: "isAura",
    get: function get() {
      return this.eq(CID_AURA);
    }
    /**
     * @description `true` is the engine matches babe
     */

  }, {
    key: "isBabe",
    get: function get() {
      return this.eq(CID_BABE);
    }
    /**
     * @description `true` is the engine matches grandpa
     */

  }, {
    key: "isGrandpa",
    get: function get() {
      return this.eq(CID_GRPA);
    }
    /**
     * @description `true` is the engine matches pow
     */

  }, {
    key: "isPow",
    get: function get() {
      return this.eq(CID_POW);
    }
    /**
     * @description From the input bytes, decode into an author
     */

  }, {
    key: "extractAuthor",
    value: function extractAuthor(bytes, sessionValidators) {
      if (sessionValidators !== null && sessionValidators !== void 0 && sessionValidators.length) {
        if (this.isAura) {
          return getAuraAuthor(this.registry, bytes, sessionValidators);
        } else if (this.isBabe) {
          return getBabeAuthor(this.registry, bytes, sessionValidators);
        }
      } // For pow & Moonbeam, the bytes are the actual author


      if (this.isPow || bytes.length === 20) {
        return getBytesAsAuthor(this.registry, bytes);
      }

      return undefined;
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */

  }, {
    key: "toHuman",
    value: function toHuman() {
      return this.toString();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return 'ConsensusEngineId';
    }
    /**
     * @description Override the default toString to return a 4-byte string
     */

  }, {
    key: "toString",
    value: function toString() {
      return this.isAscii ? (0, _util.u8aToString)(this) : (0, _util.u8aToHex)(this);
    }
  }]);

  return GenericConsensusEngineId;
}(_typesCodec.U8aFixed);

exports.GenericConsensusEngineId = GenericConsensusEngineId;
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types/generic/LookupSource.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GenericLookupSource = exports.ACCOUNT_ID_PREFIX = void 0;

var _typesCodec = require("@polkadot/types-codec");

var _util = require("@polkadot/util");

var _utilCrypto = require("@polkadot/util-crypto");

var _AccountId = require("./AccountId.js");

var _AccountIndex = require("./AccountIndex.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

// eslint-disable-next-line no-use-before-define
var ACCOUNT_ID_PREFIX = new Uint8Array([0xff]);
/** @internal */

exports.ACCOUNT_ID_PREFIX = ACCOUNT_ID_PREFIX;

function decodeString(registry, value) {
  var decoded = (0, _utilCrypto.decodeAddress)(value);
  return decoded.length === 32 ? registry.createTypeUnsafe('AccountId', [decoded]) : registry.createTypeUnsafe('AccountIndex', [(0, _util.u8aToBn)(decoded, true)]);
}
/** @internal */


function decodeU8a(registry, value) {
  // This allows us to instantiate an address with a raw publicKey. Do this first before
  // we checking the first byte, otherwise we may split an already-existent valid address
  if (value.length === 32) {
    return registry.createTypeUnsafe('AccountId', [value]);
  } else if (value[0] === 0xff) {
    return registry.createTypeUnsafe('AccountId', [value.subarray(1)]);
  }

  var _GenericAccountIndex$ = _AccountIndex.GenericAccountIndex.readLength(value),
      _GenericAccountIndex$2 = _slicedToArray(_GenericAccountIndex$, 2),
      offset = _GenericAccountIndex$2[0],
      length = _GenericAccountIndex$2[1];

  return registry.createTypeUnsafe('AccountIndex', [(0, _util.u8aToBn)(value.subarray(offset, offset + length))]);
}
/** @internal */


function decodeAddressOrIndex(registry, value) {
  return value instanceof GenericLookupSource ? value.inner : value instanceof _AccountId.GenericAccountId || value instanceof _AccountIndex.GenericAccountIndex ? value : (0, _util.isBn)(value) || (0, _util.isNumber)(value) || (0, _util.isBigInt)(value) ? registry.createTypeUnsafe('AccountIndex', [value]) : Array.isArray(value) || (0, _util.isHex)(value) || (0, _util.isU8a)(value) ? decodeU8a(registry, (0, _util.u8aToU8a)(value)) : decodeString(registry, value);
}
/**
 * @name LookupSource
 * @description
 * A wrapper around an AccountId and/or AccountIndex that is encoded with a prefix.
 * Since we are dealing with underlying publicKeys (or shorter encoded addresses),
 * we extend from Base with an AccountId/AccountIndex wrapper. Basically the Address
 * is encoded as `[ <prefix-byte>, ...publicKey/...bytes ]` as per spec
 */


var GenericLookupSource = /*#__PURE__*/function (_AbstractBase) {
  _inherits(GenericLookupSource, _AbstractBase);

  var _super = _createSuper(GenericLookupSource);

  function GenericLookupSource(registry) {
    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Uint8Array();

    _classCallCheck(this, GenericLookupSource);

    return _super.call(this, registry, decodeAddressOrIndex(registry, value));
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  _createClass(GenericLookupSource, [{
    key: "encodedLength",
    get: function get() {
      var rawLength = this._rawLength;
      return rawLength + ( // for 1 byte AccountIndexes, we are not adding a specific prefix
      rawLength > 1 ? 1 : 0);
    }
    /**
     * @description The length of the raw value, either AccountIndex or AccountId
     */

  }, {
    key: "_rawLength",
    get: function get() {
      return this.inner instanceof _AccountIndex.GenericAccountIndex ? _AccountIndex.GenericAccountIndex.calcLength(this.inner) : this.inner.encodedLength;
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */

  }, {
    key: "inspect",
    value: function inspect() {
      var value = this.inner.toU8a().subarray(0, this._rawLength);
      return {
        outer: [new Uint8Array(this.inner instanceof _AccountIndex.GenericAccountIndex ? _AccountIndex.GenericAccountIndex.writeLength(value) : ACCOUNT_ID_PREFIX), value]
      };
    }
    /**
     * @description Returns a hex string representation of the value
     */

  }, {
    key: "toHex",
    value: function toHex() {
      return (0, _util.u8aToHex)(this.toU8a());
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return 'Address';
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */

  }, {
    key: "toU8a",
    value: function toU8a(isBare) {
      var encoded = this.inner.toU8a().subarray(0, this._rawLength);
      return isBare ? encoded : (0, _util.u8aConcat)(this.inner instanceof _AccountIndex.GenericAccountIndex ? _AccountIndex.GenericAccountIndex.writeLength(encoded) : ACCOUNT_ID_PREFIX, encoded);
    }
  }]);

  return GenericLookupSource;
}(_typesCodec.AbstractBase);

exports.GenericLookupSource = GenericLookupSource;
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/util-crypto":"node_modules/@polkadot/util-crypto/index.js","./AccountId.js":"node_modules/@polkadot/types/generic/AccountId.js","./AccountIndex.js":"node_modules/@polkadot/types/generic/AccountIndex.js"}],"node_modules/@polkadot/types/generic/MultiAddress.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GenericMultiAddress = void 0;

var _typesCodec = require("@polkadot/types-codec");

var _util = require("@polkadot/util");

var _utilCrypto = require("@polkadot/util-crypto");

var _AccountId = require("./AccountId.js");

var _AccountIndex = require("./AccountIndex.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function decodeU8a(registry, u8a) {
  if ([0, 32].includes(u8a.length)) {
    return {
      Id: u8a
    };
  } else if (u8a.length === 20) {
    return {
      Address20: u8a
    };
  } else if (u8a.length <= 8) {
    return {
      Index: registry.createTypeUnsafe('AccountIndex', [u8a]).toNumber()
    };
  }

  return u8a;
}

function decodeMultiAny(registry, value) {
  if (value instanceof _AccountId.GenericAccountId) {
    return {
      Id: value
    };
  } else if ((0, _util.isU8a)(value)) {
    // NOTE This is after the AccountId check (which is U8a)
    return decodeU8a(registry, value);
  } else if (value instanceof GenericMultiAddress) {
    return value;
  } else if (value instanceof _AccountIndex.GenericAccountIndex || (0, _util.isBn)(value) || (0, _util.isNumber)(value)) {
    return {
      Index: (0, _util.isNumber)(value) ? value : value.toNumber()
    };
  } else if ((0, _util.isString)(value)) {
    return decodeU8a(registry, (0, _utilCrypto.decodeAddress)(value.toString()));
  }

  return value;
}

var GenericMultiAddress = /*#__PURE__*/function (_Enum) {
  _inherits(GenericMultiAddress, _Enum);

  var _super = _createSuper(GenericMultiAddress);

  function GenericMultiAddress(registry, value) {
    _classCallCheck(this, GenericMultiAddress);

    return _super.call(this, registry, {
      Id: 'AccountId',
      Index: 'Compact<AccountIndex>',
      Raw: 'Bytes',
      // eslint-disable-next-line sort-keys
      Address32: 'H256',
      // eslint-disable-next-line sort-keys
      Address20: 'H160'
    }, decodeMultiAny(registry, value));
  }
  /**
   * @description Returns a breakdown of the hex encoding for this Codec
   */


  _createClass(GenericMultiAddress, [{
    key: "inspect",
    value: function inspect() {
      var _this$inner$inspect = this.inner.inspect(),
          inner = _this$inner$inspect.inner,
          _this$inner$inspect$o = _this$inner$inspect.outer,
          outer = _this$inner$inspect$o === void 0 ? [] : _this$inner$inspect$o;

      return {
        inner: inner,
        outer: [new Uint8Array([this.index])].concat(_toConsumableArray(outer))
      };
    }
    /**
     * @description Returns the string representation of the value
     */

  }, {
    key: "toString",
    value: function toString() {
      return this.value.toString();
    }
  }]);

  return GenericMultiAddress;
}(_typesCodec.Enum);

exports.GenericMultiAddress = GenericMultiAddress;
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/util-crypto":"node_modules/@polkadot/util-crypto/index.js","./AccountId.js":"node_modules/@polkadot/types/generic/AccountId.js","./AccountIndex.js":"node_modules/@polkadot/types/generic/AccountIndex.js"}],"node_modules/@polkadot/types/generic/Vote.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GenericVote = void 0;

var _typesCodec = require("@polkadot/types-codec");

var _util = require("@polkadot/util");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

// For votes, the topmost bit indicated aye/nay, the lower bits indicate the conviction
var AYE_BITS = 128;
var NAY_BITS = 0;
var CON_MASK = 127;
var DEF_CONV = 0; // the default conviction, None

/** @internal */

function decodeVoteBool(value) {
  return value ? new Uint8Array([AYE_BITS | DEF_CONV]) : new Uint8Array([NAY_BITS]);
}
/** @internal */


function decodeVoteU8a(value) {
  return value.length ? value.subarray(0, 1) : new Uint8Array([NAY_BITS]);
}
/** @internal */


function decodeVoteType(registry, value) {
  return new Uint8Array([(new _typesCodec.Bool(registry, value.aye).isTrue ? AYE_BITS : NAY_BITS) | registry.createTypeUnsafe('Conviction', [value.conviction || DEF_CONV]).index]);
}
/** @internal */


function decodeVote(registry, value) {
  if ((0, _util.isU8a)(value)) {
    return decodeVoteU8a(value);
  } else if ((0, _util.isUndefined)(value) || value instanceof Boolean || (0, _util.isBoolean)(value)) {
    return decodeVoteBool(new _typesCodec.Bool(registry, value).isTrue);
  } else if ((0, _util.isNumber)(value)) {
    return decodeVoteBool(value < 0);
  }

  return decodeVoteType(registry, value);
}
/**
 * @name GenericVote
 * @description
 * A number of lock periods, plus a vote, one way or the other.
 */


var _aye = /*#__PURE__*/new WeakMap();

var _conviction = /*#__PURE__*/new WeakMap();

var GenericVote = /*#__PURE__*/function (_U8aFixed) {
  _inherits(GenericVote, _U8aFixed);

  var _super = _createSuper(GenericVote);

  function GenericVote(registry, value) {
    var _this;

    _classCallCheck(this, GenericVote);

    // decoded is just 1 byte
    // Aye: Most Significant Bit
    // Conviction: 0000 - 0101
    var decoded = decodeVote(registry, value);
    _this = _super.call(this, registry, decoded, 8);

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _aye, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _conviction, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldSet(_assertThisInitialized(_this), _aye, (decoded[0] & AYE_BITS) === AYE_BITS);

    _classPrivateFieldSet(_assertThisInitialized(_this), _conviction, _this.registry.createTypeUnsafe('Conviction', [decoded[0] & CON_MASK]));

    return _this;
  }
  /**
   * @description returns a V2 conviction
   */


  _createClass(GenericVote, [{
    key: "conviction",
    get: function get() {
      return _classPrivateFieldGet(this, _conviction);
    }
    /**
     * @description true if the wrapped value is a positive vote
     */

  }, {
    key: "isAye",
    get: function get() {
      return _classPrivateFieldGet(this, _aye);
    }
    /**
     * @description true if the wrapped value is a negative vote
     */

  }, {
    key: "isNay",
    get: function get() {
      return !this.isAye;
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */

  }, {
    key: "toHuman",
    value: function toHuman(isExpanded) {
      return {
        conviction: this.conviction.toHuman(isExpanded),
        vote: this.isAye ? 'Aye' : 'Nay'
      };
    }
    /**
     * @description Returns the base runtime type name for this instance
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return 'Vote';
    }
  }]);

  return GenericVote;
}(_typesCodec.U8aFixed);

exports.GenericVote = GenericVote;
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types/generic/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  GenericAccountId: true,
  GenericAccountIndex: true,
  GenericBlock: true,
  GenericCall: true,
  GenericChainProperties: true,
  GenericConsensusEngineId: true,
  GenericEvent: true,
  GenericEventData: true,
  GenericLookupSource: true,
  GenericMultiAddress: true,
  GenericAddress: true,
  GenericVote: true
};
Object.defineProperty(exports, "GenericAccountId", {
  enumerable: true,
  get: function () {
    return _AccountId.GenericAccountId;
  }
});
Object.defineProperty(exports, "GenericAccountIndex", {
  enumerable: true,
  get: function () {
    return _AccountIndex.GenericAccountIndex;
  }
});
Object.defineProperty(exports, "GenericAddress", {
  enumerable: true,
  get: function () {
    return _MultiAddress.GenericMultiAddress;
  }
});
Object.defineProperty(exports, "GenericBlock", {
  enumerable: true,
  get: function () {
    return _Block.GenericBlock;
  }
});
Object.defineProperty(exports, "GenericCall", {
  enumerable: true,
  get: function () {
    return _Call.GenericCall;
  }
});
Object.defineProperty(exports, "GenericChainProperties", {
  enumerable: true,
  get: function () {
    return _ChainProperties.GenericChainProperties;
  }
});
Object.defineProperty(exports, "GenericConsensusEngineId", {
  enumerable: true,
  get: function () {
    return _ConsensusEngineId.GenericConsensusEngineId;
  }
});
Object.defineProperty(exports, "GenericEvent", {
  enumerable: true,
  get: function () {
    return _Event.GenericEvent;
  }
});
Object.defineProperty(exports, "GenericEventData", {
  enumerable: true,
  get: function () {
    return _Event.GenericEventData;
  }
});
Object.defineProperty(exports, "GenericLookupSource", {
  enumerable: true,
  get: function () {
    return _LookupSource.GenericLookupSource;
  }
});
Object.defineProperty(exports, "GenericMultiAddress", {
  enumerable: true,
  get: function () {
    return _MultiAddress.GenericMultiAddress;
  }
});
Object.defineProperty(exports, "GenericVote", {
  enumerable: true,
  get: function () {
    return _Vote.GenericVote;
  }
});

var _index = require("../ethereum/index.js");

Object.keys(_index).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index[key];
    }
  });
});

var _AccountId = require("./AccountId.js");

var _AccountIndex = require("./AccountIndex.js");

var _Block = require("./Block.js");

var _Call = require("./Call.js");

var _ChainProperties = require("./ChainProperties.js");

var _ConsensusEngineId = require("./ConsensusEngineId.js");

var _Event = require("./Event.js");

var _LookupSource = require("./LookupSource.js");

var _MultiAddress = require("./MultiAddress.js");

var _Vote = require("./Vote.js");
},{"../ethereum/index.js":"node_modules/@polkadot/types/ethereum/index.js","./AccountId.js":"node_modules/@polkadot/types/generic/AccountId.js","./AccountIndex.js":"node_modules/@polkadot/types/generic/AccountIndex.js","./Block.js":"node_modules/@polkadot/types/generic/Block.js","./Call.js":"node_modules/@polkadot/types/generic/Call.js","./ChainProperties.js":"node_modules/@polkadot/types/generic/ChainProperties.js","./ConsensusEngineId.js":"node_modules/@polkadot/types/generic/ConsensusEngineId.js","./Event.js":"node_modules/@polkadot/types/generic/Event.js","./LookupSource.js":"node_modules/@polkadot/types/generic/LookupSource.js","./MultiAddress.js":"node_modules/@polkadot/types/generic/MultiAddress.js","./Vote.js":"node_modules/@polkadot/types/generic/Vote.js"}],"node_modules/@polkadot/types/primitive/Data.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Data = void 0;

var _typesCodec = require("@polkadot/types-codec");

var _util = require("@polkadot/util");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/** @internal */
function decodeDataU8a(registry, value) {
  var indicator = value[0];

  if (!indicator) {
    return [undefined, undefined];
  } else if (indicator >= 1 && indicator <= 33) {
    var length = indicator - 1;
    var data = value.subarray(1, length + 1); // in this case, we are passing a Raw back (since we have no length)

    return [registry.createTypeUnsafe('Raw', [data]), 1];
  } else if (indicator >= 34 && indicator <= 37) {
    return [value.subarray(1, 32 + 1), indicator - 32]; // 34 becomes 2
  }

  throw new Error("Unable to decode Data, invalid indicator byte ".concat(indicator));
}
/** @internal */


function decodeData(registry, value) {
  if ((0, _util.isU8a)(value) || (0, _util.isString)(value)) {
    return decodeDataU8a(registry, (0, _util.u8aToU8a)(value));
  } else if (!value) {
    return [undefined, undefined];
  } // assume we have an Enum or an  object input, handle this via the normal Enum decoding


  return [value, undefined];
}
/**
 * @name Data
 * @description
 * A [[Data]] container with node, raw or hashed data
 */


var Data = /*#__PURE__*/function (_Enum) {
  _inherits(Data, _Enum);

  var _super = _createSuper(Data);

  function Data(registry, value) {
    var _this;

    _classCallCheck(this, Data);

    _this = _super.call.apply(_super, [this, registry, {
      None: 'Null',
      // 0
      Raw: 'Bytes',
      // 1
      // eslint-disable-next-line sort-keys
      BlakeTwo256: 'H256',
      // 2
      Sha256: 'H256',
      // 3
      // eslint-disable-next-line sort-keys
      Keccak256: 'H256',
      // 4
      ShaThree256: 'H256' // 5

    }].concat(_toConsumableArray(decodeData(registry, value))));

    if (_this.isRaw && _this.asRaw.length > 32) {
      throw new Error('Data.Raw values are limited to a maximum length of 32 bytes');
    }

    return _this;
  }

  _createClass(Data, [{
    key: "asBlakeTwo256",
    get: function get() {
      return this.value;
    }
  }, {
    key: "asKeccak256",
    get: function get() {
      return this.value;
    }
  }, {
    key: "asRaw",
    get: function get() {
      return this.value;
    }
  }, {
    key: "asSha256",
    get: function get() {
      return this.value;
    }
  }, {
    key: "asShaThree256",
    get: function get() {
      return this.value;
    }
  }, {
    key: "isBlakeTwo256",
    get: function get() {
      return this.index === 2;
    }
  }, {
    key: "isKeccak256",
    get: function get() {
      return this.index === 4;
    }
  }, {
    key: "isNone",
    get: function get() {
      return this.index === 0;
    }
  }, {
    key: "isRaw",
    get: function get() {
      return this.index === 1;
    }
  }, {
    key: "isSha256",
    get: function get() {
      return this.index === 3;
    }
  }, {
    key: "isShaThree256",
    get: function get() {
      return this.index === 5;
    }
    /**
     * @description The encoded length
     */

  }, {
    key: "encodedLength",
    get: function get() {
      return this.toU8a().length;
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     */

  }, {
    key: "toU8a",
    value: function toU8a() {
      if (this.index === 0) {
        return new Uint8Array(1);
      } else if (this.index === 1) {
        // don't add the length, just the data
        var data = this.value.toU8a(true);
        var length = Math.min(data.length, 32);

        var _u8a = new Uint8Array(length + 1);

        _u8a.set([length + 1], 0);

        _u8a.set(data.subarray(0, length), 1);

        return _u8a;
      } // otherwise we simply have a hash


      var u8a = new Uint8Array(33);
      u8a.set([this.index + 32], 0);
      u8a.set(this.value.toU8a(), 1);
      return u8a;
    }
  }]);

  return Data;
}(_typesCodec.Enum);

exports.Data = Data;
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types/metadata/util/flattenUniq.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.flattenUniq = flattenUniq;

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/** @internal */
function flattenUniq(list) {
  var result = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

  for (var i = 0; i < list.length; i++) {
    var entry = list[i];

    if (Array.isArray(entry)) {
      flattenUniq(entry, result);
    } else {
      result.push(entry);
    }
  }

  return _toConsumableArray(new Set(result));
}
},{}],"node_modules/@polkadot/types/metadata/util/getSiName.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getSiName = getSiName;

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
function getSiName(lookup, type) {
  var typeDef = lookup.getTypeDef(type);
  return typeDef.lookupName || typeDef.type;
}
},{}],"node_modules/@polkadot/types/metadata/util/extractTypes.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extractTypes = extractTypes;

var _typesCreate = require("@polkadot/types-create");

var _mapping;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function extractSubSingle(_, _ref) {
  var sub = _ref.sub;
  var lookupName = sub.lookupName,
      type = sub.type;
  return extractTypes([lookupName || type]);
}

function extractSubArray(_, _ref2) {
  var sub = _ref2.sub;
  return extractTypes(sub.map(function (_ref3) {
    var lookupName = _ref3.lookupName,
        type = _ref3.type;
    return lookupName || type;
  }));
}

function unhandled(type, _ref4) {
  var info = _ref4.info;
  throw new Error("Unhandled: Unable to create and validate type from ".concat(type, " (info=").concat(_typesCreate.TypeDefInfo[info], ")"));
} // we only handle the types with params here


var mapping = (_mapping = {}, _defineProperty(_mapping, _typesCreate.TypeDefInfo.BTreeMap, extractSubArray), _defineProperty(_mapping, _typesCreate.TypeDefInfo.BTreeSet, extractSubSingle), _defineProperty(_mapping, _typesCreate.TypeDefInfo.Compact, extractSubSingle), _defineProperty(_mapping, _typesCreate.TypeDefInfo.DoNotConstruct, unhandled), _defineProperty(_mapping, _typesCreate.TypeDefInfo.Enum, extractSubArray), _defineProperty(_mapping, _typesCreate.TypeDefInfo.HashMap, extractSubArray), _defineProperty(_mapping, _typesCreate.TypeDefInfo.Int, unhandled), _defineProperty(_mapping, _typesCreate.TypeDefInfo.Linkage, extractSubSingle), _defineProperty(_mapping, _typesCreate.TypeDefInfo.Null, unhandled), _defineProperty(_mapping, _typesCreate.TypeDefInfo.Option, extractSubSingle), _defineProperty(_mapping, _typesCreate.TypeDefInfo.Plain, function (_, typeDef) {
  return typeDef.lookupName || typeDef.type;
}), _defineProperty(_mapping, _typesCreate.TypeDefInfo.Range, extractSubSingle), _defineProperty(_mapping, _typesCreate.TypeDefInfo.RangeInclusive, extractSubSingle), _defineProperty(_mapping, _typesCreate.TypeDefInfo.Result, extractSubArray), _defineProperty(_mapping, _typesCreate.TypeDefInfo.Set, extractSubArray), _defineProperty(_mapping, _typesCreate.TypeDefInfo.Si, unhandled), _defineProperty(_mapping, _typesCreate.TypeDefInfo.Struct, extractSubArray), _defineProperty(_mapping, _typesCreate.TypeDefInfo.Tuple, extractSubArray), _defineProperty(_mapping, _typesCreate.TypeDefInfo.UInt, unhandled), _defineProperty(_mapping, _typesCreate.TypeDefInfo.Vec, extractSubSingle), _defineProperty(_mapping, _typesCreate.TypeDefInfo.VecFixed, extractSubSingle), _defineProperty(_mapping, _typesCreate.TypeDefInfo.WrapperKeepOpaque, extractSubSingle), _defineProperty(_mapping, _typesCreate.TypeDefInfo.WrapperOpaque, extractSubSingle), _mapping);
/** @internal */

function extractTypes(types) {
  var count = types.length;
  var result = new Array(count);

  for (var i = 0; i < count; i++) {
    var type = types[i];
    var typeDef = (0, _typesCreate.getTypeDef)(type);
    result[i] = mapping[typeDef.info](type, typeDef);
  }

  return result;
}
},{"@polkadot/types-create":"node_modules/@polkadot/types-create/index.js"}],"node_modules/@polkadot/types/metadata/util/validateTypes.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.validateTypes = validateTypes;

var _util = require("@polkadot/util");

var _extractTypes = require("./extractTypes.js");

var _flattenUniq = require("./flattenUniq.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var l = (0, _util.logger)('metadata');
/** @internal */

function validateTypes(registry, throwError, types) {
  var missing = (0, _flattenUniq.flattenUniq)((0, _extractTypes.extractTypes)(types)).filter(function (type) {
    return !registry.hasType(type) && !registry.isLookupType(type);
  }).sort();

  if (missing.length !== 0) {
    var message = "Unknown types found, no types for ".concat(missing.join(', '));

    if (throwError) {
      throw new Error(message);
    } else {
      l.warn(message);
    }
  }

  return types;
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./extractTypes.js":"node_modules/@polkadot/types/metadata/util/extractTypes.js","./flattenUniq.js":"node_modules/@polkadot/types/metadata/util/flattenUniq.js"}],"node_modules/@polkadot/types/metadata/util/getUniqTypes.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getUniqTypes = getUniqTypes;

var _flattenUniq = require("./flattenUniq.js");

var _validateTypes = require("./validateTypes.js");

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

/** @internal */
function extractTypes(lookup, types) {
  return types.map(function (_ref) {
    var type = _ref.type;
    return lookup.getTypeDef(type).type;
  });
}
/** @internal */


function extractFieldTypes(lookup, type) {
  return lookup.getSiType(type).def.asVariant.variants.map(function (_ref2) {
    var fields = _ref2.fields;
    return extractTypes(lookup, fields);
  });
}
/** @internal */


function getPalletNames(_ref3) {
  var lookup = _ref3.lookup,
      pallets = _ref3.pallets;
  return pallets.reduce(function (all, _ref4) {
    var calls = _ref4.calls,
        constants = _ref4.constants,
        events = _ref4.events,
        storage = _ref4.storage;
    all.push([extractTypes(lookup, constants)]);

    if (calls.isSome) {
      all.push(extractFieldTypes(lookup, calls.unwrap().type));
    }

    if (events.isSome) {
      all.push(extractFieldTypes(lookup, events.unwrap().type));
    }

    if (storage.isSome) {
      all.push(storage.unwrap().items.map(function (_ref5) {
        var type = _ref5.type;

        if (type.isPlain) {
          return [lookup.getTypeDef(type.asPlain).type];
        }

        var _type$asMap = type.asMap,
            hashers = _type$asMap.hashers,
            key = _type$asMap.key,
            value = _type$asMap.value;
        return hashers.length === 1 ? [lookup.getTypeDef(value).type, lookup.getTypeDef(key).type] : [lookup.getTypeDef(value).type].concat(_toConsumableArray(lookup.getSiType(key).def.asTuple.map(function (t) {
          return lookup.getTypeDef(t).type;
        })));
      }));
    }

    return all;
  }, []);
}
/** @internal */


function getUniqTypes(registry, meta, throwError) {
  return (0, _validateTypes.validateTypes)(registry, throwError, (0, _flattenUniq.flattenUniq)(getPalletNames(meta)));
}
},{"./flattenUniq.js":"node_modules/@polkadot/types/metadata/util/flattenUniq.js","./validateTypes.js":"node_modules/@polkadot/types/metadata/util/validateTypes.js"}],"node_modules/@polkadot/types/metadata/util/toCallsOnly.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toCallsOnly = toCallsOnly;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
function trimDocs(docs) {
  var strings = docs.map(function (d) {
    return d.toString().trim();
  });
  var firstEmpty = strings.findIndex(function (d) {
    return !d.length;
  });
  return firstEmpty === -1 ? strings : strings.slice(0, firstEmpty);
}
/** @internal */


function toCallsOnly(registry, _ref) {
  var extrinsic = _ref.extrinsic,
      lookup = _ref.lookup,
      pallets = _ref.pallets;
  return registry.createTypeUnsafe('MetadataLatest', [{
    extrinsic: extrinsic,
    lookup: {
      types: lookup.types.map(function (_ref2) {
        var id = _ref2.id,
            type = _ref2.type;
        return registry.createTypeUnsafe('PortableType', [{
          id: id,
          type: _objectSpread(_objectSpread({}, type), {}, {
            docs: trimDocs(type.docs)
          })
        }]);
      })
    },
    pallets: pallets.map(function (_ref3) {
      var calls = _ref3.calls,
          index = _ref3.index,
          name = _ref3.name;
      return {
        calls: registry.createTypeUnsafe('Option<PalletCallMetadataLatest>', [calls.unwrapOr(null)]),
        index: index,
        name: name
      };
    })
  }]).toJSON();
}
},{}],"node_modules/@polkadot/types/metadata/util/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "flattenUniq", {
  enumerable: true,
  get: function () {
    return _flattenUniq.flattenUniq;
  }
});
Object.defineProperty(exports, "getSiName", {
  enumerable: true,
  get: function () {
    return _getSiName.getSiName;
  }
});
Object.defineProperty(exports, "getUniqTypes", {
  enumerable: true,
  get: function () {
    return _getUniqTypes.getUniqTypes;
  }
});
Object.defineProperty(exports, "toCallsOnly", {
  enumerable: true,
  get: function () {
    return _toCallsOnly.toCallsOnly;
  }
});
Object.defineProperty(exports, "validateTypes", {
  enumerable: true,
  get: function () {
    return _validateTypes.validateTypes;
  }
});

var _flattenUniq = require("./flattenUniq.js");

var _getSiName = require("./getSiName.js");

var _getUniqTypes = require("./getUniqTypes.js");

var _toCallsOnly = require("./toCallsOnly.js");

var _validateTypes = require("./validateTypes.js");
},{"./flattenUniq.js":"node_modules/@polkadot/types/metadata/util/flattenUniq.js","./getSiName.js":"node_modules/@polkadot/types/metadata/util/getSiName.js","./getUniqTypes.js":"node_modules/@polkadot/types/metadata/util/getUniqTypes.js","./toCallsOnly.js":"node_modules/@polkadot/types/metadata/util/toCallsOnly.js","./validateTypes.js":"node_modules/@polkadot/types/metadata/util/validateTypes.js"}],"node_modules/@polkadot/types/primitive/StorageKey.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StorageKey = void 0;
exports.unwrapStorageSi = unwrapStorageSi;
exports.unwrapStorageType = unwrapStorageType;

var _typesCodec = require("@polkadot/types-codec");

var _util = require("@polkadot/util");

var _index = require("../metadata/util/index.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

// hasher type -> [initialHashLength, canDecodeKey]
var HASHER_MAP = {
  // opaque
  Blake2_128: [16, false],
  // eslint-disable-line camelcase
  Blake2_128Concat: [16, true],
  // eslint-disable-line camelcase
  Blake2_256: [32, false],
  // eslint-disable-line camelcase
  Identity: [0, true],
  Twox128: [16, false],
  Twox256: [32, false],
  Twox64Concat: [8, true]
};

function unwrapStorageSi(type) {
  return type.isPlain ? type.asPlain : type.asMap.value;
}
/** @internal */


function unwrapStorageType(registry, type, isOptional) {
  var outputType = (0, _index.getSiName)(registry.lookup, unwrapStorageSi(type));
  return isOptional ? "Option<".concat(outputType, ">") : outputType;
}
/** @internal */


function decodeStorageKey(value) {
  if ((0, _util.isU8a)(value) || !value || (0, _util.isString)(value)) {
    // let Bytes handle these inputs
    return {
      key: value
    };
  } else if (value instanceof StorageKey) {
    return {
      key: value,
      method: value.method,
      section: value.section
    };
  } else if ((0, _util.isFunction)(value)) {
    return {
      key: value(),
      method: value.method,
      section: value.section
    };
  } else if (Array.isArray(value)) {
    var _value = _slicedToArray(value, 2),
        fn = _value[0],
        _value$ = _value[1],
        args = _value$ === void 0 ? [] : _value$;

    if (!(0, _util.isFunction)(fn)) {
      throw new Error('Expected function input for key construction');
    }

    if (fn.meta && fn.meta.type.isMap) {
      var map = fn.meta.type.asMap;

      if (!Array.isArray(args) || args.length !== map.hashers.length) {
        throw new Error("Expected an array of ".concat(map.hashers.length, " values as params to a Map query"));
      }
    }

    return {
      key: fn.apply(void 0, _toConsumableArray(args)),
      method: fn.method,
      section: fn.section
    };
  }

  throw new Error("Unable to convert input ".concat(value, " to StorageKey"));
}
/** @internal */


function decodeHashers(registry, value, hashers) {
  // the storage entry is xxhashAsU8a(prefix, 128) + xxhashAsU8a(method, 128), 256 bits total
  var offset = 32;
  var result = new Array(hashers.length);

  for (var i = 0; i < hashers.length; i++) {
    var _hashers$i = _slicedToArray(hashers[i], 2),
        hasher = _hashers$i[0],
        type = _hashers$i[1];

    var _HASHER_MAP$hasher$ty = _slicedToArray(HASHER_MAP[hasher.type], 2),
        hashLen = _HASHER_MAP$hasher$ty[0],
        canDecode = _HASHER_MAP$hasher$ty[1];

    var decoded = canDecode ? registry.createTypeUnsafe((0, _index.getSiName)(registry.lookup, type), [value.subarray(offset + hashLen)]) : registry.createTypeUnsafe('Raw', [value.subarray(offset, offset + hashLen)]);
    offset += hashLen + (canDecode ? decoded.encodedLength : 0);
    result[i] = decoded;
  }

  return result;
}
/** @internal */


function decodeArgsFromMeta(registry, value, meta) {
  if (!meta || !meta.type.isMap) {
    return [];
  }

  var _meta$type$asMap = meta.type.asMap,
      hashers = _meta$type$asMap.hashers,
      key = _meta$type$asMap.key;
  var keys = hashers.length === 1 ? [key] : registry.lookup.getSiType(key).def.asTuple;
  return decodeHashers(registry, value, hashers.map(function (h, i) {
    return [h, keys[i]];
  }));
}
/** @internal */


function getMeta(value) {
  if (value instanceof StorageKey) {
    return value.meta;
  } else if ((0, _util.isFunction)(value)) {
    return value.meta;
  } else if (Array.isArray(value)) {
    var _value2 = _slicedToArray(value, 1),
        fn = _value2[0];

    return fn.meta;
  }

  return undefined;
}
/** @internal */


function getType(registry, value) {
  if (value instanceof StorageKey) {
    return value.outputType;
  } else if ((0, _util.isFunction)(value)) {
    return unwrapStorageType(registry, value.meta.type);
  } else if (Array.isArray(value)) {
    var _value3 = _slicedToArray(value, 1),
        fn = _value3[0];

    if (fn.meta) {
      return unwrapStorageType(registry, fn.meta.type);
    }
  } // If we have no type set, default to Raw


  return 'Raw';
}
/**
 * @name StorageKey
 * @description
 * A representation of a storage key (typically hashed) in the system. It can be
 * constructed by passing in a raw key or a StorageEntry with (optional) arguments.
 */


var _args = /*#__PURE__*/new WeakMap();

var _meta = /*#__PURE__*/new WeakMap();

var _outputType = /*#__PURE__*/new WeakMap();

var _method = /*#__PURE__*/new WeakMap();

var _section = /*#__PURE__*/new WeakMap();

var StorageKey = /*#__PURE__*/function (_Bytes) {
  _inherits(StorageKey, _Bytes);

  var _super = _createSuper(StorageKey);

  // eslint-disable-next-line @typescript-eslint/ban-ts-comment
  // @ts-ignore This is assigned via this.decodeArgsFromMeta()
  function StorageKey(registry, value) {
    var _this;

    var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    _classCallCheck(this, StorageKey);

    var _decodeStorageKey = decodeStorageKey(value),
        key = _decodeStorageKey.key,
        method = _decodeStorageKey.method,
        section = _decodeStorageKey.section;

    _this = _super.call(this, registry, key);

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _args, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _meta, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _outputType, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _method, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _section, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldSet(_assertThisInitialized(_this), _outputType, getType(registry, value)); // decode the args (as applicable based on the key and the hashers, after all init)


    _this.setMeta(getMeta(value), override.section || section, override.method || method);

    return _this;
  }
  /**
   * @description Return the decoded arguments (applicable to map with decodable values)
   */


  _createClass(StorageKey, [{
    key: "args",
    get: function get() {
      return _classPrivateFieldGet(this, _args);
    }
    /**
     * @description The metadata or `undefined` when not available
     */

  }, {
    key: "meta",
    get: function get() {
      return _classPrivateFieldGet(this, _meta);
    }
    /**
     * @description The key method or `undefined` when not specified
     */

  }, {
    key: "method",
    get: function get() {
      return _classPrivateFieldGet(this, _method);
    }
    /**
     * @description The output type
     */

  }, {
    key: "outputType",
    get: function get() {
      return _classPrivateFieldGet(this, _outputType);
    }
    /**
     * @description The key section or `undefined` when not specified
     */

  }, {
    key: "section",
    get: function get() {
      return _classPrivateFieldGet(this, _section);
    }
  }, {
    key: "is",
    value: function is(key) {
      return key.section === this.section && key.method === this.method;
    }
    /**
     * @description Sets the meta for this key
     */

  }, {
    key: "setMeta",
    value: function setMeta(meta, section, method) {
      _classPrivateFieldSet(this, _meta, meta);

      _classPrivateFieldSet(this, _method, method || _classPrivateFieldGet(this, _method));

      _classPrivateFieldSet(this, _section, section || _classPrivateFieldGet(this, _section));

      if (meta) {
        _classPrivateFieldSet(this, _outputType, unwrapStorageType(this.registry, meta.type));
      }

      try {
        _classPrivateFieldSet(this, _args, decodeArgsFromMeta(this.registry, this.toU8a(true), meta));
      } catch (error) {// ignore...
      }

      return this;
    }
    /**
     * @description Returns the Human representation for this type
     */

  }, {
    key: "toHuman",
    value: function toHuman() {
      return _classPrivateFieldGet(this, _args).length ? _classPrivateFieldGet(this, _args).map(function (a) {
        return a.toHuman();
      }) : _get(_getPrototypeOf(StorageKey.prototype), "toHuman", this).call(this);
    }
    /**
     * @description Returns the raw type for this
     */

  }, {
    key: "toRawType",
    value: function toRawType() {
      return 'StorageKey';
    }
  }]);

  return StorageKey;
}(_typesCodec.Bytes);

exports.StorageKey = StorageKey;
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../metadata/util/index.js":"node_modules/@polkadot/types/metadata/util/index.js"}],"node_modules/@polkadot/types/primitive/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BitVec", {
  enumerable: true,
  get: function () {
    return _typesCodec.BitVec;
  }
});
Object.defineProperty(exports, "Bool", {
  enumerable: true,
  get: function () {
    return _typesCodec.Bool;
  }
});
Object.defineProperty(exports, "Bytes", {
  enumerable: true,
  get: function () {
    return _typesCodec.Bytes;
  }
});
Object.defineProperty(exports, "Data", {
  enumerable: true,
  get: function () {
    return _Data.Data;
  }
});
Object.defineProperty(exports, "F32", {
  enumerable: true,
  get: function () {
    return _typesCodec.F32;
  }
});
Object.defineProperty(exports, "F64", {
  enumerable: true,
  get: function () {
    return _typesCodec.F64;
  }
});
Object.defineProperty(exports, "I128", {
  enumerable: true,
  get: function () {
    return _typesCodec.I128;
  }
});
Object.defineProperty(exports, "I16", {
  enumerable: true,
  get: function () {
    return _typesCodec.I16;
  }
});
Object.defineProperty(exports, "I256", {
  enumerable: true,
  get: function () {
    return _typesCodec.I256;
  }
});
Object.defineProperty(exports, "I32", {
  enumerable: true,
  get: function () {
    return _typesCodec.I32;
  }
});
Object.defineProperty(exports, "I64", {
  enumerable: true,
  get: function () {
    return _typesCodec.I64;
  }
});
Object.defineProperty(exports, "I8", {
  enumerable: true,
  get: function () {
    return _typesCodec.I8;
  }
});
Object.defineProperty(exports, "Null", {
  enumerable: true,
  get: function () {
    return _typesCodec.Null;
  }
});
Object.defineProperty(exports, "OptionBool", {
  enumerable: true,
  get: function () {
    return _typesCodec.OptionBool;
  }
});
Object.defineProperty(exports, "StorageKey", {
  enumerable: true,
  get: function () {
    return _StorageKey.StorageKey;
  }
});
Object.defineProperty(exports, "Text", {
  enumerable: true,
  get: function () {
    return _typesCodec.Text;
  }
});
Object.defineProperty(exports, "Type", {
  enumerable: true,
  get: function () {
    return _typesCodec.Type;
  }
});
Object.defineProperty(exports, "U128", {
  enumerable: true,
  get: function () {
    return _typesCodec.U128;
  }
});
Object.defineProperty(exports, "U16", {
  enumerable: true,
  get: function () {
    return _typesCodec.U16;
  }
});
Object.defineProperty(exports, "U256", {
  enumerable: true,
  get: function () {
    return _typesCodec.U256;
  }
});
Object.defineProperty(exports, "U32", {
  enumerable: true,
  get: function () {
    return _typesCodec.U32;
  }
});
Object.defineProperty(exports, "U64", {
  enumerable: true,
  get: function () {
    return _typesCodec.U64;
  }
});
Object.defineProperty(exports, "U8", {
  enumerable: true,
  get: function () {
    return _typesCodec.U8;
  }
});
Object.defineProperty(exports, "USize", {
  enumerable: true,
  get: function () {
    return _typesCodec.USize;
  }
});
Object.defineProperty(exports, "bool", {
  enumerable: true,
  get: function () {
    return _typesCodec.bool;
  }
});
Object.defineProperty(exports, "f32", {
  enumerable: true,
  get: function () {
    return _typesCodec.f32;
  }
});
Object.defineProperty(exports, "f64", {
  enumerable: true,
  get: function () {
    return _typesCodec.f64;
  }
});
Object.defineProperty(exports, "i128", {
  enumerable: true,
  get: function () {
    return _typesCodec.i128;
  }
});
Object.defineProperty(exports, "i16", {
  enumerable: true,
  get: function () {
    return _typesCodec.i16;
  }
});
Object.defineProperty(exports, "i256", {
  enumerable: true,
  get: function () {
    return _typesCodec.i256;
  }
});
Object.defineProperty(exports, "i32", {
  enumerable: true,
  get: function () {
    return _typesCodec.i32;
  }
});
Object.defineProperty(exports, "i64", {
  enumerable: true,
  get: function () {
    return _typesCodec.i64;
  }
});
Object.defineProperty(exports, "i8", {
  enumerable: true,
  get: function () {
    return _typesCodec.i8;
  }
});
Object.defineProperty(exports, "u128", {
  enumerable: true,
  get: function () {
    return _typesCodec.u128;
  }
});
Object.defineProperty(exports, "u16", {
  enumerable: true,
  get: function () {
    return _typesCodec.u16;
  }
});
Object.defineProperty(exports, "u256", {
  enumerable: true,
  get: function () {
    return _typesCodec.u256;
  }
});
Object.defineProperty(exports, "u32", {
  enumerable: true,
  get: function () {
    return _typesCodec.u32;
  }
});
Object.defineProperty(exports, "u64", {
  enumerable: true,
  get: function () {
    return _typesCodec.u64;
  }
});
Object.defineProperty(exports, "u8", {
  enumerable: true,
  get: function () {
    return _typesCodec.u8;
  }
});
Object.defineProperty(exports, "usize", {
  enumerable: true,
  get: function () {
    return _typesCodec.usize;
  }
});

var _typesCodec = require("@polkadot/types-codec");

var _Data = require("./Data.js");

var _StorageKey = require("./StorageKey.js");
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","./Data.js":"node_modules/@polkadot/types/primitive/Data.js","./StorageKey.js":"node_modules/@polkadot/types/primitive/StorageKey.js"}],"node_modules/@polkadot/types/index.types.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _index = require("./extrinsic/index.js");

Object.keys(_index).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index[key];
    }
  });
});

var _index2 = require("./generic/index.js");

Object.keys(_index2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index2[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index2[key];
    }
  });
});

var _index3 = require("./primitive/index.js");

Object.keys(_index3).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _index3[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index3[key];
    }
  });
});
},{"./extrinsic/index.js":"node_modules/@polkadot/types/extrinsic/index.js","./generic/index.js":"node_modules/@polkadot/types/generic/index.js","./primitive/index.js":"node_modules/@polkadot/types/primitive/index.js"}],"node_modules/@polkadot/types/metadata/v9/toV10.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toV10 = toV10;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// migrate a storage hasher type
// see https://github.com/paritytech/substrate/pull/4462

/** @internal */
function createStorageHasher(registry, hasher) {
  // Blake2_128_Concat has been added at index 2, so we increment all the
  // indexes greater than 2
  if (hasher.toNumber() >= 2) {
    return registry.createTypeUnsafe('StorageHasherV10', [hasher.toNumber() + 1]);
  }

  return registry.createTypeUnsafe('StorageHasherV10', [hasher]);
}
/** @internal */


function createStorageType(registry, entryType) {
  if (entryType.isMap) {
    return [_objectSpread(_objectSpread({}, entryType.asMap), {}, {
      hasher: createStorageHasher(registry, entryType.asMap.hasher)
    }), 1];
  }

  if (entryType.isDoubleMap) {
    return [_objectSpread(_objectSpread({}, entryType.asDoubleMap), {}, {
      hasher: createStorageHasher(registry, entryType.asDoubleMap.hasher),
      key2Hasher: createStorageHasher(registry, entryType.asDoubleMap.key2Hasher)
    }), 2];
  }

  return [entryType.asPlain, 0];
}
/** @internal */


function convertModule(registry, mod) {
  var storage = mod.storage.unwrapOr(null);
  return registry.createTypeUnsafe('ModuleMetadataV10', [_objectSpread(_objectSpread({}, mod), {}, {
    storage: storage ? _objectSpread(_objectSpread({}, storage), {}, {
      items: storage.items.map(function (item) {
        return _objectSpread(_objectSpread({}, item), {}, {
          type: registry.createTypeUnsafe('StorageEntryTypeV10', createStorageType(registry, item.type))
        });
      })
    }) : null
  })]);
}
/** @internal */


function toV10(registry, _ref) {
  var modules = _ref.modules;
  return registry.createTypeUnsafe('MetadataV10', [{
    modules: modules.map(function (mod) {
      return convertModule(registry, mod);
    })
  }]);
}
},{}],"node_modules/@polkadot/types/metadata/v10/toV11.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toV11 = toV11;

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/** @internal */
function toV11(registry, _ref) {
  var modules = _ref.modules;
  return registry.createTypeUnsafe('MetadataV11', [{
    // This is new in V11, pass V0 here - something non-existing, telling the API to use
    // the fallback for this information (on-chain detection)
    extrinsic: {
      signedExtensions: [],
      version: 0
    },
    modules: modules
  }]);
}
},{}],"node_modules/@polkadot/types/metadata/v11/toV12.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toV12 = toV12;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @internal
 **/
function toV12(registry, _ref) {
  var extrinsic = _ref.extrinsic,
      modules = _ref.modules;
  return registry.createTypeUnsafe('MetadataV12', [{
    extrinsic: extrinsic,
    modules: modules.map(function (mod) {
      return registry.createTypeUnsafe('ModuleMetadataV12', [_objectSpread(_objectSpread({}, mod), {}, {
        index: 255
      })]);
    })
  }]);
}
},{}],"node_modules/@polkadot/types/metadata/v12/toV13.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toV13 = toV13;

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @internal
 **/
function toV13(registry, metadata) {
  return registry.createTypeUnsafe('MetadataV13', [metadata]);
}
},{}],"node_modules/@polkadot/types/interfaces/alias.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getAliasTypes = getAliasTypes;

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0
// type overrides for modules (where duplication between modules exist)
var typesAlias = {
  assets: {
    Approval: 'AssetApproval',
    ApprovalKey: 'AssetApprovalKey',
    Balance: 'TAssetBalance',
    DestroyWitness: 'AssetDestroyWitness'
  },
  babe: {
    EquivocationProof: 'BabeEquivocationProof'
  },
  balances: {
    Status: 'BalanceStatus'
  },
  beefy: {
    AuthorityId: 'BeefyId'
  },
  contracts: {
    StorageKey: 'ContractStorageKey'
  },
  electionProviderMultiPhase: {
    Phase: 'ElectionPhase'
  },
  ethereum: {
    Block: 'EthBlock',
    Header: 'EthHeader',
    Receipt: 'EthReceipt',
    Transaction: 'EthTransaction',
    TransactionStatus: 'EthTransactionStatus'
  },
  evm: {
    Account: 'EvmAccount',
    Log: 'EvmLog',
    Vicinity: 'EvmVicinity'
  },
  grandpa: {
    Equivocation: 'GrandpaEquivocation',
    EquivocationProof: 'GrandpaEquivocationProof'
  },
  identity: {
    Judgement: 'IdentityJudgement'
  },
  inclusion: {
    ValidatorIndex: 'ParaValidatorIndex'
  },
  paraDisputes: {
    ValidatorIndex: 'ParaValidatorIndex'
  },
  paraInclusion: {
    ValidatorIndex: 'ParaValidatorIndex'
  },
  paraScheduler: {
    ValidatorIndex: 'ParaValidatorIndex'
  },
  paraShared: {
    ValidatorIndex: 'ParaValidatorIndex'
  },
  parachains: {
    Id: 'ParaId'
  },
  parasDisputes: {
    ValidatorIndex: 'ParaValidatorIndex'
  },
  parasInclusion: {
    ValidatorIndex: 'ParaValidatorIndex'
  },
  parasScheduler: {
    ValidatorIndex: 'ParaValidatorIndex'
  },
  parasShared: {
    ValidatorIndex: 'ParaValidatorIndex'
  },
  proposeParachain: {
    Proposal: 'ParachainProposal'
  },
  proxy: {
    Announcement: 'ProxyAnnouncement'
  },
  scheduler: {
    ValidatorIndex: 'ParaValidatorIndex'
  },
  shared: {
    ValidatorIndex: 'ParaValidatorIndex'
  },
  society: {
    Judgement: 'SocietyJudgement',
    Vote: 'SocietyVote'
  },
  staking: {
    Compact: 'CompactAssignments'
  },
  treasury: {
    Proposal: 'TreasuryProposal'
  },
  xcm: {
    AssetId: 'XcmAssetId'
  },
  xcmPallet: {
    AssetId: 'XcmAssetId'
  }
};
/**
 * @description Get types for specific modules (metadata override)
 */

function getAliasTypes(_ref, section) {
  var knownTypes = _ref.knownTypes;

  var _knownTypes$typesAlia;

  return (0, _util.objectSpread)({}, typesAlias[section], (_knownTypes$typesAlia = knownTypes.typesAlias) === null || _knownTypes$typesAlia === void 0 ? void 0 : _knownTypes$typesAlia[section]);
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types/metadata/v13/toV14.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toV14 = toV14;

var _util = require("@polkadot/util");

var _alias = require("../../interfaces/alias.js");

var _definitions = require("../../interfaces/runtime/definitions.js");

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var BOXES = [['<', '>'], ['<', ','], [',', '>'], ['(', ')'], ['(', ','], [',', ','], [',', ')']];
/**
 * Creates a compatible type mapping
 * @internal
 **/

function compatType(specs, _type) {
  var type = _type.toString();

  var index = specs.findIndex(function (_ref) {
    var def = _ref.def;
    return def.HistoricMetaCompat === type;
  });

  if (index !== -1) {
    return index;
  }

  return specs.push({
    def: {
      HistoricMetaCompat: type
    }
  }) - 1;
}

function compatTypes(specs) {
  for (var i = 0; i < (arguments.length <= 1 ? 0 : arguments.length - 1); i++) {
    compatType(specs, i + 1 < 1 || arguments.length <= i + 1 ? undefined : arguments[i + 1]);
  }
}

function makeTupleType(specs, entries) {
  return specs.push({
    def: {
      Tuple: entries
    }
  }) - 1;
}

function makeVariantType(modName, variantType, specs, variants) {
  return specs.push({
    def: {
      Variant: {
        variants: variants
      }
    },
    path: ["pallet_".concat(modName.toString()), 'pallet', variantType]
  }) - 1;
}
/**
 * @internal
 * generate & register the OriginCaller type
 **/


function registerOriginCaller(registry, modules, metaVersion) {
  registry.register({
    OriginCaller: {
      _enum: modules.map(function (mod, index) {
        return [mod.name.toString(), metaVersion >= 12 ? mod.index.toNumber() : index];
      }).sort(function (a, b) {
        return a[1] - b[1];
      }).reduce(function (result, _ref2) {
        var _ref3 = _slicedToArray(_ref2, 2),
            name = _ref3[0],
            index = _ref3[1];

        for (var i = Object.keys(result).length; i < index; i++) {
          result["Empty".concat(i)] = 'Null';
        }

        result[name] = _definitions.knownOrigins[name] || 'Null';
        return result;
      }, {})
    }
  });
}
/**
 * Find and apply the correct type override
 * @internal
 **/


function setTypeOverride(sectionTypes, types) {
  types.forEach(function (type) {
    var override = Object.keys(sectionTypes).find(function (aliased) {
      return type.eq(aliased);
    });

    if (override) {
      type.setOverride(sectionTypes[override]);
    } else {
      // FIXME: NOT happy with this approach, but gets over the initial hump cased by (Vec<Announcement>,BalanceOf)
      var orig = type.toString();
      var alias = Object.entries(sectionTypes).reduce(function (result, _ref4) {
        var _ref5 = _slicedToArray(_ref4, 2),
            src = _ref5[0],
            dst = _ref5[1];

        return BOXES.reduce(function (result, _ref6) {
          var _ref7 = _slicedToArray(_ref6, 2),
              a = _ref7[0],
              z = _ref7[1];

          return result.replace("".concat(a).concat(src).concat(z), "".concat(a).concat(dst).concat(z));
        }, result);
      }, orig);

      if (orig !== alias) {
        type.setOverride(alias);
      }
    }
  });
}
/**
 * Apply module-specific type overrides (always be done as part of toV14)
 * @internal
 **/


function convertCalls(specs, registry, modName, calls, sectionTypes) {
  var variants = calls.map(function (_ref8, index) {
    var args = _ref8.args,
        docs = _ref8.docs,
        name = _ref8.name;
    setTypeOverride(sectionTypes, args.map(function (_ref9) {
      var type = _ref9.type;
      return type;
    }));
    return registry.createTypeUnsafe('SiVariant', [{
      docs: docs,
      fields: args.map(function (_ref10) {
        var name = _ref10.name,
            type = _ref10.type;
        return registry.createTypeUnsafe('SiField', [{
          name: name,
          type: compatType(specs, type)
        }]);
      }),
      index: index,
      name: name
    }]);
  });
  return registry.createTypeUnsafe('PalletCallMetadataV14', [{
    type: makeVariantType(modName, 'Call', specs, variants)
  }]);
}
/**
 * Apply module-specific type overrides (always be done as part of toV14)
 * @internal
 */


function convertConstants(specs, registry, constants, sectionTypes) {
  return constants.map(function (_ref11) {
    var docs = _ref11.docs,
        name = _ref11.name,
        type = _ref11.type,
        value = _ref11.value;
    setTypeOverride(sectionTypes, [type]);
    return registry.createTypeUnsafe('PalletConstantMetadataV14', [{
      docs: docs,
      name: name,
      type: compatType(specs, type),
      value: value
    }]);
  });
}
/**
 * Apply module-specific type overrides (always be done as part of toV14)
 * @internal
 */
// eslint-disable-next-line @typescript-eslint/no-unused-vars


function convertErrors(specs, registry, modName, errors, _sectionTypes) {
  var variants = errors.map(function (_ref12, index) {
    var docs = _ref12.docs,
        name = _ref12.name;
    return registry.createTypeUnsafe('SiVariant', [{
      docs: docs,
      fields: [],
      index: index,
      name: name
    }]);
  });
  return registry.createTypeUnsafe('PalletErrorMetadataV14', [{
    type: makeVariantType(modName, 'Error', specs, variants)
  }]);
}
/**
 * Apply module-specific type overrides (always be done as part of toV14)
 * @internal
 **/


function convertEvents(specs, registry, modName, events, sectionTypes) {
  var variants = events.map(function (_ref13, index) {
    var args = _ref13.args,
        docs = _ref13.docs,
        name = _ref13.name;
    setTypeOverride(sectionTypes, args);
    return registry.createTypeUnsafe('SiVariant', [{
      docs: docs,
      fields: args.map(function (t) {
        return registry.createTypeUnsafe('SiField', [{
          type: compatType(specs, t)
        }]);
      }),
      index: index,
      name: name
    }]);
  });
  return registry.createTypeUnsafe('PalletEventMetadataV14', [{
    type: makeVariantType(modName, 'Event', specs, variants)
  }]);
}

function createMapEntry(specs, registry, sectionTypes, _ref14) {
  var hashers = _ref14.hashers,
      isLinked = _ref14.isLinked,
      isOptional = _ref14.isOptional,
      keys = _ref14.keys,
      value = _ref14.value;
  setTypeOverride(sectionTypes, [value].concat(_toConsumableArray(Array.isArray(keys) ? keys : [keys])));
  return registry.createTypeUnsafe('StorageEntryTypeV14', [{
    Map: {
      hashers: hashers,
      key: hashers.length === 1 ? compatType(specs, keys[0]) : makeTupleType(specs, keys.map(function (t) {
        return compatType(specs, t);
      })),
      value: isLinked // For previous-generation linked-map support, the actual storage result
      // is a Tuple with the value and the Linkage (Option appears in teh value-part only)
      ? compatType(specs, "(".concat(isOptional ? "Option<".concat(value.toString(), ">") : value.toString(), ", Linkage<").concat(keys[0].toString(), ">)")) : compatType(specs, value)
    }
  }]);
}
/**
 * Apply module-specific storage type overrides (always part of toV14)
 * @internal
 **/


function convertStorage(specs, registry, _ref15, sectionTypes) {
  var items = _ref15.items,
      prefix = _ref15.prefix;
  return registry.createTypeUnsafe('PalletStorageMetadataV14', [{
    items: items.map(function (_ref16) {
      var docs = _ref16.docs,
          fallback = _ref16.fallback,
          modifier = _ref16.modifier,
          name = _ref16.name,
          type = _ref16.type;
      var entryType;

      if (type.isPlain) {
        var plain = type.asPlain;
        setTypeOverride(sectionTypes, [plain]);
        entryType = registry.createTypeUnsafe('StorageEntryTypeV14', [{
          Plain: compatType(specs, plain)
        }]);
      } else if (type.isMap) {
        var map = type.asMap;
        entryType = createMapEntry(specs, registry, sectionTypes, {
          hashers: [map.hasher],
          isLinked: map.linked.isTrue,
          isOptional: modifier.isOptional,
          keys: [map.key],
          value: map.value
        });
      } else if (type.isDoubleMap) {
        var dm = type.asDoubleMap;
        entryType = createMapEntry(specs, registry, sectionTypes, {
          hashers: [dm.hasher, dm.key2Hasher],
          isLinked: false,
          isOptional: modifier.isOptional,
          keys: [dm.key1, dm.key2],
          value: dm.value
        });
      } else {
        var nm = type.asNMap;
        entryType = createMapEntry(specs, registry, sectionTypes, {
          hashers: nm.hashers,
          isLinked: false,
          isOptional: modifier.isOptional,
          keys: nm.keyVec,
          value: nm.value
        });
      }

      return registry.createTypeUnsafe('StorageEntryMetadataV14', [{
        docs: docs,
        fallback: fallback,
        modifier: modifier,
        name: name,
        type: entryType
      }]);
    }),
    prefix: prefix
  }]);
}
/** @internal */
// eslint-disable-next-line @typescript-eslint/no-unused-vars


function convertExtrinsic(registry, _ref17) {
  var signedExtensions = _ref17.signedExtensions,
      version = _ref17.version;
  return registry.createTypeUnsafe('ExtrinsicMetadataV14', [{
    signedExtensions: signedExtensions.map(function (identifier) {
      return {
        identifier: identifier,
        type: 0 // we don't map the fields at all

      };
    }),
    type: 0,
    // Map to extrinsic like in v14?
    version: version
  }]);
}
/** @internal */


function createPallet(specs, registry, mod, _ref18) {
  var calls = _ref18.calls,
      constants = _ref18.constants,
      errors = _ref18.errors,
      events = _ref18.events,
      storage = _ref18.storage;
  var sectionTypes = (0, _alias.getAliasTypes)(registry, (0, _util.stringCamelCase)(mod.name));
  return registry.createTypeUnsafe('PalletMetadataV14', [{
    calls: calls && convertCalls(specs, registry, mod.name, calls, sectionTypes),
    constants: convertConstants(specs, registry, constants, sectionTypes),
    errors: errors && convertErrors(specs, registry, mod.name, errors, sectionTypes),
    events: events && convertEvents(specs, registry, mod.name, events, sectionTypes),
    index: mod.index,
    name: mod.name,
    storage: storage && convertStorage(specs, registry, storage, sectionTypes)
  }]);
}
/**
 * Convert the Metadata to v14
 * @internal
 **/


function toV14(registry, v13, metaVersion) {
  var specs = []; // position 0 always has Null, additionally add internal defaults

  compatTypes(specs, 'Null', 'u8', 'u16', 'u32', 'u64');
  registerOriginCaller(registry, v13.modules, metaVersion);
  var extrinsic = convertExtrinsic(registry, v13.extrinsic);
  var pallets = v13.modules.map(function (mod) {
    return createPallet(specs, registry, mod, {
      calls: mod.calls.unwrapOr(null),
      constants: mod.constants,
      errors: mod.errors.length ? mod.errors : null,
      events: mod.events.unwrapOr(null),
      storage: mod.storage.unwrapOr(null)
    });
  });
  return registry.createTypeUnsafe('MetadataV14', [{
    extrinsic: extrinsic,
    lookup: {
      types: specs.map(function (type, id) {
        return registry.createTypeUnsafe('PortableType', [{
          id: id,
          type: type
        }]);
      })
    },
    pallets: pallets
  }]);
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../../interfaces/alias.js":"node_modules/@polkadot/types/interfaces/alias.js","../../interfaces/runtime/definitions.js":"node_modules/@polkadot/types/interfaces/runtime/definitions.js"}],"node_modules/@polkadot/types/metadata/v14/toLatest.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toLatest = toLatest;

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * Convert the Metadata (which is an alias) to latest
 * @internal
 **/
// eslint-disable-next-line @typescript-eslint/no-unused-vars
function toLatest(registry, v14, _metaVersion) {
  return v14;
}
},{}],"node_modules/@polkadot/types/metadata/MagicNumber.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MagicNumber = exports.MAGIC_NUMBER = void 0;

var _typesCodec = require("@polkadot/types-codec");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MAGIC_NUMBER = 0x6174656d; // `meta`, reversed for Little Endian encoding

exports.MAGIC_NUMBER = MAGIC_NUMBER;

var MagicNumber = /*#__PURE__*/function (_U) {
  _inherits(MagicNumber, _U);

  var _super = _createSuper(MagicNumber);

  function MagicNumber(registry, value) {
    var _this;

    _classCallCheck(this, MagicNumber);

    _this = _super.call(this, registry, value);

    if (!_this.isEmpty && !_this.eq(MAGIC_NUMBER)) {
      throw new Error("MagicNumber mismatch: expected ".concat(registry.createTypeUnsafe('u32', [MAGIC_NUMBER]).toHex(), ", found ").concat(_this.toHex()));
    }

    return _this;
  }

  return _createClass(MagicNumber);
}(_typesCodec.U32);

exports.MagicNumber = MagicNumber;
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js"}],"node_modules/@polkadot/types/metadata/MetadataVersioned.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MetadataVersioned = void 0;

var _typesCodec = require("@polkadot/types-codec");

var _toV = require("./v9/toV10.js");

var _toV2 = require("./v10/toV11.js");

var _toV3 = require("./v11/toV12.js");

var _toV4 = require("./v12/toV13.js");

var _toV5 = require("./v13/toV14.js");

var _toLatest = require("./v14/toLatest.js");

var _MagicNumber = require("./MagicNumber.js");

var _index = require("./util/index.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

var LATEST_VERSION = 14;
/**
 * @name MetadataVersioned
 * @description
 * The versioned runtime metadata as a decoded structure
 */

var _converted = /*#__PURE__*/new WeakMap();

var _assertVersion = /*#__PURE__*/new WeakMap();

var _getVersion = /*#__PURE__*/new WeakMap();

var _metadata = /*#__PURE__*/new WeakMap();

var MetadataVersioned = /*#__PURE__*/function (_Struct) {
  _inherits(MetadataVersioned, _Struct);

  var _super = _createSuper(MetadataVersioned);

  function MetadataVersioned(registry, value) {
    var _this;

    _classCallCheck(this, MetadataVersioned);

    // const timeStart = performance.now()
    _this = _super.call(this, registry, {
      magicNumber: _MagicNumber.MagicNumber,
      metadata: 'MetadataAll'
    }, value); // console.log('MetadataVersioned', `${(performance.now() - timeStart).toFixed(2)}ms`)

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _converted, {
      writable: true,
      value: new Map()
    });

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _assertVersion, {
      writable: true,
      value: function value(version) {
        if (_this.version > version) {
          throw new Error("Cannot convert metadata from version ".concat(_this.version, " to ").concat(version));
        }

        return _this.version === version;
      }
    });

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _getVersion, {
      writable: true,
      value: function value(version, fromPrev) {
        var asCurr = "asV".concat(version);
        var asPrev = version === 'latest' ? "asV".concat(LATEST_VERSION) : "asV".concat(version - 1);

        if (version !== 'latest' && _classPrivateFieldGet(_assertThisInitialized(_this), _assertVersion).call(_assertThisInitialized(_this), version)) {
          return _classPrivateFieldGet(_assertThisInitialized(_this), _metadata).call(_assertThisInitialized(_this))[asCurr];
        }

        if (!_classPrivateFieldGet(_assertThisInitialized(_this), _converted).has(version)) {
          _classPrivateFieldGet(_assertThisInitialized(_this), _converted).set(version, fromPrev(_this.registry, _this[asPrev], _this.version));
        }

        return _classPrivateFieldGet(_assertThisInitialized(_this), _converted).get(version);
      }
    });

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _metadata, {
      writable: true,
      value: function value() {
        return _this.getT('metadata');
      }
    });

    return _this;
  }

  _createClass(MetadataVersioned, [{
    key: "asCallsOnly",
    get:
    /**
     * @description Returns the wrapped metadata as a limited calls-only (latest) version
     */
    function get() {
      return new MetadataVersioned(this.registry, {
        magicNumber: this.magicNumber,
        metadata: this.registry.createTypeUnsafe('MetadataAll', [(0, _index.toCallsOnly)(this.registry, this.asLatest), LATEST_VERSION])
      });
    }
    /**
     * @description Returns the wrapped metadata as a V9 object
     */

  }, {
    key: "asV9",
    get: function get() {
      _classPrivateFieldGet(this, _assertVersion).call(this, 9);

      return _classPrivateFieldGet(this, _metadata).call(this).asV9;
    }
    /**
     * @description Returns the wrapped values as a V10 object
     */

  }, {
    key: "asV10",
    get: function get() {
      return _classPrivateFieldGet(this, _getVersion).call(this, 10, _toV.toV10);
    }
    /**
     * @description Returns the wrapped values as a V11 object
     */

  }, {
    key: "asV11",
    get: function get() {
      return _classPrivateFieldGet(this, _getVersion).call(this, 11, _toV2.toV11);
    }
    /**
     * @description Returns the wrapped values as a V12 object
     */

  }, {
    key: "asV12",
    get: function get() {
      return _classPrivateFieldGet(this, _getVersion).call(this, 12, _toV3.toV12);
    }
    /**
     * @description Returns the wrapped values as a V13 object
     */

  }, {
    key: "asV13",
    get: function get() {
      return _classPrivateFieldGet(this, _getVersion).call(this, 13, _toV4.toV13);
    }
    /**
     * @description Returns the wrapped values as a V14 object
     */

  }, {
    key: "asV14",
    get: function get() {
      return _classPrivateFieldGet(this, _getVersion).call(this, 14, _toV5.toV14);
    }
    /**
     * @description Returns the wrapped values as a latest version object
     */

  }, {
    key: "asLatest",
    get: function get() {
      return _classPrivateFieldGet(this, _getVersion).call(this, 'latest', _toLatest.toLatest);
    }
    /**
     * @description The magicNumber for the Metadata (known constant)
     */

  }, {
    key: "magicNumber",
    get: function get() {
      return this.getT('magicNumber');
    }
    /**
     * @description the metadata version this structure represents
     */

  }, {
    key: "version",
    get: function get() {
      return _classPrivateFieldGet(this, _metadata).call(this).index;
    }
  }, {
    key: "getUniqTypes",
    value: function getUniqTypes(throwError) {
      return (0, _index.getUniqTypes)(this.registry, this.asLatest, throwError);
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      // HACK(y): ensure that we apply the aliases if we have not done so already, this is
      // needed to ensure we have the correct overrides (which is only applied in toLatest)
      // eslint-disable-next-line no-unused-expressions
      this.asLatest;
      return _get(_getPrototypeOf(MetadataVersioned.prototype), "toJSON", this).call(this);
    }
  }]);

  return MetadataVersioned;
}(_typesCodec.Struct);

exports.MetadataVersioned = MetadataVersioned;
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","./v9/toV10.js":"node_modules/@polkadot/types/metadata/v9/toV10.js","./v10/toV11.js":"node_modules/@polkadot/types/metadata/v10/toV11.js","./v11/toV12.js":"node_modules/@polkadot/types/metadata/v11/toV12.js","./v12/toV13.js":"node_modules/@polkadot/types/metadata/v12/toV13.js","./v13/toV14.js":"node_modules/@polkadot/types/metadata/v13/toV14.js","./v14/toLatest.js":"node_modules/@polkadot/types/metadata/v14/toLatest.js","./MagicNumber.js":"node_modules/@polkadot/types/metadata/MagicNumber.js","./util/index.js":"node_modules/@polkadot/types/metadata/util/index.js"}],"node_modules/@polkadot/types/metadata/Metadata.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Metadata = void 0;

var _util = require("@polkadot/util");

var _MetadataVersioned2 = require("./MetadataVersioned.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

// magic u32 preceding the version id
var VERSION_IDX = 4; // magic + lowest supported version

var EMPTY_METADATA = new Uint8Array([0x6d, 0x65, 0x74, 0x61, 9]);
/** @internal */

function decodeU8a(registry, value) {
  var u8a = value.length === 0 ? EMPTY_METADATA : value; // This is an f-ing hack as a follow-up to another ugly hack
  // https://github.com/polkadot-js/api/commit/a9211690be6b68ad6c6dad7852f1665cadcfa5b2
  // when we fail on V9, try to re-parse it as v10...

  if (u8a[VERSION_IDX] === 9) {
    try {
      return new _MetadataVersioned2.MetadataVersioned(registry, u8a);
    } catch (error) {
      u8a[VERSION_IDX] = 10;
      return u8a;
    }
  }

  return u8a;
}
/**
 * @name Metadata
 * @description
 * The versioned runtime metadata as a decoded structure
 */


var Metadata = /*#__PURE__*/function (_MetadataVersioned) {
  _inherits(Metadata, _MetadataVersioned);

  var _super = _createSuper(Metadata);

  function Metadata(registry, value) {
    _classCallCheck(this, Metadata);

    // const timeStart = performance.now()
    return _super.call(this, registry, (0, _util.isU8a)(value) || (0, _util.isString)(value) ? decodeU8a(registry, (0, _util.u8aToU8a)(value)) : value); // console.log('Metadata', `${(performance.now() - timeStart).toFixed(2)}ms`)
  }

  return _createClass(Metadata);
}(_MetadataVersioned2.MetadataVersioned);

exports.Metadata = Metadata;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./MetadataVersioned.js":"node_modules/@polkadot/types/metadata/MetadataVersioned.js"}],"node_modules/@polkadot/types/metadata/decorate/util.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.objectNameToString = exports.objectNameToCamel = void 0;

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
function convert(fn) {
  return function (_ref) {
    var name = _ref.name;
    return fn(name);
  };
}

var objectNameToCamel = convert(_util.stringCamelCase);
exports.objectNameToCamel = objectNameToCamel;
var objectNameToString = convert(function (n) {
  return n.toString();
});
exports.objectNameToString = objectNameToString;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types/metadata/decorate/constants/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.decorateConstants = decorateConstants;

var _util = require("@polkadot/util");

var _util2 = require("../util.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/** @internal */
// eslint-disable-next-line @typescript-eslint/no-unused-vars
function decorateConstants(registry, _ref, _version) {
  var pallets = _ref.pallets;
  var result = {};

  var _loop = function _loop(i) {
    var _pallets$i = pallets[i],
        constants = _pallets$i.constants,
        name = _pallets$i.name;

    if (!constants.isEmpty) {
      (0, _util.lazyMethod)(result, (0, _util.stringCamelCase)(name), function () {
        return (0, _util.lazyMethods)({}, constants, function (constant) {
          var codec = registry.createTypeUnsafe(registry.createLookupType(constant.type), [(0, _util.hexToU8a)(constant.value.toHex())]);
          codec.meta = constant;
          return codec;
        }, _util2.objectNameToCamel);
      });
    }
  };

  for (var i = 0; i < pallets.length; i++) {
    _loop(i);
  }

  return result;
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../util.js":"node_modules/@polkadot/types/metadata/decorate/util.js"}],"node_modules/@polkadot/types/metadata/decorate/errors/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.decorateErrors = decorateErrors;
exports.variantToMeta = variantToMeta;

var _util = require("@polkadot/util");

var _lazy = require("../../../create/lazy.js");

var _util2 = require("../util.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
function variantToMeta(lookup, variant) {
  return (0, _util.objectSpread)({
    args: variant.fields.map(function (_ref) {
      var type = _ref.type;
      return lookup.getTypeDef(type).type;
    })
  }, variant);
}
/** @internal */


function decorateErrors(registry, _ref2, version) {
  var lookup = _ref2.lookup,
      pallets = _ref2.pallets;
  var result = {};

  var _loop = function _loop(i) {
    var _pallets$i = pallets[i],
        errors = _pallets$i.errors,
        index = _pallets$i.index,
        name = _pallets$i.name;

    if (errors.isSome) {
      var sectionIndex = version >= 12 ? index.toNumber() : i;
      (0, _util.lazyMethod)(result, (0, _util.stringCamelCase)(name), function () {
        return (0, _lazy.lazyVariants)(lookup, errors.unwrap(), _util2.objectNameToString, function (variant) {
          return {
            // We sprinkle in isCodec & isU8a to ensure we are dealing with the correct objects
            is: function is(errorMod) {
              return (0, _util.isCodec)(errorMod) && (0, _util.isCodec)(errorMod.index) && errorMod.index.eq(sectionIndex) && ((0, _util.isU8a)(errorMod.error) ? errorMod.error[0] === variant.index.toNumber() : (0, _util.isCodec)(errorMod.error) && errorMod.error.eq(variant.index));
            },
            meta: registry.createTypeUnsafe('ErrorMetadataLatest', [variantToMeta(lookup, variant)])
          };
        });
      });
    }
  };

  for (var i = 0; i < pallets.length; i++) {
    _loop(i);
  }

  return result;
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../../../create/lazy.js":"node_modules/@polkadot/types/create/lazy.js","../util.js":"node_modules/@polkadot/types/metadata/decorate/util.js"}],"node_modules/@polkadot/types/metadata/decorate/events/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.decorateEvents = decorateEvents;
exports.filterEventsSome = filterEventsSome;

var _util = require("@polkadot/util");

var _lazy = require("../../../create/lazy.js");

var _index = require("../errors/index.js");

var _util2 = require("../util.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
function filterEventsSome(_ref) {
  var events = _ref.events;
  return events.isSome;
}
/** @internal */


function decorateEvents(registry, _ref2, version) {
  var lookup = _ref2.lookup,
      pallets = _ref2.pallets;
  var result = {};
  var filtered = pallets.filter(filterEventsSome);

  var _loop = function _loop(i) {
    var _filtered$i = filtered[i],
        events = _filtered$i.events,
        index = _filtered$i.index,
        name = _filtered$i.name;
    var sectionIndex = version >= 12 ? index.toNumber() : i;
    (0, _util.lazyMethod)(result, (0, _util.stringCamelCase)(name), function () {
      return (0, _lazy.lazyVariants)(lookup, events.unwrap(), _util2.objectNameToString, function (variant) {
        return {
          // We sprinkle in isCodec & isU8a to ensure we are dealing with the correct objects
          is: function is(eventRecord) {
            return (0, _util.isCodec)(eventRecord) && (0, _util.isU8a)(eventRecord.index) && sectionIndex === eventRecord.index[0] && variant.index.eq(eventRecord.index[1]);
          },
          meta: registry.createTypeUnsafe('EventMetadataLatest', [(0, _index.variantToMeta)(lookup, variant)])
        };
      });
    });
  };

  for (var i = 0; i < filtered.length; i++) {
    _loop(i);
  }

  return result;
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../../../create/lazy.js":"node_modules/@polkadot/types/create/lazy.js","../errors/index.js":"node_modules/@polkadot/types/metadata/decorate/errors/index.js","../util.js":"node_modules/@polkadot/types/metadata/decorate/util.js"}],"node_modules/@polkadot/types/metadata/decorate/extrinsics/createUnchecked.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createUnchecked = createUnchecked;

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
function isTx(tx, callIndex) {
  return tx.callIndex[0] === callIndex[0] && tx.callIndex[1] === callIndex[1];
}
/** @internal */


function createUnchecked(registry, section, callIndex, callMetadata) {
  var expectedArgs = callMetadata.fields;
  var funcName = (0, _util.stringCamelCase)(callMetadata.name);

  var extrinsicFn = function extrinsicFn() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (expectedArgs.length !== args.length) {
      throw new Error("Extrinsic ".concat(section, ".").concat(funcName, " expects ").concat(expectedArgs.length, " arguments, got ").concat(args.length, "."));
    }

    return registry.createTypeUnsafe('Call', [{
      args: args,
      callIndex: callIndex
    }, callMetadata]);
  };

  extrinsicFn.is = function (tx) {
    return isTx(tx, callIndex);
  };

  extrinsicFn.callIndex = callIndex;
  extrinsicFn.meta = callMetadata;
  extrinsicFn.method = funcName;
  extrinsicFn.section = section;

  extrinsicFn.toJSON = function () {
    return callMetadata.toJSON();
  };

  return extrinsicFn;
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types/metadata/decorate/extrinsics/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createCallFunction = createCallFunction;
exports.decorateExtrinsics = decorateExtrinsics;
exports.filterCallsSome = filterCallsSome;

var _util = require("@polkadot/util");

var _lazy = require("../../../create/lazy.js");

var _index = require("../../util/index.js");

var _util2 = require("../util.js");

var _createUnchecked = require("./createUnchecked.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
function filterCallsSome(_ref) {
  var calls = _ref.calls;
  return calls.isSome;
}

function createCallFunction(registry, lookup, variant, sectionName, sectionIndex) {
  var fields = variant.fields,
      index = variant.index;
  var args = new Array(fields.length);

  for (var a = 0; a < fields.length; a++) {
    var _fields$a = fields[a],
        name = _fields$a.name,
        type = _fields$a.type,
        typeName = _fields$a.typeName;
    args[a] = (0, _util.objectSpread)({
      name: (0, _util.stringCamelCase)(name.unwrapOr("param".concat(a))),
      type: (0, _index.getSiName)(lookup, type)
    }, typeName.isSome ? {
      typeName: typeName.unwrap()
    } : null);
  }

  return (0, _createUnchecked.createUnchecked)(registry, sectionName, new Uint8Array([sectionIndex, index.toNumber()]), registry.createTypeUnsafe('FunctionMetadataLatest', [(0, _util.objectSpread)({
    args: args
  }, variant)]));
}
/** @internal */


function decorateExtrinsics(registry, _ref2, version) {
  var lookup = _ref2.lookup,
      pallets = _ref2.pallets;
  var result = {};
  var filtered = pallets.filter(filterCallsSome);

  var _loop = function _loop(i) {
    var _filtered$i = filtered[i],
        calls = _filtered$i.calls,
        index = _filtered$i.index,
        name = _filtered$i.name;
    var sectionName = (0, _util.stringCamelCase)(name);
    var sectionIndex = version >= 12 ? index.toNumber() : i;
    (0, _util.lazyMethod)(result, sectionName, function () {
      return (0, _lazy.lazyVariants)(lookup, calls.unwrap(), _util2.objectNameToCamel, function (variant) {
        return createCallFunction(registry, lookup, variant, sectionName, sectionIndex);
      });
    });
  };

  for (var i = 0; i < filtered.length; i++) {
    _loop(i);
  }

  return result;
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../../../create/lazy.js":"node_modules/@polkadot/types/create/lazy.js","../../util/index.js":"node_modules/@polkadot/types/metadata/util/index.js","../util.js":"node_modules/@polkadot/types/metadata/decorate/util.js","./createUnchecked.js":"node_modules/@polkadot/types/metadata/decorate/extrinsics/createUnchecked.js"}],"node_modules/@polkadot/types/metadata/decorate/storage/getHasher.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getHasher = getHasher;

var _util = require("@polkadot/util");

var _utilCrypto = require("@polkadot/util-crypto");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var DEFAULT_FN = function DEFAULT_FN(data) {
  return (0, _utilCrypto.xxhashAsU8a)(data, 128);
};

var HASHERS = {
  Blake2_128: function Blake2_128(data) {
    return (// eslint-disable-line camelcase
      (0, _utilCrypto.blake2AsU8a)(data, 128)
    );
  },
  Blake2_128Concat: function Blake2_128Concat(data) {
    return (// eslint-disable-line camelcase
      (0, _util.u8aConcat)((0, _utilCrypto.blake2AsU8a)(data, 128), (0, _util.u8aToU8a)(data))
    );
  },
  Blake2_256: function Blake2_256(data) {
    return (// eslint-disable-line camelcase
      (0, _utilCrypto.blake2AsU8a)(data, 256)
    );
  },
  Identity: function Identity(data) {
    return (0, _util.u8aToU8a)(data);
  },
  Twox128: function Twox128(data) {
    return (0, _utilCrypto.xxhashAsU8a)(data, 128);
  },
  Twox256: function Twox256(data) {
    return (0, _utilCrypto.xxhashAsU8a)(data, 256);
  },
  Twox64Concat: function Twox64Concat(data) {
    return (0, _util.u8aConcat)((0, _utilCrypto.xxhashAsU8a)(data, 64), (0, _util.u8aToU8a)(data));
  }
};
/** @internal */

function getHasher(hasher) {
  return HASHERS[hasher.type] || DEFAULT_FN;
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/util-crypto":"node_modules/@polkadot/util-crypto/index.js"}],"node_modules/@polkadot/types/metadata/decorate/storage/createFunction.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NO_RAW_ARGS = void 0;
exports.createFunction = createFunction;
exports.createKeyInspect = createKeyInspect;
exports.createKeyRaw = createKeyRaw;
exports.createKeyRawParts = createKeyRawParts;

var _typesCodec = require("@polkadot/types-codec");

var _util = require("@polkadot/util");

var _utilCrypto = require("@polkadot/util-crypto");

var _index = require("../../util/index.js");

var _getHasher = require("./getHasher.js");

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var NO_RAW_ARGS = {
  args: [],
  hashers: [],
  keys: []
};
/** @internal */

exports.NO_RAW_ARGS = NO_RAW_ARGS;

function assertArgs(_ref, _ref2) {
  var method = _ref.method,
      section = _ref.section;
  var args = _ref2.args,
      keys = _ref2.keys;

  if (!Array.isArray(args)) {
    throw new Error("Call to ".concat((0, _util.stringCamelCase)(section || 'unknown'), ".").concat((0, _util.stringCamelCase)(method || 'unknown'), " needs ").concat(keys.length, " arguments"));
  } else if (args.filter(filterDefined).length !== keys.length) {
    throw new Error("Call to ".concat((0, _util.stringCamelCase)(section || 'unknown'), ".").concat((0, _util.stringCamelCase)(method || 'unknown'), " needs ").concat(keys.length, " arguments, found [").concat(args.join(', '), "]"));
  }
}
/** @internal */


function createKeyRawParts(registry, itemFn, _ref3) {
  var args = _ref3.args,
      hashers = _ref3.hashers,
      keys = _ref3.keys;
  var extra = new Array(keys.length);

  for (var i = 0; i < keys.length; i++) {
    extra[i] = (0, _getHasher.getHasher)(hashers[i])(registry.createTypeUnsafe(registry.createLookupType(keys[i]), [args[i]]).toU8a());
  }

  return [[(0, _utilCrypto.xxhashAsU8a)(itemFn.prefix, 128), (0, _utilCrypto.xxhashAsU8a)(itemFn.method, 128)], extra];
}
/** @internal */


function createKeyInspect(registry, itemFn, args) {
  var _ref4;

  assertArgs(itemFn, args);
  var meta = itemFn.meta;

  var _createKeyRawParts = createKeyRawParts(registry, itemFn, args),
      _createKeyRawParts2 = _slicedToArray(_createKeyRawParts, 2),
      prefix = _createKeyRawParts2[0],
      extra = _createKeyRawParts2[1];

  var types = [];

  if (meta.type.isMap) {
    var _meta$type$asMap = meta.type.asMap,
        hashers = _meta$type$asMap.hashers,
        key = _meta$type$asMap.key;
    types = hashers.length === 1 ? ["".concat(hashers[0].type, "(").concat((0, _index.getSiName)(registry.lookup, key), ")")] : registry.lookup.getSiType(key).def.asTuple.map(function (k, i) {
      return "".concat(hashers[i].type, "(").concat((0, _index.getSiName)(registry.lookup, k), ")");
    });
  }

  var names = (_ref4 = ['module', 'method']).concat.apply(_ref4, _toConsumableArray(args.args.map(function (_, i) {
    return types[i];
  })));

  return {
    inner: prefix.concat.apply(prefix, _toConsumableArray(extra)).map(function (v, i) {
      return {
        name: names[i],
        outer: [v]
      };
    })
  };
}
/** @internal */


function createKeyRaw(registry, itemFn, args) {
  var _createKeyRawParts3 = createKeyRawParts(registry, itemFn, args),
      _createKeyRawParts4 = _slicedToArray(_createKeyRawParts3, 2),
      prefix = _createKeyRawParts4[0],
      extra = _createKeyRawParts4[1];

  return _util.u8aConcat.apply(void 0, _toConsumableArray(prefix).concat(_toConsumableArray(extra)));
}
/** @internal */


function filterDefined(a) {
  return !(0, _util.isUndefined)(a);
}
/** @internal */


function createKey(registry, itemFn, args) {
  assertArgs(itemFn, args); // always add the length prefix (underlying it is Bytes)

  return (0, _util.compactAddLength)(createKeyRaw(registry, itemFn, args));
}
/** @internal */


function createStorageInspect(registry, itemFn, options) {
  var type = itemFn.meta.type;
  return function () {
    if (type.isPlain) {
      return options.skipHashing ? {
        inner: [],
        name: 'wellKnown',
        outer: [(0, _util.u8aToU8a)(options.key)]
      } : createKeyInspect(registry, itemFn, NO_RAW_ARGS);
    }

    var _type$asMap = type.asMap,
        hashers = _type$asMap.hashers,
        key = _type$asMap.key;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return hashers.length === 1 ? createKeyInspect(registry, itemFn, {
      args: args,
      hashers: hashers,
      keys: [key]
    }) : createKeyInspect(registry, itemFn, {
      args: args,
      hashers: hashers,
      keys: registry.lookup.getSiType(key).def.asTuple
    });
  };
}
/** @internal */


function createStorageFn(registry, itemFn, options) {
  var type = itemFn.meta.type;
  var cacheKey = null; // Can only have zero or one argument:
  //   - storage.system.account(address)
  //   - storage.timestamp.blockPeriod()
  // For higher-map queries the params are passed in as an tuple, [key1, key2]

  return function () {
    if (type.isPlain) {
      if (!cacheKey) {
        cacheKey = options.skipHashing ? (0, _util.compactAddLength)((0, _util.u8aToU8a)(options.key)) : createKey(registry, itemFn, NO_RAW_ARGS);
      }

      return cacheKey;
    }

    var _type$asMap2 = type.asMap,
        hashers = _type$asMap2.hashers,
        key = _type$asMap2.key;

    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    return hashers.length === 1 ? createKey(registry, itemFn, {
      args: args,
      hashers: hashers,
      keys: [key]
    }) : createKey(registry, itemFn, {
      args: args,
      hashers: hashers,
      keys: registry.lookup.getSiType(key).def.asTuple
    });
  };
}
/** @internal */


function createWithMeta(registry, itemFn, options) {
  var meta = itemFn.meta,
      method = itemFn.method,
      prefix = itemFn.prefix,
      section = itemFn.section;
  var storageFn = createStorageFn(registry, itemFn, options);
  storageFn.inspect = createStorageInspect(registry, itemFn, options);
  storageFn.meta = meta;
  storageFn.method = (0, _util.stringCamelCase)(method);
  storageFn.prefix = prefix;
  storageFn.section = section; // explicitly add the actual method in the toJSON, this gets used to determine caching and without it
  // instances (e.g. collective) will not work since it is only matched on param meta

  storageFn.toJSON = function () {
    return (0, _util.objectSpread)({
      storage: {
        method: method,
        prefix: prefix,
        section: section
      }
    }, meta.toJSON());
  };

  return storageFn;
}
/** @internal */


function extendHeadMeta(registry, _ref5, _ref6, iterFn) {
  var _ref5$meta = _ref5.meta,
      docs = _ref5$meta.docs,
      name = _ref5$meta.name,
      type = _ref5$meta.type,
      section = _ref5.section;
  var method = _ref6.method;
  // metadata with a fallback value using the type of the key, the normal
  // meta fallback only applies to actual entry values, create one for head
  var meta = registry.createTypeUnsafe('StorageEntryMetadataLatest', [{
    docs: docs,
    fallback: registry.createTypeUnsafe('Bytes', []),
    modifier: registry.createTypeUnsafe('StorageEntryModifierLatest', [1]),
    // required
    name: name,
    type: registry.createTypeUnsafe('StorageEntryTypeLatest', [type.asMap.key, 0])
  }]);
  iterFn.meta = meta;

  var fn = function fn() {
    return registry.createTypeUnsafe('StorageKey', [iterFn.apply(void 0, arguments), {
      method: method,
      section: section
    }]);
  };

  fn.meta = meta;
  return fn;
}
/** @internal */


function extendPrefixedMap(registry, itemFn, storageFn) {
  var type = itemFn.meta.type,
      method = itemFn.method,
      section = itemFn.section;
  storageFn.iterKey = extendHeadMeta(registry, itemFn, storageFn, function () {
    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }

    if (args.length && (type.isPlain || args.length > type.asMap.hashers.length)) {
      throw new Error("Iteration ".concat((0, _util.stringCamelCase)(section || 'unknown'), ".").concat((0, _util.stringCamelCase)(method || 'unknown'), " needs arguments to be at least one less than the full arguments, found [").concat(args.join(', '), "]"));
    }

    if (args.length) {
      if (type.isMap) {
        var _type$asMap3 = type.asMap,
            hashers = _type$asMap3.hashers,
            key = _type$asMap3.key;
        var keysVec = hashers.length === 1 ? [key] : registry.lookup.getSiType(key).def.asTuple;
        return new _typesCodec.Raw(registry, createKeyRaw(registry, itemFn, {
          args: args,
          hashers: hashers.slice(0, args.length),
          keys: keysVec.slice(0, args.length)
        }));
      }
    }

    return new _typesCodec.Raw(registry, createKeyRaw(registry, itemFn, NO_RAW_ARGS));
  });
  return storageFn;
}
/** @internal */


function createFunction(registry, itemFn, options) {
  var type = itemFn.meta.type;
  var storageFn = createWithMeta(registry, itemFn, options);

  if (type.isMap) {
    extendPrefixedMap(registry, itemFn, storageFn);
  }

  storageFn.keyPrefix = function () {
    return storageFn.iterKey && storageFn.iterKey.apply(storageFn, arguments) || (0, _util.compactStripLength)(storageFn())[1];
  };

  return storageFn;
}
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/util-crypto":"node_modules/@polkadot/util-crypto/index.js","../../util/index.js":"node_modules/@polkadot/types/metadata/util/index.js","./getHasher.js":"node_modules/@polkadot/types/metadata/decorate/storage/getHasher.js"}],"node_modules/@polkadot/types/metadata/decorate/storage/util.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createRuntimeFunction = createRuntimeFunction;

var _createFunction = require("./createFunction.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
function findSiPrimitive(registry, _prim) {
  var prim = _prim.toLowerCase();

  return registry.lookup.types.find(function (t) {
    return t.type.def.isPrimitive && t.type.def.asPrimitive.toString().toLowerCase() === prim || t.type.def.isHistoricMetaCompat && t.type.def.asHistoricMetaCompat.toString().toLowerCase() === prim;
  });
}

function findSiType(registry, orig) {
  var portable = findSiPrimitive(registry, orig);

  if (!portable && orig === 'Bytes') {
    var u8 = findSiPrimitive(registry, 'u8');

    if (u8) {
      portable = registry.lookup.types.find(function (t) {
        return t.type.def.isSequence && t.type.def.asSequence.type.eq(u8.id) || t.type.def.isHistoricMetaCompat && t.type.def.asHistoricMetaCompat.eq(orig);
      });
    }
  }

  if (!portable) {
    console.warn("Unable to map ".concat(orig, " to a lookup index"));
  }

  return portable;
} // Small helper function to factorize code on this page.

/** @internal */


function createRuntimeFunction(_ref, key, _ref2) {
  var method = _ref.method,
      prefix = _ref.prefix,
      section = _ref.section;
  var docs = _ref2.docs,
      type = _ref2.type;
  return function (registry) {
    var _findSiType;

    return (0, _createFunction.createFunction)(registry, {
      meta: registry.createTypeUnsafe('StorageEntryMetadataLatest', [{
        docs: registry.createTypeUnsafe('Vec<Text>', [[docs]]),
        modifier: registry.createTypeUnsafe('StorageEntryModifierLatest', ['Required']),
        name: registry.createTypeUnsafe('Text', [method]),
        toJSON: function toJSON() {
          return key;
        },
        type: registry.createTypeUnsafe('StorageEntryTypeLatest', [{
          Plain: ((_findSiType = findSiType(registry, type)) === null || _findSiType === void 0 ? void 0 : _findSiType.id) || 0
        }])
      }]),
      method: method,
      prefix: prefix,
      section: section
    }, {
      key: key,
      skipHashing: true
    });
  };
}
},{"./createFunction.js":"node_modules/@polkadot/types/metadata/decorate/storage/createFunction.js"}],"node_modules/@polkadot/types/metadata/decorate/storage/substrate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.substrate = void 0;

var _util = require("./util.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var prefix = 'Substrate';
var section = 'substrate';

function createSubstrateFn(method, key, meta) {
  return (0, _util.createRuntimeFunction)({
    method: method,
    prefix: prefix,
    section: section
  }, key, meta);
}

var substrate = {
  changesTrieConfig: createSubstrateFn('changesTrieConfig', ':changes_trie', {
    docs: 'Changes trie configuration is stored under this key.',
    type: 'u32'
  }),
  childStorageKeyPrefix: createSubstrateFn('childStorageKeyPrefix', ':child_storage:', {
    docs: 'Prefix of child storage keys.',
    type: 'u32'
  }),
  code: createSubstrateFn('code', ':code', {
    docs: 'Wasm code of the runtime.',
    type: 'Bytes'
  }),
  extrinsicIndex: createSubstrateFn('extrinsicIndex', ':extrinsic_index', {
    docs: 'Current extrinsic index (u32) is stored under this key.',
    type: 'u32'
  }),
  heapPages: createSubstrateFn('heapPages', ':heappages', {
    docs: 'Number of wasm linear memory pages required for execution of the runtime.',
    type: 'u64'
  })
};
exports.substrate = substrate;
},{"./util.js":"node_modules/@polkadot/types/metadata/decorate/storage/util.js"}],"node_modules/@polkadot/types/metadata/decorate/storage/getStorage.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getStorage = getStorage;

var _substrate = require("./substrate.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/** @internal */
function getStorage(registry) {
  var storage = {};
  var entries = Object.entries(_substrate.substrate);

  for (var e = 0; e < entries.length; e++) {
    storage[entries[e][0]] = entries[e][1](registry);
  }

  return {
    substrate: storage
  };
}
},{"./substrate.js":"node_modules/@polkadot/types/metadata/decorate/storage/substrate.js"}],"node_modules/@polkadot/types/metadata/decorate/storage/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.decorateStorage = decorateStorage;

var _util = require("@polkadot/util");

var _util2 = require("../util.js");

var _createFunction = require("./createFunction.js");

var _getStorage = require("./getStorage.js");

var _util3 = require("./util.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
var VERSION_NAME = 'palletVersion';
var VERSION_KEY = ':__STORAGE_VERSION__:';
var VERSION_DOCS = {
  docs: 'Returns the current pallet version from storage',
  type: 'u16'
};
/** @internal */
// eslint-disable-next-line @typescript-eslint/no-unused-vars

function decorateStorage(registry, _ref, _metaVersion) {
  var pallets = _ref.pallets;
  var result = (0, _getStorage.getStorage)(registry);

  var _loop = function _loop(i) {
    var _pallets$i = pallets[i],
        name = _pallets$i.name,
        storage = _pallets$i.storage;

    if (storage.isSome) {
      var section = (0, _util.stringCamelCase)(name);

      var _storage$unwrap = storage.unwrap(),
          items = _storage$unwrap.items,
          _prefix = _storage$unwrap.prefix;

      var prefix = _prefix.toString();

      (0, _util.lazyMethod)(result, section, function () {
        return (0, _util.lazyMethods)({
          palletVersion: (0, _util3.createRuntimeFunction)({
            method: VERSION_NAME,
            prefix: prefix,
            section: section
          }, (0, _createFunction.createKeyRaw)(registry, {
            method: VERSION_KEY,
            prefix: name.toString()
          }, _createFunction.NO_RAW_ARGS), VERSION_DOCS)(registry)
        }, items, function (meta) {
          return (0, _createFunction.createFunction)(registry, {
            meta: meta,
            method: meta.name.toString(),
            prefix: prefix,
            section: section
          }, {});
        }, _util2.objectNameToCamel);
      });
    }
  };

  for (var i = 0; i < pallets.length; i++) {
    _loop(i);
  }

  return result;
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../util.js":"node_modules/@polkadot/types/metadata/decorate/util.js","./createFunction.js":"node_modules/@polkadot/types/metadata/decorate/storage/createFunction.js","./getStorage.js":"node_modules/@polkadot/types/metadata/decorate/storage/getStorage.js","./util.js":"node_modules/@polkadot/types/metadata/decorate/storage/util.js"}],"node_modules/@polkadot/types/metadata/decorate/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "decorateConstants", {
  enumerable: true,
  get: function () {
    return _index.decorateConstants;
  }
});
Object.defineProperty(exports, "decorateErrors", {
  enumerable: true,
  get: function () {
    return _index2.decorateErrors;
  }
});
Object.defineProperty(exports, "decorateEvents", {
  enumerable: true,
  get: function () {
    return _index3.decorateEvents;
  }
});
Object.defineProperty(exports, "decorateExtrinsics", {
  enumerable: true,
  get: function () {
    return _index4.decorateExtrinsics;
  }
});
Object.defineProperty(exports, "decorateStorage", {
  enumerable: true,
  get: function () {
    return _index5.decorateStorage;
  }
});
exports.expandMetadata = expandMetadata;
Object.defineProperty(exports, "filterCallsSome", {
  enumerable: true,
  get: function () {
    return _index4.filterCallsSome;
  }
});
Object.defineProperty(exports, "filterEventsSome", {
  enumerable: true,
  get: function () {
    return _index3.filterEventsSome;
  }
});

var _Metadata = require("../Metadata.js");

var _index = require("./constants/index.js");

var _index2 = require("./errors/index.js");

var _index3 = require("./events/index.js");

var _index4 = require("./extrinsics/index.js");

var _index5 = require("./storage/index.js");

// Copyright 2017-2022 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * Expands the metadata by decoration into consts, query and tx sections
 */
function expandMetadata(registry, metadata) {
  if (!(metadata instanceof _Metadata.Metadata)) {
    throw new Error('You need to pass a valid Metadata instance to Decorated');
  }

  var latest = metadata.asLatest;
  var version = metadata.version;
  return {
    consts: (0, _index.decorateConstants)(registry, latest, version),
    errors: (0, _index2.decorateErrors)(registry, latest, version),
    events: (0, _index3.decorateEvents)(registry, latest, version),
    query: (0, _index5.decorateStorage)(registry, latest, version),
    registry: registry,
    tx: (0, _index4.decorateExtrinsics)(registry, latest, version)
  };
}
},{"../Metadata.js":"node_modules/@polkadot/types/metadata/Metadata.js","./constants/index.js":"node_modules/@polkadot/types/metadata/decorate/constants/index.js","./errors/index.js":"node_modules/@polkadot/types/metadata/decorate/errors/index.js","./events/index.js":"node_modules/@polkadot/types/metadata/decorate/events/index.js","./extrinsics/index.js":"node_modules/@polkadot/types/metadata/decorate/extrinsics/index.js","./storage/index.js":"node_modules/@polkadot/types/metadata/decorate/storage/index.js"}],"node_modules/@polkadot/types/metadata/PortableRegistry/PortableRegistry.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PortableRegistry = void 0;

var _classPrivateFieldLooseBase2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/classPrivateFieldLooseBase"));

var _classPrivateFieldLooseKey2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/classPrivateFieldLooseKey"));

var _typesCodec = require("@polkadot/types-codec");

var _typesCreate = require("@polkadot/types-create");

var _util = require("@polkadot/util");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var l = (0, _util.logger)('PortableRegistry'); // Just a placeholder for a type.unrwapOr()

var TYPE_UNWRAP = {
  toNumber: function toNumber() {
    return -1;
  }
}; // Alias the primitive enum with out known values

var PRIMITIVE_ALIAS = {
  Char: 'u32',
  // Rust char is 4-bytes
  Str: 'Text'
}; // These are types where we have a specific decoding/encoding override + helpers

var PATHS_ALIAS = splitNamespace([// full matching on exact names...
// these are well-known types with additional encoding
'sp_core::crypto::AccountId32', 'sp_runtime::generic::era::Era', 'sp_runtime::multiaddress::MultiAddress', // ethereum overrides (Frontier, Moonbeam, Polkadot claims)
'account::AccountId20', 'polkadot_runtime_common::claims::EthereumAddress', // wildcard matching in place...
// these have a specific encoding or logic, use a wildcard for {pallet, darwinia}_democracy
'*_democracy::vote::Vote', '*_conviction_voting::vote::Vote', '*_identity::types::Data', // shorten some well-known types
'primitive_types::*', 'sp_arithmetic::per_things::*', // ink!
'ink_env::types::*']); // Mappings for types that should be converted to set via BitVec

var PATHS_SET = splitNamespace(['pallet_identity::types::BitFlags']); // These are the set namespaces for BitVec definitions (the last 2 appear in types as well)

var BITVEC_NS_LSB = ['bitvec::order::Lsb0', 'BitOrderLsb0'];
var BITVEC_NS_MSB = ['bitvec::order::Msb0', 'BitOrderMsb0'];
var BITVEC_NS = [].concat(BITVEC_NS_LSB, BITVEC_NS_MSB); // These we never use these as top-level names, they are wrappers

var WRAPPERS = ['BoundedBTreeMap', 'BoundedBTreeSet', 'BoundedVec', 'Box', 'BTreeMap', 'BTreeSet', 'Cow', 'Option', 'Range', 'RangeInclusive', 'Result', 'WeakBoundedVec', 'WrapperKeepOpaque', 'WrapperOpaque']; // These are reserved and/or conflicts with built-in Codec or JS definitions

var RESERVED = ['entries', 'hash', 'keys', 'new', 'size']; // Remove these from all paths at index 1

var PATH_RM_INDEX_1 = ['generic', 'misc', 'pallet', 'traits', 'types'];
/** @internal */

function sanitizeDocs(docs) {
  var result = new Array(docs.length);

  for (var i = 0; i < docs.length; i++) {
    result[i] = docs[i].toString();
  }

  return result;
}
/** @internal */


function splitNamespace(values) {
  var result = new Array(values.length);

  for (var i = 0; i < values.length; i++) {
    result[i] = values[i].split('::');
  }

  return result;
}
/** @internal */


function matchParts(first, second) {
  return first.length === second.length && first.every(function (a, index) {
    var b = second[index].toString();

    if (a === '*' || a === b) {
      return true;
    }

    if (a.includes('*') && a.includes('_') && b.includes('_')) {
      var suba = a.split('_');
      var subb = b.split('_'); // match initial *'s to multiples if we have a match for the other

      if (suba[0] === '*') {
        var indexOf = subb.indexOf(suba[1]);

        if (indexOf !== -1) {
          suba = suba.slice(1);
          subb = subb.slice(indexOf);
        }
      } // check for * matches at the end, adjust accordingly


      if (suba.length === 2 && suba[1] === '*' && suba[0] === subb[0]) {
        return true;
      }

      return matchParts(suba, subb);
    }

    return false;
  });
} // check if the path matches the PATHS_ALIAS (with wildcards)

/** @internal */


function getAliasPath(path) {
  // TODO We need to handle ink! Balance in some way
  return path.length && PATHS_ALIAS.some(function (a) {
    return matchParts(a, path);
  }) ? path[path.length - 1].toString() : null;
}
/** @internal */


function extractNameFlat(portable, lookupIndex, params, path) {
  var isInternal = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
  var count = path.length; // if we have no path or determined as a wrapper, we just skip it

  if (count === 0 || WRAPPERS.includes(path[count - 1].toString())) {
    return null;
  }

  var camels = new Array(count);
  var lowers = new Array(count); // initially just create arrays of the camelCase and lowercase path
  // parts - we will check these to extract the final values. While
  // we have 2 loops here, we also don't do the same operation twice

  for (var i = 0; i < count; i++) {
    var c = (0, _util.stringPascalCase)(isInternal ? path[i].replace('pallet_', '') : path[i]);

    var _l = c.toLowerCase();

    camels[i] = c;
    lowers[i] = _l;
  }

  var name = '';

  for (var _i = 0; _i < count; _i++) {
    var _l2 = lowers[_i]; // Remove ::{generic, misc, pallet, traits, types}::

    if (_i !== 1 || !PATH_RM_INDEX_1.includes(_l2)) {
      // sp_runtime::generic::digest::Digest -> sp_runtime::generic::Digest
      // sp_runtime::multiaddress::MultiAddress -> sp_runtime::MultiAddress
      if (_l2 !== lowers[_i + 1]) {
        name += camels[_i];
      }
    }
  } // do magic for RawOrigin lookup, e.g. pallet_collective::RawOrigin


  if (camels[1] === 'RawOrigin' && count === 2 && params.length === 2 && params[1].type.isSome) {
    var instanceType = portable[params[1].type.unwrap().toNumber()];

    if (instanceType.type.path.length === 2) {
      name = "".concat(name).concat(instanceType.type.path[1].toString());
    }
  }

  return {
    lookupIndex: lookupIndex,
    name: name,
    params: params
  };
}
/** @internal */


function extractName(portable, lookupIndex, _ref) {
  var _ref$type = _ref.type,
      params = _ref$type.params,
      path = _ref$type.path;
  return extractNameFlat(portable, lookupIndex, params, path);
}
/** @internal */


function nextDupeMatches(name, startAt, names) {
  var result = [names[startAt]];

  for (var i = startAt + 1; i < names.length; i++) {
    var v = names[i];

    if (v.name === name) {
      result.push(v);
    }
  }

  return result;
}
/** @internal */


function rewriteDupes(input, rewrite) {
  var count = input.length;

  for (var i = 0; i < count; i++) {
    var a = input[i];

    for (var j = i + 1; j < count; j++) {
      var b = input[j]; // if the indexes are not the same and the names match, we have a dupe

      if (a.lookupIndex !== b.lookupIndex && a.name === b.name) {
        return false;
      }
    }
  } // add all the adjusted values to the rewite map


  for (var _i2 = 0; _i2 < count; _i2++) {
    var p = input[_i2];
    rewrite[p.lookupIndex] = p.name;
  }

  return true;
}
/** @internal */


function removeDupeNames(lookup, portable, names) {
  var rewrite = {};
  return names.map(function (original, startAt) {
    var lookupIndex = original.lookupIndex,
        name = original.name,
        params = original.params;

    if (!name) {
      // the name is empty (this is not expected, but have a failsafe)
      return null;
    } else if (rewrite[lookupIndex]) {
      // we have already rewritten this one, we can skip it
      return original;
    } // those where the name is matching starting from this index


    var allSame = nextDupeMatches(name, startAt, names); // we only have one, so all ok

    if (allSame.length === 1) {
      return original;
    } // are there param differences between matching names


    var anyDiff = allSame.some(function (o) {
      return params.length !== o.params.length || params.some(function (p, index) {
        return !p.name.eq(o.params[index].name) || p.type.unwrapOr(TYPE_UNWRAP).toNumber() !== o.params[index].type.unwrapOr(TYPE_UNWRAP).toNumber();
      });
    }); // everything matches, we can combine these

    if (!anyDiff) {
      return original;
    } // TODO We probably want to attach all the indexes with differences,
    // not just the first
    // find the first parameter that yields differences


    var paramIdx = params.findIndex(function (_ref2, index) {
      var type = _ref2.type;
      return allSame.every(function (_ref3, aIndex) {
        var params = _ref3.params;
        return params[index].type.isSome && (aIndex === 0 || !params[index].type.eq(type));
      });
    }); // No param found that is different

    if (paramIdx === -1) {
      return original;
    } // see if using the param type helps


    var adjusted = new Array(allSame.length); // loop through all, specifically checking that index where the
    // first param yields differences

    for (var i = 0; i < allSame.length; i++) {
      var _allSame$i = allSame[i],
          _lookupIndex = _allSame$i.lookupIndex,
          _name = _allSame$i.name,
          _params3 = _allSame$i.params;

      var _lookup$getSiType = lookup.getSiType(_params3[paramIdx].type.unwrap()),
          def = _lookup$getSiType.def,
          path = _lookup$getSiType.path; // if it is not a primitive and it doesn't have a path, we really cannot
      // do anything at this point


      if (!def.isPrimitive && !path.length) {
        return null;
      }

      adjusted[i] = {
        lookupIndex: _lookupIndex,
        name: def.isPrimitive ? "".concat(_name).concat(def.asPrimitive.toString()) : "".concat(_name).concat(path[path.length - 1].toString())
      };
    } // check to see if the adjusted names have no issues


    if (rewriteDupes(adjusted, rewrite)) {
      return original;
    } // TODO This is duplicated from the section just above...
    // ... we certainly need a better solution here
    //
    // Last-ditch effort to use the full type path - ugly
    // loop through all, specifically checking that index where the
    // first param yields differences


    for (var _i3 = 0; _i3 < allSame.length; _i3++) {
      var _allSame$_i = allSame[_i3],
          _lookupIndex2 = _allSame$_i.lookupIndex,
          _name2 = _allSame$_i.name,
          _params4 = _allSame$_i.params;

      var _lookup$getSiType2 = lookup.getSiType(_params4[paramIdx].type.unwrap()),
          _def = _lookup$getSiType2.def,
          _path = _lookup$getSiType2.path;

      var flat = extractNameFlat(portable, _lookupIndex2, _params4, _path, true);

      if (_def.isPrimitive || !flat) {
        return null;
      }

      adjusted[_i3] = {
        lookupIndex: _lookupIndex2,
        name: "".concat(_name2).concat(flat.name)
      };
    } // check to see if the adjusted names have no issues


    if (rewriteDupes(adjusted, rewrite)) {
      return original;
    }

    return null;
  }).filter(function (n) {
    return !!n;
  }).map(function (_ref4) {
    var lookupIndex = _ref4.lookupIndex,
        name = _ref4.name,
        params = _ref4.params;
    return {
      lookupIndex: lookupIndex,
      name: rewrite[lookupIndex] || name,
      params: params
    };
  });
}
/** @internal */


function registerTypes(lookup, lookups, names, params) {
  // Register the types we extracted
  lookup.registry.register(lookups); // Try and extract the AccountId/Address/Signature type from UncheckedExtrinsic

  if (params.SpRuntimeUncheckedExtrinsic) {
    // Address, Call, Signature, Extra
    var _params$SpRuntimeUnch = _slicedToArray(params.SpRuntimeUncheckedExtrinsic, 3),
        addrParam = _params$SpRuntimeUnch[0],
        sigParam = _params$SpRuntimeUnch[2];

    var siAddress = lookup.getSiType(addrParam.type.unwrap());
    var siSignature = lookup.getSiType(sigParam.type.unwrap());
    var nsSignature = siSignature.path.join('::');
    var nsAccountId = siAddress.path.join('::');
    var isMultiAddress = nsAccountId === 'sp_runtime::multiaddress::MultiAddress'; // With multiaddress, we check the first type param again

    if (isMultiAddress) {
      // AccountId, AccountIndex
      var _siAddress$params = _slicedToArray(siAddress.params, 1),
          idParam = _siAddress$params[0];

      nsAccountId = lookup.getSiType(idParam.type.unwrap()).path.join('::');
    }

    lookup.registry.register({
      AccountId: ['sp_core::crypto::AccountId32'].includes(nsAccountId) ? 'AccountId32' : ['account::AccountId20', 'primitive_types::H160'].includes(nsAccountId) ? 'AccountId20' : 'AccountId32',
      // other, default to AccountId32
      Address: isMultiAddress ? 'MultiAddress' : 'AccountId',
      ExtrinsicSignature: ['sp_runtime::MultiSignature'].includes(nsSignature) ? 'MultiSignature' : names[sigParam.type.unwrap().toNumber()] || 'MultiSignature'
    });
  }
} // this extracts aliases based on what we know the runtime config looks like in a
// Substrate chain. Specifically we want to have access to the Call and Event params

/** @internal */


function extractAliases(params, isContract) {
  var hasParams = Object.keys(params).some(function (k) {
    return !k.startsWith('Pallet');
  });
  var alias = {};

  if (params.SpRuntimeUncheckedExtrinsic) {
    // Address, Call, Signature, Extra
    var _params$SpRuntimeUnch2 = _slicedToArray(params.SpRuntimeUncheckedExtrinsic, 2),
        type = _params$SpRuntimeUnch2[1].type;

    alias[type.unwrap().toNumber()] = 'Call';
  } else if (hasParams && !isContract) {
    l.warn('Unable to determine runtime Call type, cannot inspect sp_runtime::generic::unchecked_extrinsic::UncheckedExtrinsic');
  }

  if (params.FrameSystemEventRecord) {
    // Event, Topic
    var _params$FrameSystemEv = _slicedToArray(params.FrameSystemEventRecord, 1),
        _type = _params$FrameSystemEv[0].type;

    alias[_type.unwrap().toNumber()] = 'Event';
  } else if (hasParams && !isContract) {
    l.warn('Unable to determine runtime Event type, cannot inspect frame_system::EventRecord');
  }

  return alias;
}
/** @internal */


function extractTypeInfo(lookup, portable) {
  var nameInfo = [];
  var types = {};
  var porCount = portable.length;

  for (var i = 0; i < porCount; i++) {
    var type = portable[i];
    var lookupIndex = type.id.toNumber();
    var extracted = extractName(portable, lookupIndex, portable[i]);

    if (extracted) {
      nameInfo.push(extracted);
    }

    types[lookupIndex] = type;
  }

  var lookups = {};
  var names = {};
  var params = {};
  var dedup = removeDupeNames(lookup, portable, nameInfo);
  var dedupCount = dedup.length;

  for (var _i4 = 0; _i4 < dedupCount; _i4++) {
    var _dedup$_i = dedup[_i4],
        _lookupIndex3 = _dedup$_i.lookupIndex,
        name = _dedup$_i.name,
        p = _dedup$_i.params;
    names[_lookupIndex3] = name;
    lookups[name] = lookup.registry.createLookupType(_lookupIndex3);
    params[name] = p;
  }

  return {
    lookups: lookups,
    names: names,
    params: params,
    types: types
  };
}

var _alias = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("alias");

var _lookups = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("lookups");

var _names = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("names");

var _params = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("params");

var _typeDefs = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("typeDefs");

var _types = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("types");

var _createSiDef = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("createSiDef");

var _getLookupId = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("getLookupId");

var _extract = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("extract");

var _extractArray = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("extractArray");

var _extractBitSequence = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("extractBitSequence");

var _extractCompact = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("extractCompact");

var _extractComposite = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("extractComposite");

var _extractCompositeSet = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("extractCompositeSet");

var _extractFields = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("extractFields");

var _extractFieldsAlias = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("extractFieldsAlias");

var _extractHistoric = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("extractHistoric");

var _extractPrimitive = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("extractPrimitive");

var _extractAliasPath = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("extractAliasPath");

var _extractSequence = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("extractSequence");

var _extractTuple = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("extractTuple");

var _extractVariant = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("extractVariant");

var _extractVariantEnum = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("extractVariantEnum");

var PortableRegistry = /*#__PURE__*/function (_Struct) {
  _inherits(PortableRegistry, _Struct);

  var _super = _createSuper(PortableRegistry);

  function PortableRegistry(registry, value, isContract) {
    var _this;

    _classCallCheck(this, PortableRegistry);

    // const timeStart = performance.now()
    _this = _super.call(this, registry, {
      types: 'Vec<PortableType>'
    }, value);
    Object.defineProperty(_assertThisInitialized(_this), _extractVariantEnum, {
      value: _extractVariantEnum2
    });
    Object.defineProperty(_assertThisInitialized(_this), _extractVariant, {
      value: _extractVariant2
    });
    Object.defineProperty(_assertThisInitialized(_this), _extractTuple, {
      value: _extractTuple2
    });
    Object.defineProperty(_assertThisInitialized(_this), _extractSequence, {
      value: _extractSequence2
    });
    Object.defineProperty(_assertThisInitialized(_this), _extractAliasPath, {
      value: _extractAliasPath2
    });
    Object.defineProperty(_assertThisInitialized(_this), _extractPrimitive, {
      value: _extractPrimitive2
    });
    Object.defineProperty(_assertThisInitialized(_this), _extractHistoric, {
      value: _extractHistoric2
    });
    Object.defineProperty(_assertThisInitialized(_this), _extractFieldsAlias, {
      value: _extractFieldsAlias2
    });
    Object.defineProperty(_assertThisInitialized(_this), _extractFields, {
      value: _extractFields2
    });
    Object.defineProperty(_assertThisInitialized(_this), _extractCompositeSet, {
      value: _extractCompositeSet2
    });
    Object.defineProperty(_assertThisInitialized(_this), _extractComposite, {
      value: _extractComposite2
    });
    Object.defineProperty(_assertThisInitialized(_this), _extractCompact, {
      value: _extractCompact2
    });
    Object.defineProperty(_assertThisInitialized(_this), _extractBitSequence, {
      value: _extractBitSequence2
    });
    Object.defineProperty(_assertThisInitialized(_this), _extractArray, {
      value: _extractArray2
    });
    Object.defineProperty(_assertThisInitialized(_this), _extract, {
      value: _extract2
    });
    Object.defineProperty(_assertThisInitialized(_this), _getLookupId, {
      value: _getLookupId2
    });
    Object.defineProperty(_assertThisInitialized(_this), _createSiDef, {
      value: _createSiDef2
    });
    Object.defineProperty(_assertThisInitialized(_this), _alias, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(_assertThisInitialized(_this), _lookups, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(_assertThisInitialized(_this), _names, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(_assertThisInitialized(_this), _params, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(_assertThisInitialized(_this), _typeDefs, {
      writable: true,
      value: {}
    });
    Object.defineProperty(_assertThisInitialized(_this), _types, {
      writable: true,
      value: void 0
    });

    var _extractTypeInfo = extractTypeInfo(_assertThisInitialized(_this), _this.types),
        lookups = _extractTypeInfo.lookups,
        names = _extractTypeInfo.names,
        _params2 = _extractTypeInfo.params,
        types = _extractTypeInfo.types;

    (0, _classPrivateFieldLooseBase2.default)(_assertThisInitialized(_this), _alias)[_alias] = extractAliases(_params2, isContract);
    (0, _classPrivateFieldLooseBase2.default)(_assertThisInitialized(_this), _lookups)[_lookups] = lookups;
    (0, _classPrivateFieldLooseBase2.default)(_assertThisInitialized(_this), _names)[_names] = names;
    (0, _classPrivateFieldLooseBase2.default)(_assertThisInitialized(_this), _params)[_params] = _params2;
    (0, _classPrivateFieldLooseBase2.default)(_assertThisInitialized(_this), _types)[_types] = types; // console.log('PortableRegistry', `${(performance.now() - timeStart).toFixed(2)}ms`)

    return _this;
  }

  _createClass(PortableRegistry, [{
    key: "names",
    get: function get() {
      return Object.values((0, _classPrivateFieldLooseBase2.default)(this, _names)[_names]).sort();
    }
    /**
     * @description The types of the registry
     */

  }, {
    key: "types",
    get: function get() {
      return this.getT('types');
    }
  }, {
    key: "register",
    value: function register() {
      registerTypes(this, (0, _classPrivateFieldLooseBase2.default)(this, _lookups)[_lookups], (0, _classPrivateFieldLooseBase2.default)(this, _names)[_names], (0, _classPrivateFieldLooseBase2.default)(this, _params)[_params]);
    }
    /**
     * @description Returns the name for a specific lookup
     */

  }, {
    key: "getName",
    value: function getName(lookupId) {
      return (0, _classPrivateFieldLooseBase2.default)(this, _names)[_names][(0, _classPrivateFieldLooseBase2.default)(this, _getLookupId)[_getLookupId](lookupId)];
    }
    /**
     * @description Finds a specific type in the registry
     */

  }, {
    key: "getSiType",
    value: function getSiType(lookupId) {
      // NOTE catch-22 - this may already be used as part of the constructor, so
      // ensure that we have actually initialized it correctly
      var found = ((0, _classPrivateFieldLooseBase2.default)(this, _types)[_types] || this.types)[(0, _classPrivateFieldLooseBase2.default)(this, _getLookupId)[_getLookupId](lookupId)];

      if (!found) {
        throw new Error("PortableRegistry: Unable to find type with lookupId ".concat(lookupId.toString()));
      }

      return found.type;
    }
    /**
     * @description Lookup the type definition for the index
     */

  }, {
    key: "getTypeDef",
    value: function getTypeDef(lookupId) {
      var _this2 = this;

      var lookupIndex = (0, _classPrivateFieldLooseBase2.default)(this, _getLookupId)[_getLookupId](lookupId);

      if (!(0, _classPrivateFieldLooseBase2.default)(this, _typeDefs)[_typeDefs][lookupIndex]) {
        var lookupName = (0, _classPrivateFieldLooseBase2.default)(this, _names)[_names][lookupIndex];

        var empty = {
          info: _typesCreate.TypeDefInfo.DoNotConstruct,
          lookupIndex: lookupIndex,
          lookupName: lookupName,
          type: this.registry.createLookupType(lookupIndex)
        }; // Set named items since we will get into circular lookups along the way

        if (lookupName) {
          (0, _classPrivateFieldLooseBase2.default)(this, _typeDefs)[_typeDefs][lookupIndex] = empty;
        }

        var extracted = (0, _classPrivateFieldLooseBase2.default)(this, _extract)[_extract](this.getSiType(lookupId), lookupIndex); // For non-named items, we only set this right at the end


        if (!lookupName) {
          (0, _classPrivateFieldLooseBase2.default)(this, _typeDefs)[_typeDefs][lookupIndex] = empty;
        }

        Object.keys(extracted).forEach(function (k) {
          if (k !== 'lookupName' || extracted[k]) {
            // these are safe since we are looking through the keys as set
            (0, _classPrivateFieldLooseBase2.default)(_this2, _typeDefs)[_typeDefs][lookupIndex][k] = extracted[k];
          }
        }); // don't set lookupName on lower-level, we want to always direct to the type

        if (extracted.info === _typesCreate.TypeDefInfo.Plain) {
          (0, _classPrivateFieldLooseBase2.default)(this, _typeDefs)[_typeDefs][lookupIndex].lookupNameRoot = (0, _classPrivateFieldLooseBase2.default)(this, _typeDefs)[_typeDefs][lookupIndex].lookupName;
          delete (0, _classPrivateFieldLooseBase2.default)(this, _typeDefs)[_typeDefs][lookupIndex].lookupName;
        }
      }

      return (0, _classPrivateFieldLooseBase2.default)(this, _typeDefs)[_typeDefs][lookupIndex];
    }
  }, {
    key: "sanitizeField",
    value: function sanitizeField(name) {
      var nameField = null;
      var nameOrig = null;

      if (name.isSome) {
        nameField = (0, _util.stringCamelCase)(name.unwrap());

        if (nameField.includes('#')) {
          nameOrig = nameField;
          nameField = nameOrig.replace(/#/g, '_');
        } else if (RESERVED.includes(nameField)) {
          nameOrig = nameField;
          nameField = "".concat(nameField, "_");
        }
      }

      return [nameField, nameOrig];
    }
  }]);

  return PortableRegistry;
}(_typesCodec.Struct);

exports.PortableRegistry = PortableRegistry;

function _createSiDef2(lookupId) {
  var typeDef = this.getTypeDef(lookupId);
  var lookupIndex = lookupId.toNumber(); // Setup for a lookup on complex types

  return [_typesCreate.TypeDefInfo.DoNotConstruct, _typesCreate.TypeDefInfo.Enum, _typesCreate.TypeDefInfo.Struct].includes(typeDef.info) && typeDef.lookupName ? {
    docs: typeDef.docs,
    info: _typesCreate.TypeDefInfo.Si,
    lookupIndex: lookupIndex,
    lookupName: (0, _classPrivateFieldLooseBase2.default)(this, _names)[_names][lookupIndex],
    type: this.registry.createLookupType(lookupId)
  } : typeDef;
}

function _getLookupId2(lookupId) {
  if ((0, _util.isString)(lookupId)) {
    if (!this.registry.isLookupType(lookupId)) {
      throw new Error("PortableRegistry: Expected a lookup string type, found ".concat(lookupId));
    }

    return parseInt(lookupId.replace('Lookup', ''), 10);
  } else if ((0, _util.isNumber)(lookupId)) {
    return lookupId;
  }

  return lookupId.toNumber();
}

function _extract2(type, lookupIndex) {
  var namespace = type.path.join('::');
  var typeDef;
  var aliasType = (0, _classPrivateFieldLooseBase2.default)(this, _alias)[_alias][lookupIndex] || getAliasPath(type.path);

  try {
    if (aliasType) {
      typeDef = (0, _classPrivateFieldLooseBase2.default)(this, _extractAliasPath)[_extractAliasPath](lookupIndex, aliasType);
    } else {
      switch (type.def.type) {
        case 'Array':
          typeDef = (0, _classPrivateFieldLooseBase2.default)(this, _extractArray)[_extractArray](lookupIndex, type.def.asArray);
          break;

        case 'BitSequence':
          typeDef = (0, _classPrivateFieldLooseBase2.default)(this, _extractBitSequence)[_extractBitSequence](lookupIndex, type.def.asBitSequence);
          break;

        case 'Compact':
          typeDef = (0, _classPrivateFieldLooseBase2.default)(this, _extractCompact)[_extractCompact](lookupIndex, type.def.asCompact);
          break;

        case 'Composite':
          typeDef = (0, _classPrivateFieldLooseBase2.default)(this, _extractComposite)[_extractComposite](lookupIndex, type, type.def.asComposite);
          break;

        case 'HistoricMetaCompat':
          typeDef = (0, _classPrivateFieldLooseBase2.default)(this, _extractHistoric)[_extractHistoric](lookupIndex, type.def.asHistoricMetaCompat);
          break;

        case 'Primitive':
          typeDef = (0, _classPrivateFieldLooseBase2.default)(this, _extractPrimitive)[_extractPrimitive](lookupIndex, type);
          break;

        case 'Sequence':
          typeDef = (0, _classPrivateFieldLooseBase2.default)(this, _extractSequence)[_extractSequence](lookupIndex, type.def.asSequence);
          break;

        case 'Tuple':
          typeDef = (0, _classPrivateFieldLooseBase2.default)(this, _extractTuple)[_extractTuple](lookupIndex, type.def.asTuple);
          break;

        case 'Variant':
          typeDef = (0, _classPrivateFieldLooseBase2.default)(this, _extractVariant)[_extractVariant](lookupIndex, type, type.def.asVariant);
          break;

        default:
          (0, _util.assertUnreachable)(type.def.type);
      }
    }
  } catch (error) {
    throw new Error("PortableRegistry: ".concat(lookupIndex).concat(namespace ? " (".concat(namespace, ")") : '', ": Error extracting ").concat((0, _util.stringify)(type), ": ").concat(error.message));
  }

  return (0, _util.objectSpread)({
    docs: sanitizeDocs(type.docs),
    namespace: namespace
  }, typeDef);
}

function _extractArray2(_, _ref5) {
  var len = _ref5.len,
      type = _ref5.type;
  var length = len.toNumber();

  if (length > 2048) {
    throw new Error('Only support for [Type; <length>], where length <= 2048');
  }

  return (0, _typesCreate.withTypeString)(this.registry, {
    info: _typesCreate.TypeDefInfo.VecFixed,
    length: length,
    sub: (0, _classPrivateFieldLooseBase2.default)(this, _createSiDef)[_createSiDef](type)
  });
}

function _extractBitSequence2(_, _ref6) {
  var bitOrderType = _ref6.bitOrderType,
      bitStoreType = _ref6.bitStoreType;

  // With the v3 of scale-info this swapped around, but obviously the decoder cannot determine
  // the order. With that in-mind, we apply a detection for LSb0/Msb and set accordingly
  var a = (0, _classPrivateFieldLooseBase2.default)(this, _createSiDef)[_createSiDef](bitOrderType);

  var b = (0, _classPrivateFieldLooseBase2.default)(this, _createSiDef)[_createSiDef](bitStoreType);

  var _ref7 = BITVEC_NS.includes(a.namespace || '') ? [a, b] : [b, a],
      _ref8 = _slicedToArray(_ref7, 2),
      bitOrder = _ref8[0],
      bitStore = _ref8[1]; // NOTE: Currently the BitVec type is one-way only, i.e. we only use it to decode, not
  // re-encode stuff. As such we ignore the msb/lsb identifier given by bitOrderType, or rather
  // we don't pass it though at all (all displays in LSB)


  if (!BITVEC_NS.includes(bitOrder.namespace || '')) {
    throw new Error("Unexpected bitOrder found as ".concat(bitOrder.namespace || '<unknown>'));
  } else if (bitStore.info !== _typesCreate.TypeDefInfo.Plain || bitStore.type !== 'u8') {
    throw new Error("Only u8 bitStore is currently supported, found ".concat(bitStore.type));
  }

  return {
    info: _typesCreate.TypeDefInfo.Plain,
    type: 'BitVec'
  };
}

function _extractCompact2(_, _ref9) {
  var type = _ref9.type;
  return (0, _typesCreate.withTypeString)(this.registry, {
    info: _typesCreate.TypeDefInfo.Compact,
    sub: (0, _classPrivateFieldLooseBase2.default)(this, _createSiDef)[_createSiDef](type)
  });
}

function _extractComposite2(lookupIndex, _ref10, _ref11) {
  var _this3 = this;

  var params = _ref10.params,
      path = _ref10.path;
  var fields = _ref11.fields;
  var pathFirst = path[0].toString();
  var pathLast = path[path.length - 1].toString();

  if (path.length === 1 && pathFirst === 'BTreeMap') {
    return (0, _typesCreate.withTypeString)(this.registry, {
      info: _typesCreate.TypeDefInfo.BTreeMap,
      sub: params.map(function (_ref12) {
        var type = _ref12.type;
        return (0, _classPrivateFieldLooseBase2.default)(_this3, _createSiDef)[_createSiDef](type.unwrap());
      })
    });
  } else if (path.length === 1 && pathFirst === 'BTreeSet') {
    return (0, _typesCreate.withTypeString)(this.registry, {
      info: _typesCreate.TypeDefInfo.BTreeSet,
      sub: (0, _classPrivateFieldLooseBase2.default)(this, _createSiDef)[_createSiDef](params[0].type.unwrap())
    });
  } else if (['Range', 'RangeInclusive'].includes(pathFirst)) {
    return (0, _typesCreate.withTypeString)(this.registry, {
      info: pathFirst === 'Range' ? _typesCreate.TypeDefInfo.Range : _typesCreate.TypeDefInfo.RangeInclusive,
      sub: (0, _classPrivateFieldLooseBase2.default)(this, _createSiDef)[_createSiDef](params[0].type.unwrap()),
      type: pathFirst
    });
  } else if (['WrapperKeepOpaque', 'WrapperOpaque'].includes(pathLast)) {
    return (0, _typesCreate.withTypeString)(this.registry, {
      info: pathLast === 'WrapperKeepOpaque' ? _typesCreate.TypeDefInfo.WrapperKeepOpaque : _typesCreate.TypeDefInfo.WrapperOpaque,
      sub: (0, _classPrivateFieldLooseBase2.default)(this, _createSiDef)[_createSiDef](params[0].type.unwrap()),
      type: pathLast
    });
  }

  return PATHS_SET.some(function (p) {
    return matchParts(p, path);
  }) ? (0, _classPrivateFieldLooseBase2.default)(this, _extractCompositeSet)[_extractCompositeSet](lookupIndex, params, fields) : (0, _classPrivateFieldLooseBase2.default)(this, _extractFields)[_extractFields](lookupIndex, fields);
}

function _extractCompositeSet2(_, params, fields) {
  if (params.length !== 1 || fields.length !== 1) {
    throw new Error('Set handling expects param/field as single entries');
  }

  return (0, _typesCreate.withTypeString)(this.registry, {
    info: _typesCreate.TypeDefInfo.Set,
    length: this.registry.createTypeUnsafe(this.registry.createLookupType(fields[0].type), []).bitLength(),
    sub: this.getSiType(params[0].type.unwrap()).def.asVariant.variants.map(function (_ref13) {
      var index = _ref13.index,
          name = _ref13.name;
      return {
        // This will be an issue > 2^53 - 1 ... don't have those (yet)
        index: index.toNumber(),
        info: _typesCreate.TypeDefInfo.Plain,
        name: name.toString(),
        type: 'Null'
      };
    })
  });
}

function _extractFields2(lookupIndex, fields) {
  var isStruct = true;
  var isTuple = true;

  for (var f = 0; f < fields.length; f++) {
    var name = fields[f].name;
    isStruct = isStruct && name.isSome;
    isTuple = isTuple && name.isNone;
  }

  if (!isTuple && !isStruct) {
    throw new Error('Invalid fields type detected, expected either Tuple (all unnamed) or Struct (all named)');
  }

  if (fields.length === 0) {
    return {
      info: _typesCreate.TypeDefInfo.Null,
      type: 'Null'
    };
  } else if (isTuple && fields.length === 1) {
    var typeDef = (0, _classPrivateFieldLooseBase2.default)(this, _createSiDef)[_createSiDef](fields[0].type);

    return (0, _util.objectSpread)({}, typeDef, lookupIndex === -1 ? null : {
      lookupIndex: lookupIndex,
      lookupName: (0, _classPrivateFieldLooseBase2.default)(this, _names)[_names][lookupIndex],
      lookupNameRoot: typeDef.lookupName
    }, fields[0].typeName.isSome ? {
      typeName: (0, _typesCodec.sanitize)(fields[0].typeName.unwrap())
    } : null);
  }

  var _classPrivateFieldLoo = (0, _classPrivateFieldLooseBase2.default)(this, _extractFieldsAlias)[_extractFieldsAlias](fields),
      _classPrivateFieldLoo2 = _slicedToArray(_classPrivateFieldLoo, 2),
      sub = _classPrivateFieldLoo2[0],
      alias = _classPrivateFieldLoo2[1];

  return (0, _typesCreate.withTypeString)(this.registry, (0, _util.objectSpread)({
    info: isTuple // Tuple check first
    ? _typesCreate.TypeDefInfo.Tuple : _typesCreate.TypeDefInfo.Struct,
    sub: sub
  }, alias.size ? {
    alias: alias
  } : null, lookupIndex === -1 ? null : {
    lookupIndex: lookupIndex,
    lookupName: (0, _classPrivateFieldLooseBase2.default)(this, _names)[_names][lookupIndex]
  }));
}

function _extractFieldsAlias2(fields) {
  var alias = new Map();
  var sub = new Array(fields.length);

  for (var i = 0; i < fields.length; i++) {
    var _fields$i = fields[i],
        docs = _fields$i.docs,
        name = _fields$i.name,
        type = _fields$i.type,
        typeName = _fields$i.typeName;

    var typeDef = (0, _classPrivateFieldLooseBase2.default)(this, _createSiDef)[_createSiDef](type);

    if (name.isNone) {
      sub[i] = typeDef;
    } else {
      var _this$sanitizeField = this.sanitizeField(name),
          _this$sanitizeField2 = _slicedToArray(_this$sanitizeField, 2),
          nameField = _this$sanitizeField2[0],
          nameOrig = _this$sanitizeField2[1];

      if (nameField && nameOrig) {
        alias.set(nameField, nameOrig);
      }

      sub[i] = (0, _util.objectSpread)({
        docs: sanitizeDocs(docs),
        name: nameField
      }, typeDef, typeName.isSome ? {
        typeName: (0, _typesCodec.sanitize)(typeName.unwrap())
      } : null);
    }
  }

  return [sub, alias];
}

function _extractHistoric2(_, type) {
  return (0, _util.objectSpread)({
    displayName: type.toString(),
    isFromSi: true
  }, (0, _typesCreate.getTypeDef)(type));
}

function _extractPrimitive2(_, type) {
  var typeStr = type.def.asPrimitive.type.toString();
  return {
    info: _typesCreate.TypeDefInfo.Plain,
    type: PRIMITIVE_ALIAS[typeStr] || typeStr.toLowerCase()
  };
}

function _extractAliasPath2(_, type) {
  return {
    info: _typesCreate.TypeDefInfo.Plain,
    type: type
  };
}

function _extractSequence2(lookupIndex, _ref14) {
  var type = _ref14.type;

  var sub = (0, _classPrivateFieldLooseBase2.default)(this, _createSiDef)[_createSiDef](type);

  if (sub.type === 'u8') {
    return {
      info: _typesCreate.TypeDefInfo.Plain,
      type: 'Bytes'
    };
  }

  return (0, _typesCreate.withTypeString)(this.registry, {
    info: _typesCreate.TypeDefInfo.Vec,
    lookupIndex: lookupIndex,
    lookupName: (0, _classPrivateFieldLooseBase2.default)(this, _names)[_names][lookupIndex],
    sub: sub
  });
}

function _extractTuple2(lookupIndex, ids) {
  var _this4 = this;

  if (ids.length === 0) {
    return {
      info: _typesCreate.TypeDefInfo.Null,
      type: 'Null'
    };
  } else if (ids.length === 1) {
    return this.getTypeDef(ids[0]);
  }

  var sub = ids.map(function (t) {
    return (0, _classPrivateFieldLooseBase2.default)(_this4, _createSiDef)[_createSiDef](t);
  });
  return (0, _typesCreate.withTypeString)(this.registry, {
    info: _typesCreate.TypeDefInfo.Tuple,
    lookupIndex: lookupIndex,
    lookupName: (0, _classPrivateFieldLooseBase2.default)(this, _names)[_names][lookupIndex],
    sub: sub
  });
}

function _extractVariant2(lookupIndex, _ref15, _ref16) {
  var _this5 = this;

  var params = _ref15.params,
      path = _ref15.path;
  var variants = _ref16.variants;
  var specialVariant = path[0].toString();

  if (specialVariant === 'Option') {
    var sub = (0, _classPrivateFieldLooseBase2.default)(this, _createSiDef)[_createSiDef](params[0].type.unwrap()); // NOTE This is opt-in (unhandled), not by default
    // if (sub.type === 'bool') {
    //   return withTypeString(this.registry, {
    //     info: TypeDefInfo.Plain,
    //     type: 'OptionBool'
    //   });
    // }


    return (0, _typesCreate.withTypeString)(this.registry, {
      info: _typesCreate.TypeDefInfo.Option,
      sub: sub
    });
  } else if (specialVariant === 'Result') {
    return (0, _typesCreate.withTypeString)(this.registry, {
      info: _typesCreate.TypeDefInfo.Result,
      sub: params.map(function (_ref17, index) {
        var type = _ref17.type;
        return (0, _util.objectSpread)({
          name: ['Ok', 'Error'][index]
        }, (0, _classPrivateFieldLooseBase2.default)(_this5, _createSiDef)[_createSiDef](type.unwrap()));
      })
    });
  } else if (variants.length === 0) {
    return {
      info: _typesCreate.TypeDefInfo.Null,
      type: 'Null'
    };
  }

  return (0, _classPrivateFieldLooseBase2.default)(this, _extractVariantEnum)[_extractVariantEnum](lookupIndex, variants);
}

function _extractVariantEnum2(lookupIndex, variants) {
  var _this6 = this;

  var sub = []; // we may get entries out of order, arrange them first before creating with gaps filled
  // NOTE: Since we mutate, use a copy of the array as an input

  variants.slice().sort(function (a, b) {
    return a.index.cmp(b.index);
  }).forEach(function (_ref18) {
    var fields = _ref18.fields,
        bnIndex = _ref18.index,
        name = _ref18.name;
    var index = bnIndex.toNumber();

    while (sub.length !== index) {
      sub.push({
        index: sub.length,
        info: _typesCreate.TypeDefInfo.Null,
        name: "__Unused".concat(sub.length),
        type: 'Null'
      });
    }

    sub.push((0, _util.objectSpread)((0, _classPrivateFieldLooseBase2.default)(_this6, _extractFields)[_extractFields](-1, fields), {
      index: index,
      name: name.toString()
    }));
  });
  return (0, _typesCreate.withTypeString)(this.registry, {
    info: _typesCreate.TypeDefInfo.Enum,
    lookupIndex: lookupIndex,
    lookupName: (0, _classPrivateFieldLooseBase2.default)(this, _names)[_names][lookupIndex],
    sub: sub
  });
}
},{"@babel/runtime/helpers/esm/classPrivateFieldLooseBase":"node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js","@babel/runtime/helpers/esm/classPrivateFieldLooseKey":"node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js","@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","@polkadot/types-create":"node_modules/@polkadot/types-create/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types/metadata/PortableRegistry/toV1.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toV1 = toV1;

var _util = require("@polkadot/util");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function convertType(key) {
  return function (registry, _ref) {
    var type = _ref.type;
    return registry.createType('Si1TypeDef', _defineProperty({}, key, {
      type: type.toNumber()
    }));
  };
}

function convertArray(registry, _ref2) {
  var len = _ref2.len,
      type = _ref2.type;
  return registry.createType('Si1TypeDef', {
    Array: {
      len: len,
      type: type.toNumber()
    }
  });
}

function convertBitSequence(registry, _ref3) {
  var bitOrderType = _ref3.bitOrderType,
      bitStoreType = _ref3.bitStoreType;
  return registry.createType('Si1TypeDef', {
    BitSequence: {
      bitOrderType: bitOrderType.toNumber(),
      bitStoreType: bitStoreType.toNumber()
    }
  });
}

var convertCompact = convertType('Compact');

function convertComposite(registry, _ref4) {
  var fields = _ref4.fields;
  return registry.createType('Si1TypeDef', {
    Composite: {
      fields: convertFields(registry, fields)
    }
  });
}

function convertFields(registry, fields) {
  return fields.map(function (_ref5) {
    var docs = _ref5.docs,
        name = _ref5.name,
        type = _ref5.type,
        typeName = _ref5.typeName;
    return registry.createType('Si1Field', {
      docs: docs,
      name: name,
      type: type.toNumber(),
      typeName: typeName
    });
  });
}

function convertPhantom(registry, path) {
  console.warn("Converting phantom type ".concat(path.map(function (p) {
    return p.toString();
  }).join('::'), " to empty tuple"));
  return registry.createType('Si1TypeDef', {
    Tuple: []
  });
}

function convertPrimitive(registry, prim) {
  return registry.createType('Si1TypeDef', {
    Primitive: prim.toString()
  });
}

var convertSequence = convertType('Sequence');

function convertTuple(registry, types) {
  return registry.createType('Si1TypeDef', {
    Tuple: types.map(function (t) {
      return t.toNumber();
    })
  });
}

function convertVariant(registry, _ref6) {
  var variants = _ref6.variants;
  return registry.createType('Si1TypeDef', {
    Variant: {
      variants: variants.map(function (_ref7, index) {
        var discriminant = _ref7.discriminant,
            docs = _ref7.docs,
            fields = _ref7.fields,
            name = _ref7.name;
        return registry.createType('Si1Variant', {
          docs: docs,
          fields: convertFields(registry, fields),
          index: discriminant.isSome ? discriminant.unwrap().toNumber() : index,
          name: name
        });
      })
    }
  });
}

function convertDef(registry, _ref8) {
  var def = _ref8.def,
      path = _ref8.path;
  var result;

  switch (def.type) {
    case 'Array':
      result = convertArray(registry, def.asArray);
      break;

    case 'BitSequence':
      result = convertBitSequence(registry, def.asBitSequence);
      break;

    case 'Compact':
      result = convertCompact(registry, def.asCompact);
      break;

    case 'Composite':
      result = convertComposite(registry, def.asComposite);
      break;

    case 'Phantom':
      result = convertPhantom(registry, path);
      break;

    case 'Primitive':
      result = convertPrimitive(registry, def.asPrimitive);
      break;

    case 'Sequence':
      result = convertSequence(registry, def.asSequence);
      break;

    case 'Tuple':
      result = convertTuple(registry, def.asTuple);
      break;

    case 'Variant':
      result = convertVariant(registry, def.asVariant);
      break;

    default:
      (0, _util.assertUnreachable)(def.type);
  }

  return result;
}

function toV1(registry, types) {
  return types.map(function (t, index) {
    return registry.createType('PortableType', {
      // offsets are +1 from v0
      id: index + 1,
      type: {
        def: convertDef(registry, t),
        docs: [],
        params: t.params.map(function (p) {
          return registry.createType('Si1TypeParameter', {
            type: p.toNumber()
          });
        }),
        path: t.path.map(function (p) {
          return p.toString();
        })
      }
    });
  });
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types/metadata/PortableRegistry/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "PortableRegistry", {
  enumerable: true,
  get: function () {
    return _PortableRegistry.PortableRegistry;
  }
});
Object.defineProperty(exports, "convertSiV0toV1", {
  enumerable: true,
  get: function () {
    return _toV.toV1;
  }
});

var _PortableRegistry = require("./PortableRegistry.js");

var _toV = require("./toV1.js");
},{"./PortableRegistry.js":"node_modules/@polkadot/types/metadata/PortableRegistry/PortableRegistry.js","./toV1.js":"node_modules/@polkadot/types/metadata/PortableRegistry/toV1.js"}],"node_modules/@polkadot/types/create/registry.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TypeRegistry = void 0;

var _typesCodec = require("@polkadot/types-codec");

var _typesCreate = require("@polkadot/types-create");

var _util = require("@polkadot/util");

var _utilCrypto = require("@polkadot/util-crypto");

var _index = require("../extrinsic/signedExtensions/index.js");

var _Event = require("../generic/Event.js");

var baseTypes = _interopRequireWildcard(require("../index.types.js"));

var definitions = _interopRequireWildcard(require("../interfaces/definitions.js"));

var _index2 = require("../metadata/decorate/index.js");

var _index3 = require("../metadata/decorate/extrinsics/index.js");

var _Metadata = require("../metadata/Metadata.js");

var _index4 = require("../metadata/PortableRegistry/index.js");

var _lazy = require("./lazy.js");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var DEFAULT_FIRST_CALL_IDX = new Uint8Array(2);
var l = (0, _util.logger)('registry');

function sortDecimalStrings(a, b) {
  return parseInt(a, 10) - parseInt(b, 10);
}

function valueToString(v) {
  return v.toString();
}

function getFieldArgs(lookup, fields) {
  var args = new Array(fields.length);

  for (var i = 0; i < fields.length; i++) {
    args[i] = lookup.getTypeDef(fields[i].type).type;
  }

  return args;
}

function clearRecord(record) {
  var keys = Object.keys(record);

  for (var i = 0; i < keys.length; i++) {
    delete record[keys[i]];
  }
}

function getVariantStringIdx(_ref) {
  var index = _ref.index;
  return index.toString();
} // create error mapping from metadata


function injectErrors(_, _ref2, version, result) {
  var lookup = _ref2.lookup,
      pallets = _ref2.pallets;
  clearRecord(result);

  var _loop = function _loop(i) {
    var _pallets$i = pallets[i],
        errors = _pallets$i.errors,
        index = _pallets$i.index,
        name = _pallets$i.name;

    if (errors.isSome) {
      var sectionName = (0, _util.stringCamelCase)(name);
      (0, _util.lazyMethod)(result, version >= 12 ? index.toNumber() : i, function () {
        return (0, _lazy.lazyVariants)(lookup, errors.unwrap(), getVariantStringIdx, function (_ref3) {
          var docs = _ref3.docs,
              fields = _ref3.fields,
              index = _ref3.index,
              name = _ref3.name;
          return {
            args: getFieldArgs(lookup, fields),
            docs: docs.map(valueToString),
            fields: fields,
            index: index.toNumber(),
            method: name.toString(),
            name: name.toString(),
            section: sectionName
          };
        });
      });
    }
  };

  for (var i = 0; i < pallets.length; i++) {
    _loop(i);
  }
} // create event classes from metadata


function injectEvents(registry, _ref4, version, result) {
  var lookup = _ref4.lookup,
      pallets = _ref4.pallets;
  var filtered = pallets.filter(_index2.filterEventsSome);
  clearRecord(result);

  var _loop2 = function _loop2(i) {
    var _filtered$i = filtered[i],
        events = _filtered$i.events,
        index = _filtered$i.index,
        name = _filtered$i.name;
    (0, _util.lazyMethod)(result, version >= 12 ? index.toNumber() : i, function () {
      return (0, _lazy.lazyVariants)(lookup, events.unwrap(), getVariantStringIdx, function (variant) {
        var meta = registry.createType('EventMetadataLatest', (0, _util.objectSpread)({}, variant, {
          args: getFieldArgs(lookup, variant.fields)
        }));
        return /*#__PURE__*/function (_GenericEventData) {
          _inherits(_class, _GenericEventData);

          var _super = _createSuper(_class);

          function _class(registry, value) {
            _classCallCheck(this, _class);

            return _super.call(this, registry, value, meta, (0, _util.stringCamelCase)(name), variant.name.toString());
          }

          return _createClass(_class);
        }(_Event.GenericEventData);
      });
    });
  };

  for (var i = 0; i < filtered.length; i++) {
    _loop2(i);
  }
} // create extrinsic mapping from metadata


function injectExtrinsics(registry, _ref5, version, result) {
  var lookup = _ref5.lookup,
      pallets = _ref5.pallets;
  var filtered = pallets.filter(_index2.filterCallsSome);
  clearRecord(result);

  var _loop3 = function _loop3(i) {
    var _filtered$i2 = filtered[i],
        calls = _filtered$i2.calls,
        index = _filtered$i2.index,
        name = _filtered$i2.name;
    var sectionIndex = version >= 12 ? index.toNumber() : i;
    (0, _util.lazyMethod)(result, sectionIndex, function () {
      return (0, _lazy.lazyVariants)(lookup, calls.unwrap(), getVariantStringIdx, function (variant) {
        return (0, _index3.createCallFunction)(registry, lookup, variant, (0, _util.stringCamelCase)(name), sectionIndex);
      });
    });
  };

  for (var i = 0; i < filtered.length; i++) {
    _loop3(i);
  }
} // extract additional properties from the metadata


function extractProperties(registry, metadata) {
  var original = registry.getChainProperties();
  var constants = (0, _index2.decorateConstants)(registry, metadata.asLatest, metadata.version);
  var ss58Format = constants.system && (constants.system.sS58Prefix || constants.system.ss58Prefix);

  if (!ss58Format) {
    return original;
  }

  var _ref6 = original || {},
      tokenDecimals = _ref6.tokenDecimals,
      tokenSymbol = _ref6.tokenSymbol;

  return registry.createTypeUnsafe('ChainProperties', [{
    ss58Format: ss58Format,
    tokenDecimals: tokenDecimals,
    tokenSymbol: tokenSymbol
  }]);
}

var _classes = /*#__PURE__*/new WeakMap();

var _definitions = /*#__PURE__*/new WeakMap();

var _firstCallIndex = /*#__PURE__*/new WeakMap();

var _lookup = /*#__PURE__*/new WeakMap();

var _metadata = /*#__PURE__*/new WeakMap();

var _metadataVersion = /*#__PURE__*/new WeakMap();

var _metadataCalls = /*#__PURE__*/new WeakMap();

var _metadataErrors = /*#__PURE__*/new WeakMap();

var _metadataEvents = /*#__PURE__*/new WeakMap();

var _unknownTypes = /*#__PURE__*/new WeakMap();

var _chainProperties = /*#__PURE__*/new WeakMap();

var _hasher = /*#__PURE__*/new WeakMap();

var _knownDefaults = /*#__PURE__*/new WeakMap();

var _knownDefinitions = /*#__PURE__*/new WeakMap();

var _knownTypes = /*#__PURE__*/new WeakMap();

var _signedExtensions = /*#__PURE__*/new WeakMap();

var _userExtensions = /*#__PURE__*/new WeakMap();

var TypeRegistry = /*#__PURE__*/function () {
  function TypeRegistry(createdAtHash) {
    _classCallCheck(this, TypeRegistry);

    _classPrivateFieldInitSpec(this, _classes, {
      writable: true,
      value: new Map()
    });

    _classPrivateFieldInitSpec(this, _definitions, {
      writable: true,
      value: new Map()
    });

    _classPrivateFieldInitSpec(this, _firstCallIndex, {
      writable: true,
      value: null
    });

    _classPrivateFieldInitSpec(this, _lookup, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(this, _metadata, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(this, _metadataVersion, {
      writable: true,
      value: 0
    });

    _classPrivateFieldInitSpec(this, _metadataCalls, {
      writable: true,
      value: {}
    });

    _classPrivateFieldInitSpec(this, _metadataErrors, {
      writable: true,
      value: {}
    });

    _classPrivateFieldInitSpec(this, _metadataEvents, {
      writable: true,
      value: {}
    });

    _classPrivateFieldInitSpec(this, _unknownTypes, {
      writable: true,
      value: new Map()
    });

    _classPrivateFieldInitSpec(this, _chainProperties, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(this, _hasher, {
      writable: true,
      value: _utilCrypto.blake2AsU8a
    });

    _classPrivateFieldInitSpec(this, _knownDefaults, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(this, _knownDefinitions, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(this, _knownTypes, {
      writable: true,
      value: {}
    });

    _classPrivateFieldInitSpec(this, _signedExtensions, {
      writable: true,
      value: _index.fallbackExtensions
    });

    _classPrivateFieldInitSpec(this, _userExtensions, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldSet(this, _knownDefaults, (0, _util.objectSpread)({
      Json: _typesCodec.Json,
      Metadata: _Metadata.Metadata,
      PortableRegistry: _index4.PortableRegistry,
      Raw: _typesCodec.Raw
    }, baseTypes));

    _classPrivateFieldSet(this, _knownDefinitions, definitions);

    var allKnown = Object.values(_classPrivateFieldGet(this, _knownDefinitions));

    for (var i = 0; i < allKnown.length; i++) {
      this.register(allKnown[i].types);
    }

    if (createdAtHash) {
      this.createdAtHash = this.createType('Hash', createdAtHash);
    }
  }

  _createClass(TypeRegistry, [{
    key: "chainDecimals",
    get: function get() {
      var _this$chainProperties;

      if ((_this$chainProperties = _classPrivateFieldGet(this, _chainProperties)) !== null && _this$chainProperties !== void 0 && _this$chainProperties.tokenDecimals.isSome) {
        var allDecimals = _classPrivateFieldGet(this, _chainProperties).tokenDecimals.unwrap();

        if (allDecimals.length) {
          return allDecimals.map(function (b) {
            return b.toNumber();
          });
        }
      }

      return [12];
    }
  }, {
    key: "chainSS58",
    get: function get() {
      var _this$chainProperties2;

      return (_this$chainProperties2 = _classPrivateFieldGet(this, _chainProperties)) !== null && _this$chainProperties2 !== void 0 && _this$chainProperties2.ss58Format.isSome ? _classPrivateFieldGet(this, _chainProperties).ss58Format.unwrap().toNumber() : undefined;
    }
  }, {
    key: "chainTokens",
    get: function get() {
      var _this$chainProperties3;

      if ((_this$chainProperties3 = _classPrivateFieldGet(this, _chainProperties)) !== null && _this$chainProperties3 !== void 0 && _this$chainProperties3.tokenSymbol.isSome) {
        var allTokens = _classPrivateFieldGet(this, _chainProperties).tokenSymbol.unwrap();

        if (allTokens.length) {
          return allTokens.map(valueToString);
        }
      }

      return [_util.formatBalance.getDefaults().unit];
    }
  }, {
    key: "firstCallIndex",
    get: function get() {
      return _classPrivateFieldGet(this, _firstCallIndex) || DEFAULT_FIRST_CALL_IDX;
    }
    /**
     * @description Returns true if the type is in a Compat format
     */

  }, {
    key: "isLookupType",
    value: function isLookupType(value) {
      return /Lookup\d+$/.test(value);
    }
    /**
     * @description Creates a lookup string from the supplied id
     */

  }, {
    key: "createLookupType",
    value: function createLookupType(lookupId) {
      return "Lookup".concat(lookupId.toString());
    }
  }, {
    key: "knownTypes",
    get: function get() {
      return _classPrivateFieldGet(this, _knownTypes);
    }
  }, {
    key: "lookup",
    get: function get() {
      return (0, _util.assertReturn)(_classPrivateFieldGet(this, _lookup), 'Lookup has not been set on this registry');
    }
  }, {
    key: "metadata",
    get: function get() {
      return (0, _util.assertReturn)(_classPrivateFieldGet(this, _metadata), 'Metadata has not been set on this registry');
    }
  }, {
    key: "unknownTypes",
    get: function get() {
      return _toConsumableArray(_classPrivateFieldGet(this, _unknownTypes).keys());
    }
  }, {
    key: "signedExtensions",
    get: function get() {
      return _classPrivateFieldGet(this, _signedExtensions);
    }
  }, {
    key: "clearCache",
    value: function clearCache() {
      _classPrivateFieldSet(this, _classes, new Map());
    }
    /**
     * @describe Creates an instance of the class
     */

  }, {
    key: "createClass",
    value: function createClass(type) {
      return (0, _typesCreate.createClassUnsafe)(this, type);
    }
    /**
     * @describe Creates an instance of the class
     */

  }, {
    key: "createClassUnsafe",
    value: function createClassUnsafe(type) {
      return (0, _typesCreate.createClassUnsafe)(this, type);
    }
    /**
     * @description Creates an instance of a type as registered
     */

  }, {
    key: "createType",
    value: function createType(type) {
      for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        params[_key - 1] = arguments[_key];
      }

      return (0, _typesCreate.createTypeUnsafe)(this, type, params);
    }
    /**
     * @description Creates an instance of a type as registered
     */

  }, {
    key: "createTypeUnsafe",
    value: function createTypeUnsafe(type, params, options) {
      return (0, _typesCreate.createTypeUnsafe)(this, type, params, options);
    } // find a specific call

  }, {
    key: "findMetaCall",
    value: function findMetaCall(callIndex) {
      var _ref7 = [callIndex[0], callIndex[1]],
          section = _ref7[0],
          method = _ref7[1];
      return (0, _util.assertReturn)(_classPrivateFieldGet(this, _metadataCalls)["".concat(section)] && _classPrivateFieldGet(this, _metadataCalls)["".concat(section)]["".concat(method)], function () {
        return "findMetaCall: Unable to find Call with index [".concat(section, ", ").concat(method, "]/[").concat(callIndex.toString(), "]");
      });
    } // finds an error

  }, {
    key: "findMetaError",
    value: function findMetaError(errorIndex) {
      var _ref8 = (0, _util.isU8a)(errorIndex) ? [errorIndex[0], errorIndex[1]] : [errorIndex.index.toNumber(), (0, _util.isU8a)(errorIndex.error) ? errorIndex.error[0] : errorIndex.error.toNumber()],
          _ref9 = _slicedToArray(_ref8, 2),
          section = _ref9[0],
          method = _ref9[1];

      return (0, _util.assertReturn)(_classPrivateFieldGet(this, _metadataErrors)["".concat(section)] && _classPrivateFieldGet(this, _metadataErrors)["".concat(section)]["".concat(method)], function () {
        return "findMetaError: Unable to find Error with index [".concat(section, ", ").concat(method, "]/[").concat(errorIndex.toString(), "]");
      });
    }
  }, {
    key: "findMetaEvent",
    value: function findMetaEvent(eventIndex) {
      var _ref10 = [eventIndex[0], eventIndex[1]],
          section = _ref10[0],
          method = _ref10[1];
      return (0, _util.assertReturn)(_classPrivateFieldGet(this, _metadataEvents)["".concat(section)] && _classPrivateFieldGet(this, _metadataEvents)["".concat(section)]["".concat(method)], function () {
        return "findMetaEvent: Unable to find Event with index [".concat(section, ", ").concat(method, "]/[").concat(eventIndex.toString(), "]");
      });
    }
  }, {
    key: "get",
    value: function get(name, withUnknown, knownTypeDef) {
      return this.getUnsafe(name, withUnknown, knownTypeDef);
    }
  }, {
    key: "getUnsafe",
    value: function getUnsafe(name, withUnknown, knownTypeDef) {
      var Type = _classPrivateFieldGet(this, _classes).get(name) || _classPrivateFieldGet(this, _knownDefaults)[name]; // we have not already created the type, attempt it


      if (!Type) {
        var definition = _classPrivateFieldGet(this, _definitions).get(name);

        var BaseType; // we have a definition, so create the class now (lazily)

        if (definition) {
          BaseType = (0, _typesCreate.createClassUnsafe)(this, definition);
        } else if (knownTypeDef) {
          BaseType = (0, _typesCreate.constructTypeClass)(this, knownTypeDef);
        } else if (withUnknown) {
          l.warn("Unable to resolve type ".concat(name, ", it will fail on construction"));

          _classPrivateFieldGet(this, _unknownTypes).set(name, true);

          BaseType = _typesCodec.DoNotConstruct.with(name);
        }

        if (BaseType) {
          // NOTE If we didn't extend here, we would have strange artifacts. An example is
          // Balance, with this, new Balance() instanceof u128 is true, but Balance !== u128
          // Additionally, we now pass through the registry, which is a link to ourselves
          Type = /*#__PURE__*/function (_BaseType) {
            _inherits(Type, _BaseType);

            var _super2 = _createSuper(Type);

            function Type() {
              _classCallCheck(this, Type);

              return _super2.apply(this, arguments);
            }

            return _createClass(Type);
          }(BaseType);

          _classPrivateFieldGet(this, _classes).set(name, Type); // In the case of lookups, we also want to store the actual class against
          // the lookup name, instad of having to traverse again


          if (knownTypeDef && (0, _util.isNumber)(knownTypeDef.lookupIndex)) {
            _classPrivateFieldGet(this, _classes).set(this.createLookupType(knownTypeDef.lookupIndex), Type);
          }
        }
      }

      return Type;
    }
  }, {
    key: "getChainProperties",
    value: function getChainProperties() {
      return _classPrivateFieldGet(this, _chainProperties);
    }
  }, {
    key: "getClassName",
    value: function getClassName(Type) {
      // we cannot rely on export order (anymore, since babel/core 7.15.8), so in the case of
      // items such as u32 & U32, we get the lowercase versions here... not quite as optimal
      // (previously this used to be a simple find & return)
      var names = [];

      for (var _i2 = 0, _Object$entries = Object.entries(_classPrivateFieldGet(this, _knownDefaults)); _i2 < _Object$entries.length; _i2++) {
        var _Object$entries$_i = _slicedToArray(_Object$entries[_i2], 2),
            name = _Object$entries$_i[0],
            Clazz = _Object$entries$_i[1];

        if (Type === Clazz) {
          names.push(name);
        }
      }

      var _iterator = _createForOfIteratorHelper(_classPrivateFieldGet(this, _classes).entries()),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var _step$value = _slicedToArray(_step.value, 2),
              _name = _step$value[0],
              _Clazz = _step$value[1];

          if (Type === _Clazz) {
            names.push(_name);
          }
        } // both sort and reverse are done in-place

      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      names.sort().reverse();
      return names.length ? names[0] : undefined;
    }
  }, {
    key: "getDefinition",
    value: function getDefinition(typeName) {
      return _classPrivateFieldGet(this, _definitions).get(typeName);
    }
  }, {
    key: "getModuleInstances",
    value: function getModuleInstances(specName, moduleName) {
      var _this$knownTypes, _this$knownTypes$type, _this$knownTypes$type2, _this$knownTypes$type3, _this$knownTypes$type4;

      return (_this$knownTypes = _classPrivateFieldGet(this, _knownTypes)) === null || _this$knownTypes === void 0 ? void 0 : (_this$knownTypes$type = _this$knownTypes.typesBundle) === null || _this$knownTypes$type === void 0 ? void 0 : (_this$knownTypes$type2 = _this$knownTypes$type.spec) === null || _this$knownTypes$type2 === void 0 ? void 0 : (_this$knownTypes$type3 = _this$knownTypes$type2[specName]) === null || _this$knownTypes$type3 === void 0 ? void 0 : (_this$knownTypes$type4 = _this$knownTypes$type3.instances) === null || _this$knownTypes$type4 === void 0 ? void 0 : _this$knownTypes$type4[moduleName];
    }
  }, {
    key: "getOrThrow",
    value: function getOrThrow(name, msg) {
      var Clazz = this.get(name);

      if (!Clazz) {
        throw new Error(msg || "type ".concat(name, " not found"));
      }

      return Clazz;
    }
  }, {
    key: "getOrUnknown",
    value: function getOrUnknown(name) {
      return this.get(name, true);
    }
  }, {
    key: "getSignedExtensionExtra",
    value: function getSignedExtensionExtra() {
      return (0, _index.expandExtensionTypes)(_classPrivateFieldGet(this, _signedExtensions), 'payload', _classPrivateFieldGet(this, _userExtensions));
    }
  }, {
    key: "getSignedExtensionTypes",
    value: function getSignedExtensionTypes() {
      return (0, _index.expandExtensionTypes)(_classPrivateFieldGet(this, _signedExtensions), 'extrinsic', _classPrivateFieldGet(this, _userExtensions));
    }
  }, {
    key: "hasClass",
    value: function hasClass(name) {
      return _classPrivateFieldGet(this, _classes).has(name) || !!_classPrivateFieldGet(this, _knownDefaults)[name];
    }
  }, {
    key: "hasDef",
    value: function hasDef(name) {
      return _classPrivateFieldGet(this, _definitions).has(name);
    }
  }, {
    key: "hasType",
    value: function hasType(name) {
      return !_classPrivateFieldGet(this, _unknownTypes).get(name) && (this.hasClass(name) || this.hasDef(name));
    }
  }, {
    key: "hash",
    value: function hash(data) {
      return this.createType('CodecHash', _classPrivateFieldGet(this, _hasher).call(this, data));
    } // eslint-disable-next-line no-dupe-class-members

  }, {
    key: "register",
    value: function register(arg1, arg2) {
      // NOTE Constructors appear as functions here
      if ((0, _util.isFunction)(arg1)) {
        _classPrivateFieldGet(this, _classes).set(arg1.name, arg1);
      } else if ((0, _util.isString)(arg1)) {
        if (!(0, _util.isFunction)(arg2)) {
          throw new Error("Expected class definition passed to '".concat(arg1, "' registration"));
        } else if (arg1 === arg2.toString()) {
          throw new Error("Unable to register circular ".concat(arg1, " === ").concat(arg1));
        }

        _classPrivateFieldGet(this, _classes).set(arg1, arg2);
      } else {
        this._registerObject(arg1);
      }
    }
  }, {
    key: "_registerObject",
    value: function _registerObject(obj) {
      var entries = Object.entries(obj);

      for (var e = 0; e < entries.length; e++) {
        var _entries$e = _slicedToArray(entries[e], 2),
            name = _entries$e[0],
            type = _entries$e[1];

        if ((0, _util.isFunction)(type)) {
          // This _looks_ a bit funny, but `typeof Clazz === 'function'
          _classPrivateFieldGet(this, _classes).set(name, type);
        } else {
          var def = (0, _util.isString)(type) ? type : (0, _util.stringify)(type);

          if (name === def) {
            throw new Error("Unable to register circular ".concat(name, " === ").concat(def));
          } // we already have this type, remove the classes registered for it


          if (_classPrivateFieldGet(this, _classes).has(name)) {
            _classPrivateFieldGet(this, _classes).delete(name);
          }

          _classPrivateFieldGet(this, _definitions).set(name, def);
        }
      }
    } // sets the chain properties

  }, {
    key: "setChainProperties",
    value: function setChainProperties(properties) {
      if (properties) {
        _classPrivateFieldSet(this, _chainProperties, properties);
      }
    }
  }, {
    key: "setHasher",
    value: function setHasher(hasher) {
      _classPrivateFieldSet(this, _hasher, hasher || _utilCrypto.blake2AsU8a);
    }
  }, {
    key: "setKnownTypes",
    value: function setKnownTypes(knownTypes) {
      _classPrivateFieldSet(this, _knownTypes, knownTypes);
    }
  }, {
    key: "setLookup",
    value: function setLookup(lookup) {
      _classPrivateFieldSet(this, _lookup, lookup); // register all applicable types found


      lookup.register();
    } // sets the metadata

  }, {
    key: "setMetadata",
    value: function setMetadata(metadata, signedExtensions, userExtensions) {
      _classPrivateFieldSet(this, _metadata, metadata.asLatest);

      _classPrivateFieldSet(this, _metadataVersion, metadata.version);

      _classPrivateFieldSet(this, _firstCallIndex, null); // attach the lookup at this point (before injecting)


      this.setLookup(_classPrivateFieldGet(this, _metadata).lookup);
      injectExtrinsics(this, _classPrivateFieldGet(this, _metadata), _classPrivateFieldGet(this, _metadataVersion), _classPrivateFieldGet(this, _metadataCalls));
      injectErrors(this, _classPrivateFieldGet(this, _metadata), _classPrivateFieldGet(this, _metadataVersion), _classPrivateFieldGet(this, _metadataErrors));
      injectEvents(this, _classPrivateFieldGet(this, _metadata), _classPrivateFieldGet(this, _metadataVersion), _classPrivateFieldGet(this, _metadataEvents)); // set the default call index (the lowest section, the lowest method)
      // in most chains this should be 0,0

      var _Object$keys$sort = Object.keys(_classPrivateFieldGet(this, _metadataCalls)).sort(sortDecimalStrings),
          _Object$keys$sort2 = _slicedToArray(_Object$keys$sort, 1),
          defSection = _Object$keys$sort2[0];

      if (defSection) {
        var _Object$keys$sort3 = Object.keys(_classPrivateFieldGet(this, _metadataCalls)[defSection]).sort(sortDecimalStrings),
            _Object$keys$sort4 = _slicedToArray(_Object$keys$sort3, 1),
            defMethod = _Object$keys$sort4[0];

        if (defMethod) {
          _classPrivateFieldSet(this, _firstCallIndex, new Uint8Array([parseInt(defSection, 10), parseInt(defMethod, 10)]));
        }
      } // setup the available extensions


      this.setSignedExtensions(signedExtensions || (_classPrivateFieldGet(this, _metadata).extrinsic.version.gt(_util.BN_ZERO) // FIXME Use the extension and their injected types
      ? _classPrivateFieldGet(this, _metadata).extrinsic.signedExtensions.map(function (_ref11) {
        var identifier = _ref11.identifier;
        return identifier.toString();
      }) : _index.fallbackExtensions), userExtensions); // setup the chain properties with format overrides

      this.setChainProperties(extractProperties(this, metadata));
    } // sets the available signed extensions

  }, {
    key: "setSignedExtensions",
    value: function setSignedExtensions() {
      var signedExtensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _index.fallbackExtensions;
      var userExtensions = arguments.length > 1 ? arguments[1] : undefined;

      _classPrivateFieldSet(this, _signedExtensions, signedExtensions);

      _classPrivateFieldSet(this, _userExtensions, userExtensions);

      var unknown = (0, _index.findUnknownExtensions)(_classPrivateFieldGet(this, _signedExtensions), _classPrivateFieldGet(this, _userExtensions));

      if (unknown.length) {
        l.warn("Unknown signed extensions ".concat(unknown.join(', '), " found, treating them as no-effect"));
      }
    }
  }]);

  return TypeRegistry;
}();

exports.TypeRegistry = TypeRegistry;
},{"@polkadot/types-codec":"node_modules/@polkadot/types-codec/index.js","@polkadot/types-create":"node_modules/@polkadot/types-create/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/util-crypto":"node_modules/@polkadot/util-crypto/index.js","../extrinsic/signedExtensions/index.js":"node_modules/@polkadot/types/extrinsic/signedExtensions/index.js","../generic/Event.js":"node_modules/@polkadot/types/generic/Event.js","../index.types.js":"node_modules/@polkadot/types/index.types.js","../interfaces/definitions.js":"node_modules/@polkadot/types/interfaces/definitions.js","../metadata/decorate/index.js":"node_modules/@polkadot/types/metadata/decorate/index.js","../metadata/decorate/extrinsics/index.js":"node_modules/@polkadot/types/metadata/decorate/extrinsics/index.js","../metadata/Metadata.js":"node_modules/@polkadot/types/metadata/Metadata.js","../metadata/PortableRegistry/index.js":"node_modules/@polkadot/types/metadata/PortableRegistry/index.js","./lazy.js":"node_modules/@polkadot/types/create/lazy.js"}],"node_modules/@polkadot/types/create/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typesCreate = require("@polkadot/types-create");

Object.keys(_typesCreate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _typesCreate[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _typesCreate[key];
    }
  });
});

var _createClass = require("./createClass.js");

Object.keys(_createClass).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _createClass[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _createClass[key];
    }
  });
});

var _createType = require("./createType.js");

Object.keys(_createType).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _createType[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _createType[key];
    }
  });
});

var _lazy = require("./lazy.js");

Object.keys(_lazy).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _lazy[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _lazy[key];
    }
  });
});

var _registry = require("./registry.js");

Object.keys(_registry).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _registry[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _registry[key];
    }
  });
});
},{"@polkadot/types-create":"node_modules/@polkadot/types-create/index.js","./createClass.js":"node_modules/@polkadot/types/create/createClass.js","./createType.js":"node_modules/@polkadot/types/create/createType.js","./lazy.js":"node_modules/@polkadot/types/create/lazy.js","./registry.js":"node_modules/@polkadot/types/create/registry.js"}],"node_modules/@polkadot/types/metadata/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Metadata", {
  enumerable: true,
  get: function () {
    return _Metadata.Metadata;
  }
});
Object.defineProperty(exports, "PortableRegistry", {
  enumerable: true,
  get: function () {
    return _index.PortableRegistry;
  }
});
Object.defineProperty(exports, "decorateConstants", {
  enumerable: true,
  get: function () {
    return _index2.decorateConstants;
  }
});
Object.defineProperty(exports, "decorateExtrinsics", {
  enumerable: true,
  get: function () {
    return _index2.decorateExtrinsics;
  }
});
Object.defineProperty(exports, "decorateStorage", {
  enumerable: true,
  get: function () {
    return _index2.decorateStorage;
  }
});
Object.defineProperty(exports, "expandMetadata", {
  enumerable: true,
  get: function () {
    return _index2.expandMetadata;
  }
});

var _Metadata = require("./Metadata.js");

var _index = require("./PortableRegistry/index.js");

var _index2 = require("./decorate/index.js");
},{"./Metadata.js":"node_modules/@polkadot/types/metadata/Metadata.js","./PortableRegistry/index.js":"node_modules/@polkadot/types/metadata/PortableRegistry/index.js","./decorate/index.js":"node_modules/@polkadot/types/metadata/decorate/index.js"}],"node_modules/@polkadot/types/bundle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  typeDefinitions: true,
  rpcDefinitions: true,
  TypeDefInfo: true,
  convertSiV0toV1: true,
  packageInfo: true,
  unwrapStorageType: true
};
Object.defineProperty(exports, "TypeDefInfo", {
  enumerable: true,
  get: function () {
    return _typesCreate.TypeDefInfo;
  }
});
Object.defineProperty(exports, "convertSiV0toV1", {
  enumerable: true,
  get: function () {
    return _index4.convertSiV0toV1;
  }
});
Object.defineProperty(exports, "packageInfo", {
  enumerable: true,
  get: function () {
    return _packageInfo.packageInfo;
  }
});
Object.defineProperty(exports, "rpcDefinitions", {
  enumerable: true,
  get: function () {
    return _jsonrpc.default;
  }
});
exports.typeDefinitions = void 0;
Object.defineProperty(exports, "unwrapStorageType", {
  enumerable: true,
  get: function () {
    return _StorageKey.unwrapStorageType;
  }
});

var typeDefinitions = _interopRequireWildcard(require("./interfaces/definitions.js"));

exports.typeDefinitions = typeDefinitions;

var _jsonrpc = _interopRequireDefault(require("./interfaces/jsonrpc.js"));

var _index = require("./codec/index.js");

Object.keys(_index).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index[key];
    }
  });
});

var _index2 = require("./create/index.js");

Object.keys(_index2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index2[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index2[key];
    }
  });
});

var _indexTypes = require("./index.types.js");

Object.keys(_indexTypes).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _indexTypes[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _indexTypes[key];
    }
  });
});

var _index3 = require("./metadata/index.js");

Object.keys(_index3).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index3[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index3[key];
    }
  });
});

var _typesCreate = require("@polkadot/types-create");

var _index4 = require("./metadata/PortableRegistry/index.js");

var _packageInfo = require("./packageInfo.js");

var _StorageKey = require("./primitive/StorageKey.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./interfaces/definitions.js":"node_modules/@polkadot/types/interfaces/definitions.js","./interfaces/jsonrpc.js":"node_modules/@polkadot/types/interfaces/jsonrpc.js","./codec/index.js":"node_modules/@polkadot/types/codec/index.js","./create/index.js":"node_modules/@polkadot/types/create/index.js","./index.types.js":"node_modules/@polkadot/types/index.types.js","./metadata/index.js":"node_modules/@polkadot/types/metadata/index.js","@polkadot/types-create":"node_modules/@polkadot/types-create/index.js","./metadata/PortableRegistry/index.js":"node_modules/@polkadot/types/metadata/PortableRegistry/index.js","./packageInfo.js":"node_modules/@polkadot/types/packageInfo.js","./primitive/StorageKey.js":"node_modules/@polkadot/types/primitive/StorageKey.js"}],"node_modules/@polkadot/types/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

require("./detectPackage.js");

var _bundle = require("./bundle.js");

Object.keys(_bundle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _bundle[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bundle[key];
    }
  });
});
},{"./detectPackage.js":"node_modules/@polkadot/types/detectPackage.js","./bundle.js":"node_modules/@polkadot/types/bundle.js"}],"node_modules/@polkadot/rpc-core/util/refCountDelay.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.refCountDelay = refCountDelay;

var _rxjs = require("rxjs");

// Copyright 2017-2022 @polkadot/rpc-core authors & contributors
// SPDX-License-Identifier: Apache-2.0

/** @internal */
function refCountDelay() {
  var delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1750;
  return function (source) {
    // state: 0 = disconnected, 1 = disconnecting, 2 = connecting, 3 = connected
    var _ref = [0, 0, _rxjs.Subscription.EMPTY, _rxjs.Subscription.EMPTY],
        state = _ref[0],
        refCount = _ref[1],
        connection = _ref[2],
        scheduler = _ref[3];
    return new _rxjs.Observable(function (ob) {
      source.subscribe(ob);

      if (refCount++ === 0) {
        if (state === 1) {
          scheduler.unsubscribe();
        } else {
          connection = source.connect();
        }

        state = 3;
      }

      return function () {
        if (--refCount === 0) {
          if (state === 2) {
            state = 0;
            scheduler.unsubscribe();
          } else {
            // state === 3
            state = 1;
            scheduler = _rxjs.asapScheduler.schedule(function () {
              state = 0;
              connection.unsubscribe();
            }, delay);
          }
        }
      };
    });
  };
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js"}],"node_modules/@polkadot/rpc-core/util/drr.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.drr = void 0;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _refCountDelay = require("./refCountDelay.js");

// Copyright 2017-2022 @polkadot/rpc-core authors & contributors
// SPDX-License-Identifier: Apache-2.0
var l = (0, _util.logger)('drr');

var CMP = function CMP(a, b) {
  return (0, _util.stringify)({
    t: a
  }) === (0, _util.stringify)({
    t: b
  });
};

var ERR = function ERR(error) {
  l.error(error.message);
  throw error;
};

var NOOP = function NOOP() {
  return undefined;
};
/**
 * Shorthand for distinctUntilChanged(), publishReplay(1) and refCount().
 *
 * @ignore
 * @internal
 */


var drr = function drr() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      delay = _ref.delay,
      _ref$skipChange = _ref.skipChange,
      skipChange = _ref$skipChange === void 0 ? false : _ref$skipChange,
      _ref$skipTimeout = _ref.skipTimeout,
      skipTimeout = _ref$skipTimeout === void 0 ? false : _ref$skipTimeout;

  return function (source$) {
    return source$.pipe((0, _rxjs.catchError)(ERR), skipChange ? (0, _rxjs.tap)(NOOP) : (0, _rxjs.distinctUntilChanged)(CMP), (0, _rxjs.publishReplay)(1), skipTimeout ? (0, _rxjs.refCount)() : (0, _refCountDelay.refCountDelay)(delay));
  };
};

exports.drr = drr;
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","./refCountDelay.js":"node_modules/@polkadot/rpc-core/util/refCountDelay.js"}],"node_modules/@polkadot/rpc-core/util/memo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.memo = memo;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _drr = require("./drr.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Wraps a derive, doing 2 things to optimize calls -
//   1. creates a memo of the inner fn -> Observable, removing when unsubscribed
//   2. wraps the observable in a drr() (which includes an unsub delay)

/** @internal */
// eslint-disable-next-line @typescript-eslint/ban-types
function memo(instanceId, inner) {
  var options = {
    getInstanceId: function getInstanceId() {
      return instanceId;
    }
  };
  var cached = (0, _util.memoize)(function () {
    for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {
      params[_key] = arguments[_key];
    }

    return new _rxjs.Observable(function (observer) {
      var subscription = inner.apply(void 0, params).subscribe(observer);
      return function () {
        cached.unmemoize.apply(cached, params);
        subscription.unsubscribe();
      };
    }).pipe((0, _drr.drr)());
  }, options);
  return cached;
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","./drr.js":"node_modules/@polkadot/rpc-core/util/drr.js"}],"node_modules/@polkadot/rpc-core/util/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _drr = require("./drr.js");

Object.keys(_drr).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _drr[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _drr[key];
    }
  });
});

var _memo = require("./memo.js");

Object.keys(_memo).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _memo[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _memo[key];
    }
  });
});

var _refCountDelay = require("./refCountDelay.js");

Object.keys(_refCountDelay).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _refCountDelay[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _refCountDelay[key];
    }
  });
});
},{"./drr.js":"node_modules/@polkadot/rpc-core/util/drr.js","./memo.js":"node_modules/@polkadot/rpc-core/util/memo.js","./refCountDelay.js":"node_modules/@polkadot/rpc-core/util/refCountDelay.js"}],"node_modules/@polkadot/rpc-core/bundle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  RpcCore: true,
  packageInfo: true
};
exports.RpcCore = void 0;
Object.defineProperty(exports, "packageInfo", {
  enumerable: true,
  get: function () {
    return _packageInfo.packageInfo;
  }
});

var _rxjs = require("rxjs");

var _types = require("@polkadot/types");

var _util = require("@polkadot/util");

var _index = require("./util/index.js");

Object.keys(_index).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index[key];
    }
  });
});

var _packageInfo = require("./packageInfo.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

var l = (0, _util.logger)('rpc-core');
var EMPTY_META = {
  fallback: undefined,
  modifier: {
    isOptional: true
  },
  type: {
    asMap: {
      linked: {
        isTrue: false
      }
    },
    isMap: false
  }
}; // utility method to create a nicely-formatted error

/** @internal */

function logErrorMessage(method, _ref, error) {
  var noErrorLog = _ref.noErrorLog,
      params = _ref.params,
      type = _ref.type;

  if (noErrorLog) {
    return;
  }

  var inputs = params.map(function (_ref2) {
    var isOptional = _ref2.isOptional,
        name = _ref2.name,
        type = _ref2.type;
    return "".concat(name).concat(isOptional ? '?' : '', ": ").concat(type);
  }).join(', ');
  l.error("".concat(method, "(").concat(inputs, "): ").concat(type, ":: ").concat(error.message));
}

function isTreatAsHex(key) {
  // :code is problematic - it does not have the length attached, which is
  // unlike all other storage entries where it is indeed properly encoded
  return ['0x3a636f6465'].includes(key.toHex());
}
/**
 * @name Rpc
 * @summary The API may use a HTTP or WebSockets provider.
 * @description It allows for querying a Polkadot Client Node.
 * WebSockets provider is recommended since HTTP provider only supports basic querying.
 *
 * ```mermaid
 * graph LR;
 *   A[Api] --> |WebSockets| B[WsProvider];
 *   B --> |endpoint| C[ws://127.0.0.1:9944]
 * ```
 *
 * @example
 * <BR>
 *
 * ```javascript
 * import Rpc from '@polkadot/rpc-core';
 * import { WsProvider } from '@polkadot/rpc-provider/ws';
 *
 * const provider = new WsProvider('ws://127.0.0.1:9944');
 * const rpc = new Rpc(provider);
 * ```
 */


var _instanceId = /*#__PURE__*/new WeakMap();

var _registryDefault = /*#__PURE__*/new WeakMap();

var _getBlockRegistry = /*#__PURE__*/new WeakMap();

var _getBlockHash = /*#__PURE__*/new WeakMap();

var _storageCache = /*#__PURE__*/new WeakMap();

var RpcCore = /*#__PURE__*/function () {
  /**
   * @constructor
   * Default constructor for the Api Object
   * @param  {ProviderInterface} provider An API provider using HTTP or WebSocket
   */
  function RpcCore(instanceId, registry, provider) {
    var _this$sections;

    var userRpc = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

    _classCallCheck(this, RpcCore);

    _classPrivateFieldInitSpec(this, _instanceId, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(this, _registryDefault, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(this, _getBlockRegistry, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(this, _getBlockHash, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(this, _storageCache, {
      writable: true,
      value: new Map()
    });

    _defineProperty(this, "mapping", new Map());

    _defineProperty(this, "sections", []);

    // eslint-disable-next-line @typescript-eslint/unbound-method
    if (!provider || !(0, _util.isFunction)(provider.send)) {
      throw new Error('Expected Provider to API create');
    }

    _classPrivateFieldSet(this, _instanceId, instanceId);

    _classPrivateFieldSet(this, _registryDefault, registry);

    this.provider = provider;
    var sectionNames = Object.keys(_types.rpcDefinitions); // these are the base keys (i.e. part of jsonrpc)

    (_this$sections = this.sections).push.apply(_this$sections, _toConsumableArray(sectionNames)); // decorate all interfaces, defined and user on this instance


    this.addUserInterfaces(userRpc);
  }
  /**
   * @description Returns the connected status of a provider
   */


  _createClass(RpcCore, [{
    key: "isConnected",
    get: function get() {
      return this.provider.isConnected;
    }
    /**
     * @description Manually connect from the attached provider
     */

  }, {
    key: "connect",
    value: function connect() {
      return this.provider.connect();
    }
    /**
     * @description Manually disconnect from the attached provider
     */

  }, {
    key: "disconnect",
    value: function disconnect() {
      return this.provider.disconnect();
    }
    /**
     * @description Sets a registry swap (typically from Api)
     */

  }, {
    key: "setRegistrySwap",
    value: function setRegistrySwap(registrySwap) {
      var _this = this;

      _classPrivateFieldSet(this, _getBlockRegistry, (0, _util.memoize)(registrySwap, {
        getInstanceId: function getInstanceId() {
          return _classPrivateFieldGet(_this, _instanceId);
        }
      }));
    }
    /**
     * @description Sets a function to resolve block hash from block number
     */

  }, {
    key: "setResolveBlockHash",
    value: function setResolveBlockHash(resolveBlockHash) {
      var _this2 = this;

      _classPrivateFieldSet(this, _getBlockHash, (0, _util.memoize)(resolveBlockHash, {
        getInstanceId: function getInstanceId() {
          return _classPrivateFieldGet(_this2, _instanceId);
        }
      }));
    }
  }, {
    key: "addUserInterfaces",
    value: function addUserInterfaces(userRpc) {
      var _this$sections2,
          _this3 = this;

      // add any extra user-defined sections
      (_this$sections2 = this.sections).push.apply(_this$sections2, _toConsumableArray(Object.keys(userRpc).filter(function (k) {
        return !_this3.sections.includes(k);
      })));

      var _loop = function _loop(s) {
        var section = _this3.sections[s];
        var defs = (0, _util.objectSpread)({}, _types.rpcDefinitions[section], userRpc[section]);
        var methods = Object.keys(defs);

        var _loop2 = function _loop2(m) {
          var method = methods[m];
          var def = defs[method];
          var jsonrpc = def.endpoint || "".concat(section, "_").concat(method);

          if (!_this3.mapping.has(jsonrpc)) {
            var isSubscription = !!def.pubsub;

            if (!_this3[section]) {
              _this3[section] = {};
            }

            _this3.mapping.set(jsonrpc, (0, _util.objectSpread)({}, def, {
              isSubscription: isSubscription,
              jsonrpc: jsonrpc,
              method: method,
              section: section
            }));

            (0, _util.lazyMethod)(_this3[section], method, function () {
              return isSubscription ? _this3._createMethodSubscribe(section, method, def) : _this3._createMethodSend(section, method, def);
            });
          }
        };

        for (var m = 0; m < methods.length; m++) {
          _loop2(m);
        }
      };

      for (var s = 0; s < this.sections.length; s++) {
        _loop(s);
      }
    }
  }, {
    key: "_memomize",
    value: function _memomize(creator, def) {
      var _this4 = this;

      var memoOpts = {
        getInstanceId: function getInstanceId() {
          return _classPrivateFieldGet(_this4, _instanceId);
        }
      };
      var memoized = (0, _util.memoize)(creator(true), memoOpts);
      memoized.raw = (0, _util.memoize)(creator(false), memoOpts);
      memoized.meta = def;
      return memoized;
    }
  }, {
    key: "_formatResult",
    value: function _formatResult(isScale, registry, blockHash, method, def, params, result) {
      return isScale ? this._formatOutput(registry, blockHash, method, def, params, result) : result;
    }
  }, {
    key: "_createMethodSend",
    value: function _createMethodSend(section, method, def) {
      var _this5 = this;

      var rpcName = def.endpoint || "".concat(section, "_").concat(method);
      var hashIndex = def.params.findIndex(function (_ref3) {
        var isHistoric = _ref3.isHistoric;
        return isHistoric;
      });
      var memoized = null; // execute the RPC call, doing a registry swap for historic as applicable

      var callWithRegistry = /*#__PURE__*/function () {
        var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(isScale, values) {
          var _this$getBlockHash, blockId, blockHash, _ref5, registry, params, result;

          return _regeneratorRuntime().wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  blockId = hashIndex === -1 ? null : values[hashIndex];

                  if (!(blockId && def.params[hashIndex].type === 'BlockNumber')) {
                    _context.next = 7;
                    break;
                  }

                  _context.next = 4;
                  return (_this$getBlockHash = _classPrivateFieldGet(_this5, _getBlockHash)) === null || _this$getBlockHash === void 0 ? void 0 : _this$getBlockHash.call(_this5, blockId);

                case 4:
                  _context.t0 = _context.sent;
                  _context.next = 8;
                  break;

                case 7:
                  _context.t0 = blockId;

                case 8:
                  blockHash = _context.t0;

                  if (!(isScale && blockHash && _classPrivateFieldGet(_this5, _getBlockRegistry))) {
                    _context.next = 15;
                    break;
                  }

                  _context.next = 12;
                  return _classPrivateFieldGet(_this5, _getBlockRegistry).call(_this5, (0, _util.u8aToU8a)(blockHash));

                case 12:
                  _context.t1 = _context.sent;
                  _context.next = 16;
                  break;

                case 15:
                  _context.t1 = {
                    registry: _classPrivateFieldGet(_this5, _registryDefault)
                  };

                case 16:
                  _ref5 = _context.t1;
                  registry = _ref5.registry;
                  params = _this5._formatInputs(registry, null, def, values); // only cache .at(<blockHash>) queries, e.g. where valid blockHash was supplied

                  _context.next = 21;
                  return _this5.provider.send(rpcName, params.map(function (p) {
                    return p.toJSON();
                  }), !!blockHash);

                case 21:
                  result = _context.sent;
                  return _context.abrupt("return", _this5._formatResult(isScale, registry, blockHash, method, def, params, result));

                case 23:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }));

        return function callWithRegistry(_x, _x2) {
          return _ref4.apply(this, arguments);
        };
      }();

      var creator = function creator(isScale) {
        return function () {
          for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {
            values[_key] = arguments[_key];
          }

          var isDelayed = isScale && hashIndex !== -1 && !!values[hashIndex];
          return new _rxjs.Observable(function (observer) {
            callWithRegistry(isScale, values).then(function (value) {
              observer.next(value);
              observer.complete();
            }).catch(function (error) {
              logErrorMessage(method, def, error);
              observer.error(error);
              observer.complete();
            });
            return function () {
              // delete old results from cache
              if (isScale) {
                var _memoized5;

                var _memoized;

                (_memoized = memoized) === null || _memoized === void 0 ? void 0 : (_memoized5 = _memoized).unmemoize.apply(_memoized5, values);
              } else {
                var _memoized2$raw;

                var _memoized2;

                (_memoized2 = memoized) === null || _memoized2 === void 0 ? void 0 : (_memoized2$raw = _memoized2.raw).unmemoize.apply(_memoized2$raw, values);
              }
            };
          }).pipe((0, _rxjs.publishReplay)(1), // create a Replay(1)
          isDelayed ? (0, _index.refCountDelay)() // Unsubscribe after delay
          : (0, _rxjs.refCount)());
        };
      };

      memoized = this._memomize(creator, def);
      return memoized;
    } // create a subscriptor, it subscribes once and resolves with the id as subscribe

  }, {
    key: "_createSubscriber",
    value: function _createSubscriber(_ref6, errorHandler) {
      var _this6 = this;

      var paramsJson = _ref6.paramsJson,
          subName = _ref6.subName,
          subType = _ref6.subType,
          update = _ref6.update;
      return new Promise(function (resolve, reject) {
        _this6.provider.subscribe(subType, subName, paramsJson, update).then(resolve).catch(function (error) {
          errorHandler(error);
          reject(error);
        });
      });
    }
  }, {
    key: "_createMethodSubscribe",
    value: function _createMethodSubscribe(section, method, def) {
      var _this7 = this;

      var _def$pubsub = _slicedToArray(def.pubsub, 3),
          updateType = _def$pubsub[0],
          subMethod = _def$pubsub[1],
          unsubMethod = _def$pubsub[2];

      var subName = "".concat(section, "_").concat(subMethod);
      var unsubName = "".concat(section, "_").concat(unsubMethod);
      var subType = "".concat(section, "_").concat(updateType);
      var memoized = null;

      var creator = function creator(isScale) {
        return function () {
          for (var _len2 = arguments.length, values = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            values[_key2] = arguments[_key2];
          }

          return new _rxjs.Observable(function (observer) {
            // Have at least an empty promise, as used in the unsubscribe
            var subscriptionPromise = Promise.resolve(null);

            var registry = _classPrivateFieldGet(_this7, _registryDefault);

            var errorHandler = function errorHandler(error) {
              logErrorMessage(method, def, error);
              observer.error(error);
            };

            try {
              var params = _this7._formatInputs(registry, null, def, values);

              var paramsJson = params.map(function (p) {
                return p.toJSON();
              });

              var update = function update(error, result) {
                if (error) {
                  logErrorMessage(method, def, error);
                  return;
                }

                try {
                  observer.next(_this7._formatResult(isScale, registry, null, method, def, params, result));
                } catch (error) {
                  observer.error(error);
                }
              };

              subscriptionPromise = _this7._createSubscriber({
                paramsJson: paramsJson,
                subName: subName,
                subType: subType,
                update: update
              }, errorHandler);
            } catch (error) {
              errorHandler(error);
            } // Teardown logic


            return function () {
              // Delete from cache, so old results don't hang around
              if (isScale) {
                var _memoized6;

                var _memoized3;

                (_memoized3 = memoized) === null || _memoized3 === void 0 ? void 0 : (_memoized6 = _memoized3).unmemoize.apply(_memoized6, values);
              } else {
                var _memoized4$raw;

                var _memoized4;

                (_memoized4 = memoized) === null || _memoized4 === void 0 ? void 0 : (_memoized4$raw = _memoized4.raw).unmemoize.apply(_memoized4$raw, values);
              } // Unsubscribe from provider


              subscriptionPromise.then(function (subscriptionId) {
                return (0, _util.isNull)(subscriptionId) ? Promise.resolve(false) : _this7.provider.unsubscribe(subType, unsubName, subscriptionId);
              }).catch(function (error) {
                return logErrorMessage(method, def, error);
              });
            };
          }).pipe((0, _index.drr)());
        };
      };

      memoized = this._memomize(creator, def);
      return memoized;
    }
  }, {
    key: "_formatInputs",
    value: function _formatInputs(registry, blockHash, def, inputs) {
      var reqArgCount = def.params.filter(function (_ref7) {
        var isOptional = _ref7.isOptional;
        return !isOptional;
      }).length;
      var optText = reqArgCount === def.params.length ? '' : " (".concat(def.params.length - reqArgCount, " optional)");

      if (inputs.length < reqArgCount || inputs.length > def.params.length) {
        throw new Error("Expected ".concat(def.params.length, " parameters").concat(optText, ", ").concat(inputs.length, " found instead"));
      }

      return inputs.map(function (input, index) {
        return registry.createTypeUnsafe(def.params[index].type, [input], {
          blockHash: blockHash
        });
      });
    }
  }, {
    key: "_formatOutput",
    value: function _formatOutput(registry, blockHash, method, rpc, params, result) {
      var _this8 = this;

      if (rpc.type === 'StorageData') {
        var key = params[0];
        return this._formatStorageData(registry, blockHash, key, result);
      } else if (rpc.type === 'StorageChangeSet') {
        var keys = params[0];
        return keys ? this._formatStorageSet(registry, result.block, keys, result.changes) : registry.createType('StorageChangeSet', result);
      } else if (rpc.type === 'Vec<StorageChangeSet>') {
        var mapped = result.map(function (_ref8) {
          var block = _ref8.block,
              changes = _ref8.changes;
          return [registry.createType('Hash', block), _this8._formatStorageSet(registry, block, params[0], changes)];
        }); // we only query at a specific block, not a range - flatten

        return method === 'queryStorageAt' ? mapped[0][1] : mapped;
      }

      return registry.createTypeUnsafe(rpc.type, [result], {
        blockHash: blockHash
      });
    }
  }, {
    key: "_formatStorageData",
    value: function _formatStorageData(registry, blockHash, key, value) {
      var isEmpty = (0, _util.isNull)(value); // we convert to Uint8Array since it maps to the raw encoding, all
      // data will be correctly encoded (incl. numbers, excl. :code)

      var input = isEmpty ? null : isTreatAsHex(key) ? value : (0, _util.u8aToU8a)(value);
      return this._newType(registry, blockHash, key, input, isEmpty);
    }
  }, {
    key: "_formatStorageSet",
    value: function _formatStorageSet(registry, blockHash, keys, changes) {
      var _this9 = this;

      // For StorageChangeSet, the changes has the [key, value] mappings
      var withCache = keys.length !== 1; // multiple return values (via state.storage subscription), decode the values
      // one at a time, all based on the query types. Three values can be returned -
      //   - Codec - There is a valid value, non-empty
      //   - null - The storage key is empty

      return keys.reduce(function (results, key, index) {
        results.push(_this9._formatStorageSetEntry(registry, blockHash, key, changes, withCache, index));
        return results;
      }, []);
    }
  }, {
    key: "_formatStorageSetEntry",
    value: function _formatStorageSetEntry(registry, blockHash, key, changes, withCache, entryIndex) {
      var hexKey = key.toHex();
      var found = changes.find(function (_ref9) {
        var _ref10 = _slicedToArray(_ref9, 1),
            key = _ref10[0];

        return key === hexKey;
      });
      var isNotFound = (0, _util.isUndefined)(found); // if we don't find the value, this is our fallback
      //   - in the case of an array of values, fill the hole from the cache
      //   - if a single result value, don't fill - it is not an update hole
      //   - fallback to an empty option in all cases

      if (isNotFound && withCache) {
        var cached = _classPrivateFieldGet(this, _storageCache).get(hexKey);

        if (cached) {
          return cached;
        }
      }

      var value = isNotFound ? null : found[1];
      var isEmpty = (0, _util.isNull)(value);
      var input = isEmpty || isTreatAsHex(key) ? value : (0, _util.u8aToU8a)(value);

      var codec = this._newType(registry, blockHash, key, input, isEmpty, entryIndex); // store the retrieved result - the only issue with this cache is that there is no
      // clearing of it, so very long running processes (not just a couple of hours, longer)
      // will increase memory beyond what is allowed.


      _classPrivateFieldGet(this, _storageCache).set(hexKey, codec);

      return codec;
    }
  }, {
    key: "_newType",
    value: function _newType(registry, blockHash, key, input, isEmpty) {
      var entryIndex = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : -1;
      // single return value (via state.getStorage), decode the value based on the
      // outputType that we have specified. Fallback to Raw on nothing
      var type = key.outputType || 'Raw';
      var meta = key.meta || EMPTY_META;
      var entryNum = entryIndex === -1 ? '' : " entry ".concat(entryIndex, ":");

      try {
        return registry.createTypeUnsafe(type, [isEmpty ? meta.fallback // For old-style Linkage, we add an empty linkage at the end
        ? type.includes('Linkage<') ? (0, _util.u8aConcat)((0, _util.hexToU8a)(meta.fallback.toHex()), new Uint8Array(2)) : (0, _util.hexToU8a)(meta.fallback.toHex()) : undefined : meta.modifier.isOptional ? registry.createTypeUnsafe(type, [input], {
          blockHash: blockHash,
          isPedantic: true
        }) : input], {
          blockHash: blockHash,
          isOptional: meta.modifier.isOptional,
          isPedantic: !meta.modifier.isOptional
        });
      } catch (error) {
        throw new Error("Unable to decode storage ".concat(key.section || 'unknown', ".").concat(key.method || 'unknown', ":").concat(entryNum, ": ").concat(error.message));
      }
    }
  }]);

  return RpcCore;
}();

exports.RpcCore = RpcCore;
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/types":"node_modules/@polkadot/types/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","./util/index.js":"node_modules/@polkadot/rpc-core/util/index.js","./packageInfo.js":"node_modules/@polkadot/rpc-core/packageInfo.js"}],"node_modules/@polkadot/rpc-core/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

require("./detectPackage.js");

var _bundle = require("./bundle.js");

Object.keys(_bundle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _bundle[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bundle[key];
    }
  });
});
},{"./detectPackage.js":"node_modules/@polkadot/rpc-core/detectPackage.js","./bundle.js":"node_modules/@polkadot/rpc-core/bundle.js"}],"node_modules/@polkadot/api-derive/util/approvalFlagsToBools.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.approvalFlagsToBools = approvalFlagsToBools;

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0

/** @internal */
function approvalFlagsToBools(flags) {
  var bools = [];

  for (var i = 0; i < flags.length; i++) {
    var str = flags[i].toString(2); // read from lowest bit to highest

    var _iterator = _createForOfIteratorHelper(str.split('').reverse()),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var bit = _step.value;
        bools.push(!!parseInt(bit, 10));
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  } // slice off trailing "false" values, as in substrate


  var lastApproval = bools.lastIndexOf(true);
  return lastApproval >= 0 ? bools.slice(0, lastApproval + 1) : [];
}
},{}],"node_modules/@polkadot/api-derive/util/cacheImpl.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deriveNoopCache = exports.deriveMapCache = void 0;

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
var mapCache = new Map();
var deriveMapCache = {
  del: function del(key) {
    mapCache.delete(key);
  },
  forEach: function forEach(cb) {
    var _iterator = _createForOfIteratorHelper(mapCache.entries()),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var _step$value = _slicedToArray(_step.value, 2),
            k = _step$value[0],
            v = _step$value[1];

        cb(k, v);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  },
  get: function get(key) {
    return mapCache.get(key);
  },
  set: function set(key, value) {
    mapCache.set(key, value);
  }
};
exports.deriveMapCache = deriveMapCache;
var deriveNoopCache = {
  del: function del() {
    return undefined;
  },
  forEach: function forEach() {
    return undefined;
  },
  get: function get() {
    return undefined;
  },
  set: function set(_, value) {
    return value;
  }
};
exports.deriveNoopCache = deriveNoopCache;
},{}],"node_modules/@polkadot/api-derive/util/cache.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deriveCache = void 0;
exports.setDeriveCache = setDeriveCache;

var _cacheImpl = require("./cacheImpl.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
var CHACHE_EXPIRY = 7 * (24 * 60) * (60 * 1000);
var deriveCache;
exports.deriveCache = deriveCache;

function wrapCache(keyStart, cache) {
  return {
    del: function del(partial) {
      return cache.del("".concat(keyStart).concat(partial));
    },
    forEach: cache.forEach,
    get: function get(partial) {
      var key = "".concat(keyStart).concat(partial);
      var cached = cache.get(key);

      if (cached) {
        cached.x = Date.now();
        cache.set(key, cached);
        return cached.v;
      }

      return undefined;
    },
    set: function set(partial, v) {
      cache.set("".concat(keyStart).concat(partial), {
        v: v,
        x: Date.now()
      });
    }
  };
}

function clearCache(cache) {
  // clear all expired values
  var now = Date.now();
  var all = [];
  cache.forEach(function (key, _ref) {
    var x = _ref.x;
    now - x > CHACHE_EXPIRY && all.push(key);
  }); // don't do delete inside loop, just in-case

  all.forEach(function (key) {
    return cache.del(key);
  });
}

function setDeriveCache() {
  var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  var cache = arguments.length > 1 ? arguments[1] : undefined;
  exports.deriveCache = deriveCache = cache ? wrapCache("derive:".concat(prefix, ":"), cache) : _cacheImpl.deriveNoopCache;

  if (cache) {
    clearCache(cache);
  }
}

setDeriveCache();
},{"./cacheImpl.js":"node_modules/@polkadot/api-derive/util/cacheImpl.js"}],"node_modules/@polkadot/api-derive/util/first.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.firstMemo = firstMemo;
exports.firstObservable = firstObservable;

var _rxjs = require("rxjs");

var _rpcCore = require("@polkadot/rpc-core");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function firstObservable(obs) {
  return obs.pipe((0, _rxjs.map)(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 1),
        a = _ref2[0];

    return a;
  }));
}

function firstMemo(fn) {
  return function (instanceId, api) {
    return (0, _rpcCore.memo)(instanceId, function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return firstObservable(fn.apply(void 0, [api].concat(args)));
    });
  };
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/rpc-core":"node_modules/@polkadot/rpc-core/index.js"}],"node_modules/@polkadot/api-derive/util/lazy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.lazyDeriveSection = lazyDeriveSection;

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
function lazyDeriveSection(result, section, getKeys, creator) {
  (0, _util.lazyMethod)(result, section, function () {
    return (0, _util.lazyMethods)({}, getKeys(section), function (method) {
      return creator(section, method);
    });
  });
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/api-derive/util/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  drr: true,
  memo: true
};
Object.defineProperty(exports, "drr", {
  enumerable: true,
  get: function () {
    return _rpcCore.drr;
  }
});
Object.defineProperty(exports, "memo", {
  enumerable: true,
  get: function () {
    return _rpcCore.memo;
  }
});

var _rpcCore = require("@polkadot/rpc-core");

var _approvalFlagsToBools = require("./approvalFlagsToBools.js");

Object.keys(_approvalFlagsToBools).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _approvalFlagsToBools[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _approvalFlagsToBools[key];
    }
  });
});

var _cache = require("./cache.js");

Object.keys(_cache).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _cache[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _cache[key];
    }
  });
});

var _cacheImpl = require("./cacheImpl.js");

Object.keys(_cacheImpl).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _cacheImpl[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _cacheImpl[key];
    }
  });
});

var _first = require("./first.js");

Object.keys(_first).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _first[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _first[key];
    }
  });
});

var _lazy = require("./lazy.js");

Object.keys(_lazy).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _lazy[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _lazy[key];
    }
  });
});
},{"@polkadot/rpc-core":"node_modules/@polkadot/rpc-core/index.js","./approvalFlagsToBools.js":"node_modules/@polkadot/api-derive/util/approvalFlagsToBools.js","./cache.js":"node_modules/@polkadot/api-derive/util/cache.js","./cacheImpl.js":"node_modules/@polkadot/api-derive/util/cacheImpl.js","./first.js":"node_modules/@polkadot/api-derive/util/first.js","./lazy.js":"node_modules/@polkadot/api-derive/util/lazy.js"}],"node_modules/@polkadot/api-derive/accounts/accountId.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.accountId = accountId;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _utilCrypto = require("@polkadot/util-crypto");

var _index = require("../util/index.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name accountId
 * @param {(Address | AccountId | AccountIndex | string | null)} address - An accounts address in various formats.
 * @description  An [[AccountId]]
 */
function accountId(instanceId, api) {
  return (0, _index.memo)(instanceId, function (address) {
    var decoded = (0, _util.isU8a)(address) ? address : (0, _utilCrypto.decodeAddress)((address || '').toString());

    if (decoded.length > 8) {
      return (0, _rxjs.of)(api.registry.createType('AccountId', decoded));
    }

    var accountIndex = api.registry.createType('AccountIndex', decoded);
    return api.derive.accounts.indexToId(accountIndex.toString()).pipe((0, _rxjs.map)(function (a) {
      return (0, _util.assertReturn)(a, 'Unable to retrieve accountId');
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/util-crypto":"node_modules/@polkadot/util-crypto/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/accounts/flags.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._flags = _flags;
exports.flags = flags;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _index = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function parseFlags(address, _ref2) {
  var _ref3 = _slicedToArray(_ref2, 5),
      electionsMembers = _ref3[0],
      councilMembers = _ref3[1],
      technicalCommitteeMembers = _ref3[2],
      societyMembers = _ref3[3],
      sudoKey = _ref3[4];

  var addrStr = address && address.toString();

  var isIncluded = function isIncluded(id) {
    return id.toString() === addrStr;
  };

  return {
    isCouncil: ((electionsMembers === null || electionsMembers === void 0 ? void 0 : electionsMembers.map(function (r) {
      return Array.isArray(r) ? r[0] : r.who;
    })) || councilMembers || []).some(isIncluded),
    isSociety: (societyMembers || []).some(isIncluded),
    isSudo: (sudoKey === null || sudoKey === void 0 ? void 0 : sudoKey.toString()) === addrStr,
    isTechCommittee: (technicalCommitteeMembers || []).some(isIncluded)
  };
}

function _flags(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    var _ref, _api$query$council, _api$query$technicalC, _api$query$society, _api$query$sudo;

    var results = [undefined, [], [], [], undefined];
    var calls = [(_ref = api.query.phragmenElection || api.query.electionsPhragmen || api.query.elections) === null || _ref === void 0 ? void 0 : _ref.members, (_api$query$council = api.query.council) === null || _api$query$council === void 0 ? void 0 : _api$query$council.members, (_api$query$technicalC = api.query.technicalCommittee) === null || _api$query$technicalC === void 0 ? void 0 : _api$query$technicalC.members, (_api$query$society = api.query.society) === null || _api$query$society === void 0 ? void 0 : _api$query$society.members, (_api$query$sudo = api.query.sudo) === null || _api$query$sudo === void 0 ? void 0 : _api$query$sudo.key];
    var filtered = calls.filter(function (c) {
      return c;
    });

    if (!filtered.length) {
      return (0, _rxjs.of)(results);
    }

    return api.queryMulti(filtered).pipe((0, _rxjs.map)(function (values) {
      var resultIndex = -1;

      for (var i = 0; i < calls.length; i++) {
        if ((0, _util.isFunction)(calls[i])) {
          results[i] = values[++resultIndex];
        }
      }

      return results;
    }));
  });
}
/**
 * @name info
 * @description Returns account membership flags
 */


function flags(instanceId, api) {
  return (0, _index.memo)(instanceId, function (address) {
    return api.derive.accounts._flags().pipe((0, _rxjs.map)(function (r) {
      return parseFlags(address, r);
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/accounts/idAndIndex.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.idAndIndex = idAndIndex;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _utilCrypto = require("@polkadot/util-crypto");

var _index = require("../util/index.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name idAndIndex
 * @param {(Address | AccountId | AccountIndex | Uint8Array | string | null)} address - An accounts address in various formats.
 * @description  An array containing the [[AccountId]] and [[AccountIndex]] as optional values.
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.accounts.idAndIndex('F7Hs', ([id, ix]) => {
 *   console.log(`AccountId #${id} with corresponding AccountIndex ${ix}`);
 * });
 * ```
 */
function idAndIndex(instanceId, api) {
  return (0, _index.memo)(instanceId, function (address) {
    try {
      // yes, this can fail, don't care too much, catch will catch it
      var decoded = (0, _util.isU8a)(address) ? address : (0, _utilCrypto.decodeAddress)((address || '').toString());

      if (decoded.length > 8) {
        var accountId = api.registry.createType('AccountId', decoded);
        return api.derive.accounts.idToIndex(accountId).pipe((0, _rxjs.map)(function (accountIndex) {
          return [accountId, accountIndex];
        }));
      }

      var accountIndex = api.registry.createType('AccountIndex', decoded);
      return api.derive.accounts.indexToId(accountIndex.toString()).pipe((0, _rxjs.map)(function (accountId) {
        return [accountId, accountIndex];
      }));
    } catch (error) {
      return (0, _rxjs.of)([undefined, undefined]);
    }
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/util-crypto":"node_modules/@polkadot/util-crypto/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/accounts/idToIndex.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.idToIndex = idToIndex;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name idToIndex
 * @param {( AccountId | string )} accountId - An accounts Id in different formats.
 * @returns Returns the corresponding AccountIndex.
 * @example
 * <BR>
 *
 * ```javascript
 * const ALICE = '5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY';
 * api.derive.accounts.idToIndex(ALICE, (accountIndex) => {
 *   console.log(`The AccountIndex of ${ALICE} is ${accountIndex}`);
 * });
 * ```
 */
function idToIndex(instanceId, api) {
  return (0, _index.memo)(instanceId, function (accountId) {
    return api.derive.accounts.indexes().pipe((0, _rxjs.map)(function (indexes) {
      return (indexes || {})[accountId.toString()];
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/accounts/identity.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._identity = _identity;
exports.hasIdentity = void 0;
exports.hasIdentityMulti = hasIdentityMulti;
exports.identity = identity;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _index = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var UNDEF_HEX = {
  toHex: function toHex() {
    return undefined;
  }
};

function dataAsString(data) {
  return data.isRaw ? (0, _util.u8aToString)(data.asRaw.toU8a(true)) : data.isNone ? undefined : data.toHex();
}

function extractOther(additional) {
  return additional.reduce(function (other, _ref) {
    var _ref2 = _slicedToArray(_ref, 2),
        _key = _ref2[0],
        _value = _ref2[1];

    var key = dataAsString(_key);
    var value = dataAsString(_value);

    if (key && value) {
      other[key] = value;
    }

    return other;
  }, {});
}

function extractIdentity(identityOfOpt, superOf) {
  if (!(identityOfOpt !== null && identityOfOpt !== void 0 && identityOfOpt.isSome)) {
    return {
      judgements: []
    };
  }

  var _identityOfOpt$unwrap = identityOfOpt.unwrap(),
      info = _identityOfOpt$unwrap.info,
      judgements = _identityOfOpt$unwrap.judgements;

  var topDisplay = dataAsString(info.display);
  return {
    display: superOf && dataAsString(superOf[1]) || topDisplay,
    displayParent: superOf && topDisplay,
    email: dataAsString(info.email),
    image: dataAsString(info.image),
    judgements: judgements,
    legal: dataAsString(info.legal),
    other: extractOther(info.additional),
    parent: superOf && superOf[0],
    pgp: info.pgpFingerprint.unwrapOr(UNDEF_HEX).toHex(),
    riot: dataAsString(info.riot),
    twitter: dataAsString(info.twitter),
    web: dataAsString(info.web)
  };
}

function getParent(api, identityOfOpt, superOfOpt) {
  if (identityOfOpt !== null && identityOfOpt !== void 0 && identityOfOpt.isSome) {
    // this identity has something set
    return (0, _rxjs.of)([identityOfOpt, undefined]);
  } else if (superOfOpt !== null && superOfOpt !== void 0 && superOfOpt.isSome) {
    var superOf = superOfOpt.unwrap();
    return (0, _rxjs.combineLatest)([api.derive.accounts._identity(superOf[0]).pipe((0, _rxjs.map)(function (_ref3) {
      var _ref4 = _slicedToArray(_ref3, 1),
          info = _ref4[0];

      return info;
    })), (0, _rxjs.of)(superOf)]);
  } // nothing of value returned


  return (0, _rxjs.of)([undefined, undefined]);
}

function _identity(instanceId, api) {
  return (0, _index.memo)(instanceId, function (accountId) {
    var _api$query$identity;

    return accountId && (_api$query$identity = api.query.identity) !== null && _api$query$identity !== void 0 && _api$query$identity.identityOf ? (0, _rxjs.combineLatest)([api.query.identity.identityOf(accountId), api.query.identity.superOf(accountId)]) : (0, _rxjs.of)([undefined, undefined]);
  });
}
/**
 * @name identity
 * @description Returns identity info for an account
 */


function identity(instanceId, api) {
  return (0, _index.memo)(instanceId, function (accountId) {
    return api.derive.accounts._identity(accountId).pipe((0, _rxjs.switchMap)(function (_ref5) {
      var _ref6 = _slicedToArray(_ref5, 2),
          identityOfOpt = _ref6[0],
          superOfOpt = _ref6[1];

      return getParent(api, identityOfOpt, superOfOpt);
    }), (0, _rxjs.map)(function (_ref7) {
      var _ref8 = _slicedToArray(_ref7, 2),
          identityOfOpt = _ref8[0],
          superOf = _ref8[1];

      return extractIdentity(identityOfOpt, superOf);
    }));
  });
}

var hasIdentity = (0, _index.firstMemo)(function (api, accountId) {
  return api.derive.accounts.hasIdentityMulti([accountId]);
});
exports.hasIdentity = hasIdentity;

function hasIdentityMulti(instanceId, api) {
  return (0, _index.memo)(instanceId, function (accountIds) {
    var _api$query$identity2;

    return (_api$query$identity2 = api.query.identity) !== null && _api$query$identity2 !== void 0 && _api$query$identity2.identityOf ? (0, _rxjs.combineLatest)([api.query.identity.identityOf.multi(accountIds), api.query.identity.superOf.multi(accountIds)]).pipe((0, _rxjs.map)(function (_ref9) {
      var _ref10 = _slicedToArray(_ref9, 2),
          identities = _ref10[0],
          supers = _ref10[1];

      return identities.map(function (identityOfOpt, index) {
        var superOfOpt = supers[index];
        var parentId = superOfOpt && superOfOpt.isSome ? superOfOpt.unwrap()[0].toString() : undefined;
        var display;

        if (identityOfOpt && identityOfOpt.isSome) {
          var value = dataAsString(identityOfOpt.unwrap().info.display);

          if (value && !(0, _util.isHex)(value)) {
            display = value;
          }
        }

        return {
          display: display,
          hasIdentity: !!(display || parentId),
          parentId: parentId
        };
      });
    })) : (0, _rxjs.of)(accountIds.map(function () {
      return {
        hasIdentity: false
      };
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/accounts/indexToId.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.indexToId = indexToId;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name indexToId
 * @param {( AccountIndex | string )} accountIndex - An accounts index in different formats.
 * @returns Returns the corresponding AccountId.
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.accounts.indexToId('F7Hs', (accountId) => {
 *   console.log(`The AccountId of F7Hs is ${accountId}`);
 * });
 * ```
 */
function indexToId(instanceId, api) {
  return (0, _index.memo)(instanceId, function (accountIndex) {
    return api.query.indices ? api.query.indices.accounts(accountIndex).pipe((0, _rxjs.map)(function (optResult) {
      return optResult.unwrapOr([])[0];
    })) : (0, _rxjs.of)(undefined);
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/accounts/indexes.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.indexes = indexes;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var indicesCache = null;

function queryAccounts(api) {
  return api.query.indices.accounts.entries().pipe((0, _rxjs.map)(function (entries) {
    return entries.reduce(function (indexes, _ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          key = _ref2[0],
          idOpt = _ref2[1];

      if (idOpt.isSome) {
        indexes[idOpt.unwrap()[0].toString()] = api.registry.createType('AccountIndex', key.args[0]);
      }

      return indexes;
    }, {});
  }));
}
/**
 * @name indexes
 * @returns Returns all the indexes on the system.
 * @description This is an unwieldly query since it loops through
 * all of the enumsets and returns all of the values found. This could be up to 32k depending
 * on the number of active accounts in the system
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.accounts.indexes((indexes) => {
 *   console.log('All existing AccountIndexes', indexes);
 * });
 * ```
 */


function indexes(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    return indicesCache ? (0, _rxjs.of)(indicesCache) : (api.query.indices ? queryAccounts(api).pipe((0, _rxjs.startWith)({})) : (0, _rxjs.of)({})).pipe((0, _rxjs.map)(function (indices) {
      indicesCache = indices;
      return indices;
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/accounts/info.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.info = info;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _index = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function retrieveNick(api, accountId) {
  var _api$query$nicks;

  return (accountId && (_api$query$nicks = api.query.nicks) !== null && _api$query$nicks !== void 0 && _api$query$nicks.nameOf ? api.query.nicks.nameOf(accountId) : (0, _rxjs.of)(undefined)).pipe((0, _rxjs.map)(function (nameOf) {
    return nameOf !== null && nameOf !== void 0 && nameOf.isSome ? (0, _util.u8aToString)(nameOf.unwrap()[0]).substring(0, api.consts.nicks.maxLength.toNumber()) : undefined;
  }));
}
/**
 * @name info
 * @description Returns aux. info with regards to an account, current that includes the accountId, accountIndex and nickname
 */


function info(instanceId, api) {
  return (0, _index.memo)(instanceId, function (address) {
    return api.derive.accounts.idAndIndex(address).pipe((0, _rxjs.switchMap)(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          accountId = _ref2[0],
          accountIndex = _ref2[1];

      return (0, _rxjs.combineLatest)([(0, _rxjs.of)({
        accountId: accountId,
        accountIndex: accountIndex
      }), api.derive.accounts.identity(accountId), retrieveNick(api, accountId)]);
    }), (0, _rxjs.map)(function (_ref3) {
      var _ref4 = _slicedToArray(_ref3, 3),
          _ref4$ = _ref4[0],
          accountId = _ref4$.accountId,
          accountIndex = _ref4$.accountIndex,
          identity = _ref4[1],
          nickname = _ref4[2];

      return {
        accountId: accountId,
        accountIndex: accountIndex,
        identity: identity,
        nickname: nickname
      };
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/accounts/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _accountId = require("./accountId.js");

Object.keys(_accountId).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _accountId[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _accountId[key];
    }
  });
});

var _flags = require("./flags.js");

Object.keys(_flags).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _flags[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _flags[key];
    }
  });
});

var _idAndIndex = require("./idAndIndex.js");

Object.keys(_idAndIndex).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _idAndIndex[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _idAndIndex[key];
    }
  });
});

var _idToIndex = require("./idToIndex.js");

Object.keys(_idToIndex).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _idToIndex[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _idToIndex[key];
    }
  });
});

var _identity = require("./identity.js");

Object.keys(_identity).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _identity[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _identity[key];
    }
  });
});

var _indexToId = require("./indexToId.js");

Object.keys(_indexToId).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _indexToId[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _indexToId[key];
    }
  });
});

var _indexes = require("./indexes.js");

Object.keys(_indexes).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _indexes[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _indexes[key];
    }
  });
});

var _info = require("./info.js");

Object.keys(_info).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _info[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _info[key];
    }
  });
});
},{"./accountId.js":"node_modules/@polkadot/api-derive/accounts/accountId.js","./flags.js":"node_modules/@polkadot/api-derive/accounts/flags.js","./idAndIndex.js":"node_modules/@polkadot/api-derive/accounts/idAndIndex.js","./idToIndex.js":"node_modules/@polkadot/api-derive/accounts/idToIndex.js","./identity.js":"node_modules/@polkadot/api-derive/accounts/identity.js","./indexToId.js":"node_modules/@polkadot/api-derive/accounts/indexToId.js","./indexes.js":"node_modules/@polkadot/api-derive/accounts/indexes.js","./info.js":"node_modules/@polkadot/api-derive/accounts/info.js"}],"node_modules/@polkadot/api-derive/bagsList/get.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._getIds = _getIds;
exports.all = all;
exports.get = get;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _index = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function orderBags(ids, bags) {
  var sorted = ids.map(function (id, index) {
    return {
      bag: bags[index].unwrapOr(null),
      id: id,
      key: id.toString()
    };
  }).sort(function (a, b) {
    return b.id.cmp(a.id);
  }).map(function (base, index) {
    return _objectSpread(_objectSpread({}, base), {}, {
      bagLower: _util.BN_ZERO,
      bagUpper: base.id,
      index: index
    });
  });
  var max = sorted.length - 1;
  return sorted.map(function (entry, index) {
    return index === max ? entry // We could probably use a .add(BN_ONE) here
    : _objectSpread(_objectSpread({}, entry), {}, {
      bagLower: sorted[index + 1].bagUpper
    });
  });
}

function _getIds(instanceId, api) {
  return (0, _index.memo)(instanceId, function (_ids) {
    var ids = _ids.map(function (id) {
      return (0, _util.bnToBn)(id);
    });

    return ids.length ? (api.query.voterList || api.query.bagsList).listBags.multi(ids).pipe((0, _rxjs.map)(function (bags) {
      return orderBags(ids, bags);
    })) : (0, _rxjs.of)([]);
  });
}

function all(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    return (api.query.voterList || api.query.bagsList).listBags.keys().pipe((0, _rxjs.switchMap)(function (keys) {
      return api.derive.bagsList._getIds(keys.map(function (_ref) {
        var _ref$args = _slicedToArray(_ref.args, 1),
            id = _ref$args[0];

        return id;
      }));
    }), (0, _rxjs.map)(function (list) {
      return list.filter(function (_ref2) {
        var bag = _ref2.bag;
        return bag;
      });
    }));
  });
}

function get(instanceId, api) {
  return (0, _index.memo)(instanceId, function (id) {
    return api.derive.bagsList._getIds([(0, _util.bnToBn)(id)]).pipe((0, _rxjs.map)(function (bags) {
      return bags[0];
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/bagsList/getExpanded.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.expand = expand;
exports.getExpanded = getExpanded;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function expand(instanceId, api) {
  return (0, _index.memo)(instanceId, function (bag) {
    return api.derive.bagsList.listNodes(bag.bag).pipe((0, _rxjs.map)(function (nodes) {
      return _objectSpread(_objectSpread({}, bag), {}, {
        nodes: nodes
      });
    }));
  });
}

function getExpanded(instanceId, api) {
  return (0, _index.memo)(instanceId, function (id) {
    return api.derive.bagsList.get(id).pipe((0, _rxjs.switchMap)(function (bag) {
      return api.derive.bagsList.expand(bag);
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/bagsList/listNodes.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.listNodes = listNodes;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _index = require("../util/index.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
function traverseLinks(api, head) {
  var subject = new _rxjs.BehaviorSubject(head);
  return subject.pipe((0, _rxjs.switchMap)(function (account) {
    return (api.query.voterList || api.query.bagsList).listNodes(account);
  }), (0, _rxjs.tap)(function (node) {
    (0, _util.nextTick)(function () {
      node.isSome && node.value.next.isSome ? subject.next(node.unwrap().next.unwrap()) : subject.complete();
    });
  }), (0, _rxjs.toArray)(), // toArray since we want to startSubject to be completed
  (0, _rxjs.map)(function (all) {
    return all.map(function (o) {
      return o.unwrap();
    });
  }));
}

function listNodes(instanceId, api) {
  return (0, _index.memo)(instanceId, function (bag) {
    return bag && bag.head.isSome ? traverseLinks(api, bag.head.unwrap()) : (0, _rxjs.of)([]);
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/bagsList/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _get = require("./get.js");

Object.keys(_get).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _get[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _get[key];
    }
  });
});

var _getExpanded = require("./getExpanded.js");

Object.keys(_getExpanded).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _getExpanded[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _getExpanded[key];
    }
  });
});

var _listNodes = require("./listNodes.js");

Object.keys(_listNodes).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _listNodes[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _listNodes[key];
    }
  });
});
},{"./get.js":"node_modules/@polkadot/api-derive/bagsList/get.js","./getExpanded.js":"node_modules/@polkadot/api-derive/bagsList/getExpanded.js","./listNodes.js":"node_modules/@polkadot/api-derive/bagsList/listNodes.js"}],"node_modules/@polkadot/api-derive/balances/all.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.all = all;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _index = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var VESTING_ID = '0x76657374696e6720';

function calcLocked(api, bestNumber, locks) {
  var lockedBalance = api.registry.createType('Balance');
  var lockedBreakdown = [];
  var vestingLocked = api.registry.createType('Balance');
  var allLocked = false;

  if (Array.isArray(locks)) {
    // only get the locks that are valid until passed the current block
    lockedBreakdown = locks.filter(function (_ref) {
      var until = _ref.until;
      return !until || bestNumber && until.gt(bestNumber);
    });
    allLocked = lockedBreakdown.some(function (_ref2) {
      var amount = _ref2.amount;
      return amount && amount.isMax();
    });
    vestingLocked = api.registry.createType('Balance', lockedBreakdown.filter(function (_ref3) {
      var id = _ref3.id;
      return id.eq(VESTING_ID);
    }).reduce(function (result, _ref4) {
      var amount = _ref4.amount;
      return result.iadd(amount);
    }, new _util.BN(0))); // get the maximum of the locks according to https://github.com/paritytech/substrate/blob/master/srml/balances/src/lib.rs#L699

    var notAll = lockedBreakdown.filter(function (_ref5) {
      var amount = _ref5.amount;
      return amount && !amount.isMax();
    });

    if (notAll.length) {
      lockedBalance = api.registry.createType('Balance', _util.bnMax.apply(void 0, _toConsumableArray(notAll.map(function (_ref6) {
        var amount = _ref6.amount;
        return amount;
      }))));
    }
  }

  return {
    allLocked: allLocked,
    lockedBalance: lockedBalance,
    lockedBreakdown: lockedBreakdown,
    vestingLocked: vestingLocked
  };
}

function calcShared(api, bestNumber, data, locks) {
  var _calcLocked = calcLocked(api, bestNumber, locks),
      allLocked = _calcLocked.allLocked,
      lockedBalance = _calcLocked.lockedBalance,
      lockedBreakdown = _calcLocked.lockedBreakdown,
      vestingLocked = _calcLocked.vestingLocked;

  return _objectSpread(_objectSpread({}, data), {}, {
    availableBalance: api.registry.createType('Balance', allLocked ? 0 : (0, _util.bnMax)(new _util.BN(0), data.freeBalance.sub(lockedBalance))),
    lockedBalance: lockedBalance,
    lockedBreakdown: lockedBreakdown,
    vestingLocked: vestingLocked
  });
}

function calcVesting(bestNumber, shared, _vesting) {
  // Calculate the vesting balances,
  //  - offset = balance locked at startingBlock
  //  - perBlock is the unlock amount
  var vesting = _vesting || [];
  var isVesting = !shared.vestingLocked.isZero();
  var vestedBalances = vesting.map(function (_ref7) {
    var locked = _ref7.locked,
        perBlock = _ref7.perBlock,
        startingBlock = _ref7.startingBlock;
    return bestNumber.gt(startingBlock) ? (0, _util.bnMin)(locked, perBlock.mul(bestNumber.sub(startingBlock))) : _util.BN_ZERO;
  });
  var vestedBalance = vestedBalances.reduce(function (all, value) {
    return all.iadd(value);
  }, new _util.BN(0));
  var vestingTotal = vesting.reduce(function (all, _ref8) {
    var locked = _ref8.locked;
    return all.iadd(locked);
  }, new _util.BN(0));
  return {
    isVesting: isVesting,
    vestedBalance: vestedBalance,
    vestedClaimable: isVesting ? shared.vestingLocked.sub(vestingTotal.sub(vestedBalance)) : _util.BN_ZERO,
    vesting: vesting.map(function (_ref9, index) {
      var locked = _ref9.locked,
          perBlock = _ref9.perBlock,
          startingBlock = _ref9.startingBlock;
      return {
        endBlock: locked.div(perBlock).iadd(startingBlock),
        locked: locked,
        perBlock: perBlock,
        startingBlock: startingBlock,
        vested: vestedBalances[index]
      };
    }).filter(function (_ref10) {
      var locked = _ref10.locked;
      return !locked.isZero();
    }),
    vestingTotal: vestingTotal
  };
}

function calcBalances(api, _ref11) {
  var _ref12 = _slicedToArray(_ref11, 3),
      data = _ref12[0],
      _ref12$ = _slicedToArray(_ref12[1], 3),
      vesting = _ref12$[0],
      allLocks = _ref12$[1],
      namedReserves = _ref12$[2],
      bestNumber = _ref12[2];

  var shared = calcShared(api, bestNumber, data, allLocks[0]);
  return _objectSpread(_objectSpread(_objectSpread({}, shared), calcVesting(bestNumber, shared, vesting)), {}, {
    accountId: data.accountId,
    accountNonce: data.accountNonce,
    additional: allLocks.filter(function (_, index) {
      return index !== 0;
    }).map(function (l, index) {
      return calcShared(api, bestNumber, data.additional[index], l);
    }),
    namedReserves: namedReserves
  });
} // old


function queryOld(api, accountId) {
  return (0, _rxjs.combineLatest)([api.query.balances.locks(accountId), api.query.balances.vesting(accountId)]).pipe((0, _rxjs.map)(function (_ref13) {
    var _ref14 = _slicedToArray(_ref13, 2),
        locks = _ref14[0],
        optVesting = _ref14[1];

    var vestingNew = null;

    if (optVesting.isSome) {
      var _optVesting$unwrap = optVesting.unwrap(),
          locked = _optVesting$unwrap.offset,
          perBlock = _optVesting$unwrap.perBlock,
          startingBlock = _optVesting$unwrap.startingBlock;

      vestingNew = api.registry.createType('VestingInfo', {
        locked: locked,
        perBlock: perBlock,
        startingBlock: startingBlock
      });
    }

    return [vestingNew ? [vestingNew] : null, [locks], []];
  }));
}

var isNonNullable = function isNonNullable(nullable) {
  return !!nullable;
};

function createCalls(calls) {
  return [calls.map(function (c) {
    return !c;
  }), calls.filter(isNonNullable)];
} // current (balances, vesting)


function queryCurrent(api, accountId) {
  var balanceInstances = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ['balances'];

  var _api$query$vesting;

  var _createCalls = createCalls(balanceInstances.map(function (m) {
    var _m, _api$query;

    return ((_m = api.derive[m]) === null || _m === void 0 ? void 0 : _m.customLocks) || ((_api$query = api.query[m]) === null || _api$query === void 0 ? void 0 : _api$query.locks);
  })),
      _createCalls2 = _slicedToArray(_createCalls, 2),
      lockEmpty = _createCalls2[0],
      lockQueries = _createCalls2[1];

  var _createCalls3 = createCalls(balanceInstances.map(function (m) {
    var _api$query2;

    return (_api$query2 = api.query[m]) === null || _api$query2 === void 0 ? void 0 : _api$query2.reserves;
  })),
      _createCalls4 = _slicedToArray(_createCalls3, 2),
      reserveEmpty = _createCalls4[0],
      reserveQueries = _createCalls4[1];

  return (0, _rxjs.combineLatest)([(_api$query$vesting = api.query.vesting) !== null && _api$query$vesting !== void 0 && _api$query$vesting.vesting ? api.query.vesting.vesting(accountId) : (0, _rxjs.of)(api.registry.createType('Option<VestingInfo>')), lockQueries.length ? (0, _rxjs.combineLatest)(lockQueries.map(function (c) {
    return c(accountId);
  })) : (0, _rxjs.of)([]), reserveQueries.length ? (0, _rxjs.combineLatest)(reserveQueries.map(function (c) {
    return c(accountId);
  })) : (0, _rxjs.of)([])]).pipe((0, _rxjs.map)(function (_ref15) {
    var _ref16 = _slicedToArray(_ref15, 3),
        opt = _ref16[0],
        locks = _ref16[1],
        reserves = _ref16[2];

    var offsetLock = -1;
    var offsetReserve = -1;
    var vesting = opt.unwrapOr(null);
    return [vesting ? Array.isArray(vesting) ? vesting : [vesting] : null, lockEmpty.map(function (e) {
      return e ? api.registry.createType('Vec<BalanceLock>') : locks[++offsetLock];
    }), reserveEmpty.map(function (e) {
      return e ? api.registry.createType('Vec<PalletBalancesReserveData>') : reserves[++offsetReserve];
    })];
  }));
}
/**
 * @name all
 * @param {( AccountIndex | AccountId | Address | string )} address - An accounts Id in different formats.
 * @returns An object containing the results of various balance queries
 * @example
 * <BR>
 *
 * ```javascript
 * const ALICE = 'F7Hs';
 *
 * api.derive.balances.all(ALICE, ({ accountId, lockedBalance }) => {
 *   console.log(`The account ${accountId} has a locked balance ${lockedBalance} units.`);
 * });
 * ```
 */


function all(instanceId, api) {
  var balanceInstances = api.registry.getModuleInstances(api.runtimeVersion.specName.toString(), 'balances');
  return (0, _index.memo)(instanceId, function (address) {
    var _api$query$system, _api$query$balances;

    return (0, _rxjs.combineLatest)([api.derive.balances.account(address), (0, _util.isFunction)((_api$query$system = api.query.system) === null || _api$query$system === void 0 ? void 0 : _api$query$system.account) || (0, _util.isFunction)((_api$query$balances = api.query.balances) === null || _api$query$balances === void 0 ? void 0 : _api$query$balances.account) ? queryCurrent(api, address, balanceInstances) : queryOld(api, address)]).pipe((0, _rxjs.switchMap)(function (_ref17) {
      var _ref18 = _slicedToArray(_ref17, 2),
          account = _ref18[0],
          locks = _ref18[1];

      return (0, _rxjs.combineLatest)([(0, _rxjs.of)(account), (0, _rxjs.of)(locks), api.derive.chain.bestNumber()]);
    }), (0, _rxjs.map)(function (result) {
      return calcBalances(api, result);
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/balances/account.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.account = account;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _index = require("../util/index.js");

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest(); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function zeroBalance(api) {
  return api.registry.createType('Balance');
}

function getBalance(api, _ref) {
  var _ref2 = _slicedToArray(_ref, 4),
      freeBalance = _ref2[0],
      reservedBalance = _ref2[1],
      frozenFee = _ref2[2],
      frozenMisc = _ref2[3];

  var votingBalance = api.registry.createType('Balance', freeBalance.toBn());
  return {
    freeBalance: freeBalance,
    frozenFee: frozenFee,
    frozenMisc: frozenMisc,
    reservedBalance: reservedBalance,
    votingBalance: votingBalance
  };
}

function calcBalances(api, _ref3) {
  var _ref4 = _slicedToArray(_ref3, 2),
      accountId = _ref4[0],
      _ref4$ = _slicedToArray(_ref4[1], 2),
      accountNonce = _ref4$[0],
      _ref4$$ = _toArray(_ref4$[1]),
      primary = _ref4$$[0],
      additional = _ref4$$.slice(1);

  return _objectSpread({
    accountId: accountId,
    accountNonce: accountNonce,
    additional: additional.map(function (b) {
      return getBalance(api, b);
    })
  }, getBalance(api, primary));
} // old


function queryBalancesFree(api, accountId) {
  return (0, _rxjs.combineLatest)([api.query.balances.freeBalance(accountId), api.query.balances.reservedBalance(accountId), api.query.system.accountNonce(accountId)]).pipe((0, _rxjs.map)(function (_ref5) {
    var _ref6 = _slicedToArray(_ref5, 3),
        freeBalance = _ref6[0],
        reservedBalance = _ref6[1],
        accountNonce = _ref6[2];

    return [accountNonce, [[freeBalance, reservedBalance, zeroBalance(api), zeroBalance(api)]]];
  }));
}

function queryNonceOnly(api, accountId) {
  var fill = function fill(nonce) {
    return [nonce, [[zeroBalance(api), zeroBalance(api), zeroBalance(api), zeroBalance(api)]]];
  };

  return (0, _util.isFunction)(api.query.system.account) ? api.query.system.account(accountId).pipe((0, _rxjs.map)(function (_ref7) {
    var nonce = _ref7.nonce;
    return fill(nonce);
  })) : (0, _util.isFunction)(api.query.system.accountNonce) ? api.query.system.accountNonce(accountId).pipe((0, _rxjs.map)(function (nonce) {
    return fill(nonce);
  })) : (0, _rxjs.of)(fill(api.registry.createType('Index')));
}

function queryBalancesAccount(api, accountId) {
  var modules = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ['balances'];
  var balances = modules.map(function (m) {
    var _m, _api$query$m;

    return ((_m = api.derive[m]) === null || _m === void 0 ? void 0 : _m.customAccount) || ((_api$query$m = api.query[m]) === null || _api$query$m === void 0 ? void 0 : _api$query$m.account);
  }).filter(function (q) {
    return (0, _util.isFunction)(q);
  });

  var extract = function extract(nonce, data) {
    return [nonce, data.map(function (_ref8) {
      var feeFrozen = _ref8.feeFrozen,
          free = _ref8.free,
          miscFrozen = _ref8.miscFrozen,
          reserved = _ref8.reserved;
      return [free, reserved, feeFrozen, miscFrozen];
    })];
  }; // NOTE this is for the first case where we do have instances specified


  return balances.length ? (0, _util.isFunction)(api.query.system.account) ? (0, _rxjs.combineLatest)([api.query.system.account(accountId)].concat(_toConsumableArray(balances.map(function (c) {
    return c(accountId);
  })))).pipe((0, _rxjs.map)(function (_ref9) {
    var _ref10 = _toArray(_ref9),
        nonce = _ref10[0].nonce,
        balances = _ref10.slice(1);

    return extract(nonce, balances);
  })) : (0, _rxjs.combineLatest)([api.query.system.accountNonce(accountId)].concat(_toConsumableArray(balances.map(function (c) {
    return c(accountId);
  })))).pipe((0, _rxjs.map)(function (_ref11) {
    var _ref12 = _toArray(_ref11),
        nonce = _ref12[0],
        balances = _ref12.slice(1);

    return extract(nonce, balances);
  })) : queryNonceOnly(api, accountId);
}

function querySystemAccount(api, accountId) {
  // AccountInfo is current, support old, eg. Edgeware
  return api.query.system.account(accountId).pipe((0, _rxjs.map)(function (infoOrTuple) {
    var data = infoOrTuple.nonce ? infoOrTuple.data : infoOrTuple[1];
    var nonce = infoOrTuple.nonce || infoOrTuple[0];

    if (!data || data.isEmpty) {
      return [nonce, [[zeroBalance(api), zeroBalance(api), zeroBalance(api), zeroBalance(api)]]];
    }

    var feeFrozen = data.feeFrozen,
        free = data.free,
        miscFrozen = data.miscFrozen,
        reserved = data.reserved;
    return [nonce, [[free, reserved, feeFrozen, miscFrozen]]];
  }));
}
/**
 * @name account
 * @param {( AccountIndex | AccountId | Address | string )} address - An accounts Id in different formats.
 * @returns An object containing the results of various balance queries
 * @example
 * <BR>
 *
 * ```javascript
 * const ALICE = 'F7Hs';
 *
 * api.derive.balances.all(ALICE, ({ accountId, lockedBalance }) => {
 *   console.log(`The account ${accountId} has a locked balance ${lockedBalance} units.`);
 * });
 * ```
 */


function account(instanceId, api) {
  var balanceInstances = api.registry.getModuleInstances(api.runtimeVersion.specName.toString(), 'balances');
  return (0, _index.memo)(instanceId, function (address) {
    return api.derive.accounts.accountId(address).pipe((0, _rxjs.switchMap)(function (accountId) {
      var _api$query$system, _api$query$balances, _api$query$balances2;

      return accountId ? (0, _rxjs.combineLatest)([(0, _rxjs.of)(accountId), balanceInstances ? queryBalancesAccount(api, accountId, balanceInstances) : (0, _util.isFunction)((_api$query$system = api.query.system) === null || _api$query$system === void 0 ? void 0 : _api$query$system.account) ? querySystemAccount(api, accountId) : (0, _util.isFunction)((_api$query$balances = api.query.balances) === null || _api$query$balances === void 0 ? void 0 : _api$query$balances.account) ? queryBalancesAccount(api, accountId) : (0, _util.isFunction)((_api$query$balances2 = api.query.balances) === null || _api$query$balances2 === void 0 ? void 0 : _api$query$balances2.freeBalance) ? queryBalancesFree(api, accountId) : queryNonceOnly(api, accountId)]) : (0, _rxjs.of)([api.registry.createType('AccountId'), [api.registry.createType('Index'), [[zeroBalance(api), zeroBalance(api), zeroBalance(api), zeroBalance(api)]]]]);
    }), (0, _rxjs.map)(function (result) {
      return calcBalances(api, result);
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/balances/votingBalances.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.votingBalances = votingBalances;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
function votingBalances(instanceId, api) {
  return (0, _index.memo)(instanceId, function (addresses) {
    return !addresses || !addresses.length ? (0, _rxjs.of)([]) : (0, _rxjs.combineLatest)(addresses.map(function (accountId) {
      return api.derive.balances.account(accountId);
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/balances/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  votingBalance: true,
  all: true
};
Object.defineProperty(exports, "all", {
  enumerable: true,
  get: function () {
    return _all.all;
  }
});
exports.votingBalance = void 0;

var _all = require("./all.js");

var _account = require("./account.js");

Object.keys(_account).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _account[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _account[key];
    }
  });
});

var _votingBalances = require("./votingBalances.js");

Object.keys(_votingBalances).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _votingBalances[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _votingBalances[key];
    }
  });
});
// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
var votingBalance = _all.all;
exports.votingBalance = votingBalance;
},{"./all.js":"node_modules/@polkadot/api-derive/balances/all.js","./account.js":"node_modules/@polkadot/api-derive/balances/account.js","./votingBalances.js":"node_modules/@polkadot/api-derive/balances/votingBalances.js"}],"node_modules/@polkadot/api-derive/bounties/helpers/filterBountyProposals.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.filterBountiesProposals = filterBountiesProposals;

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
function filterBountiesProposals(api, allProposals) {
  var bountyTxBase = api.tx.bounties ? api.tx.bounties : api.tx.treasury;
  var bountyProposalCalls = [bountyTxBase.approveBounty, bountyTxBase.closeBounty, bountyTxBase.proposeCurator, bountyTxBase.unassignCurator];
  return allProposals.filter(function (proposal) {
    return bountyProposalCalls.find(function (bountyCall) {
      return proposal.proposal && bountyCall.is(proposal.proposal);
    });
  });
}
},{}],"node_modules/@polkadot/api-derive/bounties/bounties.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bounties = bounties;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

var _filterBountyProposals = require("./helpers/filterBountyProposals.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function parseResult(_ref) {
  var _ref2 = _slicedToArray(_ref, 4),
      maybeBounties = _ref2[0],
      maybeDescriptions = _ref2[1],
      ids = _ref2[2],
      bountyProposals = _ref2[3];

  var bounties = [];
  maybeBounties.forEach(function (bounty, index) {
    if (bounty.isSome) {
      bounties.push({
        bounty: bounty.unwrap(),
        description: maybeDescriptions[index].unwrapOrDefault().toUtf8(),
        index: ids[index],
        proposals: bountyProposals.filter(function (bountyProposal) {
          return bountyProposal.proposal && ids[index].eq(bountyProposal.proposal.args[0]);
        })
      });
    }
  });
  return bounties;
}

function bounties(instanceId, api) {
  var bountyBase = api.query.bounties || api.query.treasury;
  return (0, _index.memo)(instanceId, function () {
    return bountyBase.bounties ? (0, _rxjs.combineLatest)([bountyBase.bountyCount(), api.query.council ? api.query.council.proposalCount() : (0, _rxjs.of)(0)]).pipe((0, _rxjs.switchMap)(function () {
      return (0, _rxjs.combineLatest)([bountyBase.bounties.keys(), api.derive.council ? api.derive.council.proposals() : (0, _rxjs.of)([])]);
    }), (0, _rxjs.switchMap)(function (_ref3) {
      var _ref4 = _slicedToArray(_ref3, 2),
          keys = _ref4[0],
          proposals = _ref4[1];

      var ids = keys.map(function (_ref5) {
        var _ref5$args = _slicedToArray(_ref5.args, 1),
            id = _ref5$args[0];

        return id;
      });
      return (0, _rxjs.combineLatest)([bountyBase.bounties.multi(ids), bountyBase.bountyDescriptions.multi(ids), (0, _rxjs.of)(ids), (0, _rxjs.of)((0, _filterBountyProposals.filterBountiesProposals)(api, proposals))]);
    }), (0, _rxjs.map)(parseResult)) : (0, _rxjs.of)(parseResult([[], [], [], []]));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js","./helpers/filterBountyProposals.js":"node_modules/@polkadot/api-derive/bounties/helpers/filterBountyProposals.js"}],"node_modules/@polkadot/api-derive/bounties/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _bounties = require("./bounties.js");

Object.keys(_bounties).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _bounties[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bounties[key];
    }
  });
});
},{"./bounties.js":"node_modules/@polkadot/api-derive/bounties/bounties.js"}],"node_modules/@polkadot/api-derive/chain/util.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.unwrapBlockNumber = unwrapBlockNumber;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
// re-export these - since these needs to be resolvable from api-derive, i.e. without this
// we would emit code with ../<somewhere>/src embedded in the *.d.ts files
function unwrapBlockNumber(fn) {
  return function (instanceId, api) {
    return (0, _index.memo)(instanceId, function () {
      return fn(api).pipe((0, _rxjs.map)(function (r) {
        return r.number.unwrap();
      }));
    });
  };
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/chain/bestNumber.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bestNumber = void 0;

var _util = require("./util.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name bestNumber
 * @returns The latest block number.
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.chain.bestNumber((blockNumber) => {
 *   console.log(`the current best block is #${blockNumber}`);
 * });
 * ```
 */
var bestNumber = (0, _util.unwrapBlockNumber)(function (api) {
  return api.derive.chain.subscribeNewHeads();
});
exports.bestNumber = bestNumber;
},{"./util.js":"node_modules/@polkadot/api-derive/chain/util.js"}],"node_modules/@polkadot/api-derive/chain/bestNumberFinalized.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bestNumberFinalized = void 0;

var _util = require("./util.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name bestNumberFinalized
 * @returns A BlockNumber
 * @description Get the latest finalized block number.
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.chain.bestNumberFinalized((blockNumber) => {
 *   console.log(`the current finalized block is #${blockNumber}`);
 * });
 * ```
 */
var bestNumberFinalized = (0, _util.unwrapBlockNumber)(function (api) {
  return api.rpc.chain.subscribeFinalizedHeads();
});
exports.bestNumberFinalized = bestNumberFinalized;
},{"./util.js":"node_modules/@polkadot/api-derive/chain/util.js"}],"node_modules/@polkadot/api-derive/chain/bestNumberLag.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bestNumberLag = bestNumberLag;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

/**
 * @name bestNumberLag
 * @returns A number of blocks
 * @description Calculates the lag between finalized head and best head
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.chain.bestNumberLag((lag) => {
 *   console.log(`finalized is ${lag} blocks behind head`);
 * });
 * ```
 */
function bestNumberLag(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    return (0, _rxjs.combineLatest)([api.derive.chain.bestNumber(), api.derive.chain.bestNumberFinalized()]).pipe((0, _rxjs.map)(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          bestNumber = _ref2[0],
          bestNumberFinalized = _ref2[1];

      return api.registry.createType('BlockNumber', bestNumber.sub(bestNumberFinalized));
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/type/util.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extractAuthor = extractAuthor;

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
function extractAuthor(digest) {
  var sessionValidators = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

  var _digest$logs$filter = digest.logs.filter(function (e) {
    return e.isConsensus;
  }),
      _digest$logs$filter2 = _slicedToArray(_digest$logs$filter, 1),
      citem = _digest$logs$filter2[0];

  var _digest$logs$filter3 = digest.logs.filter(function (e) {
    return e.isPreRuntime;
  }),
      _digest$logs$filter4 = _slicedToArray(_digest$logs$filter3, 1),
      pitem = _digest$logs$filter4[0];

  var _digest$logs$filter5 = digest.logs.filter(function (e) {
    return e.isSeal;
  }),
      _digest$logs$filter6 = _slicedToArray(_digest$logs$filter5, 1),
      sitem = _digest$logs$filter6[0];

  var accountId;

  try {
    // This is critical to be first for BABE (before Consensus)
    // If not first, we end up dropping the author at session-end
    if (pitem) {
      var _pitem$asPreRuntime = _slicedToArray(pitem.asPreRuntime, 2),
          engine = _pitem$asPreRuntime[0],
          data = _pitem$asPreRuntime[1];

      accountId = engine.extractAuthor(data, sessionValidators);
    }

    if (!accountId && citem) {
      var _citem$asConsensus = _slicedToArray(citem.asConsensus, 2),
          _engine = _citem$asConsensus[0],
          _data = _citem$asConsensus[1];

      accountId = _engine.extractAuthor(_data, sessionValidators);
    } // SEAL, still used in e.g. Kulupu for pow


    if (!accountId && sitem) {
      var _sitem$asSeal = _slicedToArray(sitem.asSeal, 2),
          _engine2 = _sitem$asSeal[0],
          _data2 = _sitem$asSeal[1];

      accountId = _engine2.extractAuthor(_data2, sessionValidators);
    }
  } catch (_unused) {// ignore
  }

  return accountId;
}
},{}],"node_modules/@polkadot/api-derive/type/HeaderExtended.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createHeaderExtended = createHeaderExtended;

var _util = require("./util.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

function createHeaderExtended(registry, header, validators) {
  // an instance of the base extrinsic for us to extend
  var HeaderBase = registry.createClass('Header');

  var _author = /*#__PURE__*/new WeakMap();

  var _validators = /*#__PURE__*/new WeakMap();

  var Implementation = /*#__PURE__*/function (_HeaderBase) {
    _inherits(Implementation, _HeaderBase);

    var _super = _createSuper(Implementation);

    function Implementation(registry, header, validators) {
      var _this;

      _classCallCheck(this, Implementation);

      _this = _super.call(this, registry, header);

      _classPrivateFieldInitSpec(_assertThisInitialized(_this), _author, {
        writable: true,
        value: void 0
      });

      _classPrivateFieldInitSpec(_assertThisInitialized(_this), _validators, {
        writable: true,
        value: void 0
      });

      _classPrivateFieldSet(_assertThisInitialized(_this), _author, (0, _util.extractAuthor)(_this.digest, validators));

      _classPrivateFieldSet(_assertThisInitialized(_this), _validators, validators);

      _this.createdAtHash = header === null || header === void 0 ? void 0 : header.createdAtHash;
      return _this;
    }
    /**
     * @description Convenience method, returns the author for the block
     */


    _createClass(Implementation, [{
      key: "author",
      get: function get() {
        return _classPrivateFieldGet(this, _author);
      }
      /**
       * @description Convenience method, returns the validators for the block
       */

    }, {
      key: "validators",
      get: function get() {
        return _classPrivateFieldGet(this, _validators);
      }
    }]);

    return Implementation;
  }(HeaderBase);

  return new Implementation(registry, header, validators);
}
},{"./util.js":"node_modules/@polkadot/api-derive/type/util.js"}],"node_modules/@polkadot/api-derive/type/SignedBlockExtended.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createSignedBlockExtended = createSignedBlockExtended;

var _util = require("./util.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

function mapExtrinsics(extrinsics, records) {
  return extrinsics.map(function (extrinsic, index) {
    var dispatchError;
    var dispatchInfo;
    var events = records.filter(function (_ref) {
      var phase = _ref.phase;
      return phase.isApplyExtrinsic && phase.asApplyExtrinsic.eq(index);
    }).map(function (_ref2) {
      var event = _ref2.event;

      if (event.section === 'system') {
        if (event.method === 'ExtrinsicSuccess') {
          dispatchInfo = event.data[0];
        } else if (event.method === 'ExtrinsicFailed') {
          dispatchError = event.data[0];
          dispatchInfo = event.data[1];
        }
      }

      return event;
    });
    return {
      dispatchError: dispatchError,
      dispatchInfo: dispatchInfo,
      events: events,
      extrinsic: extrinsic
    };
  });
}

function createSignedBlockExtended(registry, block, events, validators) {
  // an instance of the base extrinsic for us to extend
  var SignedBlockBase = registry.createClass('SignedBlock');

  var _author = /*#__PURE__*/new WeakMap();

  var _events = /*#__PURE__*/new WeakMap();

  var _extrinsics = /*#__PURE__*/new WeakMap();

  var Implementation = /*#__PURE__*/function (_SignedBlockBase) {
    _inherits(Implementation, _SignedBlockBase);

    var _super = _createSuper(Implementation);

    function Implementation(registry, block, events, validators) {
      var _this;

      _classCallCheck(this, Implementation);

      _this = _super.call(this, registry, block);

      _classPrivateFieldInitSpec(_assertThisInitialized(_this), _author, {
        writable: true,
        value: void 0
      });

      _classPrivateFieldInitSpec(_assertThisInitialized(_this), _events, {
        writable: true,
        value: void 0
      });

      _classPrivateFieldInitSpec(_assertThisInitialized(_this), _extrinsics, {
        writable: true,
        value: void 0
      });

      _classPrivateFieldSet(_assertThisInitialized(_this), _author, (0, _util.extractAuthor)(_this.block.header.digest, validators));

      _classPrivateFieldSet(_assertThisInitialized(_this), _events, events || []);

      _classPrivateFieldSet(_assertThisInitialized(_this), _extrinsics, mapExtrinsics(_this.block.extrinsics, _classPrivateFieldGet(_assertThisInitialized(_this), _events)));

      _this.createdAtHash = block === null || block === void 0 ? void 0 : block.createdAtHash;
      return _this;
    }
    /**
     * @description Convenience method, returns the author for the block
     */


    _createClass(Implementation, [{
      key: "author",
      get: function get() {
        return _classPrivateFieldGet(this, _author);
      }
      /**
       * @description Convenience method, returns the events associated with the block
       */

    }, {
      key: "events",
      get: function get() {
        return _classPrivateFieldGet(this, _events);
      }
      /**
       * @description Returns the extrinsics and their events, mapped
       */

    }, {
      key: "extrinsics",
      get: function get() {
        return _classPrivateFieldGet(this, _extrinsics);
      }
    }]);

    return Implementation;
  }(SignedBlockBase);

  return new Implementation(registry, block, events, validators);
}
},{"./util.js":"node_modules/@polkadot/api-derive/type/util.js"}],"node_modules/@polkadot/api-derive/type/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "createHeaderExtended", {
  enumerable: true,
  get: function () {
    return _HeaderExtended.createHeaderExtended;
  }
});
Object.defineProperty(exports, "createSignedBlockExtended", {
  enumerable: true,
  get: function () {
    return _SignedBlockExtended.createSignedBlockExtended;
  }
});

var _HeaderExtended = require("./HeaderExtended.js");

var _SignedBlockExtended = require("./SignedBlockExtended.js");
},{"./HeaderExtended.js":"node_modules/@polkadot/api-derive/type/HeaderExtended.js","./SignedBlockExtended.js":"node_modules/@polkadot/api-derive/type/SignedBlockExtended.js"}],"node_modules/@polkadot/api-derive/chain/getHeader.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getHeader = getHeader;

var _rxjs = require("rxjs");

var _index = require("../type/index.js");

var _index2 = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

/**
 * @name getHeader
 * @param {( Uint8Array | string )} hash - A block hash as U8 array or string.
 * @returns An array containing the block header and the block author
 * @description Get a specific block header and extend it with the author
 * @example
 * <BR>
 *
 * ```javascript
 * const { author, number } = await api.derive.chain.getHeader('0x123...456');
 *
 * console.log(`block #${number} was authored by ${author}`);
 * ```
 */
function getHeader(instanceId, api) {
  return (0, _index2.memo)(instanceId, function (blockHash) {
    return (0, _rxjs.combineLatest)([api.rpc.chain.getHeader(blockHash), api.queryAt(blockHash).pipe((0, _rxjs.switchMap)(function (queryAt) {
      return queryAt.session ? queryAt.session.validators() : (0, _rxjs.of)([]);
    }))]).pipe((0, _rxjs.map)(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          header = _ref2[0],
          validators = _ref2[1];

      return (0, _index.createHeaderExtended)(header.registry, header, validators);
    }), (0, _rxjs.catchError)(function () {
      return (// where rpc.chain.getHeader throws, we will land here - it can happen that
        // we supplied an invalid hash. (Due to defaults, storeage will have an
        // empty value, so only the RPC is affected). So return undefined
        (0, _rxjs.of)()
      );
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../type/index.js":"node_modules/@polkadot/api-derive/type/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/chain/getBlock.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getBlock = getBlock;

var _rxjs = require("rxjs");

var _index = require("../type/index.js");

var _index2 = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

/**
 * @name getBlock
 * @param {( Uint8Array | string )} hash - A block hash as U8 array or string.
 * @description Get a specific block (e.g. rpc.chain.getBlock) and extend it with the author
 * @example
 * <BR>
 *
 * ```javascript
 * const { author, block } = await api.derive.chain.getBlock('0x123...456');
 *
 * console.log(`block #${block.header.number} was authored by ${author}`);
 * ```
 */
function getBlock(instanceId, api) {
  return (0, _index2.memo)(instanceId, function (blockHash) {
    return (0, _rxjs.combineLatest)([api.rpc.chain.getBlock(blockHash), api.queryAt(blockHash).pipe((0, _rxjs.switchMap)(function (queryAt) {
      return (0, _rxjs.combineLatest)([queryAt.system.events(), queryAt.session ? queryAt.session.validators() : (0, _rxjs.of)([])]);
    }))]).pipe((0, _rxjs.map)(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          signedBlock = _ref2[0],
          _ref2$ = _slicedToArray(_ref2[1], 2),
          events = _ref2$[0],
          validators = _ref2$[1];

      return (0, _index.createSignedBlockExtended)(api.registry, signedBlock, events, validators);
    }), (0, _rxjs.catchError)(function () {
      return (// where rpc.chain.getHeader throws, we will land here - it can happen that
        // we supplied an invalid hash. (Due to defaults, storage will have an
        // empty value, so only the RPC is affected). So return undefined
        (0, _rxjs.of)()
      );
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../type/index.js":"node_modules/@polkadot/api-derive/type/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/chain/getBlockByNumber.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getBlockByNumber = getBlockByNumber;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
function getBlockByNumber(instanceId, api) {
  return (0, _index.memo)(instanceId, function (blockNumber) {
    return api.rpc.chain.getBlockHash(blockNumber).pipe((0, _rxjs.switchMap)(function (h) {
      return api.derive.chain.getBlock(h);
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/chain/subscribeNewBlocks.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.subscribeNewBlocks = subscribeNewBlocks;

var _rxjs = require("rxjs");

var _index = require("../type/index.js");

var _index2 = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

/**
 * @name subscribeNewBlocks
 * @returns The latest block & events for that block
 */
function subscribeNewBlocks(instanceId, api) {
  return (0, _index2.memo)(instanceId, function () {
    return api.derive.chain.subscribeNewHeads().pipe((0, _rxjs.switchMap)(function (header) {
      var blockHash = header.createdAtHash || header.hash; // we get the block first, setting up the registry

      return (0, _rxjs.combineLatest)([(0, _rxjs.of)(header), api.rpc.chain.getBlock(blockHash), api.queryAt(blockHash).pipe((0, _rxjs.switchMap)(function (queryAt) {
        return queryAt.system.events();
      }))]);
    }), (0, _rxjs.map)(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 3),
          header = _ref2[0],
          block = _ref2[1],
          events = _ref2[2];

      return (0, _index.createSignedBlockExtended)(block.registry, block, events, header.validators);
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../type/index.js":"node_modules/@polkadot/api-derive/type/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/chain/subscribeNewHeads.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.subscribeNewHeads = subscribeNewHeads;

var _rxjs = require("rxjs");

var _index = require("../type/index.js");

var _index2 = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

/**
 * @name subscribeNewHeads
 * @returns A header with the current header (including extracted author)
 * @description An observable of the current block header and it's author
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.chain.subscribeNewHeads((header) => {
 *   console.log(`block #${header.number} was authored by ${header.author}`);
 * });
 * ```
 */
function subscribeNewHeads(instanceId, api) {
  return (0, _index2.memo)(instanceId, function () {
    return (0, _rxjs.combineLatest)([api.rpc.chain.subscribeNewHeads(), api.query.session ? api.query.session.validators() : (0, _rxjs.of)(undefined)]).pipe((0, _rxjs.map)(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          header = _ref2[0],
          validators = _ref2[1];

      header.createdAtHash = header.hash;
      return (0, _index.createHeaderExtended)(header.registry, header, validators);
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../type/index.js":"node_modules/@polkadot/api-derive/type/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/chain/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _bestNumber = require("./bestNumber.js");

Object.keys(_bestNumber).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _bestNumber[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bestNumber[key];
    }
  });
});

var _bestNumberFinalized = require("./bestNumberFinalized.js");

Object.keys(_bestNumberFinalized).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _bestNumberFinalized[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bestNumberFinalized[key];
    }
  });
});

var _bestNumberLag = require("./bestNumberLag.js");

Object.keys(_bestNumberLag).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _bestNumberLag[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bestNumberLag[key];
    }
  });
});

var _getHeader = require("./getHeader.js");

Object.keys(_getHeader).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _getHeader[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _getHeader[key];
    }
  });
});

var _getBlock = require("./getBlock.js");

Object.keys(_getBlock).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _getBlock[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _getBlock[key];
    }
  });
});

var _getBlockByNumber = require("./getBlockByNumber.js");

Object.keys(_getBlockByNumber).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _getBlockByNumber[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _getBlockByNumber[key];
    }
  });
});

var _subscribeNewBlocks = require("./subscribeNewBlocks.js");

Object.keys(_subscribeNewBlocks).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _subscribeNewBlocks[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _subscribeNewBlocks[key];
    }
  });
});

var _subscribeNewHeads = require("./subscribeNewHeads.js");

Object.keys(_subscribeNewHeads).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _subscribeNewHeads[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _subscribeNewHeads[key];
    }
  });
});
},{"./bestNumber.js":"node_modules/@polkadot/api-derive/chain/bestNumber.js","./bestNumberFinalized.js":"node_modules/@polkadot/api-derive/chain/bestNumberFinalized.js","./bestNumberLag.js":"node_modules/@polkadot/api-derive/chain/bestNumberLag.js","./getHeader.js":"node_modules/@polkadot/api-derive/chain/getHeader.js","./getBlock.js":"node_modules/@polkadot/api-derive/chain/getBlock.js","./getBlockByNumber.js":"node_modules/@polkadot/api-derive/chain/getBlockByNumber.js","./subscribeNewBlocks.js":"node_modules/@polkadot/api-derive/chain/subscribeNewBlocks.js","./subscribeNewHeads.js":"node_modules/@polkadot/api-derive/chain/subscribeNewHeads.js"}],"node_modules/@polkadot/api-derive/contracts/fees.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fees = fees;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

// query via constants (current applicable path)
function queryConstants(api) {
  return (0, _rxjs.of)([// deprecated
  api.consts.contracts.callBaseFee || api.registry.createType('Balance'), api.consts.contracts.contractFee || api.registry.createType('Balance'), api.consts.contracts.creationFee || api.registry.createType('Balance'), api.consts.contracts.transactionBaseFee || api.registry.createType('Balance'), api.consts.contracts.transactionByteFee || api.registry.createType('Balance'), api.consts.contracts.transferFee || api.registry.createType('Balance'), // current
  api.consts.contracts.rentByteFee, api.consts.contracts.rentDepositOffset, api.consts.contracts.surchargeReward, api.consts.contracts.tombstoneDeposit]);
}
/**
 * @name fees
 * @returns An object containing the combined results of the queries for
 * all relevant contract fees as declared in the substrate chain spec.
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.contracts.fees(([creationFee, transferFee]) => {
 *   console.log(`The fee for creating a new contract on this chain is ${creationFee} units. The fee required to call this contract is ${transferFee} units.`);
 * });
 * ```
 */


function fees(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    return queryConstants(api).pipe((0, _rxjs.map)(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 10),
          callBaseFee = _ref2[0],
          contractFee = _ref2[1],
          creationFee = _ref2[2],
          transactionBaseFee = _ref2[3],
          transactionByteFee = _ref2[4],
          transferFee = _ref2[5],
          rentByteFee = _ref2[6],
          rentDepositOffset = _ref2[7],
          surchargeReward = _ref2[8],
          tombstoneDeposit = _ref2[9];

      return {
        callBaseFee: callBaseFee,
        contractFee: contractFee,
        creationFee: creationFee,
        rentByteFee: rentByteFee,
        rentDepositOffset: rentDepositOffset,
        surchargeReward: surchargeReward,
        tombstoneDeposit: tombstoneDeposit,
        transactionBaseFee: transactionBaseFee,
        transactionByteFee: transactionByteFee,
        transferFee: transferFee
      };
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/contracts/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _fees = require("./fees.js");

Object.keys(_fees).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _fees[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _fees[key];
    }
  });
});
},{"./fees.js":"node_modules/@polkadot/api-derive/contracts/fees.js"}],"node_modules/@polkadot/api-derive/collective/helpers.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.callMethod = callMethod;
exports.getInstance = getInstance;
exports.withSection = withSection;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _index = require("../util/index.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
function getInstance(api, section) {
  var instances = api.registry.getModuleInstances(api.runtimeVersion.specName.toString(), section);
  var name = instances && instances.length ? instances[0] : section;
  return api.query[name];
}

function withSection(section, fn) {
  return function (instanceId, api) {
    return (0, _index.memo)(instanceId, fn(getInstance(api, section), api, instanceId));
  };
}

function callMethod(method, empty) {
  return function (section) {
    return withSection(section, function (query) {
      return function () {
        return (0, _util.isFunction)(query === null || query === void 0 ? void 0 : query[method]) ? query[method]() : (0, _rxjs.of)(empty);
      };
    });
  };
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/collective/members.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.members = void 0;

var _helpers = require("./helpers.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
// We are re-exporting these from here to ensure that *.d.ts generation is correct
var members = (0, _helpers.callMethod)('members', []);
exports.members = members;
},{"./helpers.js":"node_modules/@polkadot/api-derive/collective/helpers.js"}],"node_modules/@polkadot/api-derive/collective/prime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.prime = prime;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _helpers = require("./helpers.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
// We are re-exporting these from here to ensure that *.d.ts generation is correct
function prime(section) {
  return (0, _helpers.withSection)(section, function (query) {
    return function () {
      return (0, _util.isFunction)(query === null || query === void 0 ? void 0 : query.prime) ? query.prime().pipe((0, _rxjs.map)(function (o) {
        return o.unwrapOr(null);
      })) : (0, _rxjs.of)(null);
    };
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","./helpers.js":"node_modules/@polkadot/api-derive/collective/helpers.js"}],"node_modules/@polkadot/api-derive/collective/proposals.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hasProposals = hasProposals;
exports.proposal = proposal;
exports.proposalHashes = exports.proposalCount = void 0;
exports.proposals = proposals;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _index = require("../util/index.js");

var _helpers = require("./helpers.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

// We are re-exporting these from here to ensure that *.d.ts generation is correct
function parse(api, _ref) {
  var _ref2 = _slicedToArray(_ref, 3),
      hashes = _ref2[0],
      proposals = _ref2[1],
      votes = _ref2[2];

  return proposals.map(function (o, index) {
    return {
      hash: api.registry.createType('Hash', hashes[index]),
      proposal: o && o.isSome ? o.unwrap() : null,
      votes: votes[index].unwrapOr(null)
    };
  });
}

function _proposalsFrom(api, query, hashes) {
  return ((0, _util.isFunction)(query === null || query === void 0 ? void 0 : query.proposals) && hashes.length ? (0, _rxjs.combineLatest)([(0, _rxjs.of)(hashes), // this should simply be api.query[section].proposalOf.multi<Option<Proposal>>(hashes),
  // however we have had cases on Edgeware where the indices have moved around after an
  // upgrade, which results in invalid on-chain data
  query.proposalOf.multi(hashes).pipe((0, _rxjs.catchError)(function () {
    return (0, _rxjs.of)(hashes.map(function () {
      return null;
    }));
  })), query.voting.multi(hashes)]) : (0, _rxjs.of)([[], [], []])).pipe((0, _rxjs.map)(function (r) {
    return parse(api, r);
  }));
}

function hasProposals(section) {
  return (0, _helpers.withSection)(section, function (query) {
    return function () {
      return (0, _rxjs.of)((0, _util.isFunction)(query === null || query === void 0 ? void 0 : query.proposals));
    };
  });
}

function proposals(section) {
  return (0, _helpers.withSection)(section, function (query, api) {
    return function () {
      return api.derive[section].proposalHashes().pipe((0, _rxjs.switchMap)(function (all) {
        return _proposalsFrom(api, query, all);
      }));
    };
  });
}

function proposal(section) {
  return (0, _helpers.withSection)(section, function (query, api) {
    return function (hash) {
      return (0, _util.isFunction)(query === null || query === void 0 ? void 0 : query.proposals) ? (0, _index.firstObservable)(_proposalsFrom(api, query, [hash])) : (0, _rxjs.of)(null);
    };
  });
}

var proposalCount = (0, _helpers.callMethod)('proposalCount', null);
exports.proposalCount = proposalCount;
var proposalHashes = (0, _helpers.callMethod)('proposals', []);
exports.proposalHashes = proposalHashes;
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js","./helpers.js":"node_modules/@polkadot/api-derive/collective/helpers.js"}],"node_modules/@polkadot/api-derive/collective/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _members = require("./members.js");

Object.keys(_members).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _members[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _members[key];
    }
  });
});

var _prime = require("./prime.js");

Object.keys(_prime).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _prime[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _prime[key];
    }
  });
});

var _proposals = require("./proposals.js");

Object.keys(_proposals).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _proposals[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _proposals[key];
    }
  });
});
},{"./members.js":"node_modules/@polkadot/api-derive/collective/members.js","./prime.js":"node_modules/@polkadot/api-derive/collective/prime.js","./proposals.js":"node_modules/@polkadot/api-derive/collective/proposals.js"}],"node_modules/@polkadot/api-derive/council/votes.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.votes = votes;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

// Voter is current tuple is 2.x-era
function isVoter(value) {
  return !Array.isArray(value);
}

function retrieveStakeOf(elections) {
  return elections.stakeOf.entries().pipe((0, _rxjs.map)(function (entries) {
    return entries.map(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          _ref2$0$args = _slicedToArray(_ref2[0].args, 1),
          accountId = _ref2$0$args[0],
          stake = _ref2[1];

      return [accountId, stake];
    });
  }));
}

function retrieveVoteOf(elections) {
  return elections.votesOf.entries().pipe((0, _rxjs.map)(function (entries) {
    return entries.map(function (_ref3) {
      var _ref4 = _slicedToArray(_ref3, 2),
          _ref4$0$args = _slicedToArray(_ref4[0].args, 1),
          accountId = _ref4$0$args[0],
          votes = _ref4[1];

      return [accountId, votes];
    });
  }));
}

function retrievePrev(api, elections) {
  return (0, _rxjs.combineLatest)([retrieveStakeOf(elections), retrieveVoteOf(elections)]).pipe((0, _rxjs.map)(function (_ref5) {
    var _ref6 = _slicedToArray(_ref5, 2),
        stakes = _ref6[0],
        votes = _ref6[1];

    var result = [];
    votes.forEach(function (_ref7) {
      var _ref8 = _slicedToArray(_ref7, 2),
          voter = _ref8[0],
          votes = _ref8[1];

      result.push([voter, {
        stake: api.registry.createType('Balance'),
        votes: votes
      }]);
    });
    stakes.forEach(function (_ref9) {
      var _ref10 = _slicedToArray(_ref9, 2),
          staker = _ref10[0],
          stake = _ref10[1];

      var entry = result.find(function (_ref11) {
        var _ref12 = _slicedToArray(_ref11, 1),
            voter = _ref12[0];

        return voter.eq(staker);
      });

      if (entry) {
        entry[1].stake = stake;
      } else {
        result.push([staker, {
          stake: stake,
          votes: []
        }]);
      }
    });
    return result;
  }));
}

function retrieveCurrent(elections) {
  return elections.voting.entries().pipe((0, _rxjs.map)(function (entries) {
    return entries.map(function (_ref13) {
      var _ref14 = _slicedToArray(_ref13, 2),
          _ref14$0$args = _slicedToArray(_ref14[0].args, 1),
          accountId = _ref14$0$args[0],
          value = _ref14[1];

      return [accountId, isVoter(value) ? {
        stake: value.stake,
        votes: value.votes
      } : {
        stake: value[0],
        votes: value[1]
      }];
    });
  }));
}

function votes(instanceId, api) {
  var elections = api.query.phragmenElection || api.query.electionsPhragmen || api.query.elections;
  return (0, _index.memo)(instanceId, function () {
    return elections ? elections.stakeOf ? retrievePrev(api, elections) : retrieveCurrent(elections) : (0, _rxjs.of)([]);
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/council/votesOf.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.votesOf = votesOf;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function votesOf(instanceId, api) {
  return (0, _index.memo)(instanceId, function (accountId) {
    return api.derive.council.votes().pipe((0, _rxjs.map)(function (votes) {
      return (votes.find(function (_ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            from = _ref2[0];

        return from.eq(accountId);
      }) || [null, {
        stake: api.registry.createType('Balance'),
        votes: []
      }])[1];
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/council/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  members: true,
  hasProposals: true,
  proposal: true,
  proposalCount: true,
  proposalHashes: true,
  proposals: true,
  prime: true
};
exports.proposals = exports.proposalHashes = exports.proposalCount = exports.proposal = exports.prime = exports.members = exports.hasProposals = void 0;

var _index = require("../collective/index.js");

var _votes = require("./votes.js");

Object.keys(_votes).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _votes[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _votes[key];
    }
  });
});

var _votesOf = require("./votesOf.js");

Object.keys(_votesOf).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _votesOf[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _votesOf[key];
    }
  });
});
// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
var members = (0, _index.members)('council');
exports.members = members;
var hasProposals = (0, _index.hasProposals)('council');
exports.hasProposals = hasProposals;
var proposal = (0, _index.proposal)('council');
exports.proposal = proposal;
var proposalCount = (0, _index.proposalCount)('council');
exports.proposalCount = proposalCount;
var proposalHashes = (0, _index.proposalHashes)('council');
exports.proposalHashes = proposalHashes;
var proposals = (0, _index.proposals)('council');
exports.proposals = proposals;
var prime = (0, _index.prime)('council');
exports.prime = prime;
},{"../collective/index.js":"node_modules/@polkadot/api-derive/collective/index.js","./votes.js":"node_modules/@polkadot/api-derive/council/votes.js","./votesOf.js":"node_modules/@polkadot/api-derive/council/votesOf.js"}],"node_modules/@polkadot/api-derive/crowdloan/childKey.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.childKey = childKey;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _utilCrypto = require("@polkadot/util-crypto");

var _index = require("../util/index.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
function createChildKey(info) {
  return (0, _util.u8aToHex)((0, _util.u8aConcat)(':child_storage:default:', (0, _utilCrypto.blake2AsU8a)((0, _util.u8aConcat)('crowdloan', (info.fundIndex || info.trieIndex).toU8a()))));
}

function childKey(instanceId, api) {
  return (0, _index.memo)(instanceId, function (paraId) {
    return api.query.crowdloan.funds(paraId).pipe((0, _rxjs.map)(function (optInfo) {
      return optInfo.isSome ? createChildKey(optInfo.unwrap()) : null;
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/util-crypto":"node_modules/@polkadot/util-crypto/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/crowdloan/util.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extractContributed = extractContributed;

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
function extractContributed(paraId, events) {
  var _events$createdAtHash;

  var added = [];
  var removed = [];
  return events.filter(function (_ref) {
    var _ref$event = _ref.event,
        _ref$event$data = _slicedToArray(_ref$event.data, 2),
        eventParaId = _ref$event$data[1],
        method = _ref$event.method,
        section = _ref$event.section;

    return section === 'crowdloan' && ['Contributed', 'Withdrew'].includes(method) && eventParaId.eq(paraId);
  }).reduce(function (result, _ref2) {
    var _ref2$event = _ref2.event,
        _ref2$event$data = _slicedToArray(_ref2$event.data, 1),
        accountId = _ref2$event$data[0],
        method = _ref2$event.method;

    if (method === 'Contributed') {
      result.added.push(accountId.toHex());
    } else {
      result.removed.push(accountId.toHex());
    }

    return result;
  }, {
    added: added,
    blockHash: ((_events$createdAtHash = events.createdAtHash) === null || _events$createdAtHash === void 0 ? void 0 : _events$createdAtHash.toHex()) || '-',
    removed: removed
  });
}
},{}],"node_modules/@polkadot/api-derive/crowdloan/contributions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.contributions = contributions;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _index = require("../util/index.js");

var _util2 = require("./util.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var PAGE_SIZE_K = 1000; // limit aligned with the 1k on the node (trie lookups are heavy)

function _getUpdates(api, paraId) {
  var added = [];
  var removed = [];
  return api.query.system.events().pipe((0, _rxjs.switchMap)(function (events) {
    var changes = (0, _util2.extractContributed)(paraId, events);

    if (changes.added.length || changes.removed.length) {
      var _added, _removed;

      var _events$createdAtHash;

      added = (_added = added).concat.apply(_added, _toConsumableArray(changes.added));
      removed = (_removed = removed).concat.apply(_removed, _toConsumableArray(changes.removed));
      return (0, _rxjs.of)({
        added: added,
        addedDelta: changes.added,
        blockHash: ((_events$createdAtHash = events.createdAtHash) === null || _events$createdAtHash === void 0 ? void 0 : _events$createdAtHash.toHex()) || '-',
        removed: removed,
        removedDelta: changes.removed
      });
    }

    return _rxjs.EMPTY;
  }), (0, _rxjs.startWith)({
    added: added,
    addedDelta: [],
    blockHash: '-',
    removed: removed,
    removedDelta: []
  }));
}

function _eventTriggerAll(api, paraId) {
  return api.query.system.events().pipe((0, _rxjs.switchMap)(function (events) {
    var _events$createdAtHash2;

    var items = events.filter(function (_ref) {
      var _ref$event = _ref.event,
          _ref$event$data = _slicedToArray(_ref$event.data, 1),
          eventParaId = _ref$event$data[0],
          method = _ref$event.method,
          section = _ref$event.section;

      return section === 'crowdloan' && ['AllRefunded', 'Dissolved', 'PartiallyRefunded'].includes(method) && eventParaId.eq(paraId);
    });
    return items.length ? (0, _rxjs.of)(((_events$createdAtHash2 = events.createdAtHash) === null || _events$createdAtHash2 === void 0 ? void 0 : _events$createdAtHash2.toHex()) || '-') : _rxjs.EMPTY;
  }), (0, _rxjs.startWith)('-'));
}

function _getKeysPaged(api, childKey) {
  var subject = new _rxjs.BehaviorSubject(undefined);
  return subject.pipe((0, _rxjs.switchMap)(function (startKey) {
    return api.rpc.childstate.getKeysPaged(childKey, '0x', PAGE_SIZE_K, startKey);
  }), (0, _rxjs.tap)(function (keys) {
    (0, _util.nextTick)(function () {
      keys.length === PAGE_SIZE_K ? subject.next(keys[PAGE_SIZE_K - 1].toHex()) : subject.complete();
    });
  }), (0, _rxjs.toArray)(), // toArray since we want to startSubject to be completed
  (0, _rxjs.map)(function (keyArr) {
    return (0, _util.arrayFlatten)(keyArr);
  }));
}

function _getAll(api, paraId, childKey) {
  return _eventTriggerAll(api, paraId).pipe((0, _rxjs.switchMap)(function () {
    return (0, _util.isFunction)(api.rpc.childstate.getKeysPaged) ? _getKeysPaged(api, childKey) : api.rpc.childstate.getKeys(childKey, '0x');
  }), (0, _rxjs.map)(function (keys) {
    return keys.map(function (k) {
      return k.toHex();
    });
  }));
}

function _contributions(api, paraId, childKey) {
  return (0, _rxjs.combineLatest)([_getAll(api, paraId, childKey), _getUpdates(api, paraId)]).pipe((0, _rxjs.map)(function (_ref2) {
    var _ref3 = _slicedToArray(_ref2, 2),
        keys = _ref3[0],
        _ref3$ = _ref3[1],
        added = _ref3$.added,
        blockHash = _ref3$.blockHash,
        removed = _ref3$.removed;

    var contributorsMap = {};
    keys.forEach(function (k) {
      contributorsMap[k] = true;
    });
    added.forEach(function (k) {
      contributorsMap[k] = true;
    });
    removed.forEach(function (k) {
      delete contributorsMap[k];
    });
    return {
      blockHash: blockHash,
      contributorsHex: Object.keys(contributorsMap)
    };
  }));
}

function contributions(instanceId, api) {
  return (0, _index.memo)(instanceId, function (paraId) {
    return api.derive.crowdloan.childKey(paraId).pipe((0, _rxjs.switchMap)(function (childKey) {
      return childKey ? _contributions(api, paraId, childKey) : (0, _rxjs.of)({
        blockHash: '-',
        contributorsHex: []
      });
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js","./util.js":"node_modules/@polkadot/api-derive/crowdloan/util.js"}],"node_modules/@polkadot/api-derive/crowdloan/ownContributions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ownContributions = ownContributions;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

var _util = require("./util.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _getValues(api, childKey, keys) {
  // We actually would love to use multi-keys https://github.com/paritytech/substrate/issues/9203
  return (0, _rxjs.combineLatest)(keys.map(function (k) {
    return api.rpc.childstate.getStorage(childKey, k);
  })).pipe((0, _rxjs.map)(function (values) {
    return values.map(function (v) {
      return api.registry.createType('Option<StorageData>', v);
    }).map(function (o) {
      return o.isSome ? api.registry.createType('Balance', o.unwrap()) : api.registry.createType('Balance');
    }).reduce(function (all, b, index) {
      return _objectSpread(_objectSpread({}, all), {}, _defineProperty({}, keys[index], b));
    }, {});
  }));
}

function _watchOwnChanges(api, paraId, childkey, keys) {
  return api.query.system.events().pipe((0, _rxjs.switchMap)(function (events) {
    var changes = (0, _util.extractContributed)(paraId, events);
    var filtered = keys.filter(function (k) {
      return changes.added.includes(k) || changes.removed.includes(k);
    });
    return filtered.length ? _getValues(api, childkey, filtered) : _rxjs.EMPTY;
  }), (0, _rxjs.startWith)({}));
}

function _contributions(api, paraId, childKey, keys) {
  return (0, _rxjs.combineLatest)([_getValues(api, childKey, keys), _watchOwnChanges(api, paraId, childKey, keys)]).pipe((0, _rxjs.map)(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
        all = _ref2[0],
        latest = _ref2[1];

    return _objectSpread(_objectSpread({}, all), latest);
  }));
}

function ownContributions(instanceId, api) {
  return (0, _index.memo)(instanceId, function (paraId, keys) {
    return api.derive.crowdloan.childKey(paraId).pipe((0, _rxjs.switchMap)(function (childKey) {
      return childKey && keys.length ? _contributions(api, paraId, childKey, keys) : (0, _rxjs.of)({});
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js","./util.js":"node_modules/@polkadot/api-derive/crowdloan/util.js"}],"node_modules/@polkadot/api-derive/crowdloan/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _childKey = require("./childKey.js");

Object.keys(_childKey).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _childKey[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _childKey[key];
    }
  });
});

var _contributions = require("./contributions.js");

Object.keys(_contributions).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _contributions[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _contributions[key];
    }
  });
});

var _ownContributions = require("./ownContributions.js");

Object.keys(_ownContributions).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _ownContributions[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ownContributions[key];
    }
  });
});
},{"./childKey.js":"node_modules/@polkadot/api-derive/crowdloan/childKey.js","./contributions.js":"node_modules/@polkadot/api-derive/crowdloan/contributions.js","./ownContributions.js":"node_modules/@polkadot/api-derive/crowdloan/ownContributions.js"}],"node_modules/@polkadot/api-derive/democracy/dispatchQueue.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dispatchQueue = dispatchQueue;

var _rxjs = require("rxjs");

var _types = require("@polkadot/types");

var _util = require("@polkadot/util");

var _index = require("../util/index.js");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var DEMOCRACY_ID = (0, _util.stringToHex)('democrac');

function isMaybeHashed(call) {
  // check for enum
  return call instanceof _types.Enum;
}

function queryQueue(api) {
  return api.query.democracy.dispatchQueue().pipe((0, _rxjs.switchMap)(function (dispatches) {
    return (0, _rxjs.combineLatest)([(0, _rxjs.of)(dispatches), api.derive.democracy.preimages(dispatches.map(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          hash = _ref2[1];

      return hash;
    }))]);
  }), (0, _rxjs.map)(function (_ref3) {
    var _ref4 = _slicedToArray(_ref3, 2),
        dispatches = _ref4[0],
        images = _ref4[1];

    return dispatches.map(function (_ref5, dispatchIndex) {
      var _ref6 = _slicedToArray(_ref5, 3),
          at = _ref6[0],
          imageHash = _ref6[1],
          index = _ref6[2];

      return {
        at: at,
        image: images[dispatchIndex],
        imageHash: imageHash,
        index: index
      };
    });
  }));
}

function schedulerEntries(api) {
  // We don't get entries, but rather we get the keys (triggered via finished referendums) and
  // the subscribe to those keys - this means we pickup when the schedulers actually executes
  // at a block, the entry for that block will become empty
  return api.derive.democracy.referendumsFinished().pipe((0, _rxjs.switchMap)(function () {
    return api.query.scheduler.agenda.keys();
  }), (0, _rxjs.switchMap)(function (keys) {
    var blockNumbers = keys.map(function (_ref7) {
      var _ref7$args = _slicedToArray(_ref7.args, 1),
          blockNumber = _ref7$args[0];

      return blockNumber;
    });
    return blockNumbers.length ? (0, _rxjs.combineLatest)([(0, _rxjs.of)(blockNumbers), // this should simply be api.query.scheduler.agenda.multi,
    // however we have had cases on Darwinia where the indices have moved around after an
    // upgrade, which results in invalid on-chain data
    api.query.scheduler.agenda.multi(blockNumbers).pipe((0, _rxjs.catchError)(function () {
      return (0, _rxjs.of)(blockNumbers.map(function () {
        return [];
      }));
    }))]) : (0, _rxjs.of)([[], []]);
  }));
}

function queryScheduler(api) {
  return schedulerEntries(api).pipe((0, _rxjs.switchMap)(function (_ref8) {
    var _ref9 = _slicedToArray(_ref8, 2),
        blockNumbers = _ref9[0],
        agendas = _ref9[1];

    var result = [];
    blockNumbers.forEach(function (at, index) {
      (agendas[index] || []).filter(function (o) {
        return o.isSome;
      }).forEach(function (o) {
        var scheduled = o.unwrap();

        if (scheduled.maybeId.isSome) {
          var id = scheduled.maybeId.unwrap().toHex();

          if (id.startsWith(DEMOCRACY_ID)) {
            var imageHash = isMaybeHashed(scheduled.call) ? scheduled.call.isHash ? scheduled.call.asHash : scheduled.call.asValue.args[0] : scheduled.call.args[0];
            result.push({
              at: at,
              imageHash: imageHash,
              index: api.registry.createType('(u64, ReferendumIndex)', id)[1]
            });
          }
        }
      });
    });
    return (0, _rxjs.combineLatest)([(0, _rxjs.of)(result), result.length ? api.derive.democracy.preimages(result.map(function (_ref10) {
      var imageHash = _ref10.imageHash;
      return imageHash;
    })) : (0, _rxjs.of)([])]);
  }), (0, _rxjs.map)(function (_ref11) {
    var _ref12 = _slicedToArray(_ref11, 2),
        infos = _ref12[0],
        images = _ref12[1];

    return infos.map(function (info, index) {
      return _objectSpread(_objectSpread({}, info), {}, {
        image: images[index]
      });
    });
  }));
}

function dispatchQueue(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    var _api$query$scheduler;

    return (0, _util.isFunction)((_api$query$scheduler = api.query.scheduler) === null || _api$query$scheduler === void 0 ? void 0 : _api$query$scheduler.agenda) ? queryScheduler(api) : api.query.democracy.dispatchQueue ? queryQueue(api) : (0, _rxjs.of)([]);
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/types":"node_modules/@polkadot/types/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/democracy/locks.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.locks = locks;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _index = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var LOCKUPS = [0, 1, 2, 4, 8, 16, 32];

function parseEnd(api, vote, _ref) {
  var approved = _ref.approved,
      end = _ref.end;
  return [end, approved.isTrue && vote.isAye || approved.isFalse && vote.isNay ? end.add((api.consts.democracy.voteLockingPeriod || api.consts.democracy.enactmentPeriod).muln(LOCKUPS[vote.conviction.index])) : _util.BN_ZERO];
}

function parseLock(api, _ref2, referendum) {
  var _ref3 = _slicedToArray(_ref2, 2),
      referendumId = _ref3[0],
      accountVote = _ref3[1];

  var _accountVote$asStanda = accountVote.asStandard,
      balance = _accountVote$asStanda.balance,
      vote = _accountVote$asStanda.vote;

  var _ref4 = referendum.isFinished ? parseEnd(api, vote, referendum.asFinished) : [_util.BN_ZERO, _util.BN_ZERO],
      _ref5 = _slicedToArray(_ref4, 2),
      referendumEnd = _ref5[0],
      unlockAt = _ref5[1];

  return {
    balance: balance,
    isDelegated: false,
    isFinished: referendum.isFinished,
    referendumEnd: referendumEnd,
    referendumId: referendumId,
    unlockAt: unlockAt,
    vote: vote
  };
}

function delegateLocks(api, _ref6) {
  var balance = _ref6.balance,
      conviction = _ref6.conviction,
      target = _ref6.target;
  return api.derive.democracy.locks(target).pipe((0, _rxjs.map)(function (available) {
    return available.map(function (_ref7) {
      var isFinished = _ref7.isFinished,
          referendumEnd = _ref7.referendumEnd,
          referendumId = _ref7.referendumId,
          unlockAt = _ref7.unlockAt,
          vote = _ref7.vote;
      return {
        balance: balance,
        isDelegated: true,
        isFinished: isFinished,
        referendumEnd: referendumEnd,
        referendumId: referendumId,
        unlockAt: unlockAt.isZero() ? unlockAt : referendumEnd.add((api.consts.democracy.voteLockingPeriod || api.consts.democracy.enactmentPeriod).muln(LOCKUPS[conviction.index])),
        vote: api.registry.createType('Vote', {
          aye: vote.isAye,
          conviction: conviction
        })
      };
    });
  }));
}

function directLocks(api, _ref8) {
  var votes = _ref8.votes;

  if (!votes.length) {
    return (0, _rxjs.of)([]);
  }

  return api.query.democracy.referendumInfoOf.multi(votes.map(function (_ref9) {
    var _ref10 = _slicedToArray(_ref9, 1),
        referendumId = _ref10[0];

    return referendumId;
  })).pipe((0, _rxjs.map)(function (referendums) {
    return votes.map(function (vote, index) {
      return [vote, referendums[index].unwrapOr(null)];
    }).filter(function (item) {
      return !!item[1] && (0, _util.isUndefined)(item[1].end) && item[0][1].isStandard;
    }).map(function (_ref11) {
      var _ref12 = _slicedToArray(_ref11, 2),
          directVote = _ref12[0],
          referendum = _ref12[1];

      return parseLock(api, directVote, referendum);
    });
  }));
}

function locks(instanceId, api) {
  return (0, _index.memo)(instanceId, function (accountId) {
    return api.query.democracy.votingOf ? api.query.democracy.votingOf(accountId).pipe((0, _rxjs.switchMap)(function (voting) {
      return voting.isDirect ? directLocks(api, voting.asDirect) : voting.isDelegating ? delegateLocks(api, voting.asDelegating) : (0, _rxjs.of)([]);
    })) : (0, _rxjs.of)([]);
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/democracy/nextExternal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.nextExternal = nextExternal;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function withImage(api, nextOpt) {
  if (nextOpt.isNone) {
    return (0, _rxjs.of)(null);
  }

  var _nextOpt$unwrap = nextOpt.unwrap(),
      _nextOpt$unwrap2 = _slicedToArray(_nextOpt$unwrap, 2),
      imageHash = _nextOpt$unwrap2[0],
      threshold = _nextOpt$unwrap2[1];

  return api.derive.democracy.preimage(imageHash).pipe((0, _rxjs.map)(function (image) {
    return {
      image: image,
      imageHash: imageHash,
      threshold: threshold
    };
  }));
}

function nextExternal(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    var _api$query$democracy;

    return (_api$query$democracy = api.query.democracy) !== null && _api$query$democracy !== void 0 && _api$query$democracy.nextExternal ? api.query.democracy.nextExternal().pipe((0, _rxjs.switchMap)(function (nextOpt) {
      return withImage(api, nextOpt);
    })) : (0, _rxjs.of)(null);
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/democracy/preimages.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.preimage = void 0;
exports.preimages = preimages;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _index = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function isDemocracyPreimage(api, imageOpt) {
  return !!imageOpt && !api.query.democracy.dispatchQueue;
}

function constructProposal(api, _ref) {
  var _ref2 = _slicedToArray(_ref, 4),
      bytes = _ref2[0],
      proposer = _ref2[1],
      balance = _ref2[2],
      at = _ref2[3];

  var proposal;

  try {
    proposal = api.registry.createType('Proposal', bytes.toU8a(true));
  } catch (error) {
    console.error(error);
  }

  return {
    at: at,
    balance: balance,
    proposal: proposal,
    proposer: proposer
  };
}

function parseDemocracy(api, imageOpt) {
  if (imageOpt.isNone) {
    return;
  }

  if (isDemocracyPreimage(api, imageOpt)) {
    var status = imageOpt.unwrap();

    if (status.isMissing) {
      return;
    }

    var _status$asAvailable = status.asAvailable,
        data = _status$asAvailable.data,
        deposit = _status$asAvailable.deposit,
        provider = _status$asAvailable.provider,
        since = _status$asAvailable.since;
    return constructProposal(api, [data, provider, deposit, since]);
  }

  return constructProposal(api, imageOpt.unwrap());
}

function getDemocracyImages(api, hashes) {
  return api.query.democracy.preimages.multi(hashes).pipe((0, _rxjs.map)(function (images) {
    return images.map(function (imageOpt) {
      return parseDemocracy(api, imageOpt);
    });
  }));
}

function preimages(instanceId, api) {
  return (0, _index.memo)(instanceId, function (hashes) {
    return hashes.length ? (0, _util.isFunction)(api.query.democracy.preimages) ? getDemocracyImages(api, hashes) : (0, _rxjs.of)([]) : (0, _rxjs.of)([]);
  });
}

var preimage = (0, _index.firstMemo)(function (api, hash) {
  return api.derive.democracy.preimages([hash]);
});
exports.preimage = preimage;
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/democracy/proposals.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.proposals = proposals;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _index = require("../util/index.js");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function isNewDepositors(depositors) {
  // Detect balance...
  // eslint-disable-next-line @typescript-eslint/unbound-method
  return (0, _util.isFunction)(depositors[1].mul);
}

function parse(_ref) {
  var _ref2 = _slicedToArray(_ref, 3),
      proposals = _ref2[0],
      images = _ref2[1],
      optDepositors = _ref2[2];

  return proposals.filter(function (_ref3, index) {
    var _ref4 = _slicedToArray(_ref3, 3),
        proposer = _ref4[2];

    var _optDepositors$index;

    return !!((_optDepositors$index = optDepositors[index]) !== null && _optDepositors$index !== void 0 && _optDepositors$index.isSome) && !proposer.isEmpty;
  }).map(function (_ref5, proposalIndex) {
    var _ref6 = _slicedToArray(_ref5, 3),
        index = _ref6[0],
        imageHash = _ref6[1],
        proposer = _ref6[2];

    var depositors = optDepositors[proposalIndex].unwrap();
    return _objectSpread(_objectSpread({}, isNewDepositors(depositors) ? {
      balance: depositors[1],
      seconds: depositors[0]
    } : {
      balance: depositors[0],
      seconds: depositors[1]
    }), {}, {
      image: images[proposalIndex],
      imageHash: imageHash,
      index: index,
      proposer: proposer
    });
  });
}

function proposals(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    var _api$query$democracy, _api$query$democracy2;

    return (0, _util.isFunction)((_api$query$democracy = api.query.democracy) === null || _api$query$democracy === void 0 ? void 0 : _api$query$democracy.publicProps) && (0, _util.isFunction)((_api$query$democracy2 = api.query.democracy) === null || _api$query$democracy2 === void 0 ? void 0 : _api$query$democracy2.preimages) ? api.query.democracy.publicProps().pipe((0, _rxjs.switchMap)(function (proposals) {
      return proposals.length ? (0, _rxjs.combineLatest)([(0, _rxjs.of)(proposals), api.derive.democracy.preimages(proposals.map(function (_ref7) {
        var _ref8 = _slicedToArray(_ref7, 2),
            hash = _ref8[1];

        return hash;
      })), api.query.democracy.depositOf.multi(proposals.map(function (_ref9) {
        var _ref10 = _slicedToArray(_ref9, 1),
            index = _ref10[0];

        return index;
      }))]) : (0, _rxjs.of)([[], [], []]);
    }), (0, _rxjs.map)(parse)) : (0, _rxjs.of)([]);
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/democracy/referendumIds.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.referendumIds = referendumIds;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function referendumIds(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    var _api$query$democracy;

    return (_api$query$democracy = api.query.democracy) !== null && _api$query$democracy !== void 0 && _api$query$democracy.lowestUnbaked ? api.queryMulti([api.query.democracy.lowestUnbaked, api.query.democracy.referendumCount]).pipe((0, _rxjs.map)(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          first = _ref2[0],
          total = _ref2[1];

      return total.gt(first) // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
      ? _toConsumableArray(Array(total.sub(first).toNumber())).map(function (_, i) {
        return first.addn(i);
      }) : [];
    })) : (0, _rxjs.of)([]);
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/democracy/referendums.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.referendums = referendums;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function referendums(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    return api.derive.democracy.referendumsActive().pipe((0, _rxjs.switchMap)(function (referendums) {
      return referendums.length ? (0, _rxjs.combineLatest)([(0, _rxjs.of)(referendums), api.derive.democracy._referendumsVotes(referendums)]) : (0, _rxjs.of)([[], []]);
    }), (0, _rxjs.map)(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          referendums = _ref2[0],
          votes = _ref2[1];

      return referendums.map(function (referendum, index) {
        return _objectSpread(_objectSpread({}, referendum), votes[index]);
      });
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/democracy/referendumsActive.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.referendumsActive = referendumsActive;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
function referendumsActive(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    return api.derive.democracy.referendumIds().pipe((0, _rxjs.switchMap)(function (ids) {
      return ids.length ? api.derive.democracy.referendumsInfo(ids) : (0, _rxjs.of)([]);
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/democracy/referendumsFinished.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.referendumsFinished = referendumsFinished;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
function referendumsFinished(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    return api.derive.democracy.referendumIds().pipe((0, _rxjs.switchMap)(function (ids) {
      return api.query.democracy.referendumInfoOf.multi(ids);
    }), (0, _rxjs.map)(function (infos) {
      return infos.map(function (o) {
        return o.unwrapOr(null);
      }).filter(function (info) {
        return !!info && info.isFinished;
      }).map(function (info) {
        return info.asFinished;
      });
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/democracy/util.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.calcPassing = calcPassing;
exports.calcVotes = calcVotes;
exports.compareRationals = compareRationals;
exports.getStatus = getStatus;

var _util = require("@polkadot/util");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function isOldInfo(info) {
  return !!info.proposalHash;
}

function isCurrentStatus(status) {
  return !!status.tally;
}

function compareRationals(n1, d1, n2, d2) {
  while (true) {
    var q1 = n1.div(d1);
    var q2 = n2.div(d2);

    if (q1.lt(q2)) {
      return true;
    } else if (q2.lt(q1)) {
      return false;
    }

    var r1 = n1.mod(d1);
    var r2 = n2.mod(d2);

    if (r2.isZero()) {
      return false;
    } else if (r1.isZero()) {
      return true;
    }

    n1 = d2;
    n2 = d1;
    d1 = r2;
    d2 = r1;
  }
}

function calcPassingOther(threshold, sqrtElectorate, _ref) {
  var votedAye = _ref.votedAye,
      votedNay = _ref.votedNay,
      votedTotal = _ref.votedTotal;
  var sqrtVoters = (0, _util.bnSqrt)(votedTotal);
  return sqrtVoters.isZero() ? false : threshold.isSuperMajorityApprove ? compareRationals(votedNay, sqrtVoters, votedAye, sqrtElectorate) : compareRationals(votedNay, sqrtElectorate, votedAye, sqrtVoters);
}

function calcPassing(threshold, sqrtElectorate, state) {
  return threshold.isSimpleMajority ? state.votedAye.gt(state.votedNay) : calcPassingOther(threshold, sqrtElectorate, state);
}

function calcVotesPrev(votesFor) {
  return votesFor.reduce(function (state, derived) {
    var balance = derived.balance,
        vote = derived.vote;
    var isDefault = vote.conviction.index === 0;
    var counted = balance.muln(isDefault ? 1 : vote.conviction.index).divn(isDefault ? 10 : 1);

    if (vote.isAye) {
      state.allAye.push(derived);
      state.voteCountAye++;
      state.votedAye.iadd(counted);
    } else {
      state.allNay.push(derived);
      state.voteCountNay++;
      state.votedNay.iadd(counted);
    }

    state.voteCount++;
    state.votedTotal.iadd(counted);
    return state;
  }, {
    allAye: [],
    allNay: [],
    voteCount: 0,
    voteCountAye: 0,
    voteCountNay: 0,
    votedAye: new _util.BN(0),
    votedNay: new _util.BN(0),
    votedTotal: new _util.BN(0)
  });
}

function calcVotesCurrent(tally, votes) {
  var allAye = [];
  var allNay = [];
  votes.forEach(function (derived) {
    if (derived.vote.isAye) {
      allAye.push(derived);
    } else {
      allNay.push(derived);
    }
  });
  return {
    allAye: allAye,
    allNay: allNay,
    voteCount: allAye.length + allNay.length,
    voteCountAye: allAye.length,
    voteCountNay: allNay.length,
    votedAye: tally.ayes,
    votedNay: tally.nays,
    votedTotal: tally.turnout
  };
}

function calcVotes(sqrtElectorate, referendum, votes) {
  var state = isCurrentStatus(referendum.status) ? calcVotesCurrent(referendum.status.tally, votes) : calcVotesPrev(votes);
  return _objectSpread(_objectSpread({}, state), {}, {
    isPassing: calcPassing(referendum.status.threshold, sqrtElectorate, state),
    votes: votes
  });
}

function getStatus(info) {
  if (info.isNone) {
    return null;
  }

  var unwrapped = info.unwrap();
  return isOldInfo(unwrapped) ? unwrapped : unwrapped.isOngoing ? unwrapped.asOngoing // done, we don't include it here... only currently active
  : null;
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/api-derive/democracy/referendumsInfo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._referendumInfo = _referendumInfo;
exports._referendumVotes = _referendumVotes;
exports._referendumsVotes = _referendumsVotes;
exports.referendumsInfo = referendumsInfo;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _index = require("../util/index.js");

var _util2 = require("./util.js");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function votesPrev(api, referendumId) {
  return api.query.democracy.votersFor(referendumId).pipe((0, _rxjs.switchMap)(function (votersFor) {
    return (0, _rxjs.combineLatest)([(0, _rxjs.of)(votersFor), votersFor.length ? api.query.democracy.voteOf.multi(votersFor.map(function (accountId) {
      return [referendumId, accountId];
    })) : (0, _rxjs.of)([]), api.derive.balances.votingBalances(votersFor)]);
  }), (0, _rxjs.map)(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 3),
        votersFor = _ref2[0],
        votes = _ref2[1],
        balances = _ref2[2];

    return votersFor.map(function (accountId, index) {
      return {
        accountId: accountId,
        balance: balances[index].votingBalance || api.registry.createType('Balance'),
        isDelegating: false,
        vote: votes[index] || api.registry.createType('Vote')
      };
    });
  }));
}

function extractVotes(mapped, referendumId) {
  return mapped.filter(function (_ref3) {
    var _ref4 = _slicedToArray(_ref3, 2),
        voting = _ref4[1];

    return voting.isDirect;
  }).map(function (_ref5) {
    var _ref6 = _slicedToArray(_ref5, 2),
        accountId = _ref6[0],
        voting = _ref6[1];

    return [accountId, voting.asDirect.votes.filter(function (_ref7) {
      var _ref8 = _slicedToArray(_ref7, 1),
          idx = _ref8[0];

      return idx.eq(referendumId);
    })];
  }).filter(function (_ref9) {
    var _ref10 = _slicedToArray(_ref9, 2),
        directVotes = _ref10[1];

    return !!directVotes.length;
  }).reduce(function (result, _ref11) {
    var _ref12 = _slicedToArray(_ref11, 2),
        accountId = _ref12[0],
        votes = _ref12[1];

    return (// FIXME We are ignoring split votes
      votes.reduce(function (result, _ref13) {
        var _ref14 = _slicedToArray(_ref13, 2),
            vote = _ref14[1];

        if (vote.isStandard) {
          result.push(_objectSpread({
            accountId: accountId,
            isDelegating: false
          }, vote.asStandard));
        }

        return result;
      }, result)
    );
  }, []);
}

function votesCurr(api, referendumId) {
  return api.query.democracy.votingOf.entries().pipe((0, _rxjs.map)(function (allVoting) {
    var mapped = allVoting.map(function (_ref15) {
      var _ref16 = _slicedToArray(_ref15, 2),
          _ref16$0$args = _slicedToArray(_ref16[0].args, 1),
          accountId = _ref16$0$args[0],
          voting = _ref16[1];

      return [accountId, voting];
    });
    var votes = extractVotes(mapped, referendumId);
    var delegations = mapped.filter(function (_ref17) {
      var _ref18 = _slicedToArray(_ref17, 2),
          voting = _ref18[1];

      return voting.isDelegating;
    }).map(function (_ref19) {
      var _ref20 = _slicedToArray(_ref19, 2),
          accountId = _ref20[0],
          voting = _ref20[1];

      return [accountId, voting.asDelegating];
    }); // add delegations

    delegations.forEach(function (_ref21) {
      var _ref22 = _slicedToArray(_ref21, 2),
          accountId = _ref22[0],
          _ref22$ = _ref22[1],
          balance = _ref22$.balance,
          conviction = _ref22$.conviction,
          target = _ref22$.target;

      // Are we delegating to a delegator
      var toDelegator = delegations.find(function (_ref23) {
        var _ref24 = _slicedToArray(_ref23, 1),
            accountId = _ref24[0];

        return accountId.eq(target);
      });
      var to = votes.find(function (_ref25) {
        var accountId = _ref25.accountId;
        return accountId.eq(toDelegator ? toDelegator[0] : target);
      }); // this delegation has a target

      if (to) {
        votes.push({
          accountId: accountId,
          balance: balance,
          isDelegating: true,
          vote: api.registry.createType('Vote', {
            aye: to.vote.isAye,
            conviction: conviction
          })
        });
      }
    });
    return votes;
  }));
}

function _referendumVotes(instanceId, api) {
  return (0, _index.memo)(instanceId, function (referendum) {
    return (0, _rxjs.combineLatest)([api.derive.democracy.sqrtElectorate(), (0, _util.isFunction)(api.query.democracy.votingOf) ? votesCurr(api, referendum.index) : votesPrev(api, referendum.index)]).pipe((0, _rxjs.map)(function (_ref26) {
      var _ref27 = _slicedToArray(_ref26, 2),
          sqrtElectorate = _ref27[0],
          votes = _ref27[1];

      return (0, _util2.calcVotes)(sqrtElectorate, referendum, votes);
    }));
  });
}

function _referendumsVotes(instanceId, api) {
  return (0, _index.memo)(instanceId, function (referendums) {
    return referendums.length ? (0, _rxjs.combineLatest)(referendums.map(function (referendum) {
      return api.derive.democracy._referendumVotes(referendum);
    })) : (0, _rxjs.of)([]);
  });
}

function _referendumInfo(instanceId, api) {
  return (0, _index.memo)(instanceId, function (index, info) {
    var status = (0, _util2.getStatus)(info);
    return status ? api.derive.democracy.preimage(status.proposalHash).pipe((0, _rxjs.map)(function (image) {
      return {
        image: image,
        imageHash: status.proposalHash,
        index: api.registry.createType('ReferendumIndex', index),
        status: status
      };
    })) : (0, _rxjs.of)(null);
  });
}

function referendumsInfo(instanceId, api) {
  return (0, _index.memo)(instanceId, function (ids) {
    return ids.length ? api.query.democracy.referendumInfoOf.multi(ids).pipe((0, _rxjs.switchMap)(function (infos) {
      return (0, _rxjs.combineLatest)(ids.map(function (id, index) {
        return api.derive.democracy._referendumInfo(id, infos[index]);
      }));
    }), (0, _rxjs.map)(function (infos) {
      return infos.filter(function (referendum) {
        return !!referendum;
      });
    })) : (0, _rxjs.of)([]);
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js","./util.js":"node_modules/@polkadot/api-derive/democracy/util.js"}],"node_modules/@polkadot/api-derive/democracy/sqrtElectorate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sqrtElectorate = sqrtElectorate;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _index = require("../util/index.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
function sqrtElectorate(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    return api.query.balances.totalIssuance().pipe((0, _rxjs.map)(_util.bnSqrt));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/democracy/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _dispatchQueue = require("./dispatchQueue.js");

Object.keys(_dispatchQueue).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _dispatchQueue[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _dispatchQueue[key];
    }
  });
});

var _locks = require("./locks.js");

Object.keys(_locks).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _locks[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _locks[key];
    }
  });
});

var _nextExternal = require("./nextExternal.js");

Object.keys(_nextExternal).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _nextExternal[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _nextExternal[key];
    }
  });
});

var _preimages = require("./preimages.js");

Object.keys(_preimages).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _preimages[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _preimages[key];
    }
  });
});

var _proposals = require("./proposals.js");

Object.keys(_proposals).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _proposals[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _proposals[key];
    }
  });
});

var _referendumIds = require("./referendumIds.js");

Object.keys(_referendumIds).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _referendumIds[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _referendumIds[key];
    }
  });
});

var _referendums = require("./referendums.js");

Object.keys(_referendums).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _referendums[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _referendums[key];
    }
  });
});

var _referendumsActive = require("./referendumsActive.js");

Object.keys(_referendumsActive).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _referendumsActive[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _referendumsActive[key];
    }
  });
});

var _referendumsFinished = require("./referendumsFinished.js");

Object.keys(_referendumsFinished).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _referendumsFinished[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _referendumsFinished[key];
    }
  });
});

var _referendumsInfo = require("./referendumsInfo.js");

Object.keys(_referendumsInfo).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _referendumsInfo[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _referendumsInfo[key];
    }
  });
});

var _sqrtElectorate = require("./sqrtElectorate.js");

Object.keys(_sqrtElectorate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _sqrtElectorate[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _sqrtElectorate[key];
    }
  });
});
},{"./dispatchQueue.js":"node_modules/@polkadot/api-derive/democracy/dispatchQueue.js","./locks.js":"node_modules/@polkadot/api-derive/democracy/locks.js","./nextExternal.js":"node_modules/@polkadot/api-derive/democracy/nextExternal.js","./preimages.js":"node_modules/@polkadot/api-derive/democracy/preimages.js","./proposals.js":"node_modules/@polkadot/api-derive/democracy/proposals.js","./referendumIds.js":"node_modules/@polkadot/api-derive/democracy/referendumIds.js","./referendums.js":"node_modules/@polkadot/api-derive/democracy/referendums.js","./referendumsActive.js":"node_modules/@polkadot/api-derive/democracy/referendumsActive.js","./referendumsFinished.js":"node_modules/@polkadot/api-derive/democracy/referendumsFinished.js","./referendumsInfo.js":"node_modules/@polkadot/api-derive/democracy/referendumsInfo.js","./sqrtElectorate.js":"node_modules/@polkadot/api-derive/democracy/sqrtElectorate.js"}],"node_modules/@polkadot/api-derive/elections/info.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.info = info;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

// SeatHolder is current tuple is 2.x-era Substrate
function isSeatHolder(value) {
  return !Array.isArray(value);
}

function isCandidateTuple(value) {
  return Array.isArray(value);
}

function getAccountTuple(value) {
  return isSeatHolder(value) ? [value.who, value.stake] : value;
}

function getCandidate(value) {
  return isCandidateTuple(value) ? value[0] : value;
}

function sortAccounts(_ref, _ref2) {
  var _ref3 = _slicedToArray(_ref, 2),
      balanceA = _ref3[1];

  var _ref4 = _slicedToArray(_ref2, 2),
      balanceB = _ref4[1];

  return balanceB.cmp(balanceA);
}

function getConstants(api, elections) {
  return elections ? {
    candidacyBond: api.consts[elections].candidacyBond,
    desiredRunnersUp: api.consts[elections].desiredRunnersUp,
    desiredSeats: api.consts[elections].desiredMembers,
    termDuration: api.consts[elections].termDuration,
    votingBond: api.consts[elections].votingBond
  } : {};
}

function getModules(api) {
  var _ref5 = api.registry.getModuleInstances(api.runtimeVersion.specName.toString(), 'council') || ['council'],
      _ref6 = _slicedToArray(_ref5, 1),
      council = _ref6[0];

  var elections = api.query.phragmenElection ? 'phragmenElection' : api.query.electionsPhragmen ? 'electionsPhragmen' : api.query.elections ? 'elections' : null;
  return [council, elections];
}

function queryAll(api, council, elections) {
  return api.queryMulti([api.query[council].members, api.query[elections].candidates, api.query[elections].members, api.query[elections].runnersUp]);
}

function queryCouncil(api, council) {
  return (0, _rxjs.combineLatest)([api.query[council].members(), (0, _rxjs.of)([]), (0, _rxjs.of)([]), (0, _rxjs.of)([])]);
}
/**
 * @name info
 * @returns An object containing the combined results of the storage queries for
 * all relevant election module properties.
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.elections.info(({ members, candidates }) => {
 *   console.log(`There are currently ${members.length} council members and ${candidates.length} prospective council candidates.`);
 * });
 * ```
 */


function info(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    var _getModules = getModules(api),
        _getModules2 = _slicedToArray(_getModules, 2),
        council = _getModules2[0],
        elections = _getModules2[1];

    return (elections ? queryAll(api, council, elections) : queryCouncil(api, council)).pipe((0, _rxjs.map)(function (_ref7) {
      var _ref8 = _slicedToArray(_ref7, 4),
          councilMembers = _ref8[0],
          candidates = _ref8[1],
          members = _ref8[2],
          runnersUp = _ref8[3];

      return _objectSpread(_objectSpread({}, getConstants(api, elections)), {}, {
        candidateCount: api.registry.createType('u32', candidates.length),
        candidates: candidates.map(getCandidate),
        members: members.length ? members.map(getAccountTuple).sort(sortAccounts) : councilMembers.map(function (a) {
          return [a, api.registry.createType('Balance')];
        }),
        runnersUp: runnersUp.map(getAccountTuple).sort(sortAccounts)
      });
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/elections/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _info = require("./info.js");

Object.keys(_info).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _info[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _info[key];
    }
  });
});
},{"./info.js":"node_modules/@polkadot/api-derive/elections/info.js"}],"node_modules/@polkadot/api-derive/imOnline/receivedHeartbeats.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.receivedHeartbeats = receivedHeartbeats;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _index = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function mapResult(_ref) {
  var _ref2 = _slicedToArray(_ref, 4),
      result = _ref2[0],
      validators = _ref2[1],
      heartbeats = _ref2[2],
      numBlocks = _ref2[3];

  validators.forEach(function (validator, index) {
    var validatorId = validator.toString();
    var blockCount = numBlocks[index];
    var hasMessage = !heartbeats[index].isEmpty;
    var prev = result[validatorId];

    if (!prev || prev.hasMessage !== hasMessage || !prev.blockCount.eq(blockCount)) {
      result[validatorId] = {
        blockCount: blockCount,
        hasMessage: hasMessage,
        isOnline: hasMessage || blockCount.gt(_util.BN_ZERO)
      };
    }
  });
  return result;
}
/**
 * @description Return a boolean array indicating whether the passed accounts had received heartbeats in the current session
 */


function receivedHeartbeats(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    var _api$query$imOnline;

    return (_api$query$imOnline = api.query.imOnline) !== null && _api$query$imOnline !== void 0 && _api$query$imOnline.receivedHeartbeats ? api.derive.staking.overview().pipe((0, _rxjs.switchMap)(function (_ref3) {
      var currentIndex = _ref3.currentIndex,
          validators = _ref3.validators;
      return (0, _rxjs.combineLatest)([(0, _rxjs.of)({}), (0, _rxjs.of)(validators), api.query.imOnline.receivedHeartbeats.multi(validators.map(function (_address, index) {
        return [currentIndex, index];
      })), api.query.imOnline.authoredBlocks.multi(validators.map(function (address) {
        return [currentIndex, address];
      }))]);
    }), (0, _rxjs.map)(mapResult)) : (0, _rxjs.of)({});
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/imOnline/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _receivedHeartbeats = require("./receivedHeartbeats.js");

Object.keys(_receivedHeartbeats).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _receivedHeartbeats[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _receivedHeartbeats[key];
    }
  });
});
},{"./receivedHeartbeats.js":"node_modules/@polkadot/api-derive/imOnline/receivedHeartbeats.js"}],"node_modules/@polkadot/api-derive/membership/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.proposals = exports.proposalHashes = exports.proposalCount = exports.proposal = exports.prime = exports.members = exports.hasProposals = void 0;

var _index = require("../collective/index.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
var members = (0, _index.members)('membership');
exports.members = members;
var hasProposals = (0, _index.hasProposals)('membership');
exports.hasProposals = hasProposals;
var proposal = (0, _index.proposal)('membership');
exports.proposal = proposal;
var proposalCount = (0, _index.proposalCount)('membership');
exports.proposalCount = proposalCount;
var proposalHashes = (0, _index.proposalHashes)('membership');
exports.proposalHashes = proposalHashes;
var proposals = (0, _index.proposals)('membership');
exports.proposals = proposals;
var prime = (0, _index.prime)('membership');
exports.prime = prime;
},{"../collective/index.js":"node_modules/@polkadot/api-derive/collective/index.js"}],"node_modules/@polkadot/api-derive/parachains/util.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.didUpdateToBool = didUpdateToBool;

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
function didUpdateToBool(didUpdate, id) {
  return didUpdate.isSome ? didUpdate.unwrap().some(function (paraId) {
    return paraId.eq(id);
  }) : false;
}
},{}],"node_modules/@polkadot/api-derive/parachains/info.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.info = info;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

var _util = require("./util.js");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function parseActive(id, active) {
  var found = active.find(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 1),
        paraId = _ref2[0];

    return paraId === id;
  });

  if (found && found[1].isSome) {
    var _found$1$unwrap = found[1].unwrap(),
        _found$1$unwrap2 = _slicedToArray(_found$1$unwrap, 2),
        collatorId = _found$1$unwrap2[0],
        retriable = _found$1$unwrap2[1];

    return _objectSpread({
      collatorId: collatorId
    }, retriable.isWithRetries ? {
      isRetriable: true,
      retries: retriable.asWithRetries.toNumber()
    } : {
      isRetriable: false,
      retries: 0
    });
  }

  return null;
}

function parseCollators(id, collatorQueue) {
  return collatorQueue.map(function (queue) {
    var found = queue.find(function (_ref3) {
      var _ref4 = _slicedToArray(_ref3, 1),
          paraId = _ref4[0];

      return paraId === id;
    });
    return found ? found[1] : null;
  });
}

function parse(id, _ref5) {
  var _ref6 = _slicedToArray(_ref5, 8),
      active = _ref6[0],
      retryQueue = _ref6[1],
      selectedThreads = _ref6[2],
      didUpdate = _ref6[3],
      info = _ref6[4],
      pendingSwap = _ref6[5],
      heads = _ref6[6],
      relayDispatchQueue = _ref6[7];

  if (info.isNone) {
    return null;
  }

  return {
    active: parseActive(id, active),
    didUpdate: (0, _util.didUpdateToBool)(didUpdate, id),
    heads: heads,
    id: id,
    info: _objectSpread({
      id: id
    }, info.unwrap()),
    pendingSwapId: pendingSwap.unwrapOr(null),
    relayDispatchQueue: relayDispatchQueue,
    retryCollators: parseCollators(id, retryQueue),
    selectedCollators: parseCollators(id, selectedThreads)
  };
}

function info(instanceId, api) {
  return (0, _index.memo)(instanceId, function (id) {
    return api.query.registrar && api.query.parachains ? api.queryMulti([api.query.registrar.active, api.query.registrar.retryQueue, api.query.registrar.selectedThreads, api.query.parachains.didUpdate, [api.query.registrar.paras, id], [api.query.registrar.pendingSwap, id], [api.query.parachains.heads, id], [api.query.parachains.relayDispatchQueue, id]]).pipe((0, _rxjs.map)(function (result) {
      return parse(api.registry.createType('ParaId', id), result);
    })) : (0, _rxjs.of)(null);
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js","./util.js":"node_modules/@polkadot/api-derive/parachains/util.js"}],"node_modules/@polkadot/api-derive/parachains/overview.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.overview = overview;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

var _util = require("./util.js");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function parse(_ref) {
  var _ref2 = _slicedToArray(_ref, 5),
      ids = _ref2[0],
      didUpdate = _ref2[1],
      infos = _ref2[2],
      pendingSwaps = _ref2[3],
      relayDispatchQueueSizes = _ref2[4];

  return ids.map(function (id, index) {
    return {
      didUpdate: (0, _util.didUpdateToBool)(didUpdate, id),
      id: id,
      info: _objectSpread({
        id: id
      }, infos[index].unwrapOr(null)),
      pendingSwapId: pendingSwaps[index].unwrapOr(null),
      relayDispatchQueueSize: relayDispatchQueueSizes[index][0].toNumber()
    };
  });
}

function overview(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    var _api$query$registrar;

    return (_api$query$registrar = api.query.registrar) !== null && _api$query$registrar !== void 0 && _api$query$registrar.parachains && api.query.parachains ? api.query.registrar.parachains().pipe((0, _rxjs.switchMap)(function (paraIds) {
      return (0, _rxjs.combineLatest)([(0, _rxjs.of)(paraIds), api.query.parachains.didUpdate(), api.query.registrar.paras.multi(paraIds), api.query.registrar.pendingSwap.multi(paraIds), api.query.parachains.relayDispatchQueueSize.multi(paraIds)]);
    }), (0, _rxjs.map)(parse)) : (0, _rxjs.of)([]);
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js","./util.js":"node_modules/@polkadot/api-derive/parachains/util.js"}],"node_modules/@polkadot/api-derive/parachains/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _info = require("./info.js");

Object.keys(_info).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _info[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _info[key];
    }
  });
});

var _overview = require("./overview.js");

Object.keys(_overview).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _overview[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _overview[key];
    }
  });
});
},{"./info.js":"node_modules/@polkadot/api-derive/parachains/info.js","./overview.js":"node_modules/@polkadot/api-derive/parachains/overview.js"}],"node_modules/@polkadot/api-derive/session/indexes.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.indexes = indexes;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

// parse into Indexes
function parse(_ref) {
  var _ref2 = _slicedToArray(_ref, 5),
      currentIndex = _ref2[0],
      activeEra = _ref2[1],
      activeEraStart = _ref2[2],
      currentEra = _ref2[3],
      validatorCount = _ref2[4];

  return {
    activeEra: activeEra,
    activeEraStart: activeEraStart,
    currentEra: currentEra,
    currentIndex: currentIndex,
    validatorCount: validatorCount
  };
} // query based on latest


function queryStaking(api) {
  return api.queryMulti([api.query.session.currentIndex, api.query.staking.activeEra, api.query.staking.currentEra, api.query.staking.validatorCount]).pipe((0, _rxjs.map)(function (_ref3) {
    var _ref4 = _slicedToArray(_ref3, 4),
        currentIndex = _ref4[0],
        activeOpt = _ref4[1],
        currentEra = _ref4[2],
        validatorCount = _ref4[3];

    var _activeOpt$unwrapOrDe = activeOpt.unwrapOrDefault(),
        index = _activeOpt$unwrapOrDe.index,
        start = _activeOpt$unwrapOrDe.start;

    return parse([currentIndex, index, start, currentEra.unwrapOrDefault(), validatorCount]);
  }));
} // query based on latest


function querySession(api) {
  return api.query.session.currentIndex().pipe((0, _rxjs.map)(function (currentIndex) {
    return parse([currentIndex, api.registry.createType('EraIndex'), api.registry.createType('Option<Moment>'), api.registry.createType('EraIndex'), api.registry.createType('u32')]);
  }));
} // empty set when none is available


function empty(api) {
  return (0, _rxjs.of)(parse([api.registry.createType('SessionIndex', 1), api.registry.createType('EraIndex'), api.registry.createType('Option<Moment>'), api.registry.createType('EraIndex'), api.registry.createType('u32')]));
}

function indexes(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    return api.query.session ? api.query.staking ? queryStaking(api) : querySession(api) : empty(api);
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/session/info.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.info = info;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * @description Retrieves all the session and era query and calculates specific values on it as the length of the session and eras
 */
function info(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    return api.derive.session.indexes().pipe((0, _rxjs.map)(function (indexes) {
      var _api$consts, _api$consts$babe, _api$consts2, _api$consts2$staking;

      var sessionLength = ((_api$consts = api.consts) === null || _api$consts === void 0 ? void 0 : (_api$consts$babe = _api$consts.babe) === null || _api$consts$babe === void 0 ? void 0 : _api$consts$babe.epochDuration) || api.registry.createType('u64', 1);
      var sessionsPerEra = ((_api$consts2 = api.consts) === null || _api$consts2 === void 0 ? void 0 : (_api$consts2$staking = _api$consts2.staking) === null || _api$consts2$staking === void 0 ? void 0 : _api$consts2$staking.sessionsPerEra) || api.registry.createType('SessionIndex', 1);
      return _objectSpread(_objectSpread({}, indexes), {}, {
        eraLength: api.registry.createType('BlockNumber', sessionsPerEra.mul(sessionLength)),
        isEpoch: !!api.query.babe,
        sessionLength: sessionLength,
        sessionsPerEra: sessionsPerEra
      });
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/session/progress.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.eraProgress = exports.eraLength = void 0;
exports.progress = progress;
exports.sessionProgress = void 0;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function withProgressField(field) {
  return function (instanceId, api) {
    return (0, _index.memo)(instanceId, function () {
      return api.derive.session.progress().pipe((0, _rxjs.map)(function (info) {
        return info[field];
      }));
    });
  };
}

function createDerive(api, info, _ref) {
  var _ref2 = _slicedToArray(_ref, 4),
      currentSlot = _ref2[0],
      epochIndex = _ref2[1],
      epochOrGenesisStartSlot = _ref2[2],
      activeEraStartSessionIndex = _ref2[3];

  var epochStartSlot = epochIndex.mul(info.sessionLength).iadd(epochOrGenesisStartSlot);
  var sessionProgress = currentSlot.sub(epochStartSlot);
  var eraProgress = info.currentIndex.sub(activeEraStartSessionIndex).imul(info.sessionLength).iadd(sessionProgress);
  return _objectSpread(_objectSpread({}, info), {}, {
    eraProgress: api.registry.createType('BlockNumber', eraProgress),
    sessionProgress: api.registry.createType('BlockNumber', sessionProgress)
  });
}

function queryAura(api) {
  return api.derive.session.info().pipe((0, _rxjs.map)(function (info) {
    return _objectSpread(_objectSpread({}, info), {}, {
      eraProgress: api.registry.createType('BlockNumber'),
      sessionProgress: api.registry.createType('BlockNumber')
    });
  }));
}

function queryBabe(api) {
  return api.derive.session.info().pipe((0, _rxjs.switchMap)(function (info) {
    var _api$query$staking;

    return (0, _rxjs.combineLatest)([(0, _rxjs.of)(info), // we may have no staking, but have babe (permissioned)
    (_api$query$staking = api.query.staking) !== null && _api$query$staking !== void 0 && _api$query$staking.erasStartSessionIndex ? api.queryMulti([api.query.babe.currentSlot, api.query.babe.epochIndex, api.query.babe.genesisSlot, [api.query.staking.erasStartSessionIndex, info.activeEra]]) : api.queryMulti([api.query.babe.currentSlot, api.query.babe.epochIndex, api.query.babe.genesisSlot])]);
  }), (0, _rxjs.map)(function (_ref3) {
    var _ref4 = _slicedToArray(_ref3, 2),
        info = _ref4[0],
        _ref4$ = _slicedToArray(_ref4[1], 4),
        currentSlot = _ref4$[0],
        epochIndex = _ref4$[1],
        genesisSlot = _ref4$[2],
        optStartIndex = _ref4$[3];

    return [info, [currentSlot, epochIndex, genesisSlot, optStartIndex && optStartIndex.isSome ? optStartIndex.unwrap() : api.registry.createType('SessionIndex', 1)]];
  }));
}
/**
 * @description Retrieves all the session and era query and calculates specific values on it as the length of the session and eras
 */


function progress(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    return api.query.babe ? queryBabe(api).pipe((0, _rxjs.map)(function (_ref5) {
      var _ref6 = _slicedToArray(_ref5, 2),
          info = _ref6[0],
          slots = _ref6[1];

      return createDerive(api, info, slots);
    })) : queryAura(api);
  });
}

var eraLength = withProgressField('eraLength');
exports.eraLength = eraLength;
var eraProgress = withProgressField('eraProgress');
exports.eraProgress = eraProgress;
var sessionProgress = withProgressField('sessionProgress');
exports.sessionProgress = sessionProgress;
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/session/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _indexes = require("./indexes.js");

Object.keys(_indexes).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _indexes[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _indexes[key];
    }
  });
});

var _info = require("./info.js");

Object.keys(_info).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _info[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _info[key];
    }
  });
});

var _progress = require("./progress.js");

Object.keys(_progress).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _progress[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _progress[key];
    }
  });
});
},{"./indexes.js":"node_modules/@polkadot/api-derive/session/indexes.js","./info.js":"node_modules/@polkadot/api-derive/session/info.js","./progress.js":"node_modules/@polkadot/api-derive/session/progress.js"}],"node_modules/@polkadot/api-derive/society/candidates.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.candidates = candidates;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

/**
 * @description Get the candidate info for a society
 */
function candidates(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    return api.query.society.candidates().pipe((0, _rxjs.switchMap)(function (candidates) {
      return (0, _rxjs.combineLatest)([(0, _rxjs.of)(candidates), api.query.society.suspendedCandidates.multi(candidates.map(function (_ref) {
        var who = _ref.who;
        return who;
      }))]);
    }), (0, _rxjs.map)(function (_ref2) {
      var _ref3 = _slicedToArray(_ref2, 2),
          candidates = _ref3[0],
          suspended = _ref3[1];

      return candidates.map(function (_ref4, index) {
        var kind = _ref4.kind,
            value = _ref4.value,
            who = _ref4.who;
        return {
          accountId: who,
          isSuspended: suspended[index].isSome,
          kind: kind,
          value: value
        };
      });
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/society/info.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.info = info;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

/**
 * @description Get the overall info for a society
 */
function info(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    return api.queryMulti([api.query.society.bids, api.query.society.defender, api.query.society.founder, api.query.society.head, api.query.society.maxMembers, api.query.society.pot]).pipe((0, _rxjs.map)(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 6),
          bids = _ref2[0],
          defender = _ref2[1],
          founder = _ref2[2],
          head = _ref2[3],
          maxMembers = _ref2[4],
          pot = _ref2[5];

      return {
        bids: bids,
        defender: defender.unwrapOr(undefined),
        founder: founder.unwrapOr(undefined),
        hasDefender: defender.isSome && head.isSome && !head.eq(defender) || false,
        head: head.unwrapOr(undefined),
        maxMembers: maxMembers,
        pot: pot
      };
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/society/member.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.member = member;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

/**
 * @description Get the member info for a society
 */
function member(instanceId, api) {
  return (0, _index.memo)(instanceId, function (accountId) {
    return api.derive.society._members([accountId]).pipe((0, _rxjs.map)(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 1),
          result = _ref2[0];

      return result;
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/society/members.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._members = _members;
exports.members = members;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _members(instanceId, api) {
  return (0, _index.memo)(instanceId, function (accountIds) {
    return (0, _rxjs.combineLatest)([(0, _rxjs.of)(accountIds), api.query.society.payouts.multi(accountIds), api.query.society.strikes.multi(accountIds), api.query.society.defenderVotes.multi(accountIds), api.query.society.suspendedMembers.multi(accountIds), api.query.society.vouching.multi(accountIds)]).pipe((0, _rxjs.map)(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 6),
          accountIds = _ref2[0],
          payouts = _ref2[1],
          strikes = _ref2[2],
          defenderVotes = _ref2[3],
          suspended = _ref2[4],
          vouching = _ref2[5];

      return accountIds.map(function (accountId, index) {
        return {
          accountId: accountId,
          isDefenderVoter: defenderVotes[index].isSome,
          isSuspended: suspended[index].isTrue,
          payouts: payouts[index],
          strikes: strikes[index],
          vote: defenderVotes[index].unwrapOr(undefined),
          vouching: vouching[index].unwrapOr(undefined)
        };
      });
    }));
  });
}
/**
 * @description Get the member info for a society
 */


function members(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    return api.query.society.members().pipe((0, _rxjs.switchMap)(function (members) {
      return api.derive.society._members(members);
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/society/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _candidates = require("./candidates.js");

Object.keys(_candidates).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _candidates[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _candidates[key];
    }
  });
});

var _info = require("./info.js");

Object.keys(_info).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _info[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _info[key];
    }
  });
});

var _member = require("./member.js");

Object.keys(_member).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _member[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _member[key];
    }
  });
});

var _members = require("./members.js");

Object.keys(_members).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _members[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _members[key];
    }
  });
});
},{"./candidates.js":"node_modules/@polkadot/api-derive/society/candidates.js","./info.js":"node_modules/@polkadot/api-derive/society/info.js","./member.js":"node_modules/@polkadot/api-derive/society/member.js","./members.js":"node_modules/@polkadot/api-derive/society/members.js"}],"node_modules/@polkadot/api-derive/staking/account.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.account = void 0;
exports.accounts = accounts;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _index = require("../util/index.js");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var QUERY_OPTS = {
  withDestination: true,
  withLedger: true,
  withNominations: true,
  withPrefs: true
};

function groupByEra(list) {
  return list.reduce(function (map, _ref) {
    var era = _ref.era,
        value = _ref.value;
    var key = era.toString();
    map[key] = (map[key] || _util.BN_ZERO).add(value.unwrap());
    return map;
  }, {});
}

function calculateUnlocking(api, stakingLedger, sessionInfo) {
  var results = Object.entries(groupByEra(((stakingLedger === null || stakingLedger === void 0 ? void 0 : stakingLedger.unlocking) || []).filter(function (_ref2) {
    var era = _ref2.era;
    return era.unwrap().gt(sessionInfo.activeEra);
  }))).map(function (_ref3) {
    var _ref4 = _slicedToArray(_ref3, 2),
        eraString = _ref4[0],
        value = _ref4[1];

    return {
      remainingEras: new _util.BN(eraString).isub(sessionInfo.activeEra),
      value: api.registry.createType('Balance', value)
    };
  });
  return results.length ? results : undefined;
}

function redeemableSum(api, stakingLedger, sessionInfo) {
  return api.registry.createType('Balance', ((stakingLedger === null || stakingLedger === void 0 ? void 0 : stakingLedger.unlocking) || []).reduce(function (total, _ref5) {
    var era = _ref5.era,
        value = _ref5.value;
    return sessionInfo.activeEra.gte(era.unwrap()) ? total.iadd(value.unwrap()) : total;
  }, new _util.BN(0)));
}

function parseResult(api, sessionInfo, keys, query) {
  return _objectSpread(_objectSpread(_objectSpread({}, keys), query), {}, {
    redeemable: redeemableSum(api, query.stakingLedger, sessionInfo),
    unlocking: calculateUnlocking(api, query.stakingLedger, sessionInfo)
  });
}
/**
 * @description From a list of stashes, fill in all the relevant staking details
 */


function accounts(instanceId, api) {
  return (0, _index.memo)(instanceId, function (accountIds) {
    return api.derive.session.info().pipe((0, _rxjs.switchMap)(function (sessionInfo) {
      return (0, _rxjs.combineLatest)([api.derive.staking.keysMulti(accountIds), api.derive.staking.queryMulti(accountIds, QUERY_OPTS)]).pipe((0, _rxjs.map)(function (_ref6) {
        var _ref7 = _slicedToArray(_ref6, 2),
            keys = _ref7[0],
            queries = _ref7[1];

        return queries.map(function (q, index) {
          return parseResult(api, sessionInfo, keys[index], q);
        });
      }));
    }));
  });
}
/**
 * @description From a stash, retrieve the controllerId and fill in all the relevant staking details
 */


var account = (0, _index.firstMemo)(function (api, accountId) {
  return api.derive.staking.accounts([accountId]);
});
exports.account = account;
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/staking/currentPoints.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.currentPoints = currentPoints;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @description Retrieve the staking overview, including elected and points earned
 */
function currentPoints(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    return api.derive.session.indexes().pipe((0, _rxjs.switchMap)(function (_ref) {
      var activeEra = _ref.activeEra;
      return api.query.staking.erasRewardPoints(activeEra);
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/staking/cache.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.filterCachedEras = filterCachedEras;
exports.getEraCache = getEraCache;
exports.getEraMultiCache = getEraMultiCache;
exports.setEraCache = setEraCache;
exports.setEraMultiCache = setEraMultiCache;

var _index = require("../util/index.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
function getEraCache(CACHE_KEY, era, withActive) {
  var cacheKey = "".concat(CACHE_KEY, "-").concat(era.toString());
  return [cacheKey, withActive ? undefined : _index.deriveCache.get(cacheKey)];
}

function getEraMultiCache(CACHE_KEY, eras, withActive) {
  var cached = withActive ? [] : eras.map(function (e) {
    return _index.deriveCache.get("".concat(CACHE_KEY, "-").concat(e.toString()));
  }).filter(function (v) {
    return !!v;
  });
  return cached;
}

function setEraCache(cacheKey, withActive, value) {
  !withActive && _index.deriveCache.set(cacheKey, value);
  return value;
}

function setEraMultiCache(CACHE_KEY, withActive, values) {
  !withActive && values.forEach(function (v) {
    return _index.deriveCache.set("".concat(CACHE_KEY, "-").concat(v.era.toString()), v);
  });
  return values;
}

function filterCachedEras(eras, cached, query) {
  return eras.map(function (e) {
    return cached.find(function (_ref) {
      var era = _ref.era;
      return e.eq(era);
    }) || query.find(function (_ref2) {
      var era = _ref2.era;
      return e.eq(era);
    });
  });
}
},{"../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/staking/util.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.combineEras = combineEras;
exports.erasHistoricApply = erasHistoricApply;
exports.erasHistoricApplyAccount = erasHistoricApplyAccount;
exports.filterEras = filterEras;
exports.singleEra = singleEra;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _index = require("../util/index.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
// only retrieve a maximum of 14 eras (84 / 6) at a time
// (This is not empirically calculated. Rather smaller sizes take longer
// time due to the serial nature, large sizes may tie up the RPCs)
var ERA_CHUNK_SIZE = 14;

function chunkEras(eras, fn) {
  var chunked = (0, _util.arrayChunk)(eras, ERA_CHUNK_SIZE);
  var index = 0;
  var subject = new _rxjs.BehaviorSubject(chunked[index]);
  return subject.pipe((0, _rxjs.switchMap)(fn), (0, _rxjs.tap)(function () {
    (0, _util.nextTick)(function () {
      index++;
      index === chunked.length ? subject.complete() : subject.next(chunked[index]);
    });
  }), (0, _rxjs.toArray)(), (0, _rxjs.map)(_util.arrayFlatten));
}

function filterEras(eras, list) {
  return eras.filter(function (e) {
    return !list.some(function (_ref) {
      var era = _ref.era;
      return e.eq(era);
    });
  });
}

function erasHistoricApply(fn) {
  return function (instanceId, api) {
    return (// Cannot quite get the typing right, but it is right in the code
      // eslint-disable-next-line @typescript-eslint/no-unsafe-return
      (0, _index.memo)(instanceId, function () {
        var withActive = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
        return api.derive.staking.erasHistoric(withActive).pipe((0, _rxjs.switchMap)(function (e) {
          return api.derive.staking[fn](e, withActive);
        }));
      })
    );
  };
}

function erasHistoricApplyAccount(fn) {
  return function (instanceId, api) {
    return (// Cannot quite get the typing right, but it is right in the code
      // eslint-disable-next-line @typescript-eslint/no-unsafe-return
      (0, _index.memo)(instanceId, function (accountId) {
        var withActive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        return api.derive.staking.erasHistoric(withActive).pipe((0, _rxjs.switchMap)(function (e) {
          return api.derive.staking[fn](accountId, e, withActive);
        }));
      })
    );
  };
}

function singleEra(fn) {
  return function (instanceId, api) {
    return (// Cannot quite get the typing right, but it is right in the code
      // eslint-disable-next-line @typescript-eslint/no-unsafe-return
      (0, _index.memo)(instanceId, function (era) {
        return api.derive.staking[fn](era, true);
      })
    );
  };
}

function combineEras(fn) {
  return function (instanceId, api) {
    return (// Cannot quite get the typing right, but it is right in the code
      // eslint-disable-next-line @typescript-eslint/no-unsafe-return
      (0, _index.memo)(instanceId, function (eras, withActive) {
        return !eras.length ? (0, _rxjs.of)([]) : chunkEras(eras, function (eras) {
          return (0, _rxjs.combineLatest)(eras.map(function (e) {
            return api.derive.staking[fn](e, withActive);
          }));
        });
      })
    );
  };
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/staking/erasExposure.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._eraExposure = _eraExposure;
exports.erasExposure = exports.eraExposure = exports._erasExposure = void 0;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

var _cache = require("./cache.js");

var _util = require("./util.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var CACHE_KEY = 'eraExposure';

function mapStakers(era, stakers) {
  var nominators = {};
  var validators = {};
  stakers.forEach(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
        key = _ref2[0],
        exposure = _ref2[1];

    var validatorId = key.args[1].toString();
    validators[validatorId] = exposure;
    exposure.others.forEach(function (_ref3, validatorIndex) {
      var who = _ref3.who;
      var nominatorId = who.toString();
      nominators[nominatorId] = nominators[nominatorId] || [];
      nominators[nominatorId].push({
        validatorId: validatorId,
        validatorIndex: validatorIndex
      });
    });
  });
  return {
    era: era,
    nominators: nominators,
    validators: validators
  };
}

function _eraExposure(instanceId, api) {
  return (0, _index.memo)(instanceId, function (era) {
    var withActive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    var _getEraCache = (0, _cache.getEraCache)(CACHE_KEY, era, withActive),
        _getEraCache2 = _slicedToArray(_getEraCache, 2),
        cacheKey = _getEraCache2[0],
        cached = _getEraCache2[1];

    return cached ? (0, _rxjs.of)(cached) : api.query.staking.erasStakersClipped.entries(era).pipe((0, _rxjs.map)(function (r) {
      return (0, _cache.setEraCache)(cacheKey, withActive, mapStakers(era, r));
    }));
  });
}

var eraExposure = (0, _util.singleEra)('_eraExposure');
exports.eraExposure = eraExposure;

var _erasExposure = (0, _util.combineEras)('_eraExposure');

exports._erasExposure = _erasExposure;
var erasExposure = (0, _util.erasHistoricApply)('_erasExposure');
exports.erasExposure = erasExposure;
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js","./cache.js":"node_modules/@polkadot/api-derive/staking/cache.js","./util.js":"node_modules/@polkadot/api-derive/staking/util.js"}],"node_modules/@polkadot/api-derive/staking/erasHistoric.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.erasHistoric = erasHistoric;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _index = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function erasHistoric(instanceId, api) {
  return (0, _index.memo)(instanceId, function (withActive) {
    return api.queryMulti([api.query.staking.activeEra, api.query.staking.historyDepth]).pipe((0, _rxjs.map)(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          activeEraOpt = _ref2[0],
          historyDepth = _ref2[1];

      var result = [];
      var max = historyDepth.toNumber();
      var activeEra = activeEraOpt.unwrapOrDefault().index;
      var lastEra = activeEra;

      while (lastEra.gte(_util.BN_ZERO) && result.length < max) {
        if (lastEra !== activeEra || withActive === true) {
          result.push(api.registry.createType('EraIndex', lastEra));
        }

        lastEra = lastEra.sub(_util.BN_ONE);
      } // go from oldest to newest


      return result.reverse();
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/staking/erasPoints.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._erasPoints = _erasPoints;
exports.erasPoints = void 0;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _index = require("../util/index.js");

var _cache = require("./cache.js");

var _util2 = require("./util.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var CACHE_KEY = 'eraPoints';

function mapValidators(_ref) {
  var individual = _ref.individual;
  return _toConsumableArray(individual.entries()).filter(function (_ref2) {
    var _ref3 = _slicedToArray(_ref2, 2),
        points = _ref3[1];

    return points.gt(_util.BN_ZERO);
  }).reduce(function (result, _ref4) {
    var _ref5 = _slicedToArray(_ref4, 2),
        validatorId = _ref5[0],
        points = _ref5[1];

    result[validatorId.toString()] = points;
    return result;
  }, {});
}

function mapPoints(eras, points) {
  return eras.map(function (era, index) {
    return {
      era: era,
      eraPoints: points[index].total,
      validators: mapValidators(points[index])
    };
  });
}

function _erasPoints(instanceId, api) {
  return (0, _index.memo)(instanceId, function (eras, withActive) {
    if (!eras.length) {
      return (0, _rxjs.of)([]);
    }

    var cached = (0, _cache.getEraMultiCache)(CACHE_KEY, eras, withActive);
    var remaining = (0, _util2.filterEras)(eras, cached);
    return !remaining.length ? (0, _rxjs.of)(cached) : api.query.staking.erasRewardPoints.multi(remaining).pipe((0, _rxjs.map)(function (p) {
      return (0, _cache.filterCachedEras)(eras, cached, (0, _cache.setEraMultiCache)(CACHE_KEY, withActive, mapPoints(remaining, p)));
    }));
  });
}

var erasPoints = (0, _util2.erasHistoricApply)('_erasPoints');
exports.erasPoints = erasPoints;
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js","./cache.js":"node_modules/@polkadot/api-derive/staking/cache.js","./util.js":"node_modules/@polkadot/api-derive/staking/util.js"}],"node_modules/@polkadot/api-derive/staking/erasPrefs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._eraPrefs = _eraPrefs;
exports.erasPrefs = exports.eraPrefs = exports._erasPrefs = void 0;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

var _cache = require("./cache.js");

var _util = require("./util.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var CACHE_KEY = 'eraPrefs';

function mapPrefs(era, all) {
  var validators = {};
  all.forEach(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
        key = _ref2[0],
        prefs = _ref2[1];

    validators[key.args[1].toString()] = prefs;
  });
  return {
    era: era,
    validators: validators
  };
}

function _eraPrefs(instanceId, api) {
  return (0, _index.memo)(instanceId, function (era, withActive) {
    var _getEraCache = (0, _cache.getEraCache)(CACHE_KEY, era, withActive),
        _getEraCache2 = _slicedToArray(_getEraCache, 2),
        cacheKey = _getEraCache2[0],
        cached = _getEraCache2[1];

    return cached ? (0, _rxjs.of)(cached) : api.query.staking.erasValidatorPrefs.entries(era).pipe((0, _rxjs.map)(function (r) {
      return (0, _cache.setEraCache)(cacheKey, withActive, mapPrefs(era, r));
    }));
  });
}

var eraPrefs = (0, _util.singleEra)('_eraPrefs');
exports.eraPrefs = eraPrefs;

var _erasPrefs = (0, _util.combineEras)('_eraPrefs');

exports._erasPrefs = _erasPrefs;
var erasPrefs = (0, _util.erasHistoricApply)('_erasPrefs');
exports.erasPrefs = erasPrefs;
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js","./cache.js":"node_modules/@polkadot/api-derive/staking/cache.js","./util.js":"node_modules/@polkadot/api-derive/staking/util.js"}],"node_modules/@polkadot/api-derive/staking/erasRewards.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._erasRewards = _erasRewards;
exports.erasRewards = void 0;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

var _cache = require("./cache.js");

var _util = require("./util.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
var CACHE_KEY = 'eraRewards';

function mapRewards(eras, optRewards) {
  return eras.map(function (era, index) {
    return {
      era: era,
      eraReward: optRewards[index].unwrapOrDefault()
    };
  });
}

function _erasRewards(instanceId, api) {
  return (0, _index.memo)(instanceId, function (eras, withActive) {
    if (!eras.length) {
      return (0, _rxjs.of)([]);
    }

    var cached = (0, _cache.getEraMultiCache)(CACHE_KEY, eras, withActive);
    var remaining = (0, _util.filterEras)(eras, cached);

    if (!remaining.length) {
      return (0, _rxjs.of)(cached);
    }

    return api.query.staking.erasValidatorReward.multi(remaining).pipe((0, _rxjs.map)(function (r) {
      return (0, _cache.filterCachedEras)(eras, cached, (0, _cache.setEraMultiCache)(CACHE_KEY, withActive, mapRewards(remaining, r)));
    }));
  });
}

var erasRewards = (0, _util.erasHistoricApply)('_erasRewards');
exports.erasRewards = erasRewards;
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js","./cache.js":"node_modules/@polkadot/api-derive/staking/cache.js","./util.js":"node_modules/@polkadot/api-derive/staking/util.js"}],"node_modules/@polkadot/api-derive/staking/erasSlashes.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._eraSlashes = _eraSlashes;
exports.erasSlashes = exports.eraSlashes = exports._erasSlashes = void 0;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

var _cache = require("./cache.js");

var _util = require("./util.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var CACHE_KEY = 'eraSlashes';

function mapSlashes(era, noms, vals) {
  var nominators = {};
  var validators = {};
  noms.forEach(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
        key = _ref2[0],
        optBalance = _ref2[1];

    nominators[key.args[1].toString()] = optBalance.unwrap();
  });
  vals.forEach(function (_ref3) {
    var _ref4 = _slicedToArray(_ref3, 2),
        key = _ref4[0],
        optRes = _ref4[1];

    validators[key.args[1].toString()] = optRes.unwrapOrDefault()[1];
  });
  return {
    era: era,
    nominators: nominators,
    validators: validators
  };
}

function _eraSlashes(instanceId, api) {
  return (0, _index.memo)(instanceId, function (era, withActive) {
    var _getEraCache = (0, _cache.getEraCache)(CACHE_KEY, era, withActive),
        _getEraCache2 = _slicedToArray(_getEraCache, 2),
        cacheKey = _getEraCache2[0],
        cached = _getEraCache2[1];

    return cached ? (0, _rxjs.of)(cached) : (0, _rxjs.combineLatest)([api.query.staking.nominatorSlashInEra.entries(era), api.query.staking.validatorSlashInEra.entries(era)]).pipe((0, _rxjs.map)(function (_ref5) {
      var _ref6 = _slicedToArray(_ref5, 2),
          n = _ref6[0],
          v = _ref6[1];

      return (0, _cache.setEraCache)(cacheKey, withActive, mapSlashes(era, n, v));
    }));
  });
}

var eraSlashes = (0, _util.singleEra)('_eraSlashes');
exports.eraSlashes = eraSlashes;

var _erasSlashes = (0, _util.combineEras)('_eraSlashes');

exports._erasSlashes = _erasSlashes;
var erasSlashes = (0, _util.erasHistoricApply)('_erasSlashes');
exports.erasSlashes = erasSlashes;
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js","./cache.js":"node_modules/@polkadot/api-derive/staking/cache.js","./util.js":"node_modules/@polkadot/api-derive/staking/util.js"}],"node_modules/@polkadot/api-derive/staking/electedInfo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.electedInfo = electedInfo;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _index = require("../util/index.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
var DEFAULT_FLAGS = {
  withController: true,
  withExposure: true,
  withPrefs: true
};

function combineAccounts(nextElected, validators) {
  return (0, _util.arrayFlatten)([nextElected, validators.filter(function (v) {
    return !nextElected.find(function (n) {
      return n.eq(v);
    });
  })]);
}

function electedInfo(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    var flags = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_FLAGS;
    return api.derive.staking.validators().pipe((0, _rxjs.switchMap)(function (_ref) {
      var nextElected = _ref.nextElected,
          validators = _ref.validators;
      return api.derive.staking.queryMulti(combineAccounts(nextElected, validators), flags).pipe((0, _rxjs.map)(function (info) {
        return {
          info: info,
          nextElected: nextElected,
          validators: validators
        };
      }));
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/staking/keys.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.keys = void 0;
exports.keysMulti = keysMulti;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function extractsIds(stashId, queuedKeys, nextKeys) {
  var sessionIds = (queuedKeys.find(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 1),
        currentId = _ref2[0];

    return currentId.eq(stashId);
  }) || [undefined, []])[1];
  var nextSessionIds = nextKeys.unwrapOr([]);
  return {
    nextSessionIds: Array.isArray(nextSessionIds) ? nextSessionIds : _toConsumableArray(nextSessionIds.values()),
    sessionIds: Array.isArray(sessionIds) ? sessionIds : _toConsumableArray(sessionIds.values())
  };
}

var keys = (0, _index.firstMemo)(function (api, stashId) {
  return api.derive.staking.keysMulti([stashId]);
});
exports.keys = keys;

function keysMulti(instanceId, api) {
  return (0, _index.memo)(instanceId, function (stashIds) {
    return stashIds.length ? api.query.session.queuedKeys().pipe((0, _rxjs.switchMap)(function (queuedKeys) {
      var _api$consts$session;

      return (0, _rxjs.combineLatest)([(0, _rxjs.of)(queuedKeys), (_api$consts$session = api.consts.session) !== null && _api$consts$session !== void 0 && _api$consts$session.dedupKeyPrefix ? api.query.session.nextKeys.multi(stashIds.map(function (s) {
        return [api.consts.session.dedupKeyPrefix, s];
      })) : (0, _rxjs.combineLatest)(stashIds.map(function (s) {
        return api.query.session.nextKeys(s);
      }))]);
    }), (0, _rxjs.map)(function (_ref3) {
      var _ref4 = _slicedToArray(_ref3, 2),
          queuedKeys = _ref4[0],
          nextKeys = _ref4[1];

      return stashIds.map(function (stashId, index) {
        return extractsIds(stashId, queuedKeys, nextKeys[index]);
      });
    })) : (0, _rxjs.of)([]);
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/staking/overview.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.overview = overview;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

/**
 * @description Retrieve the staking overview, including elected and points earned
 */
function overview(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    return (0, _rxjs.combineLatest)([api.derive.session.indexes(), api.derive.staking.validators()]).pipe((0, _rxjs.map)(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          indexes = _ref2[0],
          _ref2$ = _ref2[1],
          nextElected = _ref2$.nextElected,
          validators = _ref2$.validators;

      return _objectSpread(_objectSpread({}, indexes), {}, {
        nextElected: nextElected,
        validators: validators
      });
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/staking/ownExposure.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._ownExposures = _ownExposures;
exports.ownExposures = exports.ownExposure = void 0;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

var _util = require("./util.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _ownExposures(instanceId, api) {
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  return (0, _index.memo)(instanceId, function (accountId, eras, _withActive) {
    return eras.length ? (0, _rxjs.combineLatest)([(0, _rxjs.combineLatest)(eras.map(function (e) {
      return api.query.staking.erasStakersClipped(e, accountId);
    })), (0, _rxjs.combineLatest)(eras.map(function (e) {
      return api.query.staking.erasStakers(e, accountId);
    }))]).pipe((0, _rxjs.map)(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          clp = _ref2[0],
          exp = _ref2[1];

      return eras.map(function (era, index) {
        return {
          clipped: clp[index],
          era: era,
          exposure: exp[index]
        };
      });
    })) : (0, _rxjs.of)([]);
  });
}

var ownExposure = (0, _index.firstMemo)(function (api, accountId, era) {
  return api.derive.staking._ownExposures(accountId, [era], true);
});
exports.ownExposure = ownExposure;
var ownExposures = (0, _util.erasHistoricApplyAccount)('_ownExposures');
exports.ownExposures = ownExposures;
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js","./util.js":"node_modules/@polkadot/api-derive/staking/util.js"}],"node_modules/@polkadot/api-derive/staking/ownSlashes.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._ownSlashes = _ownSlashes;
exports.ownSlashes = exports.ownSlash = void 0;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

var _util = require("./util.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _ownSlashes(instanceId, api) {
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  return (0, _index.memo)(instanceId, function (accountId, eras, _withActive) {
    return eras.length ? (0, _rxjs.combineLatest)([(0, _rxjs.combineLatest)(eras.map(function (e) {
      return api.query.staking.validatorSlashInEra(e, accountId);
    })), (0, _rxjs.combineLatest)(eras.map(function (e) {
      return api.query.staking.nominatorSlashInEra(e, accountId);
    }))]).pipe((0, _rxjs.map)(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          vals = _ref2[0],
          noms = _ref2[1];

      return eras.map(function (era, index) {
        return {
          era: era,
          total: vals[index].isSome ? vals[index].unwrap()[1] : noms[index].unwrapOrDefault()
        };
      });
    })) : (0, _rxjs.of)([]);
  });
}

var ownSlash = (0, _index.firstMemo)(function (api, accountId, era) {
  return api.derive.staking._ownSlashes(accountId, [era], true);
});
exports.ownSlash = ownSlash;
var ownSlashes = (0, _util.erasHistoricApplyAccount)('_ownSlashes');
exports.ownSlashes = ownSlashes;
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js","./util.js":"node_modules/@polkadot/api-derive/staking/util.js"}],"node_modules/@polkadot/api-derive/staking/query.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.query = void 0;
exports.queryMulti = queryMulti;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function parseDetails(stashId, controllerIdOpt, nominatorsOpt, rewardDestination, validatorPrefs, exposure, stakingLedgerOpt) {
  return {
    accountId: stashId,
    controllerId: controllerIdOpt && controllerIdOpt.unwrapOr(null),
    exposure: exposure,
    nominators: nominatorsOpt.isSome ? nominatorsOpt.unwrap().targets : [],
    rewardDestination: rewardDestination,
    stakingLedger: stakingLedgerOpt.unwrapOrDefault(),
    stashId: stashId,
    validatorPrefs: validatorPrefs
  };
}

function getLedgers(api, optIds, _ref) {
  var _ref$withLedger = _ref.withLedger,
      withLedger = _ref$withLedger === void 0 ? false : _ref$withLedger;
  var ids = optIds.filter(function (o) {
    return withLedger && !!o && o.isSome;
  }).map(function (o) {
    return o.unwrap();
  });
  var emptyLed = api.registry.createType('Option<StakingLedger>');
  return (ids.length ? (0, _rxjs.combineLatest)(ids.map(function (s) {
    return api.query.staking.ledger(s);
  })) : (0, _rxjs.of)([])).pipe((0, _rxjs.map)(function (optLedgers) {
    var offset = -1;
    return optIds.map(function (o) {
      return o && o.isSome ? optLedgers[++offset] || emptyLed : emptyLed;
    });
  }));
}

function getStashInfo(api, stashIds, activeEra, _ref2) {
  var withController = _ref2.withController,
      withDestination = _ref2.withDestination,
      withExposure = _ref2.withExposure,
      withLedger = _ref2.withLedger,
      withNominations = _ref2.withNominations,
      withPrefs = _ref2.withPrefs;
  var emptyNoms = api.registry.createType('Option<Nominations>');
  var emptyRewa = api.registry.createType('RewardDestination');
  var emptyExpo = api.registry.createType('Exposure');
  var emptyPrefs = api.registry.createType('ValidatorPrefs');
  return (0, _rxjs.combineLatest)([withController || withLedger ? (0, _rxjs.combineLatest)(stashIds.map(function (s) {
    return api.query.staking.bonded(s);
  })) : (0, _rxjs.of)(stashIds.map(function () {
    return null;
  })), withNominations ? (0, _rxjs.combineLatest)(stashIds.map(function (s) {
    return api.query.staking.nominators(s);
  })) : (0, _rxjs.of)(stashIds.map(function () {
    return emptyNoms;
  })), withDestination ? (0, _rxjs.combineLatest)(stashIds.map(function (s) {
    return api.query.staking.payee(s);
  })) : (0, _rxjs.of)(stashIds.map(function () {
    return emptyRewa;
  })), withPrefs ? (0, _rxjs.combineLatest)(stashIds.map(function (s) {
    return api.query.staking.validators(s);
  })) : (0, _rxjs.of)(stashIds.map(function () {
    return emptyPrefs;
  })), withExposure ? (0, _rxjs.combineLatest)(stashIds.map(function (s) {
    return api.query.staking.erasStakers(activeEra, s);
  })) : (0, _rxjs.of)(stashIds.map(function () {
    return emptyExpo;
  }))]);
}

function getBatch(api, activeEra, stashIds, flags) {
  return getStashInfo(api, stashIds, activeEra, flags).pipe((0, _rxjs.switchMap)(function (_ref3) {
    var _ref4 = _slicedToArray(_ref3, 5),
        controllerIdOpt = _ref4[0],
        nominatorsOpt = _ref4[1],
        rewardDestination = _ref4[2],
        validatorPrefs = _ref4[3],
        exposure = _ref4[4];

    return getLedgers(api, controllerIdOpt, flags).pipe((0, _rxjs.map)(function (stakingLedgerOpts) {
      return stashIds.map(function (stashId, index) {
        return parseDetails(stashId, controllerIdOpt[index], nominatorsOpt[index], rewardDestination[index], validatorPrefs[index], exposure[index], stakingLedgerOpts[index]);
      });
    }));
  }));
} //

/**
 * @description From a stash, retrieve the controllerId and all relevant details
 */


var query = (0, _index.firstMemo)(function (api, accountId, flags) {
  return api.derive.staking.queryMulti([accountId], flags);
});
exports.query = query;

function queryMulti(instanceId, api) {
  return (0, _index.memo)(instanceId, function (accountIds, flags) {
    return accountIds.length ? api.derive.session.indexes().pipe((0, _rxjs.switchMap)(function (_ref5) {
      var activeEra = _ref5.activeEra;
      var stashIds = accountIds.map(function (accountId) {
        return api.registry.createType('AccountId', accountId);
      });
      return getBatch(api, activeEra, stashIds, flags);
    })) : (0, _rxjs.of)([]);
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/staking/stakerExposure.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._stakerExposures = _stakerExposures;
exports.stakerExposure = void 0;
exports.stakerExposures = stakerExposures;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
function _stakerExposures(instanceId, api) {
  return (0, _index.memo)(instanceId, function (accountIds, eras) {
    var withActive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var stakerIds = accountIds.map(function (a) {
      return api.registry.createType('AccountId', a).toString();
    });
    return api.derive.staking._erasExposure(eras, withActive).pipe((0, _rxjs.map)(function (exposures) {
      return stakerIds.map(function (stakerId) {
        return exposures.map(function (_ref) {
          var era = _ref.era,
              allNominators = _ref.nominators,
              allValidators = _ref.validators;
          var isValidator = !!allValidators[stakerId];
          var validators = {};
          var nominating = allNominators[stakerId] || [];

          if (isValidator) {
            validators[stakerId] = allValidators[stakerId];
          } else if (nominating) {
            nominating.forEach(function (_ref2) {
              var validatorId = _ref2.validatorId;
              validators[validatorId] = allValidators[validatorId];
            });
          }

          return {
            era: era,
            isEmpty: !Object.keys(validators).length,
            isValidator: isValidator,
            nominating: nominating,
            validators: validators
          };
        });
      });
    }));
  });
}

function stakerExposures(instanceId, api) {
  return (0, _index.memo)(instanceId, function (accountIds) {
    var withActive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    return api.derive.staking.erasHistoric(withActive).pipe((0, _rxjs.switchMap)(function (eras) {
      return api.derive.staking._stakerExposures(accountIds, eras, withActive);
    }));
  });
}

var stakerExposure = (0, _index.firstMemo)(function (api, accountId, withActive) {
  return api.derive.staking.stakerExposures([accountId], withActive);
});
exports.stakerExposure = stakerExposure;
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/staking/stakerPoints.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._stakerPoints = _stakerPoints;
exports.stakerPoints = void 0;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

var _util = require("./util.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
function _stakerPoints(instanceId, api) {
  return (0, _index.memo)(instanceId, function (accountId, eras, withActive) {
    var stakerId = api.registry.createType('AccountId', accountId).toString();
    return api.derive.staking._erasPoints(eras, withActive).pipe((0, _rxjs.map)(function (points) {
      return points.map(function (_ref) {
        var era = _ref.era,
            eraPoints = _ref.eraPoints,
            validators = _ref.validators;
        return {
          era: era,
          eraPoints: eraPoints,
          points: validators[stakerId] || api.registry.createType('RewardPoint')
        };
      });
    }));
  });
}

var stakerPoints = (0, _util.erasHistoricApplyAccount)('_stakerPoints');
exports.stakerPoints = stakerPoints;
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js","./util.js":"node_modules/@polkadot/api-derive/staking/util.js"}],"node_modules/@polkadot/api-derive/staking/stakerPrefs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._stakerPrefs = _stakerPrefs;
exports.stakerPrefs = void 0;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

var _util = require("./util.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
function _stakerPrefs(instanceId, api) {
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  return (0, _index.memo)(instanceId, function (accountId, eras, _withActive) {
    return api.query.staking.erasValidatorPrefs.multi(eras.map(function (e) {
      return [e, accountId];
    })).pipe((0, _rxjs.map)(function (all) {
      return all.map(function (validatorPrefs, index) {
        return {
          era: eras[index],
          validatorPrefs: validatorPrefs
        };
      });
    }));
  });
}

var stakerPrefs = (0, _util.erasHistoricApplyAccount)('_stakerPrefs');
exports.stakerPrefs = stakerPrefs;
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js","./util.js":"node_modules/@polkadot/api-derive/staking/util.js"}],"node_modules/@polkadot/api-derive/staking/stakerRewards.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._stakerRewards = _stakerRewards;
exports._stakerRewardsEras = _stakerRewardsEras;
exports.stakerRewards = void 0;
exports.stakerRewardsMulti = stakerRewardsMulti;
exports.stakerRewardsMultiEras = stakerRewardsMultiEras;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _index = require("../util/index.js");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function parseRewards(api, stashId, _ref, exposures) {
  var _ref2 = _slicedToArray(_ref, 3),
      erasPoints = _ref2[0],
      erasPrefs = _ref2[1],
      erasRewards = _ref2[2];

  return exposures.map(function (_ref3) {
    var era = _ref3.era,
        isEmpty = _ref3.isEmpty,
        isValidator = _ref3.isValidator,
        nominating = _ref3.nominating,
        eraValidators = _ref3.validators;

    var _ref4 = erasPoints.find(function (p) {
      return p.era.eq(era);
    }) || {
      eraPoints: _util.BN_ZERO,
      validators: {}
    },
        eraPoints = _ref4.eraPoints,
        allValPoints = _ref4.validators;

    var _ref5 = erasRewards.find(function (r) {
      return r.era.eq(era);
    }) || {
      eraReward: api.registry.createType('Balance')
    },
        eraReward = _ref5.eraReward;

    var _ref6 = erasPrefs.find(function (p) {
      return p.era.eq(era);
    }) || {
      validators: {}
    },
        allValPrefs = _ref6.validators;

    var validators = {};
    var stakerId = stashId.toString();
    Object.entries(eraValidators).forEach(function (_ref7) {
      var _ref8 = _slicedToArray(_ref7, 2),
          validatorId = _ref8[0],
          exposure = _ref8[1];

      var _allValPrefs$validato, _exposure$total;

      var valPoints = allValPoints[validatorId] || _util.BN_ZERO;
      var valComm = ((_allValPrefs$validato = allValPrefs[validatorId]) === null || _allValPrefs$validato === void 0 ? void 0 : _allValPrefs$validato.commission.unwrap()) || _util.BN_ZERO;
      var expTotal = ((_exposure$total = exposure.total) === null || _exposure$total === void 0 ? void 0 : _exposure$total.unwrap()) || _util.BN_ZERO;
      var avail = _util.BN_ZERO;
      var value;

      if (!(expTotal.isZero() || valPoints.isZero() || eraPoints.isZero())) {
        avail = eraReward.mul(valPoints).div(eraPoints);
        var valCut = valComm.mul(avail).div(_util.BN_BILLION);
        var staked;

        if (validatorId === stakerId) {
          staked = exposure.own.unwrap();
        } else {
          var stakerExp = exposure.others.find(function (_ref9) {
            var who = _ref9.who;
            return who.eq(stakerId);
          });
          staked = stakerExp ? stakerExp.value.unwrap() : _util.BN_ZERO;
        }

        value = avail.sub(valCut).imul(staked).div(expTotal).iadd(validatorId === stakerId ? valCut : _util.BN_ZERO);
      }

      validators[validatorId] = {
        total: api.registry.createType('Balance', avail),
        value: api.registry.createType('Balance', value)
      };
    });
    return {
      era: era,
      eraReward: eraReward,
      isEmpty: isEmpty,
      isValidator: isValidator,
      nominating: nominating,
      validators: validators
    };
  });
}

function allUniqValidators(rewards) {
  return rewards.reduce(function (_ref10, rewards) {
    var _ref11 = _slicedToArray(_ref10, 2),
        all = _ref11[0],
        perStash = _ref11[1];

    var uniq = [];
    perStash.push(uniq);
    rewards.forEach(function (_ref12) {
      var validators = _ref12.validators;
      return Object.keys(validators).forEach(function (validatorId) {
        if (!uniq.includes(validatorId)) {
          uniq.push(validatorId);

          if (!all.includes(validatorId)) {
            all.push(validatorId);
          }
        }
      });
    });
    return [all, perStash];
  }, [[], []]);
}

function removeClaimed(validators, queryValidators, reward) {
  var rm = [];
  Object.keys(reward.validators).forEach(function (validatorId) {
    var index = validators.indexOf(validatorId);

    if (index !== -1) {
      var valLedger = queryValidators[index].stakingLedger;

      if (valLedger !== null && valLedger !== void 0 && valLedger.claimedRewards.some(function (e) {
        return reward.era.eq(e);
      })) {
        rm.push(validatorId);
      }
    }
  });
  rm.forEach(function (validatorId) {
    delete reward.validators[validatorId];
  });
}

function filterRewards(eras, valInfo, _ref13) {
  var rewards = _ref13.rewards,
      stakingLedger = _ref13.stakingLedger;
  var filter = eras.filter(function (e) {
    return !stakingLedger.claimedRewards.some(function (s) {
      return s.eq(e);
    });
  });
  var validators = valInfo.map(function (_ref14) {
    var _ref15 = _slicedToArray(_ref14, 1),
        v = _ref15[0];

    return v;
  });
  var queryValidators = valInfo.map(function (_ref16) {
    var _ref17 = _slicedToArray(_ref16, 2),
        q = _ref17[1];

    return q;
  });
  return rewards.filter(function (_ref18) {
    var isEmpty = _ref18.isEmpty;
    return !isEmpty;
  }).filter(function (reward) {
    if (!filter.some(function (e) {
      return reward.era.eq(e);
    })) {
      return false;
    }

    removeClaimed(validators, queryValidators, reward);
    return true;
  }).filter(function (_ref19) {
    var validators = _ref19.validators;
    return Object.keys(validators).length !== 0;
  }).map(function (reward) {
    return _objectSpread(_objectSpread({}, reward), {}, {
      nominators: reward.nominating.filter(function (n) {
        return reward.validators[n.validatorId];
      })
    });
  });
}

function _stakerRewardsEras(instanceId, api) {
  return (0, _index.memo)(instanceId, function (eras) {
    var withActive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    return (0, _rxjs.combineLatest)([api.derive.staking._erasPoints(eras, withActive), api.derive.staking._erasPrefs(eras, withActive), api.derive.staking._erasRewards(eras, withActive)]);
  });
}

function _stakerRewards(instanceId, api) {
  return (0, _index.memo)(instanceId, function (accountIds, eras) {
    var withActive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    return (0, _rxjs.combineLatest)([api.derive.staking.queryMulti(accountIds, {
      withLedger: true
    }), api.derive.staking._stakerExposures(accountIds, eras, withActive), api.derive.staking._stakerRewardsEras(eras, withActive)]).pipe((0, _rxjs.switchMap)(function (_ref20) {
      var _ref21 = _slicedToArray(_ref20, 3),
          queries = _ref21[0],
          exposures = _ref21[1],
          erasResult = _ref21[2];

      var allRewards = queries.map(function (_ref22, index) {
        var stakingLedger = _ref22.stakingLedger,
            stashId = _ref22.stashId;
        return !stashId || !stakingLedger ? [] : parseRewards(api, stashId, erasResult, exposures[index]);
      });

      if (withActive) {
        return (0, _rxjs.of)(allRewards);
      }

      var _allUniqValidators = allUniqValidators(allRewards),
          _allUniqValidators2 = _slicedToArray(_allUniqValidators, 2),
          allValidators = _allUniqValidators2[0],
          stashValidators = _allUniqValidators2[1];

      return api.derive.staking.queryMulti(allValidators, {
        withLedger: true
      }).pipe((0, _rxjs.map)(function (queriedVals) {
        return queries.map(function (_ref23, index) {
          var stakingLedger = _ref23.stakingLedger;
          return filterRewards(eras, stashValidators[index].map(function (validatorId) {
            return [validatorId, queriedVals.find(function (q) {
              return q.accountId.eq(validatorId);
            })];
          }), {
            rewards: allRewards[index],
            stakingLedger: stakingLedger
          });
        });
      }));
    }));
  });
}

var stakerRewards = (0, _index.firstMemo)(function (api, accountId, withActive) {
  return api.derive.staking.erasHistoric(withActive).pipe((0, _rxjs.switchMap)(function (eras) {
    return api.derive.staking._stakerRewards([accountId], eras, withActive);
  }));
});
exports.stakerRewards = stakerRewards;

function stakerRewardsMultiEras(instanceId, api) {
  return (0, _index.memo)(instanceId, function (accountIds, eras) {
    return accountIds.length && eras.length ? api.derive.staking._stakerRewards(accountIds, eras, false) : (0, _rxjs.of)([]);
  });
}

function stakerRewardsMulti(instanceId, api) {
  return (0, _index.memo)(instanceId, function (accountIds) {
    var withActive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    return api.derive.staking.erasHistoric(withActive).pipe((0, _rxjs.switchMap)(function (eras) {
      return api.derive.staking.stakerRewardsMultiEras(accountIds, eras);
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/staking/stakerSlashes.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._stakerSlashes = _stakerSlashes;
exports.stakerSlashes = void 0;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

var _util = require("./util.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
function _stakerSlashes(instanceId, api) {
  return (0, _index.memo)(instanceId, function (accountId, eras, withActive) {
    var stakerId = api.registry.createType('AccountId', accountId).toString();
    return api.derive.staking._erasSlashes(eras, withActive).pipe((0, _rxjs.map)(function (slashes) {
      return slashes.map(function (_ref) {
        var era = _ref.era,
            nominators = _ref.nominators,
            validators = _ref.validators;
        return {
          era: era,
          total: nominators[stakerId] || validators[stakerId] || api.registry.createType('Balance')
        };
      });
    }));
  });
}

var stakerSlashes = (0, _util.erasHistoricApplyAccount)('_stakerSlashes');
exports.stakerSlashes = stakerSlashes;
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js","./util.js":"node_modules/@polkadot/api-derive/staking/util.js"}],"node_modules/@polkadot/api-derive/staking/stashes.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.stashes = stashes;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function onBondedEvent(api) {
  var current = Date.now();
  return api.query.system.events().pipe((0, _rxjs.map)(function (events) {
    current = events.filter(function (_ref) {
      var event = _ref.event,
          phase = _ref.phase;

      try {
        return phase.isApplyExtrinsic && event.section === 'staking' && event.method === 'Bonded';
      } catch (_unused) {
        return false;
      }
    }) ? Date.now() : current;
    return current;
  }), (0, _rxjs.startWith)(current), (0, _index.drr)({
    skipTimeout: true
  }));
}
/**
 * @description Retrieve the list of all validator stashes
 */


function stashes(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    return onBondedEvent(api).pipe((0, _rxjs.switchMap)(function () {
      return api.query.staking.validators.keys();
    }), (0, _rxjs.map)(function (keys) {
      return keys.map(function (_ref2) {
        var _ref2$args = _slicedToArray(_ref2.args, 1),
            v = _ref2$args[0];

        return v;
      }).filter(function (a) {
        return a;
      });
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/staking/validators.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.nextElected = nextElected;
exports.validators = validators;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function nextElected(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    return api.query.staking.erasStakers ? api.derive.session.indexes().pipe( // only populate for next era in the last session, so track both here - entries are not
    // subscriptions, so we need a trigger - currentIndex acts as that trigger to refresh
    (0, _rxjs.switchMap)(function (_ref) {
      var currentEra = _ref.currentEra;
      return api.query.staking.erasStakers.keys(currentEra);
    }), (0, _rxjs.map)(function (keys) {
      return keys.map(function (_ref2) {
        var _ref2$args = _slicedToArray(_ref2.args, 2),
            accountId = _ref2$args[1];

        return accountId;
      });
    })) : api.query.staking.currentElected();
  });
}
/**
 * @description Retrieve latest list of validators
 */


function validators(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    return (// Sadly the node-template is (for some obscure reason) not comprehensive, so while the derive works
      // in all actual real-world deployed chains, it does create some confusion for limited template chains
      (0, _rxjs.combineLatest)([api.query.session ? api.query.session.validators() : (0, _rxjs.of)([]), api.query.staking ? api.derive.staking.nextElected() : (0, _rxjs.of)([])]).pipe((0, _rxjs.map)(function (_ref3) {
        var _ref4 = _slicedToArray(_ref3, 2),
            validators = _ref4[0],
            nextElected = _ref4[1];

        return {
          nextElected: nextElected.length ? nextElected : validators,
          validators: validators
        };
      }))
    );
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/staking/waitingInfo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.waitingInfo = waitingInfo;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var DEFAULT_FLAGS = {
  withController: true,
  withPrefs: true
};

function waitingInfo(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    var flags = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_FLAGS;
    return (0, _rxjs.combineLatest)([api.derive.staking.validators(), api.derive.staking.stashes()]).pipe((0, _rxjs.switchMap)(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          nextElected = _ref2[0].nextElected,
          stashes = _ref2[1];

      var elected = nextElected.map(function (a) {
        return a.toString();
      });
      var waiting = stashes.filter(function (v) {
        return !elected.includes(v.toString());
      });
      return api.derive.staking.queryMulti(waiting, flags).pipe((0, _rxjs.map)(function (info) {
        return {
          info: info,
          waiting: waiting
        };
      }));
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/staking/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _account = require("./account.js");

Object.keys(_account).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _account[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _account[key];
    }
  });
});

var _currentPoints = require("./currentPoints.js");

Object.keys(_currentPoints).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _currentPoints[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _currentPoints[key];
    }
  });
});

var _erasExposure = require("./erasExposure.js");

Object.keys(_erasExposure).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _erasExposure[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _erasExposure[key];
    }
  });
});

var _erasHistoric = require("./erasHistoric.js");

Object.keys(_erasHistoric).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _erasHistoric[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _erasHistoric[key];
    }
  });
});

var _erasPoints = require("./erasPoints.js");

Object.keys(_erasPoints).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _erasPoints[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _erasPoints[key];
    }
  });
});

var _erasPrefs = require("./erasPrefs.js");

Object.keys(_erasPrefs).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _erasPrefs[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _erasPrefs[key];
    }
  });
});

var _erasRewards = require("./erasRewards.js");

Object.keys(_erasRewards).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _erasRewards[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _erasRewards[key];
    }
  });
});

var _erasSlashes = require("./erasSlashes.js");

Object.keys(_erasSlashes).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _erasSlashes[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _erasSlashes[key];
    }
  });
});

var _electedInfo = require("./electedInfo.js");

Object.keys(_electedInfo).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _electedInfo[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _electedInfo[key];
    }
  });
});

var _keys = require("./keys.js");

Object.keys(_keys).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _keys[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _keys[key];
    }
  });
});

var _overview = require("./overview.js");

Object.keys(_overview).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _overview[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _overview[key];
    }
  });
});

var _ownExposure = require("./ownExposure.js");

Object.keys(_ownExposure).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _ownExposure[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ownExposure[key];
    }
  });
});

var _ownSlashes = require("./ownSlashes.js");

Object.keys(_ownSlashes).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _ownSlashes[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ownSlashes[key];
    }
  });
});

var _query = require("./query.js");

Object.keys(_query).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _query[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _query[key];
    }
  });
});

var _stakerExposure = require("./stakerExposure.js");

Object.keys(_stakerExposure).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _stakerExposure[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _stakerExposure[key];
    }
  });
});

var _stakerPoints = require("./stakerPoints.js");

Object.keys(_stakerPoints).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _stakerPoints[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _stakerPoints[key];
    }
  });
});

var _stakerPrefs = require("./stakerPrefs.js");

Object.keys(_stakerPrefs).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _stakerPrefs[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _stakerPrefs[key];
    }
  });
});

var _stakerRewards = require("./stakerRewards.js");

Object.keys(_stakerRewards).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _stakerRewards[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _stakerRewards[key];
    }
  });
});

var _stakerSlashes = require("./stakerSlashes.js");

Object.keys(_stakerSlashes).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _stakerSlashes[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _stakerSlashes[key];
    }
  });
});

var _stashes = require("./stashes.js");

Object.keys(_stashes).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _stashes[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _stashes[key];
    }
  });
});

var _validators = require("./validators.js");

Object.keys(_validators).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _validators[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _validators[key];
    }
  });
});

var _waitingInfo = require("./waitingInfo.js");

Object.keys(_waitingInfo).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _waitingInfo[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _waitingInfo[key];
    }
  });
});
},{"./account.js":"node_modules/@polkadot/api-derive/staking/account.js","./currentPoints.js":"node_modules/@polkadot/api-derive/staking/currentPoints.js","./erasExposure.js":"node_modules/@polkadot/api-derive/staking/erasExposure.js","./erasHistoric.js":"node_modules/@polkadot/api-derive/staking/erasHistoric.js","./erasPoints.js":"node_modules/@polkadot/api-derive/staking/erasPoints.js","./erasPrefs.js":"node_modules/@polkadot/api-derive/staking/erasPrefs.js","./erasRewards.js":"node_modules/@polkadot/api-derive/staking/erasRewards.js","./erasSlashes.js":"node_modules/@polkadot/api-derive/staking/erasSlashes.js","./electedInfo.js":"node_modules/@polkadot/api-derive/staking/electedInfo.js","./keys.js":"node_modules/@polkadot/api-derive/staking/keys.js","./overview.js":"node_modules/@polkadot/api-derive/staking/overview.js","./ownExposure.js":"node_modules/@polkadot/api-derive/staking/ownExposure.js","./ownSlashes.js":"node_modules/@polkadot/api-derive/staking/ownSlashes.js","./query.js":"node_modules/@polkadot/api-derive/staking/query.js","./stakerExposure.js":"node_modules/@polkadot/api-derive/staking/stakerExposure.js","./stakerPoints.js":"node_modules/@polkadot/api-derive/staking/stakerPoints.js","./stakerPrefs.js":"node_modules/@polkadot/api-derive/staking/stakerPrefs.js","./stakerRewards.js":"node_modules/@polkadot/api-derive/staking/stakerRewards.js","./stakerSlashes.js":"node_modules/@polkadot/api-derive/staking/stakerSlashes.js","./stashes.js":"node_modules/@polkadot/api-derive/staking/stashes.js","./validators.js":"node_modules/@polkadot/api-derive/staking/validators.js","./waitingInfo.js":"node_modules/@polkadot/api-derive/staking/waitingInfo.js"}],"node_modules/@polkadot/api-derive/technicalCommittee/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.proposals = exports.proposalHashes = exports.proposalCount = exports.proposal = exports.prime = exports.members = exports.hasProposals = void 0;

var _index = require("../collective/index.js");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
var members = (0, _index.members)('technicalCommittee');
exports.members = members;
var hasProposals = (0, _index.hasProposals)('technicalCommittee');
exports.hasProposals = hasProposals;
var proposal = (0, _index.proposal)('technicalCommittee');
exports.proposal = proposal;
var proposalCount = (0, _index.proposalCount)('technicalCommittee');
exports.proposalCount = proposalCount;
var proposalHashes = (0, _index.proposalHashes)('technicalCommittee');
exports.proposalHashes = proposalHashes;
var proposals = (0, _index.proposals)('technicalCommittee');
exports.proposals = proposals;
var prime = (0, _index.prime)('technicalCommittee');
exports.prime = prime;
},{"../collective/index.js":"node_modules/@polkadot/api-derive/collective/index.js"}],"node_modules/@polkadot/api-derive/treasury/proposals.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.proposals = proposals;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function parseResult(api, _ref) {
  var allIds = _ref.allIds,
      allProposals = _ref.allProposals,
      approvalIds = _ref.approvalIds,
      councilProposals = _ref.councilProposals,
      proposalCount = _ref.proposalCount;
  var approvals = [];
  var proposals = [];
  var councilTreasury = councilProposals.filter(function (_ref2) {
    var proposal = _ref2.proposal;
    return proposal && (api.tx.treasury.approveProposal.is(proposal) || api.tx.treasury.rejectProposal.is(proposal));
  });
  allIds.forEach(function (id, index) {
    if (allProposals[index].isSome) {
      var council = councilTreasury.filter(function (_ref3) {
        var proposal = _ref3.proposal;
        return proposal && id.eq(proposal.args[0]);
      }).sort(function (a, b) {
        return a.proposal && b.proposal ? a.proposal.method.localeCompare(b.proposal.method) : a.proposal ? -1 : 1;
      });
      var isApproval = approvalIds.some(function (approvalId) {
        return approvalId.eq(id);
      });
      var derived = {
        council: council,
        id: id,
        proposal: allProposals[index].unwrap()
      };

      if (isApproval) {
        approvals.push(derived);
      } else {
        proposals.push(derived);
      }
    }
  });
  return {
    approvals: approvals,
    proposalCount: proposalCount,
    proposals: proposals
  };
}

function retrieveProposals(api, proposalCount, approvalIds) {
  var proposalIds = [];
  var count = proposalCount.toNumber();

  var _loop = function _loop(index) {
    if (!approvalIds.some(function (id) {
      return id.eqn(index);
    })) {
      proposalIds.push(api.registry.createType('ProposalIndex', index));
    }
  };

  for (var index = 0; index < count; index++) {
    _loop(index);
  }

  var allIds = [].concat(proposalIds, _toConsumableArray(approvalIds));
  return (0, _rxjs.combineLatest)([api.query.treasury.proposals.multi(allIds), api.derive.council ? api.derive.council.proposals() : (0, _rxjs.of)([])]).pipe((0, _rxjs.map)(function (_ref4) {
    var _ref5 = _slicedToArray(_ref4, 2),
        allProposals = _ref5[0],
        councilProposals = _ref5[1];

    return parseResult(api, {
      allIds: allIds,
      allProposals: allProposals,
      approvalIds: approvalIds,
      councilProposals: councilProposals,
      proposalCount: proposalCount
    });
  }));
}
/**
 * @description Retrieve all active and approved treasury proposals, along with their info
 */


function proposals(instanceId, api) {
  return (0, _index.memo)(instanceId, function () {
    return api.query.treasury ? (0, _rxjs.combineLatest)([api.query.treasury.proposalCount(), api.query.treasury.approvals()]).pipe((0, _rxjs.switchMap)(function (_ref6) {
      var _ref7 = _slicedToArray(_ref6, 2),
          proposalCount = _ref7[0],
          approvalIds = _ref7[1];

      return retrieveProposals(api, proposalCount, approvalIds);
    })) : (0, _rxjs.of)({
      approvals: [],
      proposalCount: api.registry.createType('ProposalIndex'),
      proposals: []
    });
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/treasury/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _proposals = require("./proposals.js");

Object.keys(_proposals).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _proposals[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _proposals[key];
    }
  });
});
},{"./proposals.js":"node_modules/@polkadot/api-derive/treasury/proposals.js"}],"node_modules/@polkadot/api-derive/tx/events.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.events = events;

var _rxjs = require("rxjs");

var _index = require("../util/index.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function events(instanceId, api) {
  return (0, _index.memo)(instanceId, function (blockHash) {
    return (0, _rxjs.combineLatest)([api.rpc.chain.getBlock(blockHash), api.queryAt(blockHash).pipe((0, _rxjs.switchMap)(function (queryAt) {
      return queryAt.system.events();
    }))]).pipe((0, _rxjs.map)(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          block = _ref2[0],
          events = _ref2[1];

      return {
        block: block,
        events: events
      };
    }));
  });
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","../util/index.js":"node_modules/@polkadot/api-derive/util/index.js"}],"node_modules/@polkadot/api-derive/tx/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MORTAL_PERIOD = exports.MAX_FINALITY_LAG = exports.FALLBACK_PERIOD = exports.FALLBACK_MAX_HASH_COUNT = void 0;

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
var FALLBACK_MAX_HASH_COUNT = 250; // default here to 5 min eras, adjusted based on the actual blocktime

exports.FALLBACK_MAX_HASH_COUNT = FALLBACK_MAX_HASH_COUNT;
var FALLBACK_PERIOD = new _util.BN(6 * 1000);
exports.FALLBACK_PERIOD = FALLBACK_PERIOD;
var MAX_FINALITY_LAG = new _util.BN(5);
exports.MAX_FINALITY_LAG = MAX_FINALITY_LAG;
var MORTAL_PERIOD = new _util.BN(5 * 60 * 1000);
exports.MORTAL_PERIOD = MORTAL_PERIOD;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/api-derive/tx/signingInfo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.signingInfo = signingInfo;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _constants = require("./constants.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function latestNonce(api, address) {
  return api.derive.balances.account(address).pipe((0, _rxjs.map)(function (_ref) {
    var accountNonce = _ref.accountNonce;
    return accountNonce;
  }));
}

function nextNonce(api, address) {
  var _api$rpc$system;

  return (_api$rpc$system = api.rpc.system) !== null && _api$rpc$system !== void 0 && _api$rpc$system.accountNextIndex ? api.rpc.system.accountNextIndex(address) : latestNonce(api, address);
}

function signingHeader(api) {
  return (0, _rxjs.combineLatest)([api.rpc.chain.getHeader().pipe((0, _rxjs.switchMap)(function (header) {
    return (// check for chains at genesis (until block 1 is produced, e.g. 6s), since
      // we do need to allow transactions at chain start (also dev/seal chains)
      header.parentHash.isEmpty ? (0, _rxjs.of)(header) // in the case of the current block, we use the parent to minimize the
      // impact of forks on the system, but not completely remove it
      : api.rpc.chain.getHeader(header.parentHash)
    );
  })), api.rpc.chain.getFinalizedHead().pipe((0, _rxjs.switchMap)(function (hash) {
    return api.rpc.chain.getHeader(hash);
  }))]).pipe((0, _rxjs.map)(function (_ref2) {
    var _ref3 = _slicedToArray(_ref2, 2),
        current = _ref3[0],
        finalized = _ref3[1];

    return (// determine the hash to use, current when lag > max, else finalized
      current.number.unwrap().sub(finalized.number.unwrap()).gt(_constants.MAX_FINALITY_LAG) ? current : finalized
    );
  }));
}

function signingInfo(_instanceId, api) {
  // no memo, we want to do this fresh on each run
  return function (address, nonce, era) {
    return (0, _rxjs.combineLatest)([// retrieve nonce if none was specified
    (0, _util.isUndefined)(nonce) ? latestNonce(api, address) : nonce === -1 ? nextNonce(api, address) : (0, _rxjs.of)(api.registry.createType('Index', nonce)), // if no era (create) or era > 0 (mortal), do block retrieval
    (0, _util.isUndefined)(era) || (0, _util.isNumber)(era) && era > 0 ? signingHeader(api) : (0, _rxjs.of)(null)]).pipe((0, _rxjs.map)(function (_ref4) {
      var _ref5 = _slicedToArray(_ref4, 2),
          nonce = _ref5[0],
          header = _ref5[1];

      var _api$consts$system, _api$consts$system$bl, _api$consts$babe, _api$consts$timestamp;

      return {
        header: header,
        mortalLength: Math.min(((_api$consts$system = api.consts.system) === null || _api$consts$system === void 0 ? void 0 : (_api$consts$system$bl = _api$consts$system.blockHashCount) === null || _api$consts$system$bl === void 0 ? void 0 : _api$consts$system$bl.toNumber()) || _constants.FALLBACK_MAX_HASH_COUNT, _constants.MORTAL_PERIOD.div(((_api$consts$babe = api.consts.babe) === null || _api$consts$babe === void 0 ? void 0 : _api$consts$babe.expectedBlockTime) || ((_api$consts$timestamp = api.consts.timestamp) === null || _api$consts$timestamp === void 0 ? void 0 : _api$consts$timestamp.minimumPeriod.muln(2)) || _constants.FALLBACK_PERIOD).iadd(_constants.MAX_FINALITY_LAG).toNumber()),
        nonce: nonce
      };
    }));
  };
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","./constants.js":"node_modules/@polkadot/api-derive/tx/constants.js"}],"node_modules/@polkadot/api-derive/tx/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _events = require("./events.js");

Object.keys(_events).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _events[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _events[key];
    }
  });
});

var _signingInfo = require("./signingInfo.js");

Object.keys(_signingInfo).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _signingInfo[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _signingInfo[key];
    }
  });
});
},{"./events.js":"node_modules/@polkadot/api-derive/tx/events.js","./signingInfo.js":"node_modules/@polkadot/api-derive/tx/signingInfo.js"}],"node_modules/@polkadot/api-derive/derive.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.derive = void 0;

var accounts = _interopRequireWildcard(require("./accounts/index.js"));

var bagsList = _interopRequireWildcard(require("./bagsList/index.js"));

var balances = _interopRequireWildcard(require("./balances/index.js"));

var bounties = _interopRequireWildcard(require("./bounties/index.js"));

var chain = _interopRequireWildcard(require("./chain/index.js"));

var contracts = _interopRequireWildcard(require("./contracts/index.js"));

var council = _interopRequireWildcard(require("./council/index.js"));

var crowdloan = _interopRequireWildcard(require("./crowdloan/index.js"));

var democracy = _interopRequireWildcard(require("./democracy/index.js"));

var elections = _interopRequireWildcard(require("./elections/index.js"));

var imOnline = _interopRequireWildcard(require("./imOnline/index.js"));

var membership = _interopRequireWildcard(require("./membership/index.js"));

var parachains = _interopRequireWildcard(require("./parachains/index.js"));

var session = _interopRequireWildcard(require("./session/index.js"));

var society = _interopRequireWildcard(require("./society/index.js"));

var staking = _interopRequireWildcard(require("./staking/index.js"));

var technicalCommittee = _interopRequireWildcard(require("./technicalCommittee/index.js"));

var treasury = _interopRequireWildcard(require("./treasury/index.js"));

var tx = _interopRequireWildcard(require("./tx/index.js"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Copyright 2017-2022 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
var derive = {
  accounts: accounts,
  bagsList: bagsList,
  balances: balances,
  bounties: bounties,
  chain: chain,
  contracts: contracts,
  council: council,
  crowdloan: crowdloan,
  democracy: democracy,
  elections: elections,
  imOnline: imOnline,
  membership: membership,
  parachains: parachains,
  session: session,
  society: society,
  staking: staking,
  technicalCommittee: technicalCommittee,
  treasury: treasury,
  tx: tx
};
exports.derive = derive;
},{"./accounts/index.js":"node_modules/@polkadot/api-derive/accounts/index.js","./bagsList/index.js":"node_modules/@polkadot/api-derive/bagsList/index.js","./balances/index.js":"node_modules/@polkadot/api-derive/balances/index.js","./bounties/index.js":"node_modules/@polkadot/api-derive/bounties/index.js","./chain/index.js":"node_modules/@polkadot/api-derive/chain/index.js","./contracts/index.js":"node_modules/@polkadot/api-derive/contracts/index.js","./council/index.js":"node_modules/@polkadot/api-derive/council/index.js","./crowdloan/index.js":"node_modules/@polkadot/api-derive/crowdloan/index.js","./democracy/index.js":"node_modules/@polkadot/api-derive/democracy/index.js","./elections/index.js":"node_modules/@polkadot/api-derive/elections/index.js","./imOnline/index.js":"node_modules/@polkadot/api-derive/imOnline/index.js","./membership/index.js":"node_modules/@polkadot/api-derive/membership/index.js","./parachains/index.js":"node_modules/@polkadot/api-derive/parachains/index.js","./session/index.js":"node_modules/@polkadot/api-derive/session/index.js","./society/index.js":"node_modules/@polkadot/api-derive/society/index.js","./staking/index.js":"node_modules/@polkadot/api-derive/staking/index.js","./technicalCommittee/index.js":"node_modules/@polkadot/api-derive/technicalCommittee/index.js","./treasury/index.js":"node_modules/@polkadot/api-derive/treasury/index.js","./tx/index.js":"node_modules/@polkadot/api-derive/tx/index.js"}],"node_modules/@polkadot/api-derive/bundle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  getAvailableDerives: true,
  lazyDeriveSection: true
};
exports.getAvailableDerives = getAvailableDerives;
Object.defineProperty(exports, "lazyDeriveSection", {
  enumerable: true,
  get: function () {
    return _index.lazyDeriveSection;
  }
});

var _derive = require("./derive.js");

Object.keys(_derive).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _derive[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _derive[key];
    }
  });
});

var _index = require("./util/index.js");

var _index2 = require("./type/index.js");

Object.keys(_index2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index2[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index2[key];
    }
  });
});

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// Enable derive only if some of these modules are available
var checks = {
  bagsList: {
    instances: ['voterList', 'bagsList'],
    methods: [],
    withDetect: true
  },
  contracts: {
    instances: ['contracts'],
    methods: []
  },
  council: {
    instances: ['council'],
    methods: [],
    withDetect: true
  },
  crowdloan: {
    instances: ['crowdloan'],
    methods: []
  },
  democracy: {
    instances: ['democracy'],
    methods: []
  },
  elections: {
    instances: ['phragmenElection', 'electionsPhragmen', 'elections', 'council'],
    methods: [],
    withDetect: true
  },
  imOnline: {
    instances: ['imOnline'],
    methods: []
  },
  membership: {
    instances: ['membership'],
    methods: []
  },
  parachains: {
    instances: ['parachains', 'registrar'],
    methods: []
  },
  session: {
    instances: ['session'],
    methods: []
  },
  society: {
    instances: ['society'],
    methods: []
  },
  staking: {
    instances: ['staking'],
    methods: ['erasRewardPoints']
  },
  technicalCommittee: {
    instances: ['technicalCommittee'],
    methods: [],
    withDetect: true
  },
  treasury: {
    instances: ['treasury'],
    methods: []
  }
};

function getModuleInstances(api, specName, moduleName) {
  return api.registry.getModuleInstances(specName, moduleName) || [];
}
/**
 * Returns an object that will inject `api` into all the functions inside
 * `allSections`, and keep the object architecture of `allSections`.
 */

/** @internal */


function injectFunctions(instanceId, api, derives) {
  var result = {};
  var names = Object.keys(derives);
  var keys = Object.keys(api.query);
  var specName = api.runtimeVersion.specName.toString();

  var filterKeys = function filterKeys(q) {
    return keys.includes(q);
  };

  var filterInstances = function filterInstances(q) {
    return getModuleInstances(api, specName, q).some(filterKeys);
  };

  var filterMethods = function filterMethods(all) {
    return function (m) {
      return all.some(function (q) {
        return keys.includes(q) && api.query[q][m];
      });
    };
  };

  var getKeys = function getKeys(s) {
    return Object.keys(derives[s]);
  };

  var creator = function creator(s, m) {
    return derives[s][m](instanceId, api);
  };

  var isIncluded = function isIncluded(c) {
    return !checks[c] || checks[c].instances.some(filterKeys) && (!checks[c].methods.length || checks[c].methods.every(filterMethods(checks[c].instances))) || checks[c].withDetect && checks[c].instances.some(filterInstances);
  };

  for (var i = 0; i < names.length; i++) {
    var name = names[i];
    isIncluded(name) && (0, _index.lazyDeriveSection)(result, name, getKeys, creator);
  }

  return result;
} // FIXME The return type of this function should be {...ExactDerive, ...DeriveCustom}
// For now we just drop the custom derive typings

/** @internal */


function getAvailableDerives(instanceId, api) {
  var custom = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  return _objectSpread(_objectSpread({}, injectFunctions(instanceId, api, _derive.derive)), injectFunctions(instanceId, api, custom));
}
},{"./derive.js":"node_modules/@polkadot/api-derive/derive.js","./util/index.js":"node_modules/@polkadot/api-derive/util/index.js","./type/index.js":"node_modules/@polkadot/api-derive/type/index.js"}],"node_modules/@polkadot/api-derive/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

require("./detectPackage.js");

var _bundle = require("./bundle.js");

Object.keys(_bundle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _bundle[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bundle[key];
    }
  });
});
},{"./detectPackage.js":"node_modules/@polkadot/api-derive/detectPackage.js","./bundle.js":"node_modules/@polkadot/api-derive/bundle.js"}],"node_modules/@polkadot/api/util/decorate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.decorateDeriveSections = decorateDeriveSections;

var _apiDerive = require("@polkadot/api-derive");

// Copyright 2017-2022 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * This is a section decorator which keeps all type information.
 */
function decorateDeriveSections(decorateMethod, derives) {
  var getKeys = function getKeys(s) {
    return Object.keys(derives[s]);
  };

  var creator = function creator(s, m) {
    return decorateMethod(derives[s][m]);
  };

  var result = {};
  var names = Object.keys(derives);

  for (var i = 0; i < names.length; i++) {
    (0, _apiDerive.lazyDeriveSection)(result, names[i], getKeys, creator);
  }

  return result;
}
},{"@polkadot/api-derive":"node_modules/@polkadot/api-derive/index.js"}],"node_modules/@polkadot/api/util/logging.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.l = void 0;

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0
var l = (0, _util.logger)('api/util');
exports.l = l;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/api/util/filterEvents.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.filterEvents = filterEvents;

var _logging = require("./logging.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function filterEvents(txHash, _ref, allEvents, status) {
  var _ref$block = _ref.block,
      extrinsics = _ref$block.extrinsics,
      header = _ref$block.header;

  // extrinsics to hashes
  var _iterator = _createForOfIteratorHelper(extrinsics.entries()),
      _step;

  try {
    var _loop = function _loop() {
      var _step$value = _slicedToArray(_step.value, 2),
          txIndex = _step$value[0],
          x = _step$value[1];

      if (x.hash.eq(txHash)) {
        return {
          v: {
            events: allEvents.filter(function (_ref2) {
              var phase = _ref2.phase;
              return phase.isApplyExtrinsic && phase.asApplyExtrinsic.eqn(txIndex);
            }),
            txIndex: txIndex
          }
        };
      }
    };

    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var _ret = _loop();

      if (_typeof(_ret) === "object") return _ret.v;
    } // if we do get the block after finalized, it _should_ be there
    // only warn on filtering with isInBlock (finalization finalizes after)

  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  if (status.isInBlock) {
    var allHashes = extrinsics.map(function (x) {
      return x.hash.toHex();
    });

    _logging.l.warn("block ".concat(header.hash.toHex(), ": Unable to find extrinsic ").concat(txHash.toHex(), " inside ").concat(allHashes.join(', ')));
  }

  return {};
}
},{"./logging.js":"node_modules/@polkadot/api/util/logging.js"}],"node_modules/@polkadot/api/util/isKeyringPair.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isKeyringPair = isKeyringPair;

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0
function isKeyringPair(account) {
  return (0, _util.isFunction)(account.sign);
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/api/util/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  filterEvents: true,
  isKeyringPair: true,
  l: true
};
Object.defineProperty(exports, "filterEvents", {
  enumerable: true,
  get: function () {
    return _filterEvents.filterEvents;
  }
});
Object.defineProperty(exports, "isKeyringPair", {
  enumerable: true,
  get: function () {
    return _isKeyringPair.isKeyringPair;
  }
});
Object.defineProperty(exports, "l", {
  enumerable: true,
  get: function () {
    return _logging.l;
  }
});

var _decorate = require("./decorate.js");

Object.keys(_decorate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _decorate[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _decorate[key];
    }
  });
});

var _filterEvents = require("./filterEvents.js");

var _isKeyringPair = require("./isKeyringPair.js");

var _logging = require("./logging.js");
},{"./decorate.js":"node_modules/@polkadot/api/util/decorate.js","./filterEvents.js":"node_modules/@polkadot/api/util/filterEvents.js","./isKeyringPair.js":"node_modules/@polkadot/api/util/isKeyringPair.js","./logging.js":"node_modules/@polkadot/api/util/logging.js"}],"node_modules/@polkadot/api/submittable/Result.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SubmittableResult = void 0;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

// Copyright 2017-2022 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0
var recordIdentity = function recordIdentity(record) {
  return record;
};

function filterAndApply(events, section, methods, onFound) {
  return events.filter(function (_ref) {
    var event = _ref.event;
    return section === event.section && methods.includes(event.method);
  }).map(function (record) {
    return onFound(record);
  });
}

function getDispatchError(_ref2) {
  var _ref2$event$data = _slicedToArray(_ref2.event.data, 1),
      dispatchError = _ref2$event$data[0];

  return dispatchError;
}

function getDispatchInfo(_ref3) {
  var _ref3$event = _ref3.event,
      data = _ref3$event.data,
      method = _ref3$event.method;
  return method === 'ExtrinsicSuccess' ? data[0] : data[1];
}

function extractError() {
  var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  return filterAndApply(events, 'system', ['ExtrinsicFailed'], getDispatchError)[0];
}

function extractInfo() {
  var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  return filterAndApply(events, 'system', ['ExtrinsicFailed', 'ExtrinsicSuccess'], getDispatchInfo)[0];
}

var SubmittableResult = /*#__PURE__*/function () {
  function SubmittableResult(_ref4) {
    var dispatchError = _ref4.dispatchError,
        dispatchInfo = _ref4.dispatchInfo,
        events = _ref4.events,
        internalError = _ref4.internalError,
        status = _ref4.status,
        txHash = _ref4.txHash,
        txIndex = _ref4.txIndex;

    _classCallCheck(this, SubmittableResult);

    this.dispatchError = dispatchError || extractError(events);
    this.dispatchInfo = dispatchInfo || extractInfo(events);
    this.events = events || [];
    this.internalError = internalError;
    this.status = status;
    this.txHash = txHash;
    this.txIndex = txIndex;
  }

  _createClass(SubmittableResult, [{
    key: "isCompleted",
    get: function get() {
      return this.isError || this.status.isInBlock || this.status.isFinalized;
    }
  }, {
    key: "isError",
    get: function get() {
      return this.status.isDropped || this.status.isFinalityTimeout || this.status.isInvalid || this.status.isUsurped;
    }
  }, {
    key: "isFinalized",
    get: function get() {
      return this.status.isFinalized;
    }
  }, {
    key: "isInBlock",
    get: function get() {
      return this.status.isInBlock;
    }
  }, {
    key: "isWarning",
    get: function get() {
      return this.status.isRetracted;
    }
    /**
     * @description Filters EventRecords for the specified method & section (there could be multiple)
     */

  }, {
    key: "filterRecords",
    value: function filterRecords(section, method) {
      return filterAndApply(this.events, section, Array.isArray(method) ? method : [method], recordIdentity);
    }
    /**
     * @description Finds an EventRecord for the specified method & section
     */

  }, {
    key: "findRecord",
    value: function findRecord(section, method) {
      return this.filterRecords(section, method)[0];
    }
    /**
     * @description Creates a human representation of the output
     */

  }, {
    key: "toHuman",
    value: function toHuman(isExtended) {
      var _this$dispatchError, _this$dispatchInfo, _this$internalError;

      return {
        dispatchError: (_this$dispatchError = this.dispatchError) === null || _this$dispatchError === void 0 ? void 0 : _this$dispatchError.toHuman(),
        dispatchInfo: (_this$dispatchInfo = this.dispatchInfo) === null || _this$dispatchInfo === void 0 ? void 0 : _this$dispatchInfo.toHuman(),
        events: this.events.map(function (e) {
          return e.toHuman(isExtended);
        }),
        internalError: (_this$internalError = this.internalError) === null || _this$internalError === void 0 ? void 0 : _this$internalError.message.toString(),
        status: this.status.toHuman(isExtended)
      };
    }
  }]);

  return SubmittableResult;
}();

exports.SubmittableResult = SubmittableResult;
},{}],"node_modules/@polkadot/api/submittable/createClass.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createClass = createClass;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _index = require("../util/index.js");

var _Result = require("./Result.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

var identity = function identity(input) {
  return input;
};

function makeEraOptions(api, registry, partialOptions, _ref) {
  var header = _ref.header,
      mortalLength = _ref.mortalLength,
      nonce = _ref.nonce;

  if (!header) {
    (0, _util.assert)(partialOptions.era === 0 || !(0, _util.isUndefined)(partialOptions.blockHash), 'Expected blockHash to be passed alongside non-immortal era options');

    if ((0, _util.isNumber)(partialOptions.era)) {
      // since we have no header, it is immortal, remove any option overrides
      // so we only supply the genesisHash and no era to the construction
      delete partialOptions.era;
      delete partialOptions.blockHash;
    }

    return makeSignOptions(api, partialOptions, {
      nonce: nonce
    });
  }

  return makeSignOptions(api, partialOptions, {
    blockHash: header.hash,
    era: registry.createTypeUnsafe('ExtrinsicEra', [{
      current: header.number,
      period: partialOptions.era || mortalLength
    }]),
    nonce: nonce
  });
}

function makeSignAndSendOptions(partialOptions, statusCb) {
  var options = {};

  if ((0, _util.isFunction)(partialOptions)) {
    statusCb = partialOptions;
  } else {
    options = (0, _util.objectSpread)({}, partialOptions);
  }

  return [options, statusCb];
}

function makeSignOptions(api, partialOptions, extras) {
  return (0, _util.objectSpread)({
    blockHash: api.genesisHash,
    genesisHash: api.genesisHash
  }, partialOptions, extras, {
    runtimeVersion: api.runtimeVersion,
    signedExtensions: api.registry.signedExtensions,
    version: api.extrinsicType
  });
}

function optionsOrNonce() {
  var partialOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return (0, _util.isBn)(partialOptions) || (0, _util.isNumber)(partialOptions) ? {
    nonce: partialOptions
  } : partialOptions;
}

function createClass(_ref2) {
  var api = _ref2.api,
      apiType = _ref2.apiType,
      blockHash = _ref2.blockHash,
      decorateMethod = _ref2.decorateMethod;
  // an instance of the base extrinsic for us to extend
  var ExtrinsicBase = api.registry.createClass('Extrinsic');

  var _ignoreStatusCb = /*#__PURE__*/new WeakMap();

  var _transformResult = /*#__PURE__*/new WeakMap();

  var _observeSign = /*#__PURE__*/new WeakMap();

  var _observeStatus = /*#__PURE__*/new WeakMap();

  var _observeSend = /*#__PURE__*/new WeakMap();

  var _observeSubscribe = /*#__PURE__*/new WeakMap();

  var _signViaSigner = /*#__PURE__*/new WeakMap();

  var _updateSigner = /*#__PURE__*/new WeakMap();

  var Submittable = /*#__PURE__*/function (_ExtrinsicBase) {
    _inherits(Submittable, _ExtrinsicBase);

    var _super = _createSuper(Submittable);

    function Submittable(registry, extrinsic) {
      var _thisSuper, _this;

      _classCallCheck(this, Submittable);

      _this = _super.call(this, registry, extrinsic, {
        version: api.extrinsicType
      });

      _classPrivateFieldInitSpec(_assertThisInitialized(_this), _ignoreStatusCb, {
        writable: true,
        value: void 0
      });

      _classPrivateFieldInitSpec(_assertThisInitialized(_this), _transformResult, {
        writable: true,
        value: identity
      });

      _classPrivateFieldInitSpec(_assertThisInitialized(_this), _observeSign, {
        writable: true,
        value: function value(account, partialOptions) {
          var address = (0, _index.isKeyringPair)(account) ? account.address : account.toString();
          var options = optionsOrNonce(partialOptions);
          return api.derive.tx.signingInfo(address, options.nonce, options.era).pipe((0, _rxjs.first)(), (0, _rxjs.mergeMap)( /*#__PURE__*/function () {
            var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(signingInfo) {
              var eraOptions, updateId;
              return _regeneratorRuntime().wrap(function _callee$(_context) {
                while (1) {
                  switch (_context.prev = _context.next) {
                    case 0:
                      eraOptions = makeEraOptions(api, _this.registry, options, signingInfo);
                      updateId = -1;

                      if (!(0, _index.isKeyringPair)(account)) {
                        _context.next = 6;
                        break;
                      }

                      _this.sign(account, eraOptions);

                      _context.next = 9;
                      break;

                    case 6:
                      _context.next = 8;
                      return _classPrivateFieldGet(_assertThisInitialized(_this), _signViaSigner).call(_assertThisInitialized(_this), address, eraOptions, signingInfo.header);

                    case 8:
                      updateId = _context.sent;

                    case 9:
                      return _context.abrupt("return", {
                        options: eraOptions,
                        updateId: updateId
                      });

                    case 10:
                    case "end":
                      return _context.stop();
                  }
                }
              }, _callee);
            }));

            return function (_x) {
              return _ref3.apply(this, arguments);
            };
          }()));
        }
      });

      _classPrivateFieldInitSpec(_assertThisInitialized(_this), _observeStatus, {
        writable: true,
        value: function value(txHash, status) {
          if (!status.isFinalized && !status.isInBlock) {
            return (0, _rxjs.of)(_classPrivateFieldGet(_assertThisInitialized(_this), _transformResult).call(_assertThisInitialized(_this), new _Result.SubmittableResult({
              status: status,
              txHash: txHash
            })));
          }

          var blockHash = status.isInBlock ? status.asInBlock : status.asFinalized;
          return api.derive.tx.events(blockHash).pipe((0, _rxjs.map)(function (_ref4) {
            var block = _ref4.block,
                events = _ref4.events;
            return _classPrivateFieldGet(_assertThisInitialized(_this), _transformResult).call(_assertThisInitialized(_this), new _Result.SubmittableResult(_objectSpread(_objectSpread({}, (0, _index.filterEvents)(txHash, block, events, status)), {}, {
              status: status,
              txHash: txHash
            })));
          }), (0, _rxjs.catchError)(function (internalError) {
            return (0, _rxjs.of)(_classPrivateFieldGet(_assertThisInitialized(_this), _transformResult).call(_assertThisInitialized(_this), new _Result.SubmittableResult({
              internalError: internalError,
              status: status,
              txHash: txHash
            })));
          }));
        }
      });

      _classPrivateFieldInitSpec(_assertThisInitialized(_this), _observeSend, {
        writable: true,
        value: function value(info) {
          return api.rpc.author.submitExtrinsic(_assertThisInitialized(_this)).pipe((0, _rxjs.tap)(function (hash) {
            _classPrivateFieldGet(_assertThisInitialized(_this), _updateSigner).call(_assertThisInitialized(_this), hash, info);
          }));
        }
      });

      _classPrivateFieldInitSpec(_assertThisInitialized(_this), _observeSubscribe, {
        writable: true,
        value: function value(info) {
          var txHash = _this.hash;
          return api.rpc.author.submitAndWatchExtrinsic(_assertThisInitialized(_this)).pipe((0, _rxjs.switchMap)(function (status) {
            return _classPrivateFieldGet(_assertThisInitialized(_this), _observeStatus).call(_assertThisInitialized(_this), txHash, status);
          }), (0, _rxjs.tap)(function (status) {
            _classPrivateFieldGet(_assertThisInitialized(_this), _updateSigner).call(_assertThisInitialized(_this), status, info);
          }));
        }
      });

      _classPrivateFieldInitSpec(_assertThisInitialized(_this), _signViaSigner, {
        writable: true,
        value: function () {
          var _value = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(address, options, header) {
            var signer, payload, result;
            return _regeneratorRuntime().wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    signer = options.signer || api.signer;
                    (0, _util.assert)(signer, 'No signer specified, either via api.setSigner or via sign options. You possibly need to pass through an explicit keypair for the origin so it can be used for signing.');
                    payload = _this.registry.createTypeUnsafe('SignerPayload', [(0, _util.objectSpread)({}, options, {
                      address: address,
                      blockNumber: header ? header.number : 0,
                      method: _this.method
                    })]);

                    if (!(0, _util.isFunction)(signer.signPayload)) {
                      _context2.next = 9;
                      break;
                    }

                    _context2.next = 6;
                    return signer.signPayload(payload.toPayload());

                  case 6:
                    result = _context2.sent;
                    _context2.next = 16;
                    break;

                  case 9:
                    if (!(0, _util.isFunction)(signer.signRaw)) {
                      _context2.next = 15;
                      break;
                    }

                    _context2.next = 12;
                    return signer.signRaw(payload.toRaw());

                  case 12:
                    result = _context2.sent;
                    _context2.next = 16;
                    break;

                  case 15:
                    throw new Error('Invalid signer interface, it should implement either signPayload or signRaw (or both)');

                  case 16:
                    // Here we explicitly call `toPayload()` again instead of working with an object
                    // (reference) as passed to the signer. This means that we are sure that the
                    // payload data is not modified from our inputs, but the signer
                    _get((_thisSuper = _assertThisInitialized(_this), _getPrototypeOf(Submittable.prototype)), "addSignature", _thisSuper).call(_thisSuper, address, result.signature, payload.toPayload());

                    return _context2.abrupt("return", result.id);

                  case 18:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2);
          }));

          function value(_x2, _x3, _x4) {
            return _value.apply(this, arguments);
          }

          return value;
        }()
      });

      _classPrivateFieldInitSpec(_assertThisInitialized(_this), _updateSigner, {
        writable: true,
        value: function value(status, info) {
          if (info && info.updateId !== -1) {
            var options = info.options,
                updateId = info.updateId;
            var signer = options.signer || api.signer;

            if (signer && (0, _util.isFunction)(signer.update)) {
              signer.update(updateId, status);
            }
          }
        }
      });

      _classPrivateFieldSet(_assertThisInitialized(_this), _ignoreStatusCb, apiType === 'rxjs');

      return _this;
    } // dry run an extrinsic


    _createClass(Submittable, [{
      key: "dryRun",
      value: function dryRun(account, optionsOrHash) {
        var _this2 = this;

        if (blockHash || (0, _util.isString)(optionsOrHash) || (0, _util.isU8a)(optionsOrHash)) {
          // eslint-disable-next-line @typescript-eslint/no-unsafe-return
          return decorateMethod(function () {
            return api.rpc.system.dryRun(_this2.toHex(), blockHash || optionsOrHash);
          });
        } // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call


        return decorateMethod(function () {
          return _classPrivateFieldGet(_this2, _observeSign).call(_this2, account, optionsOrHash).pipe((0, _rxjs.switchMap)(function () {
            return api.rpc.system.dryRun(_this2.toHex());
          }));
        })();
      } // calculate the payment info for this transaction (if signed and submitted)

    }, {
      key: "paymentInfo",
      value: function paymentInfo(account, optionsOrHash) {
        var _this3 = this;

        if (blockHash || (0, _util.isString)(optionsOrHash) || (0, _util.isU8a)(optionsOrHash)) {
          // eslint-disable-next-line @typescript-eslint/no-unsafe-return
          return decorateMethod(function () {
            return api.rpc.payment.queryInfo(_this3.toHex(), blockHash || optionsOrHash);
          });
        }

        var _makeSignAndSendOptio = makeSignAndSendOptions(optionsOrHash),
            _makeSignAndSendOptio2 = _slicedToArray(_makeSignAndSendOptio, 1),
            allOptions = _makeSignAndSendOptio2[0];

        var address = (0, _index.isKeyringPair)(account) ? account.address : account.toString(); // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call

        return decorateMethod(function () {
          return api.derive.tx.signingInfo(address, allOptions.nonce, allOptions.era).pipe((0, _rxjs.first)(), (0, _rxjs.switchMap)(function (signingInfo) {
            // setup our options (same way as in signAndSend)
            var eraOptions = makeEraOptions(api, _this3.registry, allOptions, signingInfo);
            var signOptions = makeSignOptions(api, eraOptions, {});
            return api.rpc.payment.queryInfo(_this3.isSigned ? api.tx(_this3).signFake(address, signOptions).toHex() : _this3.signFake(address, signOptions).toHex());
          }));
        })();
      } // send with an immediate Hash result
      // send implementation for both immediate Hash and statusCb variants

    }, {
      key: "send",
      value: function send(statusCb) {
        var isSubscription = api.hasSubscriptions && (_classPrivateFieldGet(this, _ignoreStatusCb) || !!statusCb); // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call

        return decorateMethod(isSubscription ? _classPrivateFieldGet(this, _observeSubscribe) : _classPrivateFieldGet(this, _observeSend))(statusCb);
      }
      /**
       * @description Sign a transaction, returning the this to allow chaining, i.e. .sign(...).send(). When options, e.g. nonce/blockHash are not specified, it will be inferred. To retrieve eg. nonce use `signAsync` (the preferred interface, this is provided for backwards compatibility)
       * @deprecated
       */

    }, {
      key: "sign",
      value: function sign(account, partialOptions) {
        _get(_getPrototypeOf(Submittable.prototype), "sign", this).call(this, account, makeSignOptions(api, optionsOrNonce(partialOptions), {}));

        return this;
      }
      /**
       * @description Signs a transaction, returning `this` to allow chaining. E.g.: `sign(...).send()`. Like `.signAndSend` this will retrieve the nonce and blockHash to send the tx with.
       */

    }, {
      key: "signAsync",
      value: function signAsync(account, partialOptions) {
        var _this4 = this;

        // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call
        return decorateMethod(function () {
          return _classPrivateFieldGet(_this4, _observeSign).call(_this4, account, partialOptions).pipe((0, _rxjs.mapTo)(_this4));
        })();
      } // signAndSend with an immediate Hash result
      // signAndSend implementation for all 3 cases above

    }, {
      key: "signAndSend",
      value: function signAndSend(account, partialOptions, optionalStatusCb) {
        var _this5 = this;

        var _makeSignAndSendOptio3 = makeSignAndSendOptions(partialOptions, optionalStatusCb),
            _makeSignAndSendOptio4 = _slicedToArray(_makeSignAndSendOptio3, 2),
            options = _makeSignAndSendOptio4[0],
            statusCb = _makeSignAndSendOptio4[1];

        var isSubscription = api.hasSubscriptions && (_classPrivateFieldGet(this, _ignoreStatusCb) || !!statusCb); // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call

        return decorateMethod(function () {
          return _classPrivateFieldGet(_this5, _observeSign).call(_this5, account, options).pipe((0, _rxjs.switchMap)(function (info) {
            return isSubscription ? _classPrivateFieldGet(_this5, _observeSubscribe).call(_this5, info) : _classPrivateFieldGet(_this5, _observeSend).call(_this5, info);
          }));
        } // FIXME This is wrong, SubmittableResult is _not_ a codec
        )(statusCb);
      } // adds a transform to the result, applied before result is returned

    }, {
      key: "withResultTransform",
      value: function withResultTransform(transform) {
        _classPrivateFieldSet(this, _transformResult, transform);

        return this;
      }
    }]);

    return Submittable;
  }(ExtrinsicBase);

  return Submittable;
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../util/index.js":"node_modules/@polkadot/api/util/index.js","./Result.js":"node_modules/@polkadot/api/submittable/Result.js"}],"node_modules/@polkadot/api/submittable/createSubmittable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createSubmittable = createSubmittable;

var _createClass = require("./createClass.js");

// Copyright 2017-2022 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0
function createSubmittable(apiType, api, decorateMethod, registry, blockHash) {
  var Submittable = (0, _createClass.createClass)({
    api: api,
    apiType: apiType,
    blockHash: blockHash,
    decorateMethod: decorateMethod
  });
  return function (extrinsic) {
    return new Submittable(registry || api.registry, extrinsic);
  };
}
},{"./createClass.js":"node_modules/@polkadot/api/submittable/createClass.js"}],"node_modules/@polkadot/api/submittable/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "SubmittableResult", {
  enumerable: true,
  get: function () {
    return _Result.SubmittableResult;
  }
});
Object.defineProperty(exports, "createSubmittable", {
  enumerable: true,
  get: function () {
    return _createSubmittable.createSubmittable;
  }
});

var _createSubmittable = require("./createSubmittable.js");

var _Result = require("./Result.js");
},{"./createSubmittable.js":"node_modules/@polkadot/api/submittable/createSubmittable.js","./Result.js":"node_modules/@polkadot/api/submittable/Result.js"}],"node_modules/@polkadot/api/base/find.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.findCall = findCall;
exports.findError = findError;

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0
function findCall(registry, callIndex) {
  return registry.findMetaCall((0, _util.u8aToU8a)(callIndex));
}

function findError(registry, errorIndex) {
  return registry.findMetaError((0, _util.u8aToU8a)(errorIndex));
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types-known/detectOther.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _packageInfo = require("@polkadot/types/packageInfo");

// Copyright 2017-2022 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0
var _default = [_packageInfo.packageInfo];
exports.default = _default;
},{"@polkadot/types/packageInfo":"node_modules/@polkadot/types/packageInfo.js"}],"node_modules/@polkadot/types-known/detectPackage.js":[function(require,module,exports) {
"use strict";

var _util = require("@polkadot/util");

var _detectOther = _interopRequireDefault(require("./detectOther.js"));

var _packageInfo = require("./packageInfo.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Do not edit, auto-generated by @polkadot/dev
(0, _util.detectPackage)(_packageInfo.packageInfo, null, _detectOther.default);
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./detectOther.js":"node_modules/@polkadot/types-known/detectOther.js","./packageInfo.js":"node_modules/@polkadot/types-known/packageInfo.js"}],"node_modules/@polkadot/types-known/chain/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Type overrides based on specific nodes
var typesChain = {};
var _default = typesChain;
exports.default = _default;
},{}],"node_modules/@polkadot/types-known/spec/centrifuge-chain.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable sort-keys */
var sharedTypes = {
  // Anchor
  AnchorData: {
    anchoredBlock: 'u64',
    docRoot: 'H256',
    id: 'H256'
  },
  DispatchErrorModule: 'DispatchErrorModuleU8',
  PreCommitData: {
    expirationBlock: 'u64',
    identity: 'H256',
    signingRoot: 'H256'
  },
  // Fees
  Fee: {
    key: 'Hash',
    price: 'Balance'
  },
  // MultiAccount
  MultiAccountData: {
    deposit: 'Balance',
    depositor: 'AccountId',
    signatories: 'Vec<AccountId>',
    threshold: 'u16'
  },
  // Bridge
  ChainId: 'u8',
  DepositNonce: 'u64',
  ResourceId: '[u8; 32]',
  'chainbridge::ChainId': 'u8',
  // NFT
  RegistryId: 'H160',
  TokenId: 'U256',
  AssetId: {
    registryId: 'RegistryId',
    tokenId: 'TokenId'
  },
  AssetInfo: {
    metadata: 'Bytes'
  },
  MintInfo: {
    anchorId: 'Hash',
    proofs: 'Vec<ProofMint>',
    staticHashes: '[Hash; 3]'
  },
  Proof: {
    leafHash: 'H256',
    sortedHashes: 'H256'
  },
  ProofMint: {
    hashes: 'Vec<Hash>',
    property: 'Bytes',
    salt: '[u8; 32]',
    value: 'Bytes'
  },
  RegistryInfo: {
    fields: 'Vec<Bytes>',
    ownerCanBurn: 'bool'
  },
  ProxyType: {
    _enum: ['Any', 'NonTransfer', 'Governance', 'Staking', 'NonProxy']
  }
};
var standaloneTypes = (0, _util.objectSpread)({}, sharedTypes, {
  AccountInfo: 'AccountInfoWithRefCount',
  Address: 'LookupSource',
  LookupSource: 'IndicesLookupSource',
  Multiplier: 'Fixed64',
  RefCount: 'RefCountTo259'
});
var versioned = [{
  minmax: [240, 243],
  types: (0, _util.objectSpread)({}, standaloneTypes, {
    ProxyType: {
      _enum: ['Any', 'NonTransfer', 'Governance', 'Staking', 'Vesting']
    }
  })
}, {
  minmax: [244, 999],
  types: (0, _util.objectSpread)({}, standaloneTypes)
}, {
  minmax: [1000, undefined],
  types: (0, _util.objectSpread)({}, sharedTypes)
}];
var _default = versioned;
exports.default = _default;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types-known/spec/kusama.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _typesCreate = require("@polkadot/types-create");

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable sort-keys */
var sharedTypes = {
  CompactAssignments: 'CompactAssignmentsWith24',
  DispatchErrorModule: 'DispatchErrorModuleU8',
  RawSolution: 'RawSolutionWith24',
  Keys: 'SessionKeys6',
  ProxyType: {
    _enum: ['Any', 'NonTransfer', 'Governance', 'Staking', 'IdentityJudgement', 'CancelProxy', 'Auction']
  }
};
var addrIndicesTypes = {
  AccountInfo: 'AccountInfoWithRefCount',
  Address: 'LookupSource',
  CompactAssignments: 'CompactAssignmentsWith16',
  RawSolution: 'RawSolutionWith16',
  Keys: 'SessionKeys5',
  LookupSource: 'IndicesLookupSource',
  ValidatorPrefs: 'ValidatorPrefsWithCommission'
};
var addrAccountIdTypes = {
  AccountInfo: 'AccountInfoWithRefCount',
  Address: 'AccountId',
  CompactAssignments: 'CompactAssignmentsWith16',
  RawSolution: 'RawSolutionWith16',
  Keys: 'SessionKeys5',
  LookupSource: 'AccountId',
  ValidatorPrefs: 'ValidatorPrefsWithCommission'
};
var versioned = [{
  // 1020 is first CC3
  minmax: [1019, 1031],
  types: (0, _util.objectSpread)({}, addrIndicesTypes, {
    BalanceLock: 'BalanceLockTo212',
    CompactAssignments: 'CompactAssignmentsTo257',
    DispatchError: 'DispatchErrorTo198',
    DispatchInfo: 'DispatchInfoTo244',
    Heartbeat: 'HeartbeatTo244',
    IdentityInfo: 'IdentityInfoTo198',
    Keys: 'SessionKeys5',
    Multiplier: 'Fixed64',
    OpenTip: 'OpenTipTo225',
    RefCount: 'RefCountTo259',
    ReferendumInfo: 'ReferendumInfoTo239',
    SlashingSpans: 'SlashingSpansTo204',
    StakingLedger: 'StakingLedgerTo223',
    Votes: 'VotesTo230',
    Weight: 'u32'
  })
}, {
  minmax: [1032, 1042],
  types: (0, _util.objectSpread)({}, addrIndicesTypes, {
    BalanceLock: 'BalanceLockTo212',
    CompactAssignments: 'CompactAssignmentsTo257',
    DispatchInfo: 'DispatchInfoTo244',
    Heartbeat: 'HeartbeatTo244',
    Keys: 'SessionKeys5',
    Multiplier: 'Fixed64',
    OpenTip: 'OpenTipTo225',
    RefCount: 'RefCountTo259',
    ReferendumInfo: 'ReferendumInfoTo239',
    SlashingSpans: 'SlashingSpansTo204',
    StakingLedger: 'StakingLedgerTo223',
    Votes: 'VotesTo230',
    Weight: 'u32'
  })
}, {
  // actual at 1045 (1043-1044 is dev)
  minmax: [1043, 1045],
  types: (0, _util.objectSpread)({}, addrIndicesTypes, {
    BalanceLock: 'BalanceLockTo212',
    CompactAssignments: 'CompactAssignmentsTo257',
    DispatchInfo: 'DispatchInfoTo244',
    Heartbeat: 'HeartbeatTo244',
    Keys: 'SessionKeys5',
    Multiplier: 'Fixed64',
    OpenTip: 'OpenTipTo225',
    RefCount: 'RefCountTo259',
    ReferendumInfo: 'ReferendumInfoTo239',
    StakingLedger: 'StakingLedgerTo223',
    Votes: 'VotesTo230',
    Weight: 'u32'
  })
}, {
  minmax: [1046, 1050],
  types: (0, _util.objectSpread)({}, sharedTypes, addrAccountIdTypes, {
    CompactAssignments: 'CompactAssignmentsTo257',
    DispatchInfo: 'DispatchInfoTo244',
    Heartbeat: 'HeartbeatTo244',
    Multiplier: 'Fixed64',
    OpenTip: 'OpenTipTo225',
    RefCount: 'RefCountTo259',
    ReferendumInfo: 'ReferendumInfoTo239',
    StakingLedger: 'StakingLedgerTo223',
    Weight: 'u32'
  })
}, {
  minmax: [1051, 1054],
  types: (0, _util.objectSpread)({}, sharedTypes, addrAccountIdTypes, {
    CompactAssignments: 'CompactAssignmentsTo257',
    DispatchInfo: 'DispatchInfoTo244',
    Heartbeat: 'HeartbeatTo244',
    Multiplier: 'Fixed64',
    OpenTip: 'OpenTipTo225',
    RefCount: 'RefCountTo259',
    ReferendumInfo: 'ReferendumInfoTo239',
    StakingLedger: 'StakingLedgerTo240',
    Weight: 'u32'
  })
}, {
  minmax: [1055, 1056],
  types: (0, _util.objectSpread)({}, sharedTypes, addrAccountIdTypes, {
    CompactAssignments: 'CompactAssignmentsTo257',
    DispatchInfo: 'DispatchInfoTo244',
    Heartbeat: 'HeartbeatTo244',
    Multiplier: 'Fixed64',
    OpenTip: 'OpenTipTo225',
    RefCount: 'RefCountTo259',
    StakingLedger: 'StakingLedgerTo240',
    Weight: 'u32'
  })
}, {
  minmax: [1057, 1061],
  types: (0, _util.objectSpread)({}, sharedTypes, addrAccountIdTypes, {
    CompactAssignments: 'CompactAssignmentsTo257',
    DispatchInfo: 'DispatchInfoTo244',
    Heartbeat: 'HeartbeatTo244',
    OpenTip: 'OpenTipTo225',
    RefCount: 'RefCountTo259'
  })
}, {
  minmax: [1062, 2012],
  types: (0, _util.objectSpread)({}, sharedTypes, addrAccountIdTypes, {
    CompactAssignments: 'CompactAssignmentsTo257',
    OpenTip: 'OpenTipTo225',
    RefCount: 'RefCountTo259'
  })
}, {
  minmax: [2013, 2022],
  types: (0, _util.objectSpread)({}, sharedTypes, addrAccountIdTypes, {
    CompactAssignments: 'CompactAssignmentsTo257',
    RefCount: 'RefCountTo259'
  })
}, {
  minmax: [2023, 2024],
  types: (0, _util.objectSpread)({}, sharedTypes, addrAccountIdTypes, {
    RefCount: 'RefCountTo259'
  })
}, {
  minmax: [2025, 2027],
  types: (0, _util.objectSpread)({}, sharedTypes, addrAccountIdTypes)
}, {
  minmax: [2028, 2029],
  types: (0, _util.objectSpread)({}, sharedTypes, {
    AccountInfo: 'AccountInfoWithDualRefCount',
    CompactAssignments: 'CompactAssignmentsWith16',
    RawSolution: 'RawSolutionWith16'
  })
}, {
  minmax: [2030, 9000],
  types: (0, _util.objectSpread)({}, sharedTypes, {
    CompactAssignments: 'CompactAssignmentsWith16',
    RawSolution: 'RawSolutionWith16'
  })
}, {
  minmax: [9010, 9099],
  types: (0, _util.objectSpread)({}, sharedTypes, (0, _typesCreate.mapXcmTypes)('V0'))
}, {
  // jump from 9100 to 9110, however align with Rococo
  minmax: [9100, 9105],
  types: (0, _util.objectSpread)({}, sharedTypes, (0, _typesCreate.mapXcmTypes)('V1'))
}, {
  // metadata v14
  minmax: [9106, undefined],
  types: {}
}];
var _default = versioned;
exports.default = _default;
},{"@polkadot/types-create":"node_modules/@polkadot/types-create/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types-known/spec/node.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable sort-keys */
var versioned = [{
  minmax: [0, undefined],
  types: {// nothing, API tracks master
  }
}];
var _default = versioned;
exports.default = _default;
},{}],"node_modules/@polkadot/types-known/spec/node-template.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable sort-keys */
var versioned = [{
  minmax: [0, undefined],
  types: {// nothing, API tracks master
  }
}];
var _default = versioned;
exports.default = _default;
},{}],"node_modules/@polkadot/types-known/spec/polkadot.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable sort-keys */
var sharedTypes = {
  CompactAssignments: 'CompactAssignmentsWith16',
  DispatchErrorModule: 'DispatchErrorModuleU8',
  RawSolution: 'RawSolutionWith16',
  Keys: 'SessionKeys6',
  ProxyType: {
    _enum: {
      Any: 0,
      NonTransfer: 1,
      Governance: 2,
      Staking: 3,
      UnusedSudoBalances: 4,
      IdentityJudgement: 5,
      CancelProxy: 6,
      Auction: 7
    }
  }
};
var addrAccountIdTypes = {
  AccountInfo: 'AccountInfoWithRefCount',
  Address: 'AccountId',
  Keys: 'SessionKeys5',
  LookupSource: 'AccountId',
  ValidatorPrefs: 'ValidatorPrefsWithCommission'
}; // these are override types for Polkadot

var versioned = [{
  minmax: [0, 12],
  types: (0, _util.objectSpread)({}, sharedTypes, addrAccountIdTypes, {
    CompactAssignments: 'CompactAssignmentsTo257',
    OpenTip: 'OpenTipTo225',
    RefCount: 'RefCountTo259'
  })
}, {
  minmax: [13, 22],
  types: (0, _util.objectSpread)({}, sharedTypes, addrAccountIdTypes, {
    CompactAssignments: 'CompactAssignmentsTo257',
    RefCount: 'RefCountTo259'
  })
}, {
  minmax: [23, 24],
  types: (0, _util.objectSpread)({}, sharedTypes, addrAccountIdTypes, {
    RefCount: 'RefCountTo259'
  })
}, {
  minmax: [25, 27],
  types: (0, _util.objectSpread)({}, sharedTypes, addrAccountIdTypes)
}, {
  minmax: [28, 29],
  types: (0, _util.objectSpread)({}, sharedTypes, {
    AccountInfo: 'AccountInfoWithDualRefCount'
  })
}, {
  minmax: [30, 9109],
  types: (0, _util.objectSpread)({}, sharedTypes)
}, {
  // metadata v14
  minmax: [9110, undefined],
  types: {}
}];
var _default = versioned;
exports.default = _default;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types-known/spec/rococo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _typesCreate = require("@polkadot/types-create");

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable sort-keys */
// structs need to be in order

/* eslint-disable sort-keys */
var sharedTypes = {
  DispatchErrorModule: 'DispatchErrorModuleU8',
  FullIdentification: '()',
  // No staking, only session (as per config)
  Keys: 'SessionKeys7B'
};
var versioned = [{
  minmax: [0, 200],
  types: (0, _util.objectSpread)({}, sharedTypes, {
    AccountInfo: 'AccountInfoWithDualRefCount',
    Address: 'AccountId',
    LookupSource: 'AccountId'
  })
}, {
  minmax: [201, 214],
  types: (0, _util.objectSpread)({}, sharedTypes, {
    AccountInfo: 'AccountInfoWithDualRefCount'
  })
}, {
  minmax: [215, 228],
  types: (0, _util.objectSpread)({}, sharedTypes, {
    Keys: 'SessionKeys6'
  })
}, {
  minmax: [229, 9099],
  types: (0, _util.objectSpread)({}, sharedTypes, (0, _typesCreate.mapXcmTypes)('V0'))
}, {
  minmax: [9100, 9105],
  types: (0, _util.objectSpread)({}, sharedTypes, (0, _typesCreate.mapXcmTypes)('V1'))
}, {
  // metadata v14
  minmax: [9106, undefined],
  types: {}
}];
var _default = versioned;
exports.default = _default;
},{"@polkadot/types-create":"node_modules/@polkadot/types-create/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types-known/spec/shell.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable sort-keys */
var versioned = [{
  minmax: [0, undefined],
  types: {// nothing, limited runtime
  }
}];
var _default = versioned;
exports.default = _default;
},{}],"node_modules/@polkadot/types-known/spec/statemint.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _typesCreate = require("@polkadot/types-create");

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable sort-keys */
var sharedTypes = {
  DispatchErrorModule: 'DispatchErrorModuleU8',
  TAssetBalance: 'u128',
  ProxyType: {
    _enum: ['Any', 'NonTransfer', 'CancelProxy', 'Assets', 'AssetOwner', 'AssetManager', 'Staking']
  }
}; // these are override types for Statemine, Statemint, Westmint

var versioned = [{
  minmax: [0, 3],
  types: (0, _util.objectSpread)({}, sharedTypes, (0, _typesCreate.mapXcmTypes)('V0'))
}, {
  minmax: [4, 5],
  types: (0, _util.objectSpread)({}, sharedTypes, (0, _typesCreate.mapXcmTypes)('V1'))
}, {
  // metadata V14
  minmax: [500, undefined],
  types: {}
}];
var _default = versioned;
exports.default = _default;
},{"@polkadot/types-create":"node_modules/@polkadot/types-create/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types-known/spec/westend.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _typesCreate = require("@polkadot/types-create");

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable sort-keys */
var sharedTypes = {
  // 16 validators
  CompactAssignments: 'CompactAssignmentsWith16',
  DispatchErrorModule: 'DispatchErrorModuleU8',
  RawSolution: 'RawSolutionWith16',
  // general
  Keys: 'SessionKeys6',
  ProxyType: {
    _enum: ['Any', 'NonTransfer', 'Staking', 'SudoBalances', 'IdentityJudgement', 'CancelProxy']
  }
};
var addrAccountIdTypes = {
  AccountInfo: 'AccountInfoWithRefCount',
  Address: 'AccountId',
  CompactAssignments: 'CompactAssignmentsWith16',
  LookupSource: 'AccountId',
  Keys: 'SessionKeys5',
  RawSolution: 'RawSolutionWith16',
  ValidatorPrefs: 'ValidatorPrefsWithCommission'
};
var versioned = [{
  minmax: [1, 2],
  types: (0, _util.objectSpread)({}, sharedTypes, addrAccountIdTypes, {
    CompactAssignments: 'CompactAssignmentsTo257',
    DispatchInfo: 'DispatchInfoTo244',
    Heartbeat: 'HeartbeatTo244',
    Multiplier: 'Fixed64',
    OpenTip: 'OpenTipTo225',
    RefCount: 'RefCountTo259',
    Weight: 'u32'
  })
}, {
  minmax: [3, 22],
  types: (0, _util.objectSpread)({}, sharedTypes, addrAccountIdTypes, {
    CompactAssignments: 'CompactAssignmentsTo257',
    DispatchInfo: 'DispatchInfoTo244',
    Heartbeat: 'HeartbeatTo244',
    OpenTip: 'OpenTipTo225',
    RefCount: 'RefCountTo259'
  })
}, {
  minmax: [23, 42],
  types: (0, _util.objectSpread)({}, sharedTypes, addrAccountIdTypes, {
    CompactAssignments: 'CompactAssignmentsTo257',
    DispatchInfo: 'DispatchInfoTo244',
    Heartbeat: 'HeartbeatTo244',
    RefCount: 'RefCountTo259'
  })
}, {
  minmax: [43, 44],
  types: (0, _util.objectSpread)({}, sharedTypes, addrAccountIdTypes, {
    DispatchInfo: 'DispatchInfoTo244',
    Heartbeat: 'HeartbeatTo244',
    RefCount: 'RefCountTo259'
  })
}, {
  minmax: [45, 47],
  types: (0, _util.objectSpread)({}, sharedTypes, addrAccountIdTypes)
}, {
  minmax: [48, 49],
  types: (0, _util.objectSpread)({}, sharedTypes, {
    AccountInfo: 'AccountInfoWithDualRefCount'
  })
}, {
  minmax: [50, 9099],
  types: (0, _util.objectSpread)({}, sharedTypes, (0, _typesCreate.mapXcmTypes)('V0'))
}, {
  minmax: [9100, 9105],
  types: (0, _util.objectSpread)({}, sharedTypes, (0, _typesCreate.mapXcmTypes)('V1'))
}, {
  // metadata v14
  minmax: [9106, undefined],
  types: {}
}];
var _default = versioned;
exports.default = _default;
},{"@polkadot/types-create":"node_modules/@polkadot/types-create/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/types-known/spec/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _centrifugeChain = _interopRequireDefault(require("./centrifuge-chain.js"));

var _kusama = _interopRequireDefault(require("./kusama.js"));

var _node = _interopRequireDefault(require("./node.js"));

var _nodeTemplate = _interopRequireDefault(require("./node-template.js"));

var _polkadot = _interopRequireDefault(require("./polkadot.js"));

var _rococo = _interopRequireDefault(require("./rococo.js"));

var _shell = _interopRequireDefault(require("./shell.js"));

var _statemint = _interopRequireDefault(require("./statemint.js"));

var _westend = _interopRequireDefault(require("./westend.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2017-2022 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Type overrides for specific spec types & versions as given in runtimeVersion
var typesSpec = {
  'centrifuge-chain': _centrifugeChain.default,
  kusama: _kusama.default,
  node: _node.default,
  'node-template': _nodeTemplate.default,
  polkadot: _polkadot.default,
  rococo: _rococo.default,
  shell: _shell.default,
  statemine: _statemint.default,
  statemint: _statemint.default,
  westend: _westend.default,
  westmint: _statemint.default
};
var _default = typesSpec;
exports.default = _default;
},{"./centrifuge-chain.js":"node_modules/@polkadot/types-known/spec/centrifuge-chain.js","./kusama.js":"node_modules/@polkadot/types-known/spec/kusama.js","./node.js":"node_modules/@polkadot/types-known/spec/node.js","./node-template.js":"node_modules/@polkadot/types-known/spec/node-template.js","./polkadot.js":"node_modules/@polkadot/types-known/spec/polkadot.js","./rococo.js":"node_modules/@polkadot/types-known/spec/rococo.js","./shell.js":"node_modules/@polkadot/types-known/spec/shell.js","./statemint.js":"node_modules/@polkadot/types-known/spec/statemint.js","./westend.js":"node_modules/@polkadot/types-known/spec/westend.js"}],"node_modules/@polkadot/types-known/upgrades/kusama.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0
var upgrades = [[0, 1020], [26669, 1021], [38245, 1022], [54248, 1023], [59659, 1024], [67651, 1025], [82191, 1027], [83238, 1028], [101503, 1029], [203466, 1030], [295787, 1031], [461692, 1032], [504329, 1033], [569327, 1038], [587687, 1039], [653183, 1040], [693488, 1042], [901442, 1045], [1375086, 1050], [1445458, 1051], [1472960, 1052], [1475648, 1053], [1491596, 1054], [1574408, 1055], [2064961, 1058], [2201991, 1062], [2671528, 2005], [2704202, 2007], [2728002, 2008], [2832534, 2011], [2962294, 2012], [3240000, 2013], [3274408, 2015], [3323565, 2019], [3534175, 2022], [3860281, 2023], [4143129, 2024], [4401242, 2025], [4841367, 2026], [5961600, 2027], [6137912, 2028], [6561855, 2029], [7100891, 2030], [7468792, 9010], [7668600, 9030], [7812476, 9040], [8010981, 9050], [8073833, 9070], [8555825, 9080], [8945245, 9090], [9611377, 9100], [9625129, 9111], [9866422, 9122], [10403784, 9130], [10960765, 9150], [11006614, 9151], [11404482, 9160], [11601803, 9170], [12008022, 9180], [12405451, 9190], [12665416, 9200], [12909508, 9220], [13109752, 9230]];
var _default = upgrades;
exports.default = _default;
},{}],"node_modules/@polkadot/types-known/upgrades/polkadot.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0
var upgrades = [[0, 0], [29231, 1], [188836, 5], [199405, 6], [214264, 7], [244358, 8], [303079, 9], [314201, 10], [342400, 11], [443963, 12], [528470, 13], [687751, 14], [746085, 15], [787923, 16], [799302, 17], [1205128, 18], [1603423, 23], [1733218, 24], [2005673, 25], [2436698, 26], [3613564, 27], [3899547, 28], [4345767, 29], [4876134, 30], [5661442, 9050], [6321619, 9080], [6713249, 9090], [7217907, 9100], [7229126, 9110], [7560558, 9122], [8115869, 9140], [8638103, 9151], [9280179, 9170], [9738717, 9180], [10156856, 9190], [10458576, 9200], [10655116, 9220]];
var _default = upgrades;
exports.default = _default;
},{}],"node_modules/@polkadot/types-known/upgrades/westend.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// Copyright 2017-2022 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0
var upgrades = [[214356, 4], [392764, 7], [409740, 8], [809976, 20], [877581, 24], [879238, 25], [889472, 26], [902937, 27], [932751, 28], [991142, 29], [1030162, 31], [1119657, 32], [1199282, 33], [1342534, 34], [1392263, 35], [1431703, 36], [1433369, 37], [1490972, 41], [2087397, 43], [2316688, 44], [2549864, 45], [3925782, 46], [3925843, 47], [4207800, 48], [4627944, 49], [5124076, 50], [5478664, 900], [5482450, 9000], [5584305, 9010], [5784566, 9030], [5879822, 9031], [5896856, 9032], [5897316, 9033], [6117927, 9050], [6210274, 9070], [6379314, 9080], [6979141, 9090], [7568453, 9100], [7766394, 9111], [7911691, 9120], [7968866, 9121], [7982889, 9122], [8514322, 9130], [9091726, 9140], [9091774, 9150], [9406726, 9160], [9921066, 9170], [10007115, 9180], [10480973, 9190], [10578091, 9200], [10678509, 9210], [10811001, 9220], [11096116, 9230], [11409279, 9250]];
var _default = upgrades;
exports.default = _default;
},{}],"node_modules/@polkadot/types-known/upgrades/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _networks = require("@polkadot/networks");

var _util = require("@polkadot/util");

var _kusama = _interopRequireDefault(require("./kusama.js"));

var _polkadot = _interopRequireDefault(require("./polkadot.js"));

var _westend = _interopRequireDefault(require("./westend.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var allKnown = {
  kusama: _kusama.default,
  polkadot: _polkadot.default,
  westend: _westend.default
}; // testnets are not available in the networks map

var NET_EXTRA = {
  westend: {
    genesisHash: ['0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e']
  }
};
/** @internal */

function checkOrder(network, versions) {
  var ooo = versions.filter(function (curr, index) {
    var prev = versions[index - 1];
    return index === 0 ? false : curr[0] <= prev[0] || curr[1] <= prev[1];
  });

  if (ooo.length) {
    throw new Error("".concat(network, ": Mismatched upgrade ordering: ").concat((0, _util.stringify)(ooo)));
  }

  return versions;
}
/** @internal */


function mapRaw(_ref) {
  var _ref2 = _slicedToArray(_ref, 2),
      network = _ref2[0],
      versions = _ref2[1];

  var chain = _networks.selectableNetworks.find(function (n) {
    return n.network === network;
  }) || NET_EXTRA[network];

  if (!chain) {
    throw new Error("Unable to find info for chain ".concat(network));
  }

  return {
    genesisHash: (0, _util.hexToU8a)(chain.genesisHash[0]),
    network: network,
    versions: checkOrder(network, versions).map(function (_ref3) {
      var _ref4 = _slicedToArray(_ref3, 2),
          blockNumber = _ref4[0],
          specVersion = _ref4[1];

      return {
        blockNumber: new _util.BN(blockNumber),
        specVersion: new _util.BN(specVersion)
      };
    })
  };
} // Type overrides for specific spec types & versions as given in runtimeVersion


var upgrades = Object.entries(allKnown).map(mapRaw);
var _default = upgrades;
exports.default = _default;
},{"@polkadot/networks":"node_modules/@polkadot/networks/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","./kusama.js":"node_modules/@polkadot/types-known/upgrades/kusama.js","./polkadot.js":"node_modules/@polkadot/types-known/upgrades/polkadot.js","./westend.js":"node_modules/@polkadot/types-known/upgrades/westend.js"}],"node_modules/@polkadot/types-known/util.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getSpecAlias = getSpecAlias;
exports.getSpecExtensions = getSpecExtensions;
exports.getSpecHasher = getSpecHasher;
exports.getSpecRpc = getSpecRpc;
exports.getSpecRuntime = getSpecRuntime;
exports.getSpecTypes = getSpecTypes;
exports.getUpgradeVersion = getUpgradeVersion;

var _util = require("@polkadot/util");

var _index = _interopRequireDefault(require("./chain/index.js"));

var _index2 = _interopRequireDefault(require("./spec/index.js"));

var _index3 = _interopRequireDefault(require("./upgrades/index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function withNames(chainName, specName, fn) {
  return fn(chainName.toString(), specName.toString());
} // flatten a VersionedType[] into a Record<string, string>

/** @internal */


function filterVersions() {
  var versions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var specVersion = arguments.length > 1 ? arguments[1] : undefined;
  return versions.filter(function (_ref) {
    var _ref$minmax = _slicedToArray(_ref.minmax, 2),
        min = _ref$minmax[0],
        max = _ref$minmax[1];

    return (min === undefined || min === null || specVersion >= min) && (max === undefined || max === null || specVersion <= max);
  }).reduce(function (result, _ref2) {
    var types = _ref2.types;
    return (0, _util.objectSpread)(result, types);
  }, {});
}
/**
 * @description Based on the chain and runtimeVersion, get the applicable signed extensions (ready for registration)
 */


function getSpecExtensions(_ref3, chainName, specName) {
  var knownTypes = _ref3.knownTypes;
  return withNames(chainName, specName, function (c, s) {
    var _knownTypes$typesBund, _knownTypes$typesBund2, _knownTypes$typesBund3, _knownTypes$typesBund4, _knownTypes$typesBund5, _knownTypes$typesBund6;

    return (0, _util.objectSpread)({}, (_knownTypes$typesBund = knownTypes.typesBundle) === null || _knownTypes$typesBund === void 0 ? void 0 : (_knownTypes$typesBund2 = _knownTypes$typesBund.spec) === null || _knownTypes$typesBund2 === void 0 ? void 0 : (_knownTypes$typesBund3 = _knownTypes$typesBund2[s]) === null || _knownTypes$typesBund3 === void 0 ? void 0 : _knownTypes$typesBund3.signedExtensions, (_knownTypes$typesBund4 = knownTypes.typesBundle) === null || _knownTypes$typesBund4 === void 0 ? void 0 : (_knownTypes$typesBund5 = _knownTypes$typesBund4.chain) === null || _knownTypes$typesBund5 === void 0 ? void 0 : (_knownTypes$typesBund6 = _knownTypes$typesBund5[c]) === null || _knownTypes$typesBund6 === void 0 ? void 0 : _knownTypes$typesBund6.signedExtensions);
  });
}
/**
 * @description Based on the chain and runtimeVersion, get the applicable types (ready for registration)
 */


function getSpecTypes(_ref4, chainName, specName, specVersion) {
  var knownTypes = _ref4.knownTypes;

  var _specVersion = (0, _util.bnToBn)(specVersion).toNumber();

  return withNames(chainName, specName, function (c, s) {
    var _knownTypes$typesBund7, _knownTypes$typesBund8, _knownTypes$typesBund9, _knownTypes$typesBund10, _knownTypes$typesBund11, _knownTypes$typesBund12, _knownTypes$typesSpec, _knownTypes$typesChai;

    return (// The order here is always, based on -
      //   - spec then chain
      //   - typesBundle takes higher precedence
      //   - types is the final catch-all override
      (0, _util.objectSpread)({}, filterVersions(_index2.default[s], _specVersion), filterVersions(_index.default[c], _specVersion), filterVersions((_knownTypes$typesBund7 = knownTypes.typesBundle) === null || _knownTypes$typesBund7 === void 0 ? void 0 : (_knownTypes$typesBund8 = _knownTypes$typesBund7.spec) === null || _knownTypes$typesBund8 === void 0 ? void 0 : (_knownTypes$typesBund9 = _knownTypes$typesBund8[s]) === null || _knownTypes$typesBund9 === void 0 ? void 0 : _knownTypes$typesBund9.types, _specVersion), filterVersions((_knownTypes$typesBund10 = knownTypes.typesBundle) === null || _knownTypes$typesBund10 === void 0 ? void 0 : (_knownTypes$typesBund11 = _knownTypes$typesBund10.chain) === null || _knownTypes$typesBund11 === void 0 ? void 0 : (_knownTypes$typesBund12 = _knownTypes$typesBund11[c]) === null || _knownTypes$typesBund12 === void 0 ? void 0 : _knownTypes$typesBund12.types, _specVersion), (_knownTypes$typesSpec = knownTypes.typesSpec) === null || _knownTypes$typesSpec === void 0 ? void 0 : _knownTypes$typesSpec[s], (_knownTypes$typesChai = knownTypes.typesChain) === null || _knownTypes$typesChai === void 0 ? void 0 : _knownTypes$typesChai[c], knownTypes.types)
    );
  });
}

function getSpecHasher(_ref5, chainName, specName) {
  var knownTypes = _ref5.knownTypes;
  return withNames(chainName, specName, function (c, s) {
    var _knownTypes$typesBund13, _knownTypes$typesBund14, _knownTypes$typesBund15, _knownTypes$typesBund16, _knownTypes$typesBund17, _knownTypes$typesBund18;

    return knownTypes.hasher || ((_knownTypes$typesBund13 = knownTypes.typesBundle) === null || _knownTypes$typesBund13 === void 0 ? void 0 : (_knownTypes$typesBund14 = _knownTypes$typesBund13.chain) === null || _knownTypes$typesBund14 === void 0 ? void 0 : (_knownTypes$typesBund15 = _knownTypes$typesBund14[c]) === null || _knownTypes$typesBund15 === void 0 ? void 0 : _knownTypes$typesBund15.hasher) || ((_knownTypes$typesBund16 = knownTypes.typesBundle) === null || _knownTypes$typesBund16 === void 0 ? void 0 : (_knownTypes$typesBund17 = _knownTypes$typesBund16.spec) === null || _knownTypes$typesBund17 === void 0 ? void 0 : (_knownTypes$typesBund18 = _knownTypes$typesBund17[s]) === null || _knownTypes$typesBund18 === void 0 ? void 0 : _knownTypes$typesBund18.hasher) || null;
  });
}
/**
 * @description Based on the chain and runtimeVersion, get the applicable rpc definitions (ready for registration)
 */


function getSpecRpc(_ref6, chainName, specName) {
  var knownTypes = _ref6.knownTypes;
  return withNames(chainName, specName, function (c, s) {
    var _knownTypes$typesBund19, _knownTypes$typesBund20, _knownTypes$typesBund21, _knownTypes$typesBund22, _knownTypes$typesBund23, _knownTypes$typesBund24;

    return (0, _util.objectSpread)({}, (_knownTypes$typesBund19 = knownTypes.typesBundle) === null || _knownTypes$typesBund19 === void 0 ? void 0 : (_knownTypes$typesBund20 = _knownTypes$typesBund19.spec) === null || _knownTypes$typesBund20 === void 0 ? void 0 : (_knownTypes$typesBund21 = _knownTypes$typesBund20[s]) === null || _knownTypes$typesBund21 === void 0 ? void 0 : _knownTypes$typesBund21.rpc, (_knownTypes$typesBund22 = knownTypes.typesBundle) === null || _knownTypes$typesBund22 === void 0 ? void 0 : (_knownTypes$typesBund23 = _knownTypes$typesBund22.chain) === null || _knownTypes$typesBund23 === void 0 ? void 0 : (_knownTypes$typesBund24 = _knownTypes$typesBund23[c]) === null || _knownTypes$typesBund24 === void 0 ? void 0 : _knownTypes$typesBund24.rpc);
  });
}
/**
 * @description Based on the chain and runtimeVersion, get the applicable runtime definitions (ready for registration)
 */


function getSpecRuntime(_ref7, chainName, specName) {
  var knownTypes = _ref7.knownTypes;
  return withNames(chainName, specName, function (c, s) {
    var _knownTypes$typesBund25, _knownTypes$typesBund26, _knownTypes$typesBund27, _knownTypes$typesBund28, _knownTypes$typesBund29, _knownTypes$typesBund30;

    return (0, _util.objectSpread)({}, (_knownTypes$typesBund25 = knownTypes.typesBundle) === null || _knownTypes$typesBund25 === void 0 ? void 0 : (_knownTypes$typesBund26 = _knownTypes$typesBund25.spec) === null || _knownTypes$typesBund26 === void 0 ? void 0 : (_knownTypes$typesBund27 = _knownTypes$typesBund26[s]) === null || _knownTypes$typesBund27 === void 0 ? void 0 : _knownTypes$typesBund27.runtime, (_knownTypes$typesBund28 = knownTypes.typesBundle) === null || _knownTypes$typesBund28 === void 0 ? void 0 : (_knownTypes$typesBund29 = _knownTypes$typesBund28.chain) === null || _knownTypes$typesBund29 === void 0 ? void 0 : (_knownTypes$typesBund30 = _knownTypes$typesBund29[c]) === null || _knownTypes$typesBund30 === void 0 ? void 0 : _knownTypes$typesBund30.runtime);
  });
}
/**
 * @description Based on the chain and runtimeVersion, get the applicable alias definitions (ready for registration)
 */


function getSpecAlias(_ref8, chainName, specName) {
  var knownTypes = _ref8.knownTypes;
  return withNames(chainName, specName, function (c, s) {
    var _knownTypes$typesBund31, _knownTypes$typesBund32, _knownTypes$typesBund33, _knownTypes$typesBund34, _knownTypes$typesBund35, _knownTypes$typesBund36;

    return (// as per versions, first spec, then chain then finally non-versioned
      (0, _util.objectSpread)({}, (_knownTypes$typesBund31 = knownTypes.typesBundle) === null || _knownTypes$typesBund31 === void 0 ? void 0 : (_knownTypes$typesBund32 = _knownTypes$typesBund31.spec) === null || _knownTypes$typesBund32 === void 0 ? void 0 : (_knownTypes$typesBund33 = _knownTypes$typesBund32[s]) === null || _knownTypes$typesBund33 === void 0 ? void 0 : _knownTypes$typesBund33.alias, (_knownTypes$typesBund34 = knownTypes.typesBundle) === null || _knownTypes$typesBund34 === void 0 ? void 0 : (_knownTypes$typesBund35 = _knownTypes$typesBund34.chain) === null || _knownTypes$typesBund35 === void 0 ? void 0 : (_knownTypes$typesBund36 = _knownTypes$typesBund35[c]) === null || _knownTypes$typesBund36 === void 0 ? void 0 : _knownTypes$typesBund36.alias, knownTypes.typesAlias)
    );
  });
}
/**
 * @description Returns a version record for known chains where upgrades are being tracked
 */


function getUpgradeVersion(genesisHash, blockNumber) {
  var known = _index3.default.find(function (u) {
    return genesisHash.eq(u.genesisHash);
  });

  return known ? [known.versions.reduce(function (last, version) {
    return blockNumber.gt(version.blockNumber) ? version : last;
  }, undefined), known.versions.find(function (version) {
    return blockNumber.lte(version.blockNumber);
  })] : [undefined, undefined];
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./chain/index.js":"node_modules/@polkadot/types-known/chain/index.js","./spec/index.js":"node_modules/@polkadot/types-known/spec/index.js","./upgrades/index.js":"node_modules/@polkadot/types-known/upgrades/index.js"}],"node_modules/@polkadot/types-known/bundle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  mapXcmTypes: true,
  packageInfo: true
};
Object.defineProperty(exports, "mapXcmTypes", {
  enumerable: true,
  get: function () {
    return _typesCreate.mapXcmTypes;
  }
});
Object.defineProperty(exports, "packageInfo", {
  enumerable: true,
  get: function () {
    return _packageInfo.packageInfo;
  }
});

var _typesCreate = require("@polkadot/types-create");

var _packageInfo = require("./packageInfo.js");

var _util = require("./util.js");

Object.keys(_util).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _util[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _util[key];
    }
  });
});
},{"@polkadot/types-create":"node_modules/@polkadot/types-create/index.js","./packageInfo.js":"node_modules/@polkadot/types-known/packageInfo.js","./util.js":"node_modules/@polkadot/types-known/util.js"}],"node_modules/@polkadot/types-known/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

require("./detectPackage.js");

var _bundle = require("./bundle.js");

Object.keys(_bundle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _bundle[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bundle[key];
    }
  });
});
},{"./detectPackage.js":"node_modules/@polkadot/types-known/detectPackage.js","./bundle.js":"node_modules/@polkadot/types-known/bundle.js"}],"node_modules/@polkadot/api/util/augmentObject.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.augmentObject = augmentObject;

var _util = require("@polkadot/util");

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var l = (0, _util.logger)('api/augment');

function logLength(type, values) {
  var and = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  return values.length ? " ".concat(values.length, " ").concat(type).concat(and.length ? ' and' : '') : '';
}

function logValues(type, values) {
  return values.length ? "\n\t".concat(type.padStart(7), ": ").concat(values.sort().join(', ')) : '';
} // log details to console


function warn(prefix, type, _ref) {
  var _ref2 = _slicedToArray(_ref, 2),
      added = _ref2[0],
      removed = _ref2[1];

  if (added.length || removed.length) {
    l.warn("api.".concat(prefix, ": Found").concat(logLength('added', added, removed)).concat(logLength('removed', removed), " ").concat(type, ":").concat(logValues('added', added)).concat(logValues('removed', removed)));
  }
}

function findSectionExcludes(a, b) {
  return a.filter(function (s) {
    return !b.includes(s);
  });
}

function findSectionIncludes(a, b) {
  return a.filter(function (s) {
    return b.includes(s);
  });
}

function extractSections(src, dst) {
  var srcSections = Object.keys(src);
  var dstSections = Object.keys(dst);
  return [findSectionExcludes(srcSections, dstSections), findSectionExcludes(dstSections, srcSections)];
}

function findMethodExcludes(src, dst) {
  var srcSections = Object.keys(src);
  var dstSections = findSectionIncludes(Object.keys(dst), srcSections);
  var excludes = [];

  var _loop = function _loop(s) {
    var section = dstSections[s];
    var srcMethods = Object.keys(src[section]);
    var dstMethods = Object.keys(dst[section]);
    excludes.push.apply(excludes, _toConsumableArray(dstMethods.filter(function (m) {
      return !srcMethods.includes(m);
    }).map(function (m) {
      return "".concat(section, ".").concat(m);
    })));
  };

  for (var s = 0; s < dstSections.length; s++) {
    _loop(s);
  }

  return excludes;
}

function extractMethods(src, dst) {
  return [findMethodExcludes(dst, src), findMethodExcludes(src, dst)];
}

function lazySection(src, dst) {
  var creator = function creator(m) {
    return src[m];
  };

  var methods = Object.keys(src);

  for (var i = 0; i < methods.length; i++) {
    var method = methods[i]; // We use hasOwnproperty here to only check for the existence of the key,
    // instead of reading dst[section][method] which will evaluate when already
    // set as a lazy value previously

    if (!Object.prototype.hasOwnProperty.call(dst, method)) {
      (0, _util.lazyMethod)(dst, method, creator);
    }
  }
}
/**
 * @description Takes a decorated api section (e.g. api.tx) and augment it with the details. It does not override what is
 * already available, but rather just adds new missing items into the result object.
 * @internal
 */


function augmentObject(prefix, src, dst) {
  var fromEmpty = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  fromEmpty && (0, _util.objectClear)(dst); // NOTE: This part is slightly problematic since it will get the
  // values for at least all the sections and the names of the methods
  // (Since methods won't be decorated before lazy, this _may_ be ok)

  if (prefix && Object.keys(dst).length) {
    warn(prefix, 'modules', extractSections(src, dst));
    warn(prefix, 'calls', extractMethods(src, dst));
  }

  var sections = Object.keys(src);

  for (var i = 0; i < sections.length; i++) {
    var section = sections[i]; // We don't set here with a lazy interface, we decorate based
    // on the top-level structure (this bypasses adding lazy onto lazy)

    if (!dst[section]) {
      dst[section] = {};
    }

    lazySection(src[section], dst[section]);
  }

  return dst;
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/api/util/validate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extractStorageArgs = extractStorageArgs;

var _util = require("@polkadot/util");

// Copyright 2017-2022 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0
function sig(_ref, _ref2, args) {
  var lookup = _ref.lookup;
  var method = _ref2.method,
      section = _ref2.section;
  return "".concat(section, ".").concat(method, "(").concat(args.map(function (a) {
    return lookup.getTypeDef(a).type;
  }).join(', '), ")");
} // sets up the arguments in the form of [creator, args] ready to be used in a storage
// call. Additionally, it verifies that the correct number of arguments have been passed


function extractStorageArgs(registry, creator, _args) {
  var args = _args.filter(function (a) {
    return !(0, _util.isUndefined)(a);
  });

  if (creator.meta.type.isPlain) {
    (0, _util.assert)(args.length === 0, function () {
      return "".concat(sig(registry, creator, []), " does not take any arguments, ").concat(args.length, " found");
    });
  } else {
    var _creator$meta$type$as = creator.meta.type.asMap,
        hashers = _creator$meta$type$as.hashers,
        key = _creator$meta$type$as.key;
    var keys = hashers.length === 1 ? [key] : registry.lookup.getSiType(key).def.asTuple.map(function (t) {
      return t;
    });
    (0, _util.assert)(args.length === keys.length, function () {
      return "".concat(sig(registry, creator, keys), " is a map, requiring ").concat(keys.length, " arguments, ").concat(args.length, " found");
    });
  } // pass as tuple


  return [creator, args];
}
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/api/base/Events.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Events = void 0;

var _eventemitter2 = _interopRequireDefault(require("eventemitter3"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

var _eventemitter = /*#__PURE__*/new WeakMap();

var Events = /*#__PURE__*/function () {
  function Events() {
    _classCallCheck(this, Events);

    _classPrivateFieldInitSpec(this, _eventemitter, {
      writable: true,
      value: new _eventemitter2.default()
    });
  }

  _createClass(Events, [{
    key: "emit",
    value: function emit(type) {
      var _classPrivateFieldGet2;

      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      return (_classPrivateFieldGet2 = _classPrivateFieldGet(this, _eventemitter)).emit.apply(_classPrivateFieldGet2, [type].concat(args));
    }
    /**
     * @description Attach an eventemitter handler to listen to a specific event
     *
     * @param type The type of event to listen to. Available events are `connected`, `disconnected`, `ready` and `error`
     * @param handler The callback to be called when the event fires. Depending on the event type, it could fire with additional arguments.
     *
     * @example
     * <BR>
     *
     * ```javascript
     * api.on('connected', (): void => {
     *   console.log('API has been connected to the endpoint');
     * });
     *
     * api.on('disconnected', (): void => {
     *   console.log('API has been disconnected from the endpoint');
     * });
     * ```
     */

  }, {
    key: "on",
    value: function on(type, handler) {
      _classPrivateFieldGet(this, _eventemitter).on(type, handler);

      return this;
    }
    /**
     * @description Remove the given eventemitter handler
     *
     * @param type The type of event the callback was attached to. Available events are `connected`, `disconnected`, `ready` and `error`
     * @param handler The callback to unregister.
     *
     * @example
     * <BR>
     *
     * ```javascript
     * const handler = (): void => {
     *  console.log('Connected !);
     * };
     *
     * // Start listening
     * api.on('connected', handler);
     *
     * // Stop listening
     * api.off('connected', handler);
     * ```
     */

  }, {
    key: "off",
    value: function off(type, handler) {
      _classPrivateFieldGet(this, _eventemitter).removeListener(type, handler);

      return this;
    }
    /**
     * @description Attach an one-time eventemitter handler to listen to a specific event
     *
     * @param type The type of event to listen to. Available events are `connected`, `disconnected`, `ready` and `error`
     * @param handler The callback to be called when the event fires. Depending on the event type, it could fire with additional arguments.
     *
     * @example
     * <BR>
     *
     * ```javascript
     * api.once('connected', (): void => {
     *   console.log('API has been connected to the endpoint');
     * });
     *
     * api.once('disconnected', (): void => {
     *   console.log('API has been disconnected from the endpoint');
     * });
     * ```
     */

  }, {
    key: "once",
    value: function once(type, handler) {
      _classPrivateFieldGet(this, _eventemitter).once(type, handler);

      return this;
    }
  }]);

  return Events;
}();

exports.Events = Events;
},{"eventemitter3":"node_modules/eventemitter3/index.js"}],"node_modules/@polkadot/api/base/Decorate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Decorate = void 0;

var _rxjs = require("rxjs");

var _apiDerive = require("@polkadot/api-derive");

var _rpcCore = require("@polkadot/rpc-core");

var _rpcProvider = require("@polkadot/rpc-provider");

var _types = require("@polkadot/types");

var _typesKnown = require("@polkadot/types-known");

var _util = require("@polkadot/util");

var _utilCrypto = require("@polkadot/util-crypto");

var _index = require("../submittable/index.js");

var _augmentObject = require("../util/augmentObject.js");

var _decorate = require("../util/decorate.js");

var _validate = require("../util/validate.js");

var _Events2 = require("./Events.js");

var _find = require("./find.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

// the max amount of keys/values that we will retrieve at once
var PAGE_SIZE_K = 1000; // limit aligned with the 1k on the node (trie lookups are heavy)

var PAGE_SIZE_V = 250; // limited since the data may be > 16MB (e.g. misfiring elections)

var PAGE_SIZE_Q = 50; // queue of pending storage queries (mapped together, next tick)

var l = (0, _util.logger)('api/init');
var instanceCounter = 0;

function getAtQueryFn(api, _ref) {
  var method = _ref.method,
      section = _ref.section;
  return (0, _util.assertReturn)(api.rx.query[section] && api.rx.query[section][method], function () {
    return "query.".concat(section, ".").concat(method, " is not available in this version of the metadata");
  });
}

var _instanceId = /*#__PURE__*/new WeakMap();

var _registry = /*#__PURE__*/new WeakMap();

var _storageGetQ = /*#__PURE__*/new WeakMap();

var _storageSubQ = /*#__PURE__*/new WeakMap();

var Decorate = /*#__PURE__*/function (_Events) {
  _inherits(Decorate, _Events);

  var _super = _createSuper(Decorate);

  // HACK Use BN import so decorateDerive works... yes, wtf.
  // latest extrinsic version

  /**
   * @description Create an instance of the class
   *
   * @param options Options object to create API instance or a Provider instance
   *
   * @example
   * <BR>
   *
   * ```javascript
   * import Api from '@polkadot/api/promise';
   *
   * const api = new Api().isReady();
   *
   * api.rpc.subscribeNewHeads((header) => {
   *   console.log(`new block #${header.number.toNumber()}`);
   * });
   * ```
   */
  function Decorate(options, type, decorateMethod) {
    var _this;

    _classCallCheck(this, Decorate);

    var _options$source;

    _this = _super.call(this);

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _instanceId, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _registry, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _storageGetQ, {
      writable: true,
      value: []
    });

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _storageSubQ, {
      writable: true,
      value: []
    });

    _defineProperty(_assertThisInitialized(_this), "__phantom", new _util.BN(0));

    _defineProperty(_assertThisInitialized(_this), "_call", {});

    _defineProperty(_assertThisInitialized(_this), "_consts", {});

    _defineProperty(_assertThisInitialized(_this), "_errors", {});

    _defineProperty(_assertThisInitialized(_this), "_events", {});

    _defineProperty(_assertThisInitialized(_this), "_extrinsicType", 4);

    _defineProperty(_assertThisInitialized(_this), "_isReady", false);

    _defineProperty(_assertThisInitialized(_this), "_query", {});

    _defineProperty(_assertThisInitialized(_this), "_runtimeMap", {});

    _defineProperty(_assertThisInitialized(_this), "_rx", {
      consts: {},
      query: {},
      tx: {}
    });

    _defineProperty(_assertThisInitialized(_this), "_rxDecorateMethod", function (method) {
      return method;
    });

    _classPrivateFieldSet(_assertThisInitialized(_this), _instanceId, "".concat(++instanceCounter));

    _classPrivateFieldSet(_assertThisInitialized(_this), _registry, ((_options$source = options.source) === null || _options$source === void 0 ? void 0 : _options$source.registry) || options.registry || new _types.TypeRegistry());

    _this._rx.queryAt = function (blockHash, knownVersion) {
      return (0, _rxjs.from)(_this.at(blockHash, knownVersion)).pipe((0, _rxjs.map)(function (a) {
        return a.rx.query;
      }));
    };

    _this._rx.registry = _classPrivateFieldGet(_assertThisInitialized(_this), _registry);
    var thisProvider = options.source ? options.source._rpcCore.provider.clone() : options.provider || new _rpcProvider.WsProvider();
    _this._decorateMethod = decorateMethod;
    _this._options = options;
    _this._type = type; // The RPC interface decorates the known interfaces on init

    _this._rpcCore = new _rpcCore.RpcCore(_classPrivateFieldGet(_assertThisInitialized(_this), _instanceId), _classPrivateFieldGet(_assertThisInitialized(_this), _registry), thisProvider, _this._options.rpc);
    _this._isConnected = new _rxjs.BehaviorSubject(_this._rpcCore.provider.isConnected);
    _this._rx.hasSubscriptions = _this._rpcCore.provider.hasSubscriptions;
    return _this;
  }
  /**
   * @description Return the current used registry
   */


  _createClass(Decorate, [{
    key: "registry",
    get: function get() {
      return _classPrivateFieldGet(this, _registry);
    }
    /**
     * @description Creates an instance of a type as registered
     */

  }, {
    key: "createType",
    value: function createType(type) {
      var _classPrivateFieldGet2;

      for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        params[_key - 1] = arguments[_key];
      }

      return (_classPrivateFieldGet2 = _classPrivateFieldGet(this, _registry)).createType.apply(_classPrivateFieldGet2, [type].concat(params));
    }
    /**
     * @description Register additional user-defined of chain-specific types in the type registry
     */

  }, {
    key: "registerTypes",
    value: function registerTypes(types) {
      types && _classPrivateFieldGet(this, _registry).register(types);
    }
    /**
     * @returns `true` if the API operates with subscriptions
     */

  }, {
    key: "hasSubscriptions",
    get: function get() {
      return this._rpcCore.provider.hasSubscriptions;
    }
    /**
     * @returns `true` if the API decorate multi-key queries
     */

  }, {
    key: "supportMulti",
    get: function get() {
      return this._rpcCore.provider.hasSubscriptions || !!this._rpcCore.state.queryStorageAt;
    }
  }, {
    key: "_emptyDecorated",
    value: function _emptyDecorated(registry, blockHash) {
      return {
        call: {},
        consts: {},
        errors: {},
        events: {},
        query: {},
        registry: registry,
        rx: {
          query: {}
        },
        tx: (0, _index.createSubmittable)(this._type, this._rx, this._decorateMethod, registry, blockHash)
      };
    }
  }, {
    key: "_createDecorated",
    value: function _createDecorated(registry, fromEmpty, decoratedApi, blockHash) {
      if (!decoratedApi) {
        decoratedApi = this._emptyDecorated(registry.registry, blockHash);
      }

      if (fromEmpty || !registry.decoratedMeta) {
        registry.decoratedMeta = (0, _types.expandMetadata)(registry.registry, registry.metadata);
      }

      var runtime = this._decorateCalls(registry, this._decorateMethod, blockHash);

      var storage = this._decorateStorage(registry.decoratedMeta, this._decorateMethod, blockHash);

      var storageRx = this._decorateStorage(registry.decoratedMeta, this._rxDecorateMethod, blockHash);

      (0, _augmentObject.augmentObject)('consts', registry.decoratedMeta.consts, decoratedApi.consts, fromEmpty);
      (0, _augmentObject.augmentObject)('errors', registry.decoratedMeta.errors, decoratedApi.errors, fromEmpty);
      (0, _augmentObject.augmentObject)('events', registry.decoratedMeta.events, decoratedApi.events, fromEmpty);
      (0, _augmentObject.augmentObject)('query', storage, decoratedApi.query, fromEmpty);
      (0, _augmentObject.augmentObject)('query', storageRx, decoratedApi.rx.query, fromEmpty);
      (0, _augmentObject.augmentObject)('call', runtime, decoratedApi.call, fromEmpty);

      decoratedApi.findCall = function (callIndex) {
        return (0, _find.findCall)(registry.registry, callIndex);
      };

      decoratedApi.findError = function (errorIndex) {
        return (0, _find.findError)(registry.registry, errorIndex);
      };

      decoratedApi.queryMulti = blockHash ? this._decorateMultiAt(decoratedApi, this._decorateMethod, blockHash) : this._decorateMulti(this._decorateMethod);
      decoratedApi.runtimeVersion = registry.runtimeVersion;
      return {
        decoratedApi: decoratedApi,
        decoratedMeta: registry.decoratedMeta
      };
    }
  }, {
    key: "_injectMetadata",
    value: function _injectMetadata(registry) {
      var fromEmpty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      // clear the decoration, we are redoing it here
      if (fromEmpty || !registry.decoratedApi) {
        registry.decoratedApi = this._emptyDecorated(registry.registry);
      }

      var _this$_createDecorate = this._createDecorated(registry, fromEmpty, registry.decoratedApi),
          decoratedApi = _this$_createDecorate.decoratedApi,
          decoratedMeta = _this$_createDecorate.decoratedMeta;

      this._call = decoratedApi.call;
      this._consts = decoratedApi.consts;
      this._errors = decoratedApi.errors;
      this._events = decoratedApi.events;
      this._query = decoratedApi.query;
      this._rx.query = decoratedApi.rx.query;

      var tx = this._decorateExtrinsics(decoratedMeta, this._decorateMethod);

      var rxtx = this._decorateExtrinsics(decoratedMeta, this._rxDecorateMethod);

      if (fromEmpty || !this._extrinsics) {
        this._extrinsics = tx;
        this._rx.tx = rxtx;
      } else {
        (0, _augmentObject.augmentObject)('tx', tx, this._extrinsics, false);
        (0, _augmentObject.augmentObject)(null, rxtx, this._rx.tx, false);
      }

      (0, _augmentObject.augmentObject)(null, decoratedMeta.consts, this._rx.consts, fromEmpty);
      this.emit('decorated');
    }
    /**
     * @deprecated
     * backwards compatible endpoint for metadata injection, may be removed in the future (However, it is still useful for testing injection)
     */

  }, {
    key: "injectMetadata",
    value: function injectMetadata(metadata, fromEmpty, registry) {
      this._injectMetadata({
        metadata: metadata,
        registry: registry || _classPrivateFieldGet(this, _registry),
        runtimeVersion: _classPrivateFieldGet(this, _registry).createType('RuntimeVersionPartial')
      }, fromEmpty);
    }
  }, {
    key: "_decorateFunctionMeta",
    value: function _decorateFunctionMeta(input, output) {
      output.meta = input.meta;
      output.method = input.method;
      output.section = input.section;
      output.toJSON = input.toJSON;

      if (input.callIndex) {
        output.callIndex = input.callIndex;
      }

      return output;
    } // Filter all RPC methods based on the results of the rpc_methods call. We do this in the following
    // manner to cater for both old and new:
    //   - when the number of entries are 0, only remove the ones with isOptional (account & contracts)
    //   - when non-zero, remove anything that is not in the array (we don't do this)

  }, {
    key: "_filterRpc",
    value: function _filterRpc(methods, additional) {
      // add any specific user-base RPCs
      if (Object.keys(additional).length !== 0) {
        this._rpcCore.addUserInterfaces(additional); // re-decorate, only adding any new additional interfaces


        this._decorateRpc(this._rpcCore, this._decorateMethod, this._rpc);

        this._decorateRpc(this._rpcCore, this._rxDecorateMethod, this._rx.rpc);
      } // extract the actual sections from the methods (this is useful when
      // we try and create mappings to runtime names via a hash mapping)


      var sectionMap = {};

      for (var i = 0; i < methods.length; i++) {
        var _methods$i$split = methods[i].split('_'),
            _methods$i$split2 = _slicedToArray(_methods$i$split, 1),
            section = _methods$i$split2[0];

        sectionMap[section] = true;
      } // convert the actual section names into an easy name lookup


      var sections = Object.keys(sectionMap);

      for (var _i2 = 0; _i2 < sections.length; _i2++) {
        var nameA = (0, _util.stringUpperFirst)(sections[_i2]);
        var nameB = "".concat(nameA, "Api");
        this._runtimeMap[(0, _utilCrypto.blake2AsHex)(nameA, 64)] = nameA;
        this._runtimeMap[(0, _utilCrypto.blake2AsHex)(nameB, 64)] = nameB;
      } // finally we filter the actual methods to expose


      this._filterRpcMethods(methods);
    }
  }, {
    key: "_filterRpcMethods",
    value: function _filterRpcMethods(exposed) {
      var hasResults = exposed.length !== 0;

      var allKnown = _toConsumableArray(this._rpcCore.mapping.entries());

      var allKeys = [];

      for (var i = 0; i < allKnown.length; i++) {
        var _allKnown$i = _slicedToArray(allKnown[i], 2),
            _allKnown$i$ = _allKnown$i[1],
            alias = _allKnown$i$.alias,
            endpoint = _allKnown$i$.endpoint,
            method = _allKnown$i$.method,
            pubsub = _allKnown$i$.pubsub,
            section = _allKnown$i$.section;

        allKeys.push("".concat(section, "_").concat(method));

        if (pubsub) {
          allKeys.push("".concat(section, "_").concat(pubsub[1]));
          allKeys.push("".concat(section, "_").concat(pubsub[2]));
        }

        if (alias) {
          allKeys.push.apply(allKeys, _toConsumableArray(alias));
        }

        if (endpoint) {
          allKeys.push(endpoint);
        }
      }

      var filterKey = function filterKey(k) {
        return !allKeys.includes(k);
      };

      var unknown = exposed.filter(filterKey);

      if (unknown.length) {
        l.warn("RPC methods not decorated: ".concat(unknown.join(', ')));
      } // loop through all entries we have (populated in decorate) and filter as required
      // only remove when we have results and method missing, or with no results if optional


      for (var _i3 = 0; _i3 < allKnown.length; _i3++) {
        var _allKnown$_i = _slicedToArray(allKnown[_i3], 2),
            k = _allKnown$_i[0],
            _allKnown$_i$ = _allKnown$_i[1],
            _method2 = _allKnown$_i$.method,
            _section2 = _allKnown$_i$.section;

        if (hasResults && !exposed.includes(k) && k !== 'rpc_methods') {
          if (this._rpc[_section2]) {
            delete this._rpc[_section2][_method2];
            delete this._rx.rpc[_section2][_method2];
          }
        }
      }
    }
  }, {
    key: "_decorateRpc",
    value: function _decorateRpc(rpc, decorateMethod) {
      var _this2 = this;

      var input = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var out = input;

      var decorateFn = function decorateFn(section, method) {
        var source = rpc[section][method];
        var fn = decorateMethod(source, {
          methodName: method
        });
        fn.meta = source.meta;
        fn.raw = decorateMethod(source.raw, {
          methodName: method
        });
        return fn;
      };

      var _loop = function _loop(s) {
        var section = rpc.sections[s];

        if (!Object.prototype.hasOwnProperty.call(out, section)) {
          var methods = Object.keys(rpc[section]);

          var decorateInternal = function decorateInternal(method) {
            return decorateFn(section, method);
          };

          for (var m = 0; m < methods.length; m++) {
            var method = methods[m]; //  skip subscriptions where we have a non-subscribe interface

            if (_this2.hasSubscriptions || !(method.startsWith('subscribe') || method.startsWith('unsubscribe'))) {
              if (!Object.prototype.hasOwnProperty.call(out, section)) {
                out[section] = {};
              }

              (0, _util.lazyMethod)(out[section], method, decorateInternal);
            }
          }
        }
      };

      for (var s = 0; s < rpc.sections.length; s++) {
        _loop(s);
      }

      return out;
    } // add all definition entries

  }, {
    key: "_addRuntimeDef",
    value: function _addRuntimeDef(result, additional) {
      if (!additional) {
        return;
      }

      var entries = Object.entries(additional);

      for (var j = 0; j < entries.length; j++) {
        var _entries$j = _slicedToArray(entries[j], 2),
            key = _entries$j[0],
            defs = _entries$j[1];

        if (result[key]) {
          var _loop2 = function _loop2(k) {
            var def = defs[k];
            var prev = result[key].find(function (_ref2) {
              var version = _ref2.version;
              return def.version === version;
            });

            if (prev) {
              // interleave the new methods with the old - last definition wins
              (0, _util.objectSpread)(prev.methods, def.methods);
            } else {
              // we don't have this specific version, add it
              result[key].push(def);
            }
          };

          // we have this one already, step through for new versions or
          // new methods and add those as applicable
          for (var k = 0; k < defs.length; k++) {
            _loop2(k);
          }
        } else {
          // we don't have this runtime definition, add it as-is
          result[key] = defs;
        }
      }
    } // extract all runtime definitions

  }, {
    key: "_getRuntimeDefs",
    value: function _getRuntimeDefs(registry, specName) {
      var chain = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
      var result = {};
      var defValues = Object.values(_types.typeDefinitions); // options > chain/spec > built-in, apply in reverse order with
      // methods overriding previous definitions (or interleave missing)

      for (var i = 0; i < defValues.length; i++) {
        this._addRuntimeDef(result, defValues[i].runtime);
      }

      this._addRuntimeDef(result, (0, _typesKnown.getSpecRuntime)(registry, chain, specName));

      this._addRuntimeDef(result, this._options.runtime);

      return Object.entries(result);
    } // pre-metadata decoration

  }, {
    key: "_decorateCalls",
    value: function _decorateCalls(_ref3, decorateMethod, blockHash) {
      var _this3 = this;

      var registry = _ref3.registry,
          _ref3$runtimeVersion = _ref3.runtimeVersion,
          apis = _ref3$runtimeVersion.apis,
          specName = _ref3$runtimeVersion.specName;
      var result = {};
      var named = {};
      var hashes = {};

      var sections = this._getRuntimeDefs(registry, specName, this._runtimeChain);

      var older = [];

      var _loop3 = function _loop3(i) {
        var _sections$i = _slicedToArray(sections[i], 2),
            _section = _sections$i[0],
            secs = _sections$i[1];

        var sectionHash = (0, _utilCrypto.blake2AsHex)(_section, 64);
        var rtApi = apis.find(function (_ref10) {
          var _ref11 = _slicedToArray(_ref10, 1),
              a = _ref11[0];

          return a.eq(sectionHash);
        });
        hashes[sectionHash] = true;

        if (rtApi) {
          var all = secs.map(function (_ref12) {
            var version = _ref12.version;
            return version;
          }).sort();
          var sec = secs.find(function (_ref13) {
            var version = _ref13.version;
            return rtApi[1].eq(version);
          });

          if (sec) {
            var section = (0, _util.stringCamelCase)(_section);
            var methods = Object.entries(sec.methods);

            if (methods.length) {
              if (!named[section]) {
                named[section] = {};
              }

              for (var m = 0; m < methods.length; m++) {
                var _methods$m = _slicedToArray(methods[m], 2),
                    _method = _methods$m[0],
                    def = _methods$m[1];

                var method = (0, _util.stringCamelCase)(_method);
                named[section][method] = (0, _util.objectSpread)({
                  method: method,
                  name: "".concat(_section, "_").concat(_method),
                  section: section,
                  sectionHash: sectionHash
                }, def);
              }
            }
          } else {
            older.push("".concat(_section, "/").concat(rtApi[1].toString(), " (").concat(all.join('/'), " known)"));
          }
        }
      };

      for (var i = 0; i < sections.length; i++) {
        _loop3(i);
      } // find the runtimes that we don't have hashes for


      var notFound = apis.map(function (_ref4) {
        var _ref5 = _slicedToArray(_ref4, 2),
            a = _ref5[0],
            v = _ref5[1];

        return [a.toHex(), v.toString()];
      }).filter(function (_ref6) {
        var _ref7 = _slicedToArray(_ref6, 1),
            a = _ref7[0];

        return !hashes[a];
      }).map(function (_ref8) {
        var _ref9 = _slicedToArray(_ref8, 2),
            a = _ref9[0],
            v = _ref9[1];

        return "".concat(_this3._runtimeMap[a] || a, "/").concat(v);
      });

      if (older.length) {
        l.warn("Not decorating runtime apis without matching versions: ".concat(older.join(', ')));
      }

      if (notFound.length) {
        l.warn("Not decorating unknown runtime apis: ".concat(notFound.join(', ')));
      }

      var stateCall = blockHash ? function (name, bytes) {
        return _this3._rpcCore.state.call(name, bytes, blockHash);
      } : function (name, bytes) {
        return _this3._rpcCore.state.call(name, bytes);
      };

      var lazySection = function lazySection(section) {
        return (0, _util.lazyMethods)({}, Object.keys(named[section]), function (method) {
          return _this3._decorateCall(registry, named[section][method], stateCall, decorateMethod);
        });
      };

      var modules = Object.keys(named);

      for (var _i4 = 0; _i4 < modules.length; _i4++) {
        (0, _util.lazyMethod)(result, modules[_i4], lazySection);
      }

      return result;
    }
  }, {
    key: "_decorateCall",
    value: function _decorateCall(registry, def, stateCall, decorateMethod) {
      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
      var decorated = decorateMethod(function () {
        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }

        if (args.length !== def.params.length) {
          throw new Error("".concat(def.name, ":: Expected ").concat(def.params.length, " arguments, found ").concat(args.length));
        }

        var bytes = registry.createType('Raw', (0, _util.u8aConcatStrict)(args.map(function (a, i) {
          return registry.createTypeUnsafe(def.params[i].type, [a]).toU8a();
        })));
        return stateCall(def.name, bytes).pipe((0, _rxjs.map)(function (r) {
          return registry.createTypeUnsafe(def.type, [r]);
        }));
      });
      decorated.meta = def; // eslint-disable-next-line @typescript-eslint/no-unsafe-return

      return decorated;
    } // only be called if supportMulti is true

  }, {
    key: "_decorateMulti",
    value: function _decorateMulti(decorateMethod) {
      var _this4 = this;

      // eslint-disable-next-line @typescript-eslint/no-unsafe-return
      return decorateMethod(function (keys) {
        return (_this4.hasSubscriptions ? _this4._rpcCore.state.subscribeStorage : _this4._rpcCore.state.queryStorageAt)(keys.map(function (args) {
          return Array.isArray(args) ? args[0].creator.meta.type.isPlain ? [args[0].creator] : args[0].creator.meta.type.asMap.hashers.length === 1 ? [args[0].creator, args.slice(1)] : [args[0].creator].concat(_toConsumableArray(args.slice(1))) : [args.creator];
        }));
      });
    }
  }, {
    key: "_decorateMultiAt",
    value: function _decorateMultiAt(atApi, decorateMethod, blockHash) {
      var _this5 = this;

      // eslint-disable-next-line @typescript-eslint/no-unsafe-return
      return decorateMethod(function (calls) {
        return _this5._rpcCore.state.queryStorageAt(calls.map(function (args) {
          if (Array.isArray(args)) {
            var _getAtQueryFn = getAtQueryFn(atApi, args[0].creator),
                creator = _getAtQueryFn.creator;

            return creator.meta.type.isPlain ? [creator] : creator.meta.type.asMap.hashers.length === 1 ? [creator, args.slice(1)] : [creator].concat(_toConsumableArray(args.slice(1)));
          }

          return [getAtQueryFn(atApi, args.creator).creator];
        }), blockHash);
      });
    }
  }, {
    key: "_decorateExtrinsics",
    value: function _decorateExtrinsics(_ref14, decorateMethod) {
      var _this6 = this;

      var tx = _ref14.tx;
      var result = (0, _index.createSubmittable)(this._type, this._rx, decorateMethod);

      var lazySection = function lazySection(section) {
        return (0, _util.lazyMethods)({}, Object.keys(tx[section]), function (method) {
          return _this6._decorateExtrinsicEntry(tx[section][method], result);
        });
      };

      var sections = Object.keys(tx);

      for (var i = 0; i < sections.length; i++) {
        (0, _util.lazyMethod)(result, sections[i], lazySection);
      }

      return result;
    }
  }, {
    key: "_decorateExtrinsicEntry",
    value: function _decorateExtrinsicEntry(method, creator) {
      var decorated = function decorated() {
        return creator(method.apply(void 0, arguments));
      }; // pass through the `.is`


      decorated.is = function (other) {
        return method.is(other);
      }; // eslint-disable-next-line @typescript-eslint/no-unsafe-return


      return this._decorateFunctionMeta(method, decorated);
    }
  }, {
    key: "_decorateStorage",
    value: function _decorateStorage(_ref15, decorateMethod, blockHash) {
      var _this7 = this;

      var query = _ref15.query,
          registry = _ref15.registry;
      var result = {};

      var lazySection = function lazySection(section) {
        return (0, _util.lazyMethods)({}, Object.keys(query[section]), function (method) {
          return blockHash ? _this7._decorateStorageEntryAt(registry, query[section][method], decorateMethod, blockHash) : _this7._decorateStorageEntry(query[section][method], decorateMethod);
        });
      };

      var sections = Object.keys(query);

      for (var i = 0; i < sections.length; i++) {
        (0, _util.lazyMethod)(result, sections[i], lazySection);
      }

      return result;
    }
  }, {
    key: "_decorateStorageEntry",
    value: function _decorateStorageEntry(creator, decorateMethod) {
      var _this8 = this;

      var getArgs = function getArgs(args, registry) {
        return (0, _validate.extractStorageArgs)(registry || _classPrivateFieldGet(_this8, _registry), creator, args);
      };

      var getQueryAt = function getQueryAt(blockHash) {
        return (0, _rxjs.from)(_this8.at(blockHash)).pipe((0, _rxjs.map)(function (api) {
          return getAtQueryFn(api, creator);
        }));
      }; // Disable this where it occurs for each field we are decorating

      /* eslint-disable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */


      var decorated = this._decorateStorageCall(creator, decorateMethod);

      decorated.creator = creator;
      decorated.at = decorateMethod(function (blockHash) {
        for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
          args[_key3 - 1] = arguments[_key3];
        }

        return getQueryAt(blockHash).pipe((0, _rxjs.switchMap)(function (q) {
          return q.apply(void 0, args);
        }));
      });
      decorated.hash = decorateMethod(function () {
        for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
          args[_key4] = arguments[_key4];
        }

        return _this8._rpcCore.state.getStorageHash(getArgs(args));
      });

      decorated.is = function (key) {
        return key.section === creator.section && key.method === creator.method;
      };

      decorated.key = function () {
        return (0, _util.u8aToHex)((0, _util.compactStripLength)(creator.apply(void 0, arguments))[1]);
      };

      decorated.keyPrefix = function () {
        return (0, _util.u8aToHex)(creator.keyPrefix.apply(creator, arguments));
      };

      decorated.range = decorateMethod(function (range) {
        for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {
          args[_key5 - 1] = arguments[_key5];
        }

        return _this8._decorateStorageRange(decorated, args, range);
      });
      decorated.size = decorateMethod(function () {
        for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
          args[_key6] = arguments[_key6];
        }

        return _this8._rpcCore.state.getStorageSize(getArgs(args));
      });
      decorated.sizeAt = decorateMethod(function (blockHash) {
        for (var _len7 = arguments.length, args = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {
          args[_key7 - 1] = arguments[_key7];
        }

        return getQueryAt(blockHash).pipe((0, _rxjs.switchMap)(function (q) {
          return _this8._rpcCore.state.getStorageSize(getArgs(args, q.creator.meta.registry), blockHash);
        }));
      }); // .keys() & .entries() only available on map types

      if (creator.iterKey && creator.meta.type.isMap) {
        decorated.entries = decorateMethod((0, _rpcCore.memo)(_classPrivateFieldGet(this, _instanceId), function () {
          for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
            args[_key8] = arguments[_key8];
          }

          return _this8._retrieveMapEntries(creator, null, args);
        }));
        decorated.entriesAt = decorateMethod((0, _rpcCore.memo)(_classPrivateFieldGet(this, _instanceId), function (blockHash) {
          for (var _len9 = arguments.length, args = new Array(_len9 > 1 ? _len9 - 1 : 0), _key9 = 1; _key9 < _len9; _key9++) {
            args[_key9 - 1] = arguments[_key9];
          }

          return getQueryAt(blockHash).pipe((0, _rxjs.switchMap)(function (q) {
            return _this8._retrieveMapEntries(q.creator, blockHash, args);
          }));
        }));
        decorated.entriesPaged = decorateMethod((0, _rpcCore.memo)(_classPrivateFieldGet(this, _instanceId), function (opts) {
          return _this8._retrieveMapEntriesPaged(creator, undefined, opts);
        }));
        decorated.keys = decorateMethod((0, _rpcCore.memo)(_classPrivateFieldGet(this, _instanceId), function () {
          for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {
            args[_key10] = arguments[_key10];
          }

          return _this8._retrieveMapKeys(creator, null, args);
        }));
        decorated.keysAt = decorateMethod((0, _rpcCore.memo)(_classPrivateFieldGet(this, _instanceId), function (blockHash) {
          for (var _len11 = arguments.length, args = new Array(_len11 > 1 ? _len11 - 1 : 0), _key11 = 1; _key11 < _len11; _key11++) {
            args[_key11 - 1] = arguments[_key11];
          }

          return getQueryAt(blockHash).pipe((0, _rxjs.switchMap)(function (q) {
            return _this8._retrieveMapKeys(q.creator, blockHash, args);
          }));
        }));
        decorated.keysPaged = decorateMethod((0, _rpcCore.memo)(_classPrivateFieldGet(this, _instanceId), function (opts) {
          return _this8._retrieveMapKeysPaged(creator, undefined, opts);
        }));
      }

      if (this.supportMulti && creator.meta.type.isMap) {
        // When using double map storage function, user need to pass double map key as an array
        decorated.multi = decorateMethod(function (args) {
          return creator.meta.type.asMap.hashers.length === 1 ? _this8._retrieveMulti(args.map(function (a) {
            return [creator, [a]];
          })) : _this8._retrieveMulti(args.map(function (a) {
            return [creator, a];
          }));
        });
      }
      /* eslint-enable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */


      return this._decorateFunctionMeta(creator, decorated);
    }
  }, {
    key: "_decorateStorageEntryAt",
    value: function _decorateStorageEntryAt(registry, creator, decorateMethod, blockHash) {
      var _this9 = this;

      var getArgs = function getArgs(args) {
        return (0, _validate.extractStorageArgs)(registry, creator, args);
      }; // Disable this where it occurs for each field we are decorating

      /* eslint-disable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */


      var decorated = decorateMethod(function () {
        for (var _len12 = arguments.length, args = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {
          args[_key12] = arguments[_key12];
        }

        return _this9._rpcCore.state.getStorage(getArgs(args), blockHash);
      });
      decorated.creator = creator;
      decorated.hash = decorateMethod(function () {
        for (var _len13 = arguments.length, args = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {
          args[_key13] = arguments[_key13];
        }

        return _this9._rpcCore.state.getStorageHash(getArgs(args), blockHash);
      });

      decorated.is = function (key) {
        return key.section === creator.section && key.method === creator.method;
      };

      decorated.key = function () {
        for (var _len14 = arguments.length, args = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {
          args[_key14] = arguments[_key14];
        }

        return (0, _util.u8aToHex)((0, _util.compactStripLength)(creator(creator.meta.type.isPlain ? undefined : args))[1]);
      };

      decorated.keyPrefix = function () {
        return (0, _util.u8aToHex)(creator.keyPrefix.apply(creator, arguments));
      };

      decorated.size = decorateMethod(function () {
        for (var _len15 = arguments.length, args = new Array(_len15), _key15 = 0; _key15 < _len15; _key15++) {
          args[_key15] = arguments[_key15];
        }

        return _this9._rpcCore.state.getStorageSize(getArgs(args), blockHash);
      }); // .keys() & .entries() only available on map types

      if (creator.iterKey && creator.meta.type.isMap) {
        decorated.entries = decorateMethod((0, _rpcCore.memo)(_classPrivateFieldGet(this, _instanceId), function () {
          for (var _len16 = arguments.length, args = new Array(_len16), _key16 = 0; _key16 < _len16; _key16++) {
            args[_key16] = arguments[_key16];
          }

          return _this9._retrieveMapEntries(creator, blockHash, args);
        }));
        decorated.entriesPaged = decorateMethod((0, _rpcCore.memo)(_classPrivateFieldGet(this, _instanceId), function (opts) {
          return _this9._retrieveMapEntriesPaged(creator, blockHash, opts);
        }));
        decorated.keys = decorateMethod((0, _rpcCore.memo)(_classPrivateFieldGet(this, _instanceId), function () {
          for (var _len17 = arguments.length, args = new Array(_len17), _key17 = 0; _key17 < _len17; _key17++) {
            args[_key17] = arguments[_key17];
          }

          return _this9._retrieveMapKeys(creator, blockHash, args);
        }));
        decorated.keysPaged = decorateMethod((0, _rpcCore.memo)(_classPrivateFieldGet(this, _instanceId), function (opts) {
          return _this9._retrieveMapKeysPaged(creator, blockHash, opts);
        }));
      }

      if (this.supportMulti && creator.meta.type.isMap) {
        // When using double map storage function, user need to pass double map key as an array
        decorated.multi = decorateMethod(function (args) {
          return creator.meta.type.asMap.hashers.length === 1 ? _this9._retrieveMulti(args.map(function (a) {
            return [creator, [a]];
          }), blockHash) : _this9._retrieveMulti(args.map(function (a) {
            return [creator, a];
          }), blockHash);
        });
      }
      /* eslint-enable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */


      return this._decorateFunctionMeta(creator, decorated);
    }
  }, {
    key: "_queueStorage",
    value: function _queueStorage(call, queue) {
      var query = queue === _classPrivateFieldGet(this, _storageSubQ) ? this._rpcCore.state.subscribeStorage : this._rpcCore.state.queryStorageAt;
      var queueIdx = queue.length - 1;
      var valueIdx = 0;
      var valueObs;

      if (queueIdx === -1 || !queue[queueIdx] || queue[queueIdx][1].length === PAGE_SIZE_Q) {
        queueIdx++;
        valueObs = (0, _rxjs.from)( // Defer to the next tick - this aligns with nextTick in @polkadot/util,
        // however since we return a value here, we don't re-use what is there
        Promise.resolve().then(function () {
          var calls = queue[queueIdx][1];
          delete queue[queueIdx];
          return calls;
        })).pipe((0, _rxjs.switchMap)(function (calls) {
          return query(calls);
        }));
        queue.push([valueObs, [call]]);
      } else {
        valueObs = queue[queueIdx][0];
        valueIdx = queue[queueIdx][1].length;
        queue[queueIdx][1].push(call);
      }

      return valueObs.pipe((0, _rxjs.map)(function (values) {
        return values[valueIdx];
      }));
    } // Decorate the base storage call. In the case or rxjs or promise-without-callback (await)
    // we make a subscription, alternatively we push this through a single-shot query

  }, {
    key: "_decorateStorageCall",
    value: function _decorateStorageCall(creator, decorateMethod) {
      var _this10 = this;

      return decorateMethod(function () {
        for (var _len18 = arguments.length, args = new Array(_len18), _key18 = 0; _key18 < _len18; _key18++) {
          args[_key18] = arguments[_key18];
        }

        var call = (0, _validate.extractStorageArgs)(_classPrivateFieldGet(_this10, _registry), creator, args);

        if (!_this10.hasSubscriptions) {
          return _this10._rpcCore.state.getStorage(call);
        }

        return _this10._queueStorage(call, _classPrivateFieldGet(_this10, _storageSubQ));
      }, {
        methodName: creator.method,
        overrideNoSub: function overrideNoSub() {
          for (var _len19 = arguments.length, args = new Array(_len19), _key19 = 0; _key19 < _len19; _key19++) {
            args[_key19] = arguments[_key19];
          }

          return _this10._queueStorage((0, _validate.extractStorageArgs)(_classPrivateFieldGet(_this10, _registry), creator, args), _classPrivateFieldGet(_this10, _storageGetQ));
        }
      });
    }
  }, {
    key: "_decorateStorageRange",
    value: function _decorateStorageRange(decorated, args, range) {
      var _this$_rpcCore$state,
          _this11 = this;

      var outputType = (0, _types.unwrapStorageType)(_classPrivateFieldGet(this, _registry), decorated.creator.meta.type, decorated.creator.meta.modifier.isOptional);
      return (_this$_rpcCore$state = this._rpcCore.state).queryStorage.apply(_this$_rpcCore$state, [[decorated.key.apply(decorated, _toConsumableArray(args))]].concat(_toConsumableArray(range))).pipe((0, _rxjs.map)(function (result) {
        return result.map(function (_ref16) {
          var _ref17 = _slicedToArray(_ref16, 2),
              blockHash = _ref17[0],
              _ref17$ = _slicedToArray(_ref17[1], 1),
              value = _ref17$[0];

          return [blockHash, _this11.createType(outputType, value.isSome ? value.unwrap().toHex() : undefined)];
        });
      }));
    } // retrieve a set of values for a specific set of keys - here we chunk the keys into PAGE_SIZE sizes

  }, {
    key: "_retrieveMulti",
    value: function _retrieveMulti(keys, blockHash) {
      if (!keys.length) {
        return (0, _rxjs.of)([]);
      }

      var query = this.hasSubscriptions && !blockHash ? this._rpcCore.state.subscribeStorage : this._rpcCore.state.queryStorageAt;

      if (keys.length <= PAGE_SIZE_V) {
        return blockHash ? query(keys, blockHash) : query(keys);
      }

      return (0, _rxjs.combineLatest)((0, _util.arrayChunk)(keys, PAGE_SIZE_V).map(function (k) {
        return blockHash ? query(k, blockHash) : query(k);
      })).pipe((0, _rxjs.map)(_util.arrayFlatten));
    }
  }, {
    key: "_retrieveMapKeys",
    value: function _retrieveMapKeys(_ref18, at, args) {
      var _this12 = this;

      var iterKey = _ref18.iterKey,
          meta = _ref18.meta,
          method = _ref18.method,
          section = _ref18.section;
      (0, _util.assert)(iterKey && meta.type.isMap, 'keys can only be retrieved on maps');
      var headKey = iterKey.apply(void 0, _toConsumableArray(args)).toHex();
      var startSubject = new _rxjs.BehaviorSubject(headKey);
      var query = at ? function (startKey) {
        return _this12._rpcCore.state.getKeysPaged(headKey, PAGE_SIZE_K, startKey, at);
      } : function (startKey) {
        return _this12._rpcCore.state.getKeysPaged(headKey, PAGE_SIZE_K, startKey);
      };

      var setMeta = function setMeta(key) {
        return key.setMeta(meta, section, method);
      };

      return startSubject.pipe((0, _rxjs.switchMap)(query), (0, _rxjs.map)(function (keys) {
        return keys.map(setMeta);
      }), (0, _rxjs.tap)(function (keys) {
        return (0, _util.nextTick)(function () {
          keys.length === PAGE_SIZE_K ? startSubject.next(keys[PAGE_SIZE_K - 1].toHex()) : startSubject.complete();
        });
      }), (0, _rxjs.toArray)(), // toArray since we want to startSubject to be completed
      (0, _rxjs.map)(_util.arrayFlatten));
    }
  }, {
    key: "_retrieveMapKeysPaged",
    value: function _retrieveMapKeysPaged(_ref19, at, opts) {
      var _this13 = this;

      var iterKey = _ref19.iterKey,
          meta = _ref19.meta,
          method = _ref19.method,
          section = _ref19.section;
      (0, _util.assert)(iterKey && meta.type.isMap, 'keys can only be retrieved on maps');

      var setMeta = function setMeta(key) {
        return key.setMeta(meta, section, method);
      };

      var query = at ? function (headKey) {
        return _this13._rpcCore.state.getKeysPaged(headKey, opts.pageSize, opts.startKey || headKey, at);
      } : function (headKey) {
        return _this13._rpcCore.state.getKeysPaged(headKey, opts.pageSize, opts.startKey || headKey);
      };
      return query(iterKey.apply(void 0, _toConsumableArray(opts.args)).toHex()).pipe((0, _rxjs.map)(function (keys) {
        return keys.map(setMeta);
      }));
    }
  }, {
    key: "_retrieveMapEntries",
    value: function _retrieveMapEntries(entry, at, args) {
      var _this14 = this;

      var query = at ? function (keys) {
        return _this14._rpcCore.state.queryStorageAt(keys, at);
      } : function (keys) {
        return _this14._rpcCore.state.queryStorageAt(keys);
      };
      return this._retrieveMapKeys(entry, at, args).pipe((0, _rxjs.switchMap)(function (keys) {
        return keys.length ? (0, _rxjs.combineLatest)((0, _util.arrayChunk)(keys, PAGE_SIZE_V).map(query)).pipe((0, _rxjs.map)(function (valsArr) {
          return (0, _util.arrayFlatten)(valsArr).map(function (value, index) {
            return [keys[index], value];
          });
        })) : (0, _rxjs.of)([]);
      }));
    }
  }, {
    key: "_retrieveMapEntriesPaged",
    value: function _retrieveMapEntriesPaged(entry, at, opts) {
      var _this15 = this;

      var query = at ? function (keys) {
        return _this15._rpcCore.state.queryStorageAt(keys, at);
      } : function (keys) {
        return _this15._rpcCore.state.queryStorageAt(keys);
      };
      return this._retrieveMapKeysPaged(entry, at, opts).pipe((0, _rxjs.switchMap)(function (keys) {
        return keys.length ? query(keys).pipe((0, _rxjs.map)(function (valsArr) {
          return valsArr.map(function (value, index) {
            return [keys[index], value];
          });
        })) : (0, _rxjs.of)([]);
      }));
    }
  }, {
    key: "_decorateDeriveRx",
    value: function _decorateDeriveRx(decorateMethod) {
      var _this$_runtimeVersion, _this$_options$typesB, _this$_options$typesB2, _this$_options$typesB3;

      var specName = (_this$_runtimeVersion = this._runtimeVersion) === null || _this$_runtimeVersion === void 0 ? void 0 : _this$_runtimeVersion.specName.toString(); // Pull in derive from api-derive

      var available = (0, _apiDerive.getAvailableDerives)(_classPrivateFieldGet(this, _instanceId), this._rx, (0, _util.objectSpread)({}, this._options.derives, (_this$_options$typesB = this._options.typesBundle) === null || _this$_options$typesB === void 0 ? void 0 : (_this$_options$typesB2 = _this$_options$typesB.spec) === null || _this$_options$typesB2 === void 0 ? void 0 : (_this$_options$typesB3 = _this$_options$typesB2[specName || '']) === null || _this$_options$typesB3 === void 0 ? void 0 : _this$_options$typesB3.derives));
      return (0, _decorate.decorateDeriveSections)(decorateMethod, available);
    }
  }, {
    key: "_decorateDerive",
    value: function _decorateDerive(decorateMethod) {
      return (0, _decorate.decorateDeriveSections)(decorateMethod, this._rx.derive);
    }
    /**
     * Put the `this.onCall` function of ApiRx here, because it is needed by
     * `api._rx`.
     */

  }]);

  return Decorate;
}(_Events2.Events);

exports.Decorate = Decorate;
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/api-derive":"node_modules/@polkadot/api-derive/index.js","@polkadot/rpc-core":"node_modules/@polkadot/rpc-core/index.js","@polkadot/rpc-provider":"node_modules/@polkadot/rpc-provider/index.js","@polkadot/types":"node_modules/@polkadot/types/index.js","@polkadot/types-known":"node_modules/@polkadot/types-known/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/util-crypto":"node_modules/@polkadot/util-crypto/index.js","../submittable/index.js":"node_modules/@polkadot/api/submittable/index.js","../util/augmentObject.js":"node_modules/@polkadot/api/util/augmentObject.js","../util/decorate.js":"node_modules/@polkadot/api/util/decorate.js","../util/validate.js":"node_modules/@polkadot/api/util/validate.js","./Events.js":"node_modules/@polkadot/api/base/Events.js","./find.js":"node_modules/@polkadot/api/base/find.js"}],"node_modules/@polkadot/api/base/Init.js":[function(require,module,exports) {
var define;
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Init = void 0;

var _classPrivateFieldLooseBase2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/classPrivateFieldLooseBase"));

var _classPrivateFieldLooseKey2 = _interopRequireDefault(require("@babel/runtime/helpers/esm/classPrivateFieldLooseKey"));

var _rxjs = require("rxjs");

var _types = require("@polkadot/types");

var _typesKnown = require("@polkadot/types-known");

var _util = require("@polkadot/util");

var _utilCrypto = require("@polkadot/util-crypto");

var _Decorate2 = require("./Decorate.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var KEEPALIVE_INTERVAL = 10000;
var l = (0, _util.logger)('api/init');

function textToString(t) {
  return t.toString();
}

var _healthTimer = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("healthTimer");

var _registries = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("registries");

var _updateSub = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("updateSub");

var _waitingRegistries = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("waitingRegistries");

var _onProviderConnect = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("onProviderConnect");

var _onProviderDisconnect = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("onProviderDisconnect");

var _onProviderError = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)("onProviderError");

var Init = /*#__PURE__*/function (_Decorate) {
  _inherits(Init, _Decorate);

  var _super = _createSuper(Init);

  function Init(options, type, decorateMethod) {
    var _this;

    _classCallCheck(this, Init);

    _this = _super.call(this, options, type, decorateMethod); // all injected types added to the registry for overrides

    Object.defineProperty(_assertThisInitialized(_this), _onProviderError, {
      value: _onProviderError2
    });
    Object.defineProperty(_assertThisInitialized(_this), _onProviderDisconnect, {
      value: _onProviderDisconnect2
    });
    Object.defineProperty(_assertThisInitialized(_this), _onProviderConnect, {
      value: _onProviderConnect2
    });
    Object.defineProperty(_assertThisInitialized(_this), _healthTimer, {
      writable: true,
      value: null
    });
    Object.defineProperty(_assertThisInitialized(_this), _registries, {
      writable: true,
      value: []
    });
    Object.defineProperty(_assertThisInitialized(_this), _updateSub, {
      writable: true,
      value: null
    });
    Object.defineProperty(_assertThisInitialized(_this), _waitingRegistries, {
      writable: true,
      value: {}
    });

    _this.registry.setKnownTypes(options); // We only register the types (global) if this is not a cloned instance.
    // Do right up-front, so we get in the user types before we are actually
    // doing anything on-chain, this ensures we have the overrides in-place


    if (!options.source) {
      _this.registerTypes(options.types);
    } else {
      (0, _classPrivateFieldLooseBase2.default)(_assertThisInitialized(_this), _registries)[_registries] = (0, _classPrivateFieldLooseBase2.default)(options.source, _registries)[_registries];
    }

    _this._rpc = _this._decorateRpc(_this._rpcCore, _this._decorateMethod);
    _this._rx.rpc = _this._decorateRpc(_this._rpcCore, _this._rxDecorateMethod);

    if (_this.supportMulti) {
      _this._queryMulti = _this._decorateMulti(_this._decorateMethod);
      _this._rx.queryMulti = _this._decorateMulti(_this._rxDecorateMethod);
    }

    _this._rx.signer = options.signer;

    _this._rpcCore.setRegistrySwap(function (blockHash) {
      return _this.getBlockRegistry(blockHash);
    });

    _this._rpcCore.setResolveBlockHash(function (blockNumber) {
      return (0, _rxjs.firstValueFrom)(_this._rpcCore.chain.getBlockHash(blockNumber));
    });

    if (_this.hasSubscriptions) {
      _this._rpcCore.provider.on('disconnected', function () {
        return (0, _classPrivateFieldLooseBase2.default)(_assertThisInitialized(_this), _onProviderDisconnect)[_onProviderDisconnect]();
      });

      _this._rpcCore.provider.on('error', function (e) {
        return (0, _classPrivateFieldLooseBase2.default)(_assertThisInitialized(_this), _onProviderError)[_onProviderError](e);
      });

      _this._rpcCore.provider.on('connected', function () {
        return (0, _classPrivateFieldLooseBase2.default)(_assertThisInitialized(_this), _onProviderConnect)[_onProviderConnect]();
      });
    } else {
      l.warn('Api will be available in a limited mode since the provider does not support subscriptions');
    } // If the provider was instantiated earlier, and has already emitted a
    // 'connected' event, then the `on('connected')` won't fire anymore. To
    // cater for this case, we call manually `this._onProviderConnect`.


    if (_this._rpcCore.provider.isConnected) {
      // eslint-disable-next-line @typescript-eslint/no-floating-promises
      (0, _classPrivateFieldLooseBase2.default)(_assertThisInitialized(_this), _onProviderConnect)[_onProviderConnect]();
    }

    return _this;
  }
  /**
   * @description Decorates a registry based on the runtime version
   */


  _createClass(Init, [{
    key: "_initRegistry",
    value: function _initRegistry(registry, chain, version, metadata, chainProps) {
      registry.clearCache();
      registry.setChainProperties(chainProps || this.registry.getChainProperties());
      registry.setKnownTypes(this._options);
      registry.register((0, _typesKnown.getSpecTypes)(registry, chain, version.specName, version.specVersion));
      registry.setHasher((0, _typesKnown.getSpecHasher)(registry, chain, version.specName)); // for bundled types, pull through the aliases defined

      if (registry.knownTypes.typesBundle) {
        registry.knownTypes.typesAlias = (0, _typesKnown.getSpecAlias)(registry, chain, version.specName);
      }

      registry.setMetadata(metadata, undefined, (0, _util.objectSpread)({}, (0, _typesKnown.getSpecExtensions)(registry, chain, version.specName), this._options.signedExtensions));
    }
    /**
     * @description Returns the default versioned registry
     */

  }, {
    key: "_getDefaultRegistry",
    value: function _getDefaultRegistry() {
      return (0, _util.assertReturn)((0, _classPrivateFieldLooseBase2.default)(this, _registries)[_registries].find(function (_ref) {
        var isDefault = _ref.isDefault;
        return isDefault;
      }), 'Initialization error, cannot find the default registry');
    }
    /**
     * @description Returns a decorated API instance at a specific point in time
     */

  }, {
    key: "at",
    value: function () {
      var _at = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(blockHash, knownVersion) {
        var u8aHash, registry;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                u8aHash = (0, _util.u8aToU8a)(blockHash);
                _context.next = 3;
                return this.getBlockRegistry(u8aHash, knownVersion);

              case 3:
                registry = _context.sent;
                return _context.abrupt("return", this._createDecorated(registry, true, null, u8aHash).decoratedApi);

              case 5:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function at(_x, _x2) {
        return _at.apply(this, arguments);
      }

      return at;
    }()
  }, {
    key: "_createBlockRegistry",
    value: function () {
      var _createBlockRegistry2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(blockHash, header, version) {
        var registry, metadata, result;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                registry = new _types.TypeRegistry(blockHash);
                _context2.t0 = _types.Metadata;
                _context2.t1 = registry;
                _context2.next = 5;
                return (0, _rxjs.firstValueFrom)(this._rpcCore.state.getMetadata.raw(header.parentHash));

              case 5:
                _context2.t2 = _context2.sent;
                metadata = new _context2.t0(_context2.t1, _context2.t2);

                this._initRegistry(registry, this._runtimeChain, version, metadata); // add our new registry


                result = {
                  lastBlockHash: blockHash,
                  metadata: metadata,
                  registry: registry,
                  runtimeVersion: version
                };

                (0, _classPrivateFieldLooseBase2.default)(this, _registries)[_registries].push(result);

                return _context2.abrupt("return", result);

              case 11:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function _createBlockRegistry(_x3, _x4, _x5) {
        return _createBlockRegistry2.apply(this, arguments);
      }

      return _createBlockRegistry;
    }()
  }, {
    key: "_cacheBlockRegistryProgress",
    value: function _cacheBlockRegistryProgress(key, creator) {
      var _this2 = this;

      // look for waiting resolves
      var waiting = (0, _classPrivateFieldLooseBase2.default)(this, _waitingRegistries)[_waitingRegistries][key];

      if ((0, _util.isUndefined)(waiting)) {
        // nothing waiting, construct new
        waiting = (0, _classPrivateFieldLooseBase2.default)(this, _waitingRegistries)[_waitingRegistries][key] = new Promise(function (resolve, reject) {
          creator().then(function (registry) {
            delete (0, _classPrivateFieldLooseBase2.default)(_this2, _waitingRegistries)[_waitingRegistries][key];
            resolve(registry);
          }).catch(function (error) {
            delete (0, _classPrivateFieldLooseBase2.default)(_this2, _waitingRegistries)[_waitingRegistries][key];
            reject(error);
          });
        });
      }

      return waiting;
    }
  }, {
    key: "_getBlockRegistryViaVersion",
    value: function _getBlockRegistryViaVersion(blockHash, version) {
      if (version) {
        // check for pre-existing registries. We also check specName, e.g. it
        // could be changed like in Westmint with upgrade from shell -> westmint
        var existingViaVersion = (0, _classPrivateFieldLooseBase2.default)(this, _registries)[_registries].find(function (_ref2) {
          var _ref2$runtimeVersion = _ref2.runtimeVersion,
              specName = _ref2$runtimeVersion.specName,
              specVersion = _ref2$runtimeVersion.specVersion;
          return specName.eq(version.specName) && specVersion.eq(version.specVersion);
        });

        if (existingViaVersion) {
          existingViaVersion.lastBlockHash = blockHash;
          return existingViaVersion;
        }
      }

      return null;
    }
  }, {
    key: "_getBlockRegistryViaHash",
    value: function () {
      var _getBlockRegistryViaHash2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(blockHash) {
        var _this3 = this;

        var header, _getUpgradeVersion, _getUpgradeVersion2, firstVersion, lastVersion, version;

        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                // ensure we have everything required
                (0, _util.assert)(this._genesisHash && this._runtimeVersion, 'Cannot retrieve data on an uninitialized chain'); // We have to assume that on the RPC layer the calls used here does not call back into
                // the registry swap, so getHeader & getRuntimeVersion should not be historic

                _context3.t0 = this.registry;

                if (!this._genesisHash.eq(blockHash)) {
                  _context3.next = 6;
                  break;
                }

                _context3.t1 = {
                  number: _util.BN_ZERO,
                  parentHash: this._genesisHash
                };
                _context3.next = 9;
                break;

              case 6:
                _context3.next = 8;
                return (0, _rxjs.firstValueFrom)(this._rpcCore.chain.getHeader.raw(blockHash));

              case 8:
                _context3.t1 = _context3.sent;

              case 9:
                _context3.t2 = _context3.t1;
                header = _context3.t0.createType.call(_context3.t0, 'HeaderPartial', _context3.t2);
                (0, _util.assert)(!header.parentHash.isEmpty, 'Unable to retrieve header and parent from supplied hash'); // get the runtime version, either on-chain or via an known upgrade history

                _getUpgradeVersion = (0, _typesKnown.getUpgradeVersion)(this._genesisHash, header.number), _getUpgradeVersion2 = _slicedToArray(_getUpgradeVersion, 2), firstVersion = _getUpgradeVersion2[0], lastVersion = _getUpgradeVersion2[1];
                _context3.t3 = this.registry;

                if (!(firstVersion && (lastVersion || firstVersion.specVersion.eq(this._runtimeVersion.specVersion)))) {
                  _context3.next = 18;
                  break;
                }

                _context3.t4 = {
                  specName: this._runtimeVersion.specName,
                  specVersion: firstVersion.specVersion
                };
                _context3.next = 21;
                break;

              case 18:
                _context3.next = 20;
                return (0, _rxjs.firstValueFrom)(this._rpcCore.state.getRuntimeVersion.raw(header.parentHash));

              case 20:
                _context3.t4 = _context3.sent;

              case 21:
                _context3.t5 = _context3.t4;
                version = _context3.t3.createType.call(_context3.t3, 'RuntimeVersionPartial', _context3.t5);
                _context3.t6 = this._getBlockRegistryViaVersion(blockHash, version);

                if (_context3.t6) {
                  _context3.next = 28;
                  break;
                }

                _context3.next = 27;
                return this._cacheBlockRegistryProgress(version.toHex(), function () {
                  return _this3._createBlockRegistry(blockHash, header, version);
                });

              case 27:
                _context3.t6 = _context3.sent;

              case 28:
                return _context3.abrupt("return", _context3.t6);

              case 29:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function _getBlockRegistryViaHash(_x6) {
        return _getBlockRegistryViaHash2.apply(this, arguments);
      }

      return _getBlockRegistryViaHash;
    }()
    /**
     * @description Sets up a registry based on the block hash defined
     */

  }, {
    key: "getBlockRegistry",
    value: function () {
      var _getBlockRegistry = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(blockHash, knownVersion) {
        var _this4 = this;

        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.t0 = (0, _classPrivateFieldLooseBase2.default)(this, _registries)[_registries].find(function (_ref3) {
                  var lastBlockHash = _ref3.lastBlockHash;
                  return lastBlockHash && (0, _util.u8aEq)(lastBlockHash, blockHash);
                }) || // try to find via version
                this._getBlockRegistryViaVersion(blockHash, knownVersion);

                if (_context4.t0) {
                  _context4.next = 5;
                  break;
                }

                _context4.next = 4;
                return this._cacheBlockRegistryProgress((0, _util.u8aToHex)(blockHash), function () {
                  return _this4._getBlockRegistryViaHash(blockHash);
                });

              case 4:
                _context4.t0 = _context4.sent;

              case 5:
                return _context4.abrupt("return", _context4.t0);

              case 6:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function getBlockRegistry(_x7, _x8) {
        return _getBlockRegistry.apply(this, arguments);
      }

      return getBlockRegistry;
    }()
  }, {
    key: "_loadMeta",
    value: function () {
      var _loadMeta2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {
        var _this$_options$source, _ref4, _ref5;

        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                if (!this._isReady) {
                  _context5.next = 2;
                  break;
                }

                return _context5.abrupt("return", true);

              case 2:
                this._unsubscribeUpdates(); // only load from on-chain if we are not a clone (default path), alternatively
                // just use the values from the source instance provided


                if (!((_this$_options$source = this._options.source) !== null && _this$_options$source !== void 0 && _this$_options$source._isReady)) {
                  _context5.next = 9;
                  break;
                }

                _context5.next = 6;
                return this._metaFromSource(this._options.source);

              case 6:
                _context5.t0 = _context5.sent;
                _context5.next = 12;
                break;

              case 9:
                _context5.next = 11;
                return this._metaFromChain(this._options.metadata);

              case 11:
                _context5.t0 = _context5.sent;

              case 12:
                _ref4 = _context5.t0;
                _ref5 = _slicedToArray(_ref4, 2);
                this._genesisHash = _ref5[0];
                this._runtimeMetadata = _ref5[1];
                return _context5.abrupt("return", this._initFromMeta(this._runtimeMetadata));

              case 17:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function _loadMeta() {
        return _loadMeta2.apply(this, arguments);
      }

      return _loadMeta;
    }() // eslint-disable-next-line @typescript-eslint/require-await

  }, {
    key: "_metaFromSource",
    value: function () {
      var _metaFromSource2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(source) {
        var sections, rpcs, s, section, methods, m;
        return _regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                this._extrinsicType = source.extrinsicVersion;
                this._runtimeChain = source.runtimeChain;
                this._runtimeVersion = source.runtimeVersion; // manually build a list of all available methods in this RPC, we are
                // going to filter on it to align the cloned RPC without making a call

                sections = Object.keys(source.rpc);
                rpcs = [];

                for (s = 0; s < sections.length; s++) {
                  section = sections[s];
                  methods = Object.keys(source.rpc[section]);

                  for (m = 0; m < methods.length; m++) {
                    rpcs.push("".concat(section, "_").concat(methods[m]));
                  }
                }

                this._filterRpc(rpcs, (0, _typesKnown.getSpecRpc)(this.registry, source.runtimeChain, source.runtimeVersion.specName));

                return _context6.abrupt("return", [source.genesisHash, source.runtimeMetadata]);

              case 8:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function _metaFromSource(_x9) {
        return _metaFromSource2.apply(this, arguments);
      }

      return _metaFromSource;
    }() // subscribe to metadata updates, inject the types on changes

  }, {
    key: "_subscribeUpdates",
    value: function _subscribeUpdates() {
      var _this5 = this;

      if ((0, _classPrivateFieldLooseBase2.default)(this, _updateSub)[_updateSub] || !this.hasSubscriptions) {
        return;
      }

      (0, _classPrivateFieldLooseBase2.default)(this, _updateSub)[_updateSub] = this._rpcCore.state.subscribeRuntimeVersion().pipe((0, _rxjs.switchMap)(function (version) {
        var _this$_runtimeVersion;

        return (// only retrieve the metadata when the on-chain version has been changed
          (_this$_runtimeVersion = _this5._runtimeVersion) !== null && _this$_runtimeVersion !== void 0 && _this$_runtimeVersion.specVersion.eq(version.specVersion) ? (0, _rxjs.of)(false) : _this5._rpcCore.state.getMetadata().pipe((0, _rxjs.map)(function (metadata) {
            l.log("Runtime version updated to spec=".concat(version.specVersion.toString(), ", tx=").concat(version.transactionVersion.toString()));
            _this5._runtimeMetadata = metadata;
            _this5._runtimeVersion = version;
            _this5._rx.runtimeVersion = version; // update the default registry version

            var thisRegistry = _this5._getDefaultRegistry(); // setup the data as per the current versions


            thisRegistry.metadata = metadata;
            thisRegistry.runtimeVersion = version;

            _this5._initRegistry(_this5.registry, _this5._runtimeChain, version, metadata);

            _this5._injectMetadata(thisRegistry, true);

            return true;
          }))
        );
      })).subscribe();
    }
  }, {
    key: "_metaFromChain",
    value: function () {
      var _metaFromChain2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(optMetadata) {
        var _yield$Promise$all, _yield$Promise$all2, genesisHash, runtimeVersion, chain, chainProps, rpcMethods, chainMetadata, metadataKey, metadata;

        return _regeneratorRuntime().wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.next = 2;
                return Promise.all([(0, _rxjs.firstValueFrom)(this._rpcCore.chain.getBlockHash(0)), (0, _rxjs.firstValueFrom)(this._rpcCore.state.getRuntimeVersion()), (0, _rxjs.firstValueFrom)(this._rpcCore.system.chain()), (0, _rxjs.firstValueFrom)(this._rpcCore.system.properties()), (0, _rxjs.firstValueFrom)(this._rpcCore.rpc.methods()), optMetadata ? Promise.resolve(null) : (0, _rxjs.firstValueFrom)(this._rpcCore.state.getMetadata())]);

              case 2:
                _yield$Promise$all = _context7.sent;
                _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 6);
                genesisHash = _yield$Promise$all2[0];
                runtimeVersion = _yield$Promise$all2[1];
                chain = _yield$Promise$all2[2];
                chainProps = _yield$Promise$all2[3];
                rpcMethods = _yield$Promise$all2[4];
                chainMetadata = _yield$Promise$all2[5];
                // set our chain version & genesisHash as returned
                this._runtimeChain = chain;
                this._runtimeVersion = runtimeVersion;
                this._rx.runtimeVersion = runtimeVersion; // retrieve metadata, either from chain  or as pass-in via options

                metadataKey = "".concat(genesisHash.toHex() || '0x', "-").concat(runtimeVersion.specVersion.toString());
                _context7.t0 = chainMetadata;

                if (_context7.t0) {
                  _context7.next = 24;
                  break;
                }

                if (!(optMetadata && optMetadata[metadataKey])) {
                  _context7.next = 20;
                  break;
                }

                _context7.t1 = new _types.Metadata(this.registry, optMetadata[metadataKey]);
                _context7.next = 23;
                break;

              case 20:
                _context7.next = 22;
                return (0, _rxjs.firstValueFrom)(this._rpcCore.state.getMetadata());

              case 22:
                _context7.t1 = _context7.sent;

              case 23:
                _context7.t0 = _context7.t1;

              case 24:
                metadata = _context7.t0;

                // initializes the registry & RPC
                this._initRegistry(this.registry, chain, runtimeVersion, metadata, chainProps);

                this._filterRpc(rpcMethods.methods.map(textToString), (0, _typesKnown.getSpecRpc)(this.registry, chain, runtimeVersion.specName));

                this._subscribeUpdates(); // setup the initial registry, when we have none


                if (!(0, _classPrivateFieldLooseBase2.default)(this, _registries)[_registries].length) {
                  (0, _classPrivateFieldLooseBase2.default)(this, _registries)[_registries].push({
                    isDefault: true,
                    metadata: metadata,
                    registry: this.registry,
                    runtimeVersion: runtimeVersion
                  });
                } // get unique types & validate


                metadata.getUniqTypes(this._options.throwOnUnknown || false);
                return _context7.abrupt("return", [genesisHash, metadata]);

              case 31:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function _metaFromChain(_x10) {
        return _metaFromChain2.apply(this, arguments);
      }

      return _metaFromChain;
    }()
  }, {
    key: "_initFromMeta",
    value: function _initFromMeta(metadata) {
      this._extrinsicType = metadata.asLatest.extrinsic.version.toNumber();
      this._rx.extrinsicType = this._extrinsicType;
      this._rx.genesisHash = this._genesisHash;
      this._rx.runtimeVersion = this._runtimeVersion; // must be set here
      // inject metadata and adjust the types as detected

      this._injectMetadata(this._getDefaultRegistry(), true); // derive is last, since it uses the decorated rx


      this._rx.derive = this._decorateDeriveRx(this._rxDecorateMethod);
      this._derive = this._decorateDerive(this._decorateMethod);
      return true;
    }
  }, {
    key: "_subscribeHealth",
    value: function _subscribeHealth() {
      var _this6 = this;

      // Only enable the health keepalive on WS, not needed on HTTP
      (0, _classPrivateFieldLooseBase2.default)(this, _healthTimer)[_healthTimer] = this.hasSubscriptions ? setInterval(function () {
        (0, _rxjs.firstValueFrom)(_this6._rpcCore.system.health.raw()).catch(function () {
          return undefined;
        });
      }, KEEPALIVE_INTERVAL) : null;
    }
  }, {
    key: "_unsubscribeHealth",
    value: function _unsubscribeHealth() {
      if ((0, _classPrivateFieldLooseBase2.default)(this, _healthTimer)[_healthTimer]) {
        clearInterval((0, _classPrivateFieldLooseBase2.default)(this, _healthTimer)[_healthTimer]);
        (0, _classPrivateFieldLooseBase2.default)(this, _healthTimer)[_healthTimer] = null;
      }
    }
  }, {
    key: "_unsubscribeUpdates",
    value: function _unsubscribeUpdates() {
      if ((0, _classPrivateFieldLooseBase2.default)(this, _updateSub)[_updateSub]) {
        (0, _classPrivateFieldLooseBase2.default)(this, _updateSub)[_updateSub].unsubscribe();

        (0, _classPrivateFieldLooseBase2.default)(this, _updateSub)[_updateSub] = null;
      }
    }
  }, {
    key: "_unsubscribe",
    value: function _unsubscribe() {
      this._unsubscribeHealth();

      this._unsubscribeUpdates();
    }
  }]);

  return Init;
}(_Decorate2.Decorate);

exports.Init = Init;

function _onProviderConnect2() {
  return _onProviderConnect3.apply(this, arguments);
}

function _onProviderConnect3() {
  _onProviderConnect3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {
    var cryptoReady, hasMeta, error;
    return _regeneratorRuntime().wrap(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            this._isConnected.next(true);

            this.emit('connected');
            _context8.prev = 2;

            if (!(this._options.initWasm === false)) {
              _context8.next = 7;
              break;
            }

            _context8.t0 = true;
            _context8.next = 10;
            break;

          case 7:
            _context8.next = 9;
            return (0, _utilCrypto.cryptoWaitReady)();

          case 9:
            _context8.t0 = _context8.sent;

          case 10:
            cryptoReady = _context8.t0;
            _context8.next = 13;
            return this._loadMeta();

          case 13:
            hasMeta = _context8.sent;

            this._subscribeHealth();

            if (hasMeta && !this._isReady && cryptoReady) {
              this._isReady = true;
              this.emit('ready', this);
            }

            _context8.next = 23;
            break;

          case 18:
            _context8.prev = 18;
            _context8.t1 = _context8["catch"](2);
            error = new Error("FATAL: Unable to initialize the API: ".concat(_context8.t1.message));
            l.error(error);
            this.emit('error', error);

          case 23:
          case "end":
            return _context8.stop();
        }
      }
    }, _callee8, this, [[2, 18]]);
  }));
  return _onProviderConnect3.apply(this, arguments);
}

function _onProviderDisconnect2() {
  this._isConnected.next(false);

  this._unsubscribeHealth();

  this.emit('disconnected');
}

function _onProviderError2(error) {
  this.emit('error', error);
}
},{"@babel/runtime/helpers/esm/classPrivateFieldLooseBase":"node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js","@babel/runtime/helpers/esm/classPrivateFieldLooseKey":"node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js","rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/types":"node_modules/@polkadot/types/index.js","@polkadot/types-known":"node_modules/@polkadot/types-known/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","@polkadot/util-crypto":"node_modules/@polkadot/util-crypto/index.js","./Decorate.js":"node_modules/@polkadot/api/base/Decorate.js"}],"node_modules/@polkadot/api/base/Getters.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Getters = void 0;

var _packageInfo = require("../packageInfo.js");

var _find = require("./find.js");

var _Init2 = require("./Init.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function assertResult(value) {
  if (value === undefined) {
    throw new Error("Api interfaces needs to be initialized before using, wait for 'isReady'");
  }

  return value;
}

var Getters = /*#__PURE__*/function (_Init) {
  _inherits(Getters, _Init);

  var _super = _createSuper(Getters);

  function Getters() {
    _classCallCheck(this, Getters);

    return _super.apply(this, arguments);
  }

  _createClass(Getters, [{
    key: "call",
    get:
    /**
     * @description Runtime call interfaces (currently untyped, only decorated via API options)
     */
    function get() {
      return assertResult(this._call);
    }
    /**
     * @description Contains the parameter types (constants) of all modules.
     *
     * The values are instances of the appropriate type and are accessible using `section`.`constantName`,
     *
     * @example
     * <BR>
     *
     * ```javascript
     * console.log(api.consts.democracy.enactmentPeriod.toString())
     * ```
     */

  }, {
    key: "consts",
    get: function get() {
      return assertResult(this._consts);
    }
    /**
     * @description Derived results that are injected into the API, allowing for combinations of various query results.
     *
     * @example
     * <BR>
     *
     * ```javascript
     * api.derive.chain.bestNumber((number) => {
     *   console.log('best number', number);
     * });
     * ```
     */

  }, {
    key: "derive",
    get: function get() {
      return assertResult(this._derive);
    }
    /**
     * @description Errors from metadata
     */

  }, {
    key: "errors",
    get: function get() {
      return assertResult(this._errors);
    }
    /**
     * @description Events from metadata
     */

  }, {
    key: "events",
    get: function get() {
      return assertResult(this._events);
    }
    /**
     * @description  Returns the version of extrinsics in-use on this chain
     */

  }, {
    key: "extrinsicVersion",
    get: function get() {
      return this._extrinsicType;
    }
    /**
     * @description Contains the genesis Hash of the attached chain. Apart from being useful to determine the actual chain, it can also be used to sign immortal transactions.
     */

  }, {
    key: "genesisHash",
    get: function get() {
      return assertResult(this._genesisHash);
    }
    /**
     * @description true is the underlying provider is connected
     */

  }, {
    key: "isConnected",
    get: function get() {
      return this._isConnected.getValue();
    }
    /**
     * @description The library information name & version (from package.json)
     */

  }, {
    key: "libraryInfo",
    get: function get() {
      return "".concat(_packageInfo.packageInfo.name, " v").concat(_packageInfo.packageInfo.version);
    }
    /**
     * @description Contains all the chain state modules and their subsequent methods in the API. These are attached dynamically from the runtime metadata.
     *
     * All calls inside the namespace, is denoted by `section`.`method` and may take an optional query parameter. As an example, `api.query.timestamp.now()` (current block timestamp) does not take parameters, while `api.query.system.account(<accountId>)` (retrieving the associated nonce & balances for an account), takes the `AccountId` as a parameter.
     *
     * @example
     * <BR>
     *
     * ```javascript
     * api.query.system.account(<accountId>, ([nonce, balance]) => {
     *   console.log('new free balance', balance.free, 'new nonce', nonce);
     * });
     * ```
     */

  }, {
    key: "query",
    get: function get() {
      return assertResult(this._query);
    }
    /**
     * @description Allows for the querying of multiple storage entries and the combination thereof into a single result. This is a very optimal way to make multiple queries since it only makes a single connection to the node and retrieves the data over one subscription.
     *
     * @example
     * <BR>
     *
     * ```javascript
     * const unsub = await api.queryMulti(
     *   [
     *     // you can include the storage without any parameters
     *     api.query.balances.totalIssuance,
     *     // or you can pass parameters to the storage query
     *     [api.query.system.account, '5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY']
     *   ],
     *   ([existential, [, { free }]]) => {
     *     console.log(`You have ${free.sub(existential)} more than the existential deposit`);
     *
     *     unsub();
     *   }
     * );
     * ```
     */

  }, {
    key: "queryMulti",
    get: function get() {
      return assertResult(this._queryMulti);
    }
    /**
     * @description Contains all the raw rpc sections and their subsequent methods in the API as defined by the jsonrpc interface definitions. Unlike the dynamic `api.query` and `api.tx` sections, these methods are fixed (although extensible with node upgrades) and not determined by the runtime.
     *
     * RPC endpoints available here allow for the query of chain, node and system information, in addition to providing interfaces for the raw queries of state (using known keys) and the submission of transactions.
     *
     * @example
     * <BR>
     *
     * ```javascript
     * api.rpc.chain.subscribeNewHeads((header) => {
     *   console.log('new header', header);
     * });
     * ```
     */

  }, {
    key: "rpc",
    get: function get() {
      return assertResult(this._rpc);
    }
    /**
     * @description Contains the chain information for the current node.
     */

  }, {
    key: "runtimeChain",
    get: function get() {
      return assertResult(this._runtimeChain);
    }
    /**
     * @description Yields the current attached runtime metadata. Generally this is only used to construct extrinsics & storage, but is useful for current runtime inspection.
     */

  }, {
    key: "runtimeMetadata",
    get: function get() {
      return assertResult(this._runtimeMetadata);
    }
    /**
     * @description Contains the version information for the current runtime.
     */

  }, {
    key: "runtimeVersion",
    get: function get() {
      return assertResult(this._runtimeVersion);
    }
    /**
     * @description The underlying Rx API interface
     */

  }, {
    key: "rx",
    get: function get() {
      return assertResult(this._rx);
    }
    /**
     * @description Returns the underlying provider stats
     */

  }, {
    key: "stats",
    get: function get() {
      return this._rpcCore.provider.stats;
    }
    /**
     * @description The type of this API instance, either 'rxjs' or 'promise'
     */

  }, {
    key: "type",
    get: function get() {
      return this._type;
    }
    /**
     * @description Contains all the extrinsic modules and their subsequent methods in the API. It allows for the construction of transactions and the submission thereof. These are attached dynamically from the runtime metadata.
     *
     * @example
     * <BR>
     *
     * ```javascript
     * api.tx.balances
     *   .transfer(<recipientId>, <balance>)
     *   .signAndSend(<keyPair>, ({status}) => {
     *     console.log('tx status', status.asFinalized.toHex());
     *   });
     * ```
     */

  }, {
    key: "tx",
    get: function get() {
      return assertResult(this._extrinsics);
    }
    /**
     * @description Finds the definition for a specific [[CallFunction]] based on the index supplied
     */

  }, {
    key: "findCall",
    value: function findCall(callIndex) {
      return (0, _find.findCall)(this.registry, callIndex);
    }
    /**
     * @description Finds the definition for a specific [[RegistryError]] based on the index supplied
     */

  }, {
    key: "findError",
    value: function findError(errorIndex) {
      return (0, _find.findError)(this.registry, errorIndex);
    }
  }]);

  return Getters;
}(_Init2.Init);

exports.Getters = Getters;
},{"../packageInfo.js":"node_modules/@polkadot/api/packageInfo.js","./find.js":"node_modules/@polkadot/api/base/find.js","./Init.js":"node_modules/@polkadot/api/base/Init.js"}],"node_modules/@polkadot/api/base/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ApiBase = void 0;

var _util = require("@polkadot/util");

var _Getters2 = require("./Getters.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var ApiBase = /*#__PURE__*/function (_Getters) {
  _inherits(ApiBase, _Getters);

  var _super = _createSuper(ApiBase);

  /**
   * @description Create an instance of the class
   *
   * @param options Options object to create API instance or a Provider instance
   *
   * @example
   * <BR>
   *
   * ```javascript
   * import Api from '@polkadot/api/promise';
   *
   * const api = new Api().isReady();
   *
   * api.rpc.subscribeNewHeads((header) => {
   *   console.log(`new block #${header.number.toNumber()}`);
   * });
   * ```
   */
  function ApiBase() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var type = arguments.length > 1 ? arguments[1] : undefined;
    var decorateMethod = arguments.length > 2 ? arguments[2] : undefined;

    _classCallCheck(this, ApiBase);

    return _super.call(this, options, type, decorateMethod);
  }
  /**
   * @description Connect from the underlying provider, halting all network traffic
   */


  _createClass(ApiBase, [{
    key: "connect",
    value: function connect() {
      return this._rpcCore.connect();
    }
    /**
     * @description Disconnect from the underlying provider, halting all network traffic
     */

  }, {
    key: "disconnect",
    value: function disconnect() {
      this._unsubscribe();

      return this._rpcCore.disconnect();
    }
    /**
     * @description Set an external signer which will be used to sign extrinsic when account passed in is not KeyringPair
     */

  }, {
    key: "setSigner",
    value: function setSigner(signer) {
      this._rx.signer = signer;
    }
    /**
     * @description Signs a raw signer payload, string or Uint8Array
     */

  }, {
    key: "sign",
    value: function () {
      var _sign = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(address, data) {
        var _ref,
            signer,
            _signer,
            _args = arguments;

        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _ref = _args.length > 2 && _args[2] !== undefined ? _args[2] : {}, signer = _ref.signer;

                if (!(0, _util.isString)(address)) {
                  _context.next = 7;
                  break;
                }

                _signer = signer || this._rx.signer;
                (0, _util.assert)(_signer === null || _signer === void 0 ? void 0 : _signer.signRaw, 'No signer exists with a signRaw interface. You possibly need to pass through an explicit keypair for the origin so it can be used for signing.');
                _context.next = 6;
                return _signer.signRaw((0, _util.objectSpread)({
                  type: 'bytes'
                }, data, {
                  address: address
                }));

              case 6:
                return _context.abrupt("return", _context.sent.signature);

              case 7:
                return _context.abrupt("return", (0, _util.u8aToHex)(address.sign((0, _util.u8aToU8a)(data.data))));

              case 8:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function sign(_x, _x2) {
        return _sign.apply(this, arguments);
      }

      return sign;
    }()
  }]);

  return ApiBase;
}(_Getters2.Getters);

exports.ApiBase = ApiBase;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","./Getters.js":"node_modules/@polkadot/api/base/Getters.js"}],"node_modules/@polkadot/api/promise/Combinator.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Combinator = void 0;

var _util = require("@polkadot/util");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

var _allHasFired = /*#__PURE__*/new WeakMap();

var _callback = /*#__PURE__*/new WeakMap();

var _fired = /*#__PURE__*/new WeakMap();

var _fns = /*#__PURE__*/new WeakMap();

var _isActive = /*#__PURE__*/new WeakMap();

var _results = /*#__PURE__*/new WeakMap();

var _subscriptions = /*#__PURE__*/new WeakMap();

var Combinator = /*#__PURE__*/function () {
  function Combinator(fns, callback) {
    var _this = this;

    _classCallCheck(this, Combinator);

    _classPrivateFieldInitSpec(this, _allHasFired, {
      writable: true,
      value: false
    });

    _classPrivateFieldInitSpec(this, _callback, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(this, _fired, {
      writable: true,
      value: []
    });

    _classPrivateFieldInitSpec(this, _fns, {
      writable: true,
      value: []
    });

    _classPrivateFieldInitSpec(this, _isActive, {
      writable: true,
      value: true
    });

    _classPrivateFieldInitSpec(this, _results, {
      writable: true,
      value: []
    });

    _classPrivateFieldInitSpec(this, _subscriptions, {
      writable: true,
      value: []
    });

    _classPrivateFieldSet(this, _callback, callback); // eslint-disable-next-line @typescript-eslint/require-await


    _classPrivateFieldSet(this, _subscriptions, fns.map( /*#__PURE__*/function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(input, index) {
        var _ref2, _ref3, fn, args;

        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _ref2 = Array.isArray(input) ? input : [input], _ref3 = _toArray(_ref2), fn = _ref3[0], args = _ref3.slice(1);

                _classPrivateFieldGet(_this, _fired).push(false);

                _classPrivateFieldGet(_this, _fns).push(fn); // Not quite 100% how to have a variable number at the front here
                // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/ban-types


                return _context.abrupt("return", fn.apply(void 0, _toConsumableArray(args).concat([_this._createCallback(index)])));

              case 4:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function (_x, _x2) {
        return _ref.apply(this, arguments);
      };
    }()));
  }

  _createClass(Combinator, [{
    key: "_allHasFired",
    value: function (_allHasFired2) {
      function _allHasFired() {
        return _allHasFired2.apply(this, arguments);
      }

      _allHasFired.toString = function () {
        return _allHasFired2.toString();
      };

      return _allHasFired;
    }(function () {
      _classPrivateFieldGet(this, _allHasFired) || _classPrivateFieldSet(this, _allHasFired, _classPrivateFieldGet(this, _fired).filter(function (hasFired) {
        return !hasFired;
      }).length === 0);
      return _classPrivateFieldGet(this, _allHasFired);
    })
  }, {
    key: "_createCallback",
    value: function _createCallback(index) {
      var _this2 = this;

      return function (value) {
        _classPrivateFieldGet(_this2, _fired)[index] = true;
        _classPrivateFieldGet(_this2, _results)[index] = value;

        _this2._triggerUpdate();
      };
    }
  }, {
    key: "_triggerUpdate",
    value: function _triggerUpdate() {
      if (!_classPrivateFieldGet(this, _isActive) || !(0, _util.isFunction)(_classPrivateFieldGet(this, _callback)) || !this._allHasFired()) {
        return;
      }

      try {
        // eslint-disable-next-line @typescript-eslint/no-floating-promises
        _classPrivateFieldGet(this, _callback).call(this, _classPrivateFieldGet(this, _results));
      } catch (error) {// swallow, we don't want the handler to trip us up
      }
    }
  }, {
    key: "unsubscribe",
    value: function unsubscribe() {
      if (!_classPrivateFieldGet(this, _isActive)) {
        return;
      }

      _classPrivateFieldSet(this, _isActive, false); // eslint-disable-next-line @typescript-eslint/no-misused-promises


      _classPrivateFieldGet(this, _subscriptions).forEach( /*#__PURE__*/function () {
        var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(subscription) {
          var unsubscribe;
          return _regeneratorRuntime().wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  _context2.prev = 0;
                  _context2.next = 3;
                  return subscription;

                case 3:
                  unsubscribe = _context2.sent;

                  if ((0, _util.isFunction)(unsubscribe)) {
                    unsubscribe();
                  }

                  _context2.next = 9;
                  break;

                case 7:
                  _context2.prev = 7;
                  _context2.t0 = _context2["catch"](0);

                case 9:
                case "end":
                  return _context2.stop();
              }
            }
          }, _callee2, null, [[0, 7]]);
        }));

        return function (_x3) {
          return _ref4.apply(this, arguments);
        };
      }());
    }
  }]);

  return Combinator;
}();

exports.Combinator = Combinator;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/api/promise/decorateMethod.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.promiseTracker = promiseTracker;
exports.toPromiseMethod = toPromiseMethod;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

// a Promise completion tracker, wrapping an isComplete variable that ensures
// that the promise only resolves once
function promiseTracker(_resolve, _reject) {
  var isCompleted = false;
  return {
    reject: function reject(error) {
      if (!isCompleted) {
        isCompleted = true;

        _reject(error);
      }

      return _rxjs.EMPTY;
    },
    resolve: function resolve(value) {
      if (!isCompleted) {
        isCompleted = true;

        _resolve(value);
      }
    }
  };
} // extract the arguments and callback params from a value array possibly containing a callback


function extractArgs(args, needsCallback) {
  var actualArgs = args.slice(); // If the last arg is a function, we pop it, put it into callback.
  // actualArgs will then hold the actual arguments to be passed to `method`

  var callback = args.length && (0, _util.isFunction)(args[args.length - 1]) ? actualArgs.pop() : undefined; // When we need a subscription, ensure that a valid callback is actually passed

  (0, _util.assert)(!needsCallback || (0, _util.isFunction)(callback), 'Expected a callback to be passed with subscriptions');
  return [actualArgs, callback];
} // Decorate a call for a single-shot result - retrieve and then immediate unsubscribe


function decorateCall(method, args) {
  return new Promise(function (resolve, reject) {
    // single result tracker - either reject with Error or resolve with Codec result
    var tracker = promiseTracker(resolve, reject); // encoding errors reject immediately, any result unsubscribes and resolves

    var subscription = method.apply(void 0, _toConsumableArray(args)).pipe((0, _rxjs.catchError)(function (error) {
      return tracker.reject(error);
    })).subscribe(function (result) {
      tracker.resolve(result);
      (0, _util.nextTick)(function () {
        return subscription.unsubscribe();
      });
    });
  });
} // Decorate a subscription where we have a result callback specified


function decorateSubscribe(method, args, resultCb) {
  return new Promise(function (resolve, reject) {
    // either reject with error or resolve with unsubscribe callback
    var tracker = promiseTracker(resolve, reject); // errors reject immediately, the first result resolves with an unsubscribe promise, all results via callback

    var subscription = method.apply(void 0, _toConsumableArray(args)).pipe((0, _rxjs.catchError)(function (error) {
      return tracker.reject(error);
    }), (0, _rxjs.tap)(function () {
      return tracker.resolve(function () {
        return subscription.unsubscribe();
      });
    })).subscribe(function (result) {
      // queue result (back of queue to clear current)
      (0, _util.nextTick)(function () {
        return resultCb(result);
      });
    });
  });
}
/**
 * @description Decorate method for ApiPromise, where the results are converted to the Promise equivalent
 */


function toPromiseMethod(method, options) {
  var needsCallback = !!(options && options.methodName && options.methodName.includes('subscribe'));
  return function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _extractArgs = extractArgs(args, needsCallback),
        _extractArgs2 = _slicedToArray(_extractArgs, 2),
        actualArgs = _extractArgs2[0],
        resultCb = _extractArgs2[1];

    return resultCb ? decorateSubscribe(method, actualArgs, resultCb) : decorateCall((options === null || options === void 0 ? void 0 : options.overrideNoSub) || method, actualArgs);
  };
}
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js"}],"node_modules/@polkadot/api/promise/Api.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ApiPromise = void 0;

var _util = require("@polkadot/util");

var _index = require("../base/index.js");

var _Combinator = require("./Combinator.js");

var _decorateMethod = require("./decorateMethod.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

var _isReadyPromise = /*#__PURE__*/new WeakMap();

var _isReadyOrErrorPromise = /*#__PURE__*/new WeakMap();

/**
 * # @polkadot/api/promise
 *
 * ## Overview
 *
 * @name ApiPromise
 * @description
 * ApiPromise is a standard JavaScript wrapper around the RPC and interfaces on the Polkadot network. As a full Promise-based, all interface calls return Promises, including the static `.create(...)`. Subscription calls utilise `(value) => {}` callbacks to pass through the latest values.
 *
 * The API is well suited to real-time applications where either the single-shot state is needed or use is to be made of the subscription-based features of Polkadot (and Substrate) clients.
 *
 * @see [[ApiRx]]
 *
 * ## Usage
 *
 * Making rpc calls -
 * <BR>
 *
 * ```javascript
 * import ApiPromise from '@polkadot/api/promise';
 *
 * // initialise via static create
 * const api = await ApiPromise.create();
 *
 * // make a subscription to the network head
 * api.rpc.chain.subscribeNewHeads((header) => {
 *   console.log(`Chain is at #${header.number}`);
 * });
 * ```
 * <BR>
 *
 * Subscribing to chain state -
 * <BR>
 *
 * ```javascript
 * import { ApiPromise, WsProvider } from '@polkadot/api';
 *
 * // initialise a provider with a specific endpoint
 * const provider = new WsProvider('wss://example.com:9944')
 *
 * // initialise via isReady & new with specific provider
 * const api = await new ApiPromise({ provider }).isReady;
 *
 * // retrieve the block target time
 * const blockPeriod = await api.query.timestamp.blockPeriod().toNumber();
 * let last = 0;
 *
 * // subscribe to the current block timestamp, updates automatically (callback provided)
 * api.query.timestamp.now((timestamp) => {
 *   const elapsed = last
 *     ? `, ${timestamp.toNumber() - last}s since last`
 *     : '';
 *
 *   last = timestamp.toNumber();
 *   console.log(`timestamp ${timestamp}${elapsed} (${blockPeriod}s target)`);
 * });
 * ```
 * <BR>
 *
 * Submitting a transaction -
 * <BR>
 *
 * ```javascript
 * import ApiPromise from '@polkadot/api/promise';
 *
 * ApiPromise.create().then((api) => {
 *   const [nonce] = await api.query.system.account(keyring.alice.address);
 *
 *   api.tx.balances
 *     // create transfer
 *     transfer(keyring.bob.address, 12345)
 *     // sign the transcation
 *     .sign(keyring.alice, { nonce })
 *     // send the transaction (optional status callback)
 *     .send((status) => {
 *       console.log(`current status ${status.type}`);
 *     })
 *     // retrieve the submitted extrinsic hash
 *     .then((hash) => {
 *       console.log(`submitted with hash ${hash}`);
 *     });
 * });
 * ```
 */
var ApiPromise = /*#__PURE__*/function (_ApiBase) {
  _inherits(ApiPromise, _ApiBase);

  var _super = _createSuper(ApiPromise);

  /**
   * @description Creates an instance of the ApiPromise class
   * @param options Options to create an instance. This can be either [[ApiOptions]] or
   * an [[WsProvider]].
   * @example
   * <BR>
   *
   * ```javascript
   * import Api from '@polkadot/api/promise';
   *
   * new Api().isReady.then((api) => {
   *   api.rpc.subscribeNewHeads((header) => {
   *     console.log(`new block #${header.number.toNumber()}`);
   *   });
   * });
   * ```
   */
  function ApiPromise(options) {
    var _thisSuper, _thisSuper2, _thisSuper3, _this;

    _classCallCheck(this, ApiPromise);

    _this = _super.call(this, options, 'promise', _decorateMethod.toPromiseMethod);

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _isReadyPromise, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _isReadyOrErrorPromise, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldSet(_assertThisInitialized(_this), _isReadyPromise, new Promise(function (resolve) {
      _get((_thisSuper = _assertThisInitialized(_this), _getPrototypeOf(ApiPromise.prototype)), "once", _thisSuper).call(_thisSuper, 'ready', function () {
        return resolve(_assertThisInitialized(_this));
      });
    }));

    _classPrivateFieldSet(_assertThisInitialized(_this), _isReadyOrErrorPromise, new Promise(function (resolve, reject) {
      var tracker = (0, _decorateMethod.promiseTracker)(resolve, reject);

      _get((_thisSuper2 = _assertThisInitialized(_this), _getPrototypeOf(ApiPromise.prototype)), "once", _thisSuper2).call(_thisSuper2, 'ready', function () {
        return tracker.resolve(_assertThisInitialized(_this));
      });

      _get((_thisSuper3 = _assertThisInitialized(_this), _getPrototypeOf(ApiPromise.prototype)), "once", _thisSuper3).call(_thisSuper3, 'error', function (error) {
        return tracker.reject(error);
      });
    }));

    return _this;
  }
  /**
   * @description Creates an ApiPromise instance using the supplied provider. Returns an Promise containing the actual Api instance.
   * @param options options that is passed to the class contructor. Can be either [[ApiOptions]] or a
   * provider (see the constructor arguments)
   * @example
   * <BR>
   *
   * ```javascript
   * import Api from '@polkadot/api/promise';
   *
   * Api.create().then(async (api) => {
   *   const timestamp = await api.query.timestamp.now();
   *
   *   console.log(`lastest block timestamp ${timestamp}`);
   * });
   * ```
   */


  _createClass(ApiPromise, [{
    key: "isReady",
    get:
    /**
     * @description Promise that resolves the first time we are connected and loaded
     */
    function get() {
      return _classPrivateFieldGet(this, _isReadyPromise);
    }
    /**
     * @description Promise that resolves if we can connect, or reject if there is an error
     */

  }, {
    key: "isReadyOrError",
    get: function get() {
      return _classPrivateFieldGet(this, _isReadyOrErrorPromise);
    }
    /**
     * @description Returns a clone of this ApiPromise instance (new underlying provider connection)
     */

  }, {
    key: "clone",
    value: function clone() {
      return new ApiPromise((0, _util.objectSpread)({}, this._options, {
        source: this
      }));
    }
    /**
     * @description Creates a combinator that can be used to combine the latest results from multiple subscriptions
     * @param fns An array of function to combine, each in the form of `(cb: (value: void)) => void`
     * @param callback A callback that will return an Array of all the values this combinator has been applied to
     * @example
     * <BR>
     *
     * ```javascript
     * const address = '5DTestUPts3kjeXSTMyerHihn1uwMfLj8vU8sqF7qYrFacT7';
     *
     * // combines values from balance & nonce as it updates
     * api.combineLatest([
     *   api.rpc.chain.subscribeNewHeads,
     *   (cb) => api.query.system.account(address, cb)
     * ], ([head, [balance, nonce]]) => {
     *   console.log(`#${head.number}: You have ${balance.free} units, with ${nonce} transactions sent`);
     * });
     * ```
     */
    // eslint-disable-next-line @typescript-eslint/require-await

  }, {
    key: "combineLatest",
    value: function () {
      var _combineLatest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(fns, callback) {
        var combinator;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                combinator = new _Combinator.Combinator(fns, callback);
                return _context.abrupt("return", function () {
                  combinator.unsubscribe();
                });

              case 2:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function combineLatest(_x, _x2) {
        return _combineLatest.apply(this, arguments);
      }

      return combineLatest;
    }()
  }], [{
    key: "create",
    value: function create(options) {
      var instance = new ApiPromise(options);

      if (options && options.throwOnConnect) {
        return instance.isReadyOrError;
      } // Swallow any rejections on isReadyOrError
      // (in Node 15.x this creates issues, when not being looked at)


      instance.isReadyOrError.catch(function () {// ignore
      });
      return instance.isReady;
    }
  }]);

  return ApiPromise;
}(_index.ApiBase);

exports.ApiPromise = ApiPromise;
},{"@polkadot/util":"node_modules/@polkadot/util/index.js","../base/index.js":"node_modules/@polkadot/api/base/index.js","./Combinator.js":"node_modules/@polkadot/api/promise/Combinator.js","./decorateMethod.js":"node_modules/@polkadot/api/promise/decorateMethod.js"}],"node_modules/@polkadot/api/promise/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "ApiPromise", {
  enumerable: true,
  get: function () {
    return _Api.ApiPromise;
  }
});
Object.defineProperty(exports, "toPromiseMethod", {
  enumerable: true,
  get: function () {
    return _decorateMethod.toPromiseMethod;
  }
});

var _Api = require("./Api.js");

var _decorateMethod = require("./decorateMethod.js");
},{"./Api.js":"node_modules/@polkadot/api/promise/Api.js","./decorateMethod.js":"node_modules/@polkadot/api/promise/decorateMethod.js"}],"node_modules/@polkadot/api/rx/decorateMethod.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toRxMethod = toRxMethod;

// Copyright 2017-2022 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0
function toRxMethod(method) {
  return method;
}
},{}],"node_modules/@polkadot/api/rx/Api.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ApiRx = void 0;

var _rxjs = require("rxjs");

var _util = require("@polkadot/util");

var _index = require("../base/index.js");

var _decorateMethod = require("./decorateMethod.js");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }

function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }

function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }

function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }

function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }

var _isReadyRx = /*#__PURE__*/new WeakMap();

/**
 * # @polkadot/api/rx
 *
 *  ## Overview
 *
 * @name ApiRx
 *
 * @description
 * ApiRx is a powerful RxJS Observable wrapper around the RPC and interfaces on the Polkadot network. As a full Observable API, all interface calls return RxJS Observables, including the static `.create(...)`. In the same fashion and subscription-based methods return long-running Observables that update with the latest values.
 *
 * The API is well suited to real-time applications where the latest state is needed, unlocking the subscription-based features of Polkadot (and Substrate) clients. Some familiarity with RxJS is a requirement to use the API, however just understanding `.subscribe` and `.pipe` on Observables will unlock full-scale use thereof.
 *
 * @see [[ApiPromise]]
 *
 * ## Usage
 *
 * Making rpc calls -
 * <BR>
 *
 * ```javascript
 * import ApiRx from '@polkadot/api/rx';
 *
 * // initialize via Promise & static create
 * const api = await ApiRx.create().toPromise();
 *
 * // make a call to retrieve the current network head
 * api.rpc.chain.subscribeNewHeads().subscribe((header) => {
 *   console.log(`Chain is at #${header.number}`);
 * });
 * ```
 * <BR>
 *
 * Subscribing to chain state -
 * <BR>
 *
 * ```javascript
 * import { combineLatest, pairwise, switchMap } from 'rxjs';
 * import { ApiRx, WsProvider } from '@polkadot/api';
 *
 *
 * // initialize a provider with a specific endpoint
 * const provider = new WsProvider('wss://example.com:9944')
 *
 * // initialize via isReady & new with specific provider
 * new ApiRx({ provider })
 *   .isReady
 *   .pipe(
 *     switchMap((api) =>
 *       combineLatest([
 *         api.query.timestamp.blockPeriod(),
 *         api.query.timestamp.now().pipe(pairwise())
 *       ])
 *     )
 *   )
 *   .subscribe(([blockPeriod, timestamp]) => {
 *      const elapsed = timestamp[1].toNumber() - timestamp[0].toNumber();
 *      console.log(`timestamp ${timestamp[1]} \nelapsed ${elapsed} \n(${blockPeriod}s target)`);
 *   });
 * ```
 * <BR>
 *
 * Submitting a transaction -
 * <BR>
 *
 * ```javascript
 * import { first, switchMap } from 'rxjs';
 * import ApiRx from '@polkadot/api/rx';
 *
 * // import the test keyring (already has dev keys for Alice, Bob, Charlie, Eve & Ferdie)
 * import testingPairs from '@polkadot/keyring/testingPairs';
 * const keyring = testingPairs();
 *
 * // get api via Promise
 * const api = await ApiRx.create().toPromise();
 *
 * // retrieve nonce for the account
 * api.query.system
 *   .account(keyring.alice.address)
 *   .pipe(
 *      first(),
 *      // pipe nonce into transfer
 *      switchMap(([nonce]) =>
 *        api.tx.balances
 *          // create transfer
 *          .transfer(keyring.bob.address, 12345)
 *          // sign the transaction
 *          .sign(keyring.alice, { nonce })
 *          // send the transaction
 *          .send()
 *      )
 *   )
 *   // subscribe to overall result
 *   .subscribe(({ status }) => {
 *     if (status.isInBlock) {
 *       console.log('Completed at block hash', status.asFinalized.toHex());
 *     }
 *   });
 * ```
 */
var ApiRx = /*#__PURE__*/function (_ApiBase) {
  _inherits(ApiRx, _ApiBase);

  var _super = _createSuper(ApiRx);

  /**
   * @description Create an instance of the ApiRx class
   * @param options Options to create an instance. Can be either [[ApiOptions]] or [[WsProvider]]
   * @example
   * <BR>
   *
   * ```javascript
   * import { switchMap } from 'rxjs';
   * import Api from '@polkadot/api/rx';
   *
   * new Api().isReady
   *   .pipe(
   *     switchMap((api) =>
   *       api.rpc.chain.subscribeNewHeads()
   *   ))
   *   .subscribe((header) => {
   *     console.log(`new block #${header.number.toNumber()}`);
   *   });
   * ```
   */
  function ApiRx(options) {
    var _thisSuper, _this;

    _classCallCheck(this, ApiRx);

    _this = _super.call(this, options, 'rxjs', _decorateMethod.toRxMethod);

    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _isReadyRx, {
      writable: true,
      value: void 0
    });

    _classPrivateFieldSet(_assertThisInitialized(_this), _isReadyRx, (0, _rxjs.from)( // You can create an observable from an event, however my mind groks this form better
    new Promise(function (resolve) {
      _get((_thisSuper = _assertThisInitialized(_this), _getPrototypeOf(ApiRx.prototype)), "on", _thisSuper).call(_thisSuper, 'ready', function () {
        return resolve(_assertThisInitialized(_this));
      });
    })));

    return _this;
  }
  /**
   * @description Creates an ApiRx instance using the supplied provider. Returns an Observable containing the actual Api instance.
   * @param options options that is passed to the class constructor. Can be either [[ApiOptions]] or [[WsProvider]]
   * @example
   * <BR>
   *
   * ```javascript
   * import { switchMap } from 'rxjs';
   * import Api from '@polkadot/api/rx';
   *
   * Api.create()
   *   .pipe(
   *     switchMap((api) =>
   *       api.rpc.chain.subscribeNewHeads()
   *   ))
   *   .subscribe((header) => {
   *     console.log(`new block #${header.number.toNumber()}`);
   *   });
   * ```
   */


  _createClass(ApiRx, [{
    key: "isReady",
    get:
    /**
     * @description Observable that returns the first time we are connected and loaded
     */
    function get() {
      return _classPrivateFieldGet(this, _isReadyRx);
    }
    /**
     * @description Returns a clone of this ApiRx instance (new underlying provider connection)
     */

  }, {
    key: "clone",
    value: function clone() {
      return new ApiRx((0, _util.objectSpread)({}, this._options, {
        source: this
      }));
    }
  }], [{
    key: "create",
    value: function create(options) {
      return new ApiRx(options).isReady;
    }
  }]);

  return ApiRx;
}(_index.ApiBase);

exports.ApiRx = ApiRx;
},{"rxjs":"node_modules/rxjs/dist/esm5/index.js","@polkadot/util":"node_modules/@polkadot/util/index.js","../base/index.js":"node_modules/@polkadot/api/base/index.js","./decorateMethod.js":"node_modules/@polkadot/api/rx/decorateMethod.js"}],"node_modules/@polkadot/api/rx/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "ApiRx", {
  enumerable: true,
  get: function () {
    return _Api.ApiRx;
  }
});
Object.defineProperty(exports, "toRxMethod", {
  enumerable: true,
  get: function () {
    return _decorateMethod.toRxMethod;
  }
});

var _Api = require("./Api.js");

var _decorateMethod = require("./decorateMethod.js");
},{"./Api.js":"node_modules/@polkadot/api/rx/Api.js","./decorateMethod.js":"node_modules/@polkadot/api/rx/decorateMethod.js"}],"node_modules/@polkadot/api/bundle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  Keyring: true,
  WsProvider: true,
  HttpProvider: true,
  packageInfo: true,
  SubmittableResult: true
};
Object.defineProperty(exports, "HttpProvider", {
  enumerable: true,
  get: function () {
    return _rpcProvider.HttpProvider;
  }
});
Object.defineProperty(exports, "Keyring", {
  enumerable: true,
  get: function () {
    return _keyring.Keyring;
  }
});
Object.defineProperty(exports, "SubmittableResult", {
  enumerable: true,
  get: function () {
    return _index.SubmittableResult;
  }
});
Object.defineProperty(exports, "WsProvider", {
  enumerable: true,
  get: function () {
    return _rpcProvider.WsProvider;
  }
});
Object.defineProperty(exports, "packageInfo", {
  enumerable: true,
  get: function () {
    return _packageInfo.packageInfo;
  }
});

require("@polkadot/rpc-augment");

var _keyring = require("@polkadot/keyring");

var _rpcProvider = require("@polkadot/rpc-provider");

var _packageInfo = require("./packageInfo.js");

var _index = require("./submittable/index.js");

var _index2 = require("./promise/index.js");

Object.keys(_index2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index2[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index2[key];
    }
  });
});

var _index3 = require("./rx/index.js");

Object.keys(_index3).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _index3[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index3[key];
    }
  });
});
},{"@polkadot/rpc-augment":"node_modules/@polkadot/rpc-augment/index.js","@polkadot/keyring":"node_modules/@polkadot/keyring/index.js","@polkadot/rpc-provider":"node_modules/@polkadot/rpc-provider/index.js","./packageInfo.js":"node_modules/@polkadot/api/packageInfo.js","./submittable/index.js":"node_modules/@polkadot/api/submittable/index.js","./promise/index.js":"node_modules/@polkadot/api/promise/index.js","./rx/index.js":"node_modules/@polkadot/api/rx/index.js"}],"node_modules/@polkadot/api/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

require("./detectPackage.js");

var _bundle = require("./bundle.js");

Object.keys(_bundle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _bundle[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bundle[key];
    }
  });
});
},{"./detectPackage.js":"node_modules/@polkadot/api/detectPackage.js","./bundle.js":"node_modules/@polkadot/api/bundle.js"}],"app.js":[function(require,module,exports) {
"use strict";

require("babel-polyfill");

var _api = require("@polkadot/api");

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

//arbor
(function ($) {
  var Renderer = function Renderer(canvas) {
    var canvas = $(canvas).get(0);
    var ctx = canvas.getContext("2d");
    var particleSystem;
    var that = {
      init: function init(system) {
        // the particle system will call the init function once, right before the
        // first frame is to be drawn. it's a good place to set up the canvas and
        // to pass the canvas size to the particle system
        //
        // save a reference to the particle system for use in the .redraw() loop
        particleSystem = system; // inform the system of the screen dimensions so it can map coords for us.
        // if the canvas is ever resized, screenSize should be called again with
        // the new dimensions

        particleSystem.screenSize(canvas.width, canvas.height);
        particleSystem.screenPadding(80); // leave an extra 80px of whitespace per side
        // set up some event handlers to allow for node-dragging

        that.initMouseHandling();
      },
      redraw: function redraw() {
        // 
        // redraw will be called repeatedly during the run whenever the node positions
        // change. the new positions for the nodes can be accessed by looking at the
        // .p attribute of a given node. however the p.x & p.y values are in the coordinates
        // of the particle system rather than the screen. you can either map them to
        // the screen yourself, or use the convenience iterators .eachNode (and .eachEdge)
        // which allow you to step through the actual node objects but also pass an
        // x,y point in the screen's coordinate system
        // 
        ctx.fillStyle = "white";
        ctx.fillRect(0, 0, canvas.width, canvas.height);
        particleSystem.eachEdge(function (edge, pt1, pt2) {
          // edge: {source:Node, target:Node, length:#, data:{}}
          // pt1:  {x:#, y:#}  source position in screen coords
          // pt2:  {x:#, y:#}  target position in screen coords
          // draw a line from pt1 to pt2
          ctx.strokeStyle = "rgba(0,0,0, .333)";
          ctx.lineWidth = 1;
          ctx.beginPath();
          ctx.moveTo(pt1.x, pt1.y);
          ctx.lineTo(pt2.x, pt2.y);
          ctx.stroke();
        });
        particleSystem.eachNode(function (node, pt) {
          // node: {mass:#, p:{x,y}, name:"", data:{}}
          // pt:   {x:#, y:#}  node position in screen coords
          // draw a rectangle centered at pt
          var w = 10;
          ctx.fillStyle = node.data.alone ? "red" : "blue";
          ctx.fillRect(pt.x - w / 2, pt.y - w / 2, w, w);
        });
      },
      initMouseHandling: function initMouseHandling() {
        // no-nonsense drag and drop (thanks springy.js)
        var _dragged = null; // set up a handler object that will initially listen for mousedowns then
        // for moves and mouseups while dragging

        var handler = {
          clicked: function clicked(e) {
            var pos = $(canvas).offset();
            _mouseP = arbor.Point(e.pageX - pos.left, e.pageY - pos.top);
            _dragged = particleSystem.nearest(_mouseP);

            if (_dragged && _dragged.node !== null) {
              // while we're dragging, don't let physics move the node
              _dragged.node.fixed = true;
            }

            $(canvas).bind('mousemove', handler.dragged);
            $(window).bind('mouseup', handler.dropped);
            return false;
          },
          dragged: function dragged(e) {
            var pos = $(canvas).offset();
            var s = arbor.Point(e.pageX - pos.left, e.pageY - pos.top);

            if (_dragged && _dragged.node !== null) {
              var p = particleSystem.fromScreen(s);
              _dragged.node.p = p;
            }

            return false;
          },
          dropped: function dropped(e) {
            if (_dragged === null || _dragged.node === undefined) return;
            if (_dragged.node !== null) _dragged.node.fixed = false;
            _dragged.node.tempMass = 1000;
            _dragged = null;
            $(canvas).unbind('mousemove', handler.dragged);
            $(window).unbind('mouseup', handler.dropped);
            _mouseP = null;
            return false;
          }
        }; // start listening

        $(canvas).mousedown(handler.clicked);
      }
    };
    return that;
  };

  $(document).ready(function () {
    //arbor.ParticleSystem(repulsion, stiffness, friction, gravity, fps, dt, precision)
    var sys = arbor.ParticleSystem(1000, 600, 0.5, true, 55, 0.02, 0.6);
    sys.renderer = Renderer("#viewport");
    /* add some nodes to the graph and watch it go...
    sys.addEdge('a','b')
    sys.addEdge('a','c')
    sys.addEdge('a','d')
    sys.addEdge('a','e')
    sys.addNode('f', {alone:true, mass:.25})
    */
    // or, equivalently:
    //
    // sys.graft({
    //   nodes:{
    //     f:{alone:true, mass:.25}
    //   }, 
    //   edges:{
    //     a:{ b:{},
    //         c:{},
    //         d:{},
    //         e:{}
    //     }
    //   }
    // })
  });
})((void 0).jQuery);

function draw() {
  return _draw.apply(this, arguments);
}

function _draw() {
  _draw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
    var wsProvider, api;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            // Construct
            wsProvider = new _api.WsProvider('wss://kusama-rpc.polkadot.io');
            _context.next = 3;
            return _api.ApiPromise.create({
              provider: wsProvider
            });

          case 3:
            api = _context.sent;
            _context.next = 6;
            return api.query.proxy.proxies.entries();

          case 6:
            nodes = _context.sent;
            _context.next = 9;
            return api.query.proxy.announcements.entries();

          case 9:
            proxy_actions = _context.sent;

            for (node in nodes) {
              node_point = nodes[node][0].toHuman(); //nodes in graph

              edges = nodes[node][1]; //node edges/graph connections

              console.log(node_point);
            }

          case 11:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _draw.apply(this, arguments);
}
},{"babel-polyfill":"node_modules/babel-polyfill/lib/index.js","@polkadot/api":"node_modules/@polkadot/api/index.js"}],"node_modules/parcel-bundler/src/builtins/hmr-runtime.js":[function(require,module,exports) {
var global = arguments[3];
var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;

function Module(moduleName) {
  OldModule.call(this, moduleName);
  this.hot = {
    data: module.bundle.hotData,
    _acceptCallbacks: [],
    _disposeCallbacks: [],
    accept: function (fn) {
      this._acceptCallbacks.push(fn || function () {});
    },
    dispose: function (fn) {
      this._disposeCallbacks.push(fn);
    }
  };
  module.bundle.hotData = null;
}

module.bundle.Module = Module;
var checkedAssets, assetsToAccept;
var parent = module.bundle.parent;

if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
  var hostname = "" || location.hostname;
  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';
  var ws = new WebSocket(protocol + '://' + hostname + ':' + "62208" + '/');

  ws.onmessage = function (event) {
    checkedAssets = {};
    assetsToAccept = [];
    var data = JSON.parse(event.data);

    if (data.type === 'update') {
      var handled = false;
      data.assets.forEach(function (asset) {
        if (!asset.isNew) {
          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);

          if (didAccept) {
            handled = true;
          }
        }
      }); // Enable HMR for CSS by default.

      handled = handled || data.assets.every(function (asset) {
        return asset.type === 'css' && asset.generated.js;
      });

      if (handled) {
        console.clear();
        data.assets.forEach(function (asset) {
          hmrApply(global.parcelRequire, asset);
        });
        assetsToAccept.forEach(function (v) {
          hmrAcceptRun(v[0], v[1]);
        });
      } else if (location.reload) {
        // `location` global exists in a web worker context but lacks `.reload()` function.
        location.reload();
      }
    }

    if (data.type === 'reload') {
      ws.close();

      ws.onclose = function () {
        location.reload();
      };
    }

    if (data.type === 'error-resolved') {
      console.log('[parcel] â¨ Error resolved');
      removeErrorOverlay();
    }

    if (data.type === 'error') {
      console.error('[parcel] ð¨  ' + data.error.message + '\n' + data.error.stack);
      removeErrorOverlay();
      var overlay = createErrorOverlay(data);
      document.body.appendChild(overlay);
    }
  };
}

function removeErrorOverlay() {
  var overlay = document.getElementById(OVERLAY_ID);

  if (overlay) {
    overlay.remove();
  }
}

function createErrorOverlay(data) {
  var overlay = document.createElement('div');
  overlay.id = OVERLAY_ID; // html encode message and stack trace

  var message = document.createElement('div');
  var stackTrace = document.createElement('pre');
  message.innerText = data.error.message;
  stackTrace.innerText = data.error.stack;
  overlay.innerHTML = '<div style="background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;">' + '<span style="background: red; padding: 2px 4px; border-radius: 2px;">ERROR</span>' + '<span style="top: 2px; margin-left: 5px; position: relative;">ð¨</span>' + '<div style="font-size: 18px; font-weight: bold; margin-top: 20px;">' + message.innerHTML + '</div>' + '<pre>' + stackTrace.innerHTML + '</pre>' + '</div>';
  return overlay;
}

function getParents(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return [];
  }

  var parents = [];
  var k, d, dep;

  for (k in modules) {
    for (d in modules[k][1]) {
      dep = modules[k][1][d];

      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {
        parents.push(k);
      }
    }
  }

  if (bundle.parent) {
    parents = parents.concat(getParents(bundle.parent, id));
  }

  return parents;
}

function hmrApply(bundle, asset) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (modules[asset.id] || !bundle.parent) {
    var fn = new Function('require', 'module', 'exports', asset.generated.js);
    asset.isNew = !modules[asset.id];
    modules[asset.id] = [fn, asset.deps];
  } else if (bundle.parent) {
    hmrApply(bundle.parent, asset);
  }
}

function hmrAcceptCheck(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (!modules[id] && bundle.parent) {
    return hmrAcceptCheck(bundle.parent, id);
  }

  if (checkedAssets[id]) {
    return;
  }

  checkedAssets[id] = true;
  var cached = bundle.cache[id];
  assetsToAccept.push([bundle, id]);

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    return true;
  }

  return getParents(global.parcelRequire, id).some(function (id) {
    return hmrAcceptCheck(global.parcelRequire, id);
  });
}

function hmrAcceptRun(bundle, id) {
  var cached = bundle.cache[id];
  bundle.hotData = {};

  if (cached) {
    cached.hot.data = bundle.hotData;
  }

  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {
    cached.hot._disposeCallbacks.forEach(function (cb) {
      cb(bundle.hotData);
    });
  }

  delete bundle.cache[id];
  bundle(id);
  cached = bundle.cache[id];

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    cached.hot._acceptCallbacks.forEach(function (cb) {
      cb();
    });

    return true;
  }
}
},{}]},{},["node_modules/parcel-bundler/src/builtins/hmr-runtime.js","app.js"], null)
//# sourceMappingURL=/app.c328ef1a.js.map