{"dependencies":[{"name":"./bn.js","loc":{"line":3,"column":19}},{"name":"./consts.js","loc":{"line":4,"column":39}},{"name":"./toBn.js","loc":{"line":5,"column":23}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SQRT_MAX_SAFE_INTEGER = undefined;\nexports.bnSqrt = bnSqrt;\n\nvar _bn = require(\"./bn.js\");\n\nvar _consts = require(\"./consts.js\");\n\nvar _toBn = require(\"./toBn.js\");\n\n/** @internal */\n\nconst SQRT_MAX_SAFE_INTEGER = exports.SQRT_MAX_SAFE_INTEGER = new _bn.BN(94906265);\n/**\n * @name bnSqrt\n * @summary Calculates the integer square root of a BN\n * @example\n * <BR>\n *\n * ```javascript\n * import BN from 'bn.js';\n * import { bnSqrt } from '@polkadot/util';\n *\n * bnSqrt(new BN(16)).toString(); // => '4'\n * ```\n */\n\n// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction bnSqrt(value) {\n  const n = (0, _toBn.bnToBn)(value);\n\n  if (n.isNeg()) {\n    throw new Error('square root of negative numbers is not supported');\n  } // https://stackoverflow.com/questions/53683995/javascript-big-integer-square-root/\n  // shortcut <= 2^53 - 1 to use the JS utils\n\n\n  if (n.lte(_consts.BN_MAX_INTEGER)) {\n    // ~~ More performant version of Math.floor\n    return new _bn.BN(~~Math.sqrt(n.toNumber()));\n  } // Use sqrt(MAX_SAFE_INTEGER) as starting point. since we already know the\n  // output will be larger than this, we expect this to be a safe start\n\n\n  let x0 = SQRT_MAX_SAFE_INTEGER.clone();\n\n  while (true) {\n    const x1 = n.div(x0).iadd(x0).ishrn(1);\n\n    if (x0.eq(x1) || x0.eq(x1.sub(_consts.BN_ONE))) {\n      return x0;\n    }\n\n    x0 = x1;\n  }\n}"},"hash":"2c05227a6bd44963be6028a6db334fa0"}