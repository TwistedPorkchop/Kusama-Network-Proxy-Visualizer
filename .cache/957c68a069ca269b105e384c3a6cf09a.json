{"dependencies":[{"name":"@polkadot/util","loc":{"line":3,"column":25}},{"name":"@polkadot/wasm-crypto","loc":{"line":4,"column":39}},{"name":"./fromU8a.js","loc":{"line":5,"column":35}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sr25519PairFromSeed = sr25519PairFromSeed;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _wasmCrypto = require(\"@polkadot/wasm-crypto\");\n\nvar _fromU8a = require(\"./fromU8a.js\");\n\n/**\n * @name sr25519PairFromSeed\n * @description Returns a object containing a `publicKey` & `secretKey` generated from the supplied seed.\n */\n\nfunction sr25519PairFromSeed(seed) {\n  const seedU8a = (0, _util.u8aToU8a)(seed);\n\n  if (seedU8a.length !== 32) {\n    throw new Error(`Expected a seed matching 32 bytes, found ${seedU8a.length}`);\n  }\n\n  return (0, _fromU8a.sr25519PairFromU8a)((0, _wasmCrypto.sr25519KeypairFromSeed)(seedU8a));\n} // Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0"},"hash":"df921a6127de6fe7111324bb5052dce1"}