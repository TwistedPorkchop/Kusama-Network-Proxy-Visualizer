{"dependencies":[{"name":"@polkadot/util","loc":{"line":3,"column":25}},{"name":"@polkadot/wasm-crypto","loc":{"line":4,"column":44}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sr25519Verify = sr25519Verify;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _wasmCrypto = require(\"@polkadot/wasm-crypto\");\n\n/**\n * @name sr25519Verify\n * @description Verifies the signature of `message`, using the supplied pair\n */\n\n// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction sr25519Verify(message, signature, publicKey) {\n  const publicKeyU8a = (0, _util.u8aToU8a)(publicKey);\n  const signatureU8a = (0, _util.u8aToU8a)(signature);\n\n  if (publicKeyU8a.length !== 32) {\n    throw new Error(`Invalid publicKey, received ${publicKeyU8a.length} bytes, expected 32`);\n  } else if (signatureU8a.length !== 64) {\n    throw new Error(`Invalid signature, received ${signatureU8a.length} bytes, expected 64`);\n  }\n\n  return (0, _wasmCrypto.sr25519Verify)(signatureU8a, (0, _util.u8aToU8a)(message), publicKeyU8a);\n}"},"hash":"83058a2d99fbb369b758aec7088b1b10"}