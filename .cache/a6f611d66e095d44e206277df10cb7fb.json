{"dependencies":[{"name":"@polkadot/util","loc":{"line":3,"column":26}},{"name":"../nacl/index.js","loc":{"line":4,"column":28}},{"name":"../scrypt/index.js","loc":{"line":5,"column":42}},{"name":"./encryptFormat.js","loc":{"line":6,"column":34}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.jsonEncrypt = jsonEncrypt;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _index = require(\"../nacl/index.js\");\n\nvar _index2 = require(\"../scrypt/index.js\");\n\nvar _encryptFormat = require(\"./encryptFormat.js\");\n\n// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction jsonEncrypt(data, contentType, passphrase) {\n  let isEncrypted = false;\n  let encoded = data;\n\n  if (passphrase) {\n    const {\n      params,\n      password,\n      salt\n    } = (0, _index2.scryptEncode)(passphrase);\n    const {\n      encrypted,\n      nonce\n    } = (0, _index.naclEncrypt)(encoded, password.subarray(0, 32));\n    isEncrypted = true;\n    encoded = (0, _util.u8aConcat)((0, _index2.scryptToU8a)(salt, params), nonce, encrypted);\n  }\n\n  return (0, _encryptFormat.jsonEncryptFormat)(encoded, contentType, isEncrypted);\n}"},"hash":"5414562a75448b6c25fed496f50bf16c"}