{"id":"node_modules/@polkadot/util-crypto/bundleInit.js","dependencies":[{"name":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\package.json","includedInParent":true,"mtime":1657570398707},{"name":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util-crypto\\package.json","includedInParent":true,"mtime":1657539547586},{"name":"@polkadot/x-bigint/shim","loc":{"line":3,"column":7,"index":114},"parent":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util-crypto\\bundleInit.js","resolved":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\x-bigint\\shim.js"},{"name":"@noble/secp256k1","loc":{"line":4,"column":45,"index":186},"parent":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util-crypto\\bundleInit.js","resolved":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@noble\\secp256k1\\lib\\esm\\index.js"},{"name":"@polkadot/util","loc":{"line":5,"column":26,"index":232},"parent":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util-crypto\\bundleInit.js","resolved":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util\\index.js"},{"name":"./crypto.js","loc":{"line":6,"column":32,"index":282},"parent":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util-crypto\\bundleInit.js","resolved":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util-crypto\\crypto.js"},{"name":"./hmac/index.js","loc":{"line":7,"column":32,"index":329},"parent":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util-crypto\\bundleInit.js","resolved":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util-crypto\\hmac\\index.js"}],"generated":{"js":"\"use strict\";\n\nrequire(\"@polkadot/x-bigint/shim\");\n\nvar _secp256k = require(\"@noble/secp256k1\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _crypto = require(\"./crypto.js\");\n\nvar _index = require(\"./hmac/index.js\");\n\n// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Set overrides on the secp256k1 utils\n//   - hmacShaSync - This needs to be set, unset by default\n_secp256k.utils.hmacSha256Sync = function (key) {\n  for (var _len = arguments.length, messages = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    messages[_key - 1] = arguments[_key];\n  }\n\n  return (0, _index.hmacSha256AsU8a)(key, _util.u8aConcat.apply(void 0, messages));\n}; // start init process immediately\n\n\n(0, _crypto.cryptoWaitReady)().catch(function () {// shouldn't happen, logged and caught inside cryptoWaitReady\n});"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":3,"column":0}},{"generated":{"line":5,"column":0},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":4,"column":0}},{"generated":{"line":7,"column":0},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":5,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":6,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":7,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":1,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":7,"column":51}},{"generated":{"line":16,"column":0},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":8,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":10,"column":0},"name":"utilsNobleSecp256k1"},{"generated":{"line":17,"column":15},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":10,"column":0}},{"generated":{"line":17,"column":16},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":10,"column":20},"name":"hmacSha256Sync"},{"generated":{"line":17,"column":30},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":10,"column":0}},{"generated":{"line":17,"column":33},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":10,"column":37}},{"generated":{"line":17,"column":43},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":10,"column":38},"name":"key"},{"generated":{"line":17,"column":46},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":10,"column":37}},{"generated":{"line":18,"column":2},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":10,"column":37}},{"generated":{"line":18,"column":36},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":10,"column":46},"name":"messages"},{"generated":{"line":18,"column":44},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":10,"column":37}},{"generated":{"line":19,"column":4},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":10,"column":46},"name":"messages"},{"generated":{"line":19,"column":12},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":10,"column":37}},{"generated":{"line":20,"column":2},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":10,"column":37}},{"generated":{"line":22,"column":2},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":10,"column":37}},{"generated":{"line":22,"column":9},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":10,"column":59}},{"generated":{"line":22,"column":13},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":10,"column":59},"name":"hmacSha256AsU8a"},{"generated":{"line":22,"column":35},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":10,"column":59}},{"generated":{"line":22,"column":37},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":10,"column":75},"name":"key"},{"generated":{"line":22,"column":40},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":10,"column":59}},{"generated":{"line":22,"column":42},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":10,"column":80},"name":"u8aConcat"},{"generated":{"line":22,"column":57},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":10,"column":80}},{"generated":{"line":22,"column":72},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":10,"column":93},"name":"messages"},{"generated":{"line":22,"column":80},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":10,"column":80}},{"generated":{"line":22,"column":81},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":10,"column":59}},{"generated":{"line":22,"column":82},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":10,"column":37}},{"generated":{"line":23,"column":0},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":10,"column":37}},{"generated":{"line":23,"column":1},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":10,"column":0}},{"generated":{"line":23,"column":3},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":10,"column":105}},{"generated":{"line":26,"column":0},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":13,"column":0}},{"generated":{"line":26,"column":4},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":13,"column":0},"name":"cryptoWaitReady"},{"generated":{"line":26,"column":27},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":13,"column":0}},{"generated":{"line":26,"column":31},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":13,"column":18},"name":"catch"},{"generated":{"line":26,"column":36},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":13,"column":0}},{"generated":{"line":26,"column":37},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":13,"column":24}},{"generated":{"line":26,"column":49},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":13,"column":30}},{"generated":{"line":26,"column":50},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":13,"column":31}},{"generated":{"line":27,"column":0},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":14,"column":1}},{"generated":{"line":27,"column":1},"source":"node_modules/@polkadot/util-crypto/bundleInit.js","original":{"line":13,"column":0}}],"sources":{"node_modules/@polkadot/util-crypto/bundleInit.js":"// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport '@polkadot/x-bigint/shim';\nimport { utils as utilsNobleSecp256k1 } from '@noble/secp256k1';\nimport { u8aConcat } from '@polkadot/util';\nimport { cryptoWaitReady } from \"./crypto.js\";\nimport { hmacSha256AsU8a } from \"./hmac/index.js\"; // Set overrides on the secp256k1 utils\n//   - hmacShaSync - This needs to be set, unset by default\n\nutilsNobleSecp256k1.hmacSha256Sync = (key, ...messages) => hmacSha256AsU8a(key, u8aConcat(...messages)); // start init process immediately\n\n\ncryptoWaitReady().catch(() => {// shouldn't happen, logged and caught inside cryptoWaitReady\n});"},"lineCount":null}},"error":null,"hash":"aedad1b8da4968396b45d2caf170022a","cacheData":{"env":{}}}