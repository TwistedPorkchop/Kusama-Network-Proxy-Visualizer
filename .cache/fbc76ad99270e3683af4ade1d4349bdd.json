{"dependencies":[{"name":"./concat.js","loc":{"line":4,"column":32}},{"name":"./eq.js","loc":{"line":5,"column":22}},{"name":"./toU8a.js","loc":{"line":6,"column":25}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.U8A_WRAP_POSTFIX = exports.U8A_WRAP_PREFIX = exports.U8A_WRAP_ETHEREUM = undefined;\nexports.u8aIsWrapped = u8aIsWrapped;\nexports.u8aUnwrapBytes = u8aUnwrapBytes;\nexports.u8aWrapBytes = u8aWrapBytes;\n\nvar _concat = require(\"./concat.js\");\n\nvar _eq = require(\"./eq.js\");\n\nvar _toU8a = require(\"./toU8a.js\");\n\n/** @internal */\n\nconst U8A_WRAP_ETHEREUM = exports.U8A_WRAP_ETHEREUM = (0, _toU8a.u8aToU8a)('\\x19Ethereum Signed Message:\\n');\n/** @internal */\n\n// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Originally from https://github.com/polkadot-js/extension/pull/743\nconst U8A_WRAP_PREFIX = exports.U8A_WRAP_PREFIX = (0, _toU8a.u8aToU8a)('<Bytes>');\n/** @internal */\n\nconst U8A_WRAP_POSTFIX = exports.U8A_WRAP_POSTFIX = (0, _toU8a.u8aToU8a)('</Bytes>');\nconst WRAP_LEN = U8A_WRAP_PREFIX.length + U8A_WRAP_POSTFIX.length;\n/** @internal */\n\nfunction u8aIsWrapped(u8a, withEthereum) {\n  return u8a.length >= WRAP_LEN && (0, _eq.u8aEq)(u8a.subarray(0, U8A_WRAP_PREFIX.length), U8A_WRAP_PREFIX) && (0, _eq.u8aEq)(u8a.slice(-U8A_WRAP_POSTFIX.length), U8A_WRAP_POSTFIX) || withEthereum && u8a.length >= U8A_WRAP_ETHEREUM.length && (0, _eq.u8aEq)(u8a.subarray(0, U8A_WRAP_ETHEREUM.length), U8A_WRAP_ETHEREUM);\n}\n/**\n * @name u8aUnwrapBytes\n * @description Removes all <Bytes>...</Bytes> wrappers from the supplied value\n */\n\nfunction u8aUnwrapBytes(bytes) {\n  const u8a = (0, _toU8a.u8aToU8a)(bytes); // we don't want to unwrap Ethereum-style wraps\n\n  return u8aIsWrapped(u8a, false) ? u8a.subarray(U8A_WRAP_PREFIX.length, u8a.length - U8A_WRAP_POSTFIX.length) : u8a;\n}\n/**\n * @name u8aWrapBytes\n * @description Adds a <Bytes>...</Bytes> wrapper to the supplied value (if not already existing)\n */\n\nfunction u8aWrapBytes(bytes) {\n  const u8a = (0, _toU8a.u8aToU8a)(bytes); // if Ethereum-wrapping, we don't add our wrapping bytes\n\n  return u8aIsWrapped(u8a, true) ? u8a : (0, _concat.u8aConcatStrict)([U8A_WRAP_PREFIX, u8a, U8A_WRAP_POSTFIX]);\n}"},"hash":"e90e3e079d8be86889259c9be695c3da"}