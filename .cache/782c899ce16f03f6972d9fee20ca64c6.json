{"dependencies":[{"name":"@polkadot/util","loc":{"line":3,"column":46}},{"name":"@polkadot/wasm-crypto","loc":{"line":4,"column":24}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAsHex = createAsHex;\nexports.createBitHasher = createBitHasher;\nexports.createDualHasher = createDualHasher;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _wasmCrypto = require(\"@polkadot/wasm-crypto\");\n\n// re-export so TS *.d.ts generation is correct\n\n/** @internal */\n// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction createAsHex(fn) {\n  return (...args) => (0, _util.u8aToHex)(fn(...args));\n}\n/** @internal */\n\nfunction createBitHasher(bitLength, fn) {\n  return (data, onlyJs) => fn(data, bitLength, onlyJs);\n}\n/** @internal */\n\nfunction createDualHasher(wa, js) {\n  return (value, bitLength = 256, onlyJs) => {\n    const u8a = (0, _util.u8aToU8a)(value);\n    return !_util.hasBigInt || !onlyJs && (0, _wasmCrypto.isReady)() ? wa[bitLength](u8a) : js[bitLength](u8a);\n  };\n}"},"hash":"d17b7f2bd0a06ead75e36d4bf8b8ab18"}