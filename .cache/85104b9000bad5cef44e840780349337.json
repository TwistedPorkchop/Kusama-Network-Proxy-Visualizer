{"dependencies":[{"name":"../is/hex.js","loc":{"line":3,"column":55}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hexStripPrefix = hexStripPrefix;\n\nvar _hex = require(\"../is/hex.js\");\n\n/**\n * @name hexStripPrefix\n * @summary Strips any leading `0x` prefix.\n * @description\n * Tests for the existence of a `0x` prefix, and returns the value without the prefix. Un-prefixed values are returned as-is.\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexStripPrefix } from '@polkadot/util';\n *\n * console.log('stripped', hexStripPrefix('0x1234')); // => 1234\n * ```\n */\n\nfunction hexStripPrefix(value) {\n  if (!value || value === '0x') {\n    return '';\n  } else if (_hex.REGEX_HEX_PREFIXED.test(value)) {\n    return value.substring(2);\n  } else if (_hex.REGEX_HEX_NOPREFIX.test(value)) {\n    return value;\n  }\n\n  throw new Error(`Expected hex value to convert, found '${value}'`);\n} // Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0"},"hash":"f559dba13b5ced6085a28ca42d15dcbe"}