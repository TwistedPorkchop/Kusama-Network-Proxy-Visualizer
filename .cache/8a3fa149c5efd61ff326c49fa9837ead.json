{"dependencies":[{"name":"./packageInfo.js","loc":{"line":3,"column":28}}],"generated":{"js":"var global = (1,eval)(\"this\");\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _packageInfo = require(\"./packageInfo.js\");\n\nObject.defineProperty(exports, \"packageInfo\", {\n  enumerable: true,\n  get: function () {\n    return _packageInfo.packageInfo;\n  }\n});\nexports.extractGlobal = extractGlobal;\nexports.exposeGlobal = exposeGlobal;\n\n\nfunction evaluateThis(fn) {\n  return fn('return this');\n}\n\nconst xglobal = exports.xglobal = typeof globalThis !== 'undefined' ? globalThis : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : evaluateThis(Function);\nfunction extractGlobal(name, fallback) {\n  // Not quite sure why this is here - snuck in with TS 4.7.2 with no real idea\n  // (as of now) as to why this looks like an \"any\" when we do cast it to a T\n  //\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n  return typeof xglobal[name] === 'undefined' ? fallback : xglobal[name];\n}\nfunction exposeGlobal(name, fallback) {\n  if (typeof xglobal[name] === 'undefined') {\n    xglobal[name] = fallback;\n  }\n}"},"hash":"f85598355e032e0b9e8686d933a44959"}