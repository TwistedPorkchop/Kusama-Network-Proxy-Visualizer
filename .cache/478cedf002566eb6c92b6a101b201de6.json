{"dependencies":[{"name":"@noble/hashes/blake2b","loc":{"line":3,"column":37}},{"name":"@polkadot/util","loc":{"line":4,"column":36}},{"name":"@polkadot/wasm-crypto","loc":{"line":5,"column":33}},{"name":"../helpers.js","loc":{"line":6,"column":28}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.blake2AsHex = undefined;\nexports.blake2AsU8a = blake2AsU8a;\n\nvar _blake2b = require(\"@noble/hashes/blake2b\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _wasmCrypto = require(\"@polkadot/wasm-crypto\");\n\nvar _helpers = require(\"../helpers.js\");\n\n/**\n * @name blake2AsU8a\n * @summary Creates a blake2b u8a from the input.\n * @description\n * From a `Uint8Array` input, create the blake2b and return the result as a u8a with the specified `bitLength`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { blake2AsU8a } from '@polkadot/util-crypto';\n *\n * blake2AsU8a('abc'); // => [0xba, 0x80, 0xa5, 0x3f, 0x98, 0x1c, 0x4d, 0x0d]\n * ```\n */\n\n// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction blake2AsU8a(data, bitLength = 256, key, onlyJs) {\n  const byteLength = Math.ceil(bitLength / 8);\n  const u8a = (0, _util.u8aToU8a)(data);\n  return !_util.hasBigInt || !onlyJs && (0, _wasmCrypto.isReady)() ? (0, _wasmCrypto.blake2b)(u8a, (0, _util.u8aToU8a)(key), byteLength) : (0, _blake2b.blake2b)(u8a, {\n    dkLen: byteLength,\n    key: key || undefined\n  });\n}\n/**\n * @name blake2AsHex\n * @description Creates a blake2b hex from the input.\n */\n\nconst blake2AsHex = exports.blake2AsHex = (0, _helpers.createAsHex)(blake2AsU8a);"},"hash":"381ba7a4a430274c9a11e1767c1594d6"}