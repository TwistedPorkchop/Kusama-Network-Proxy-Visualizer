{"id":"node_modules/@polkadot/util/assert.js","dependencies":[{"name":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\package.json","includedInParent":true,"mtime":1657538422482},{"name":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util\\package.json","includedInParent":true,"mtime":1657539547526},{"name":"./is/function.js","loc":{"line":3,"column":27,"index":127},"parent":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util\\assert.js","resolved":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util\\is\\function.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assert = assert;\nexports.assertReturn = assertReturn;\nexports.assertUnreachable = assertUnreachable;\n\nvar _function = require(\"./is/function.js\");\n\n// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name assert\n * @summary Checks for a valid test, if not Error is thrown.\n * @description\n * Checks that `test` is a truthy value. If value is falsy (`null`, `undefined`, `false`, ...), it throws an Error with the supplied `message`. When `test` passes, `true` is returned.\n * @example\n * <BR>\n *\n * ```javascript\n * const { assert } from '@polkadot/util';\n *\n * assert(true, 'True should be true'); // passes\n * assert(false, 'False should not be true'); // Error thrown\n * assert(false, () => 'message'); // Error with 'message'\n * ```\n */\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error((0, _function.isFunction)(message) ? message() : message);\n  }\n}\n/**\n * @name assertReturn\n * @description Returns when the value is not undefined/null, otherwise throws assertion error\n */\n\n\nfunction assertReturn(value, message) {\n  assert(value !== undefined && value !== null, message);\n  return value;\n}\n/**\n * @name assertUnreachable\n * @description An assertion helper that ensures all codepaths are followed\n */\n\n\nfunction assertUnreachable(x) {\n  throw new Error(\"This codepath should be unreachable. Unhandled input: \".concat(x));\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":10,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":3,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":5,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":6,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":7,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":8,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":9,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":10,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":11,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":12,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":13,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":14,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":15,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":16,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":17,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":18,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":19,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":20,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":21,"column":7}},{"generated":{"line":31,"column":9},"source":"node_modules/@polkadot/util/assert.js","original":{"line":21,"column":16},"name":"assert"},{"generated":{"line":31,"column":15},"source":"node_modules/@polkadot/util/assert.js","original":{"line":21,"column":7}},{"generated":{"line":31,"column":16},"source":"node_modules/@polkadot/util/assert.js","original":{"line":21,"column":23},"name":"condition"},{"generated":{"line":31,"column":25},"source":"node_modules/@polkadot/util/assert.js","original":{"line":21,"column":7}},{"generated":{"line":31,"column":27},"source":"node_modules/@polkadot/util/assert.js","original":{"line":21,"column":34},"name":"message"},{"generated":{"line":31,"column":34},"source":"node_modules/@polkadot/util/assert.js","original":{"line":21,"column":7}},{"generated":{"line":31,"column":36},"source":"node_modules/@polkadot/util/assert.js","original":{"line":21,"column":43}},{"generated":{"line":32,"column":2},"source":"node_modules/@polkadot/util/assert.js","original":{"line":22,"column":2}},{"generated":{"line":32,"column":6},"source":"node_modules/@polkadot/util/assert.js","original":{"line":22,"column":6}},{"generated":{"line":32,"column":7},"source":"node_modules/@polkadot/util/assert.js","original":{"line":22,"column":7},"name":"condition"},{"generated":{"line":32,"column":16},"source":"node_modules/@polkadot/util/assert.js","original":{"line":22,"column":2}},{"generated":{"line":32,"column":18},"source":"node_modules/@polkadot/util/assert.js","original":{"line":22,"column":18}},{"generated":{"line":33,"column":4},"source":"node_modules/@polkadot/util/assert.js","original":{"line":23,"column":4}},{"generated":{"line":33,"column":10},"source":"node_modules/@polkadot/util/assert.js","original":{"line":23,"column":10}},{"generated":{"line":33,"column":14},"source":"node_modules/@polkadot/util/assert.js","original":{"line":23,"column":14},"name":"Error"},{"generated":{"line":33,"column":19},"source":"node_modules/@polkadot/util/assert.js","original":{"line":23,"column":10}},{"generated":{"line":33,"column":20},"source":"node_modules/@polkadot/util/assert.js","original":{"line":23,"column":20}},{"generated":{"line":33,"column":24},"source":"node_modules/@polkadot/util/assert.js","original":{"line":23,"column":20},"name":"isFunction"},{"generated":{"line":33,"column":44},"source":"node_modules/@polkadot/util/assert.js","original":{"line":23,"column":20}},{"generated":{"line":33,"column":46},"source":"node_modules/@polkadot/util/assert.js","original":{"line":23,"column":31},"name":"message"},{"generated":{"line":33,"column":53},"source":"node_modules/@polkadot/util/assert.js","original":{"line":23,"column":20}},{"generated":{"line":33,"column":57},"source":"node_modules/@polkadot/util/assert.js","original":{"line":23,"column":42},"name":"message"},{"generated":{"line":33,"column":64},"source":"node_modules/@polkadot/util/assert.js","original":{"line":23,"column":49}},{"generated":{"line":33,"column":66},"source":"node_modules/@polkadot/util/assert.js","original":{"line":23,"column":20}},{"generated":{"line":33,"column":69},"source":"node_modules/@polkadot/util/assert.js","original":{"line":23,"column":54},"name":"message"},{"generated":{"line":33,"column":76},"source":"node_modules/@polkadot/util/assert.js","original":{"line":23,"column":10}},{"generated":{"line":33,"column":77},"source":"node_modules/@polkadot/util/assert.js","original":{"line":23,"column":4}},{"generated":{"line":34,"column":2},"source":"node_modules/@polkadot/util/assert.js","original":{"line":24,"column":3}},{"generated":{"line":35,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":25,"column":1}},{"generated":{"line":36,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":26,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":27,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":28,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":29,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":31,"column":7}},{"generated":{"line":42,"column":9},"source":"node_modules/@polkadot/util/assert.js","original":{"line":31,"column":16},"name":"assertReturn"},{"generated":{"line":42,"column":21},"source":"node_modules/@polkadot/util/assert.js","original":{"line":31,"column":7}},{"generated":{"line":42,"column":22},"source":"node_modules/@polkadot/util/assert.js","original":{"line":31,"column":29},"name":"value"},{"generated":{"line":42,"column":27},"source":"node_modules/@polkadot/util/assert.js","original":{"line":31,"column":7}},{"generated":{"line":42,"column":29},"source":"node_modules/@polkadot/util/assert.js","original":{"line":31,"column":36},"name":"message"},{"generated":{"line":42,"column":36},"source":"node_modules/@polkadot/util/assert.js","original":{"line":31,"column":7}},{"generated":{"line":42,"column":38},"source":"node_modules/@polkadot/util/assert.js","original":{"line":31,"column":45}},{"generated":{"line":43,"column":2},"source":"node_modules/@polkadot/util/assert.js","original":{"line":32,"column":2},"name":"assert"},{"generated":{"line":43,"column":8},"source":"node_modules/@polkadot/util/assert.js","original":{"line":32,"column":8}},{"generated":{"line":43,"column":9},"source":"node_modules/@polkadot/util/assert.js","original":{"line":32,"column":9},"name":"value"},{"generated":{"line":43,"column":14},"source":"node_modules/@polkadot/util/assert.js","original":{"line":32,"column":14}},{"generated":{"line":43,"column":19},"source":"node_modules/@polkadot/util/assert.js","original":{"line":32,"column":19},"name":"undefined"},{"generated":{"line":43,"column":28},"source":"node_modules/@polkadot/util/assert.js","original":{"line":32,"column":9}},{"generated":{"line":43,"column":32},"source":"node_modules/@polkadot/util/assert.js","original":{"line":32,"column":32},"name":"value"},{"generated":{"line":43,"column":37},"source":"node_modules/@polkadot/util/assert.js","original":{"line":32,"column":37}},{"generated":{"line":43,"column":42},"source":"node_modules/@polkadot/util/assert.js","original":{"line":32,"column":42}},{"generated":{"line":43,"column":46},"source":"node_modules/@polkadot/util/assert.js","original":{"line":32,"column":8}},{"generated":{"line":43,"column":48},"source":"node_modules/@polkadot/util/assert.js","original":{"line":32,"column":48},"name":"message"},{"generated":{"line":43,"column":55},"source":"node_modules/@polkadot/util/assert.js","original":{"line":32,"column":8}},{"generated":{"line":43,"column":56},"source":"node_modules/@polkadot/util/assert.js","original":{"line":32,"column":2}},{"generated":{"line":44,"column":2},"source":"node_modules/@polkadot/util/assert.js","original":{"line":33,"column":2}},{"generated":{"line":44,"column":9},"source":"node_modules/@polkadot/util/assert.js","original":{"line":33,"column":9},"name":"value"},{"generated":{"line":44,"column":14},"source":"node_modules/@polkadot/util/assert.js","original":{"line":33,"column":2}},{"generated":{"line":45,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":34,"column":1}},{"generated":{"line":46,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":35,"column":0}},{"generated":{"line":47,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":36,"column":0}},{"generated":{"line":48,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":37,"column":0}},{"generated":{"line":49,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":38,"column":0}},{"generated":{"line":52,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":40,"column":7}},{"generated":{"line":52,"column":9},"source":"node_modules/@polkadot/util/assert.js","original":{"line":40,"column":16},"name":"assertUnreachable"},{"generated":{"line":52,"column":26},"source":"node_modules/@polkadot/util/assert.js","original":{"line":40,"column":7}},{"generated":{"line":52,"column":27},"source":"node_modules/@polkadot/util/assert.js","original":{"line":40,"column":34},"name":"x"},{"generated":{"line":52,"column":28},"source":"node_modules/@polkadot/util/assert.js","original":{"line":40,"column":7}},{"generated":{"line":52,"column":30},"source":"node_modules/@polkadot/util/assert.js","original":{"line":40,"column":37}},{"generated":{"line":53,"column":2},"source":"node_modules/@polkadot/util/assert.js","original":{"line":41,"column":2}},{"generated":{"line":53,"column":8},"source":"node_modules/@polkadot/util/assert.js","original":{"line":41,"column":8}},{"generated":{"line":53,"column":12},"source":"node_modules/@polkadot/util/assert.js","original":{"line":41,"column":12},"name":"Error"},{"generated":{"line":53,"column":17},"source":"node_modules/@polkadot/util/assert.js","original":{"line":41,"column":8}},{"generated":{"line":53,"column":82},"source":"node_modules/@polkadot/util/assert.js","original":{"line":41,"column":75},"name":"x"},{"generated":{"line":53,"column":83},"source":"node_modules/@polkadot/util/assert.js","original":{"line":41,"column":8}},{"generated":{"line":53,"column":85},"source":"node_modules/@polkadot/util/assert.js","original":{"line":41,"column":2}},{"generated":{"line":54,"column":0},"source":"node_modules/@polkadot/util/assert.js","original":{"line":42,"column":1}}],"sources":{"node_modules/@polkadot/util/assert.js":"// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isFunction } from \"./is/function.js\";\n\n/**\n * @name assert\n * @summary Checks for a valid test, if not Error is thrown.\n * @description\n * Checks that `test` is a truthy value. If value is falsy (`null`, `undefined`, `false`, ...), it throws an Error with the supplied `message`. When `test` passes, `true` is returned.\n * @example\n * <BR>\n *\n * ```javascript\n * const { assert } from '@polkadot/util';\n *\n * assert(true, 'True should be true'); // passes\n * assert(false, 'False should not be true'); // Error thrown\n * assert(false, () => 'message'); // Error with 'message'\n * ```\n */\nexport function assert(condition, message) {\n  if (!condition) {\n    throw new Error(isFunction(message) ? message() : message);\n  }\n}\n/**\n * @name assertReturn\n * @description Returns when the value is not undefined/null, otherwise throws assertion error\n */\n\nexport function assertReturn(value, message) {\n  assert(value !== undefined && value !== null, message);\n  return value;\n}\n/**\n * @name assertUnreachable\n * @description An assertion helper that ensures all codepaths are followed\n */\n\nexport function assertUnreachable(x) {\n  throw new Error(`This codepath should be unreachable. Unhandled input: ${x}`);\n}"},"lineCount":null}},"error":null,"hash":"c816986099ee4c585e7da7acae6a7aea","cacheData":{"env":{}}}