{"id":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","dependencies":[{"name":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\package.json","includedInParent":true,"mtime":1657916549112},{"name":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util-crypto\\package.json","includedInParent":true,"mtime":1657539547586},{"name":"./encode.js","loc":{"line":3,"column":30,"index":137},"parent":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util-crypto\\address\\encodeMulti.js","resolved":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util-crypto\\address\\encode.js"},{"name":"./keyMulti.js","loc":{"line":4,"column":31,"index":183},"parent":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util-crypto\\address\\encodeMulti.js","resolved":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util-crypto\\address\\keyMulti.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encodeMultiAddress = encodeMultiAddress;\n\nvar _encode = require(\"./encode.js\");\n\nvar _keyMulti = require(\"./keyMulti.js\");\n\n// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name encodeMultiAddress\n * @summary Creates a multisig address.\n * @description\n * Creates a Substrate multisig address based on the input address and the required threshold.\n */\nfunction encodeMultiAddress(who, threshold, ss58Format) {\n  return (0, _encode.encodeAddress)((0, _keyMulti.createKeyMulti)(who, threshold), ss58Format);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":5,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":6,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":7,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":8,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":9,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":10,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":12,"column":7}},{"generated":{"line":21,"column":9},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":12,"column":16},"name":"encodeMultiAddress"},{"generated":{"line":21,"column":27},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":12,"column":7}},{"generated":{"line":21,"column":28},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":12,"column":35},"name":"who"},{"generated":{"line":21,"column":31},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":12,"column":7}},{"generated":{"line":21,"column":33},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":12,"column":40},"name":"threshold"},{"generated":{"line":21,"column":42},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":12,"column":7}},{"generated":{"line":21,"column":44},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":12,"column":51},"name":"ss58Format"},{"generated":{"line":21,"column":54},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":12,"column":7}},{"generated":{"line":21,"column":56},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":12,"column":63}},{"generated":{"line":22,"column":2},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":13,"column":2}},{"generated":{"line":22,"column":9},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":13,"column":9}},{"generated":{"line":22,"column":13},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":13,"column":9},"name":"encodeAddress"},{"generated":{"line":22,"column":34},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":13,"column":9}},{"generated":{"line":22,"column":36},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":13,"column":23}},{"generated":{"line":22,"column":40},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":13,"column":23},"name":"createKeyMulti"},{"generated":{"line":22,"column":64},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":13,"column":23}},{"generated":{"line":22,"column":66},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":13,"column":38},"name":"who"},{"generated":{"line":22,"column":69},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":13,"column":23}},{"generated":{"line":22,"column":71},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":13,"column":43},"name":"threshold"},{"generated":{"line":22,"column":80},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":13,"column":23}},{"generated":{"line":22,"column":81},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":13,"column":9}},{"generated":{"line":22,"column":83},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":13,"column":55},"name":"ss58Format"},{"generated":{"line":22,"column":93},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":13,"column":9}},{"generated":{"line":22,"column":94},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":13,"column":2}},{"generated":{"line":23,"column":0},"source":"node_modules/@polkadot/util-crypto/address/encodeMulti.js","original":{"line":14,"column":1}}],"sources":{"node_modules/@polkadot/util-crypto/address/encodeMulti.js":"// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { encodeAddress } from \"./encode.js\";\nimport { createKeyMulti } from \"./keyMulti.js\";\n/**\n * @name encodeMultiAddress\n * @summary Creates a multisig address.\n * @description\n * Creates a Substrate multisig address based on the input address and the required threshold.\n */\n\nexport function encodeMultiAddress(who, threshold, ss58Format) {\n  return encodeAddress(createKeyMulti(who, threshold), ss58Format);\n}"},"lineCount":null}},"error":null,"hash":"55936b45d5c8ff5d3131ac48cd3f027f","cacheData":{"env":{}}}