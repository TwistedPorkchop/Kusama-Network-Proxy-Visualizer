{"dependencies":[{"name":"@noble/hashes/sha3","loc":{"line":3,"column":69}},{"name":"@polkadot/wasm-crypto","loc":{"line":4,"column":37}},{"name":"../helpers.js","loc":{"line":5,"column":63}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.keccakAsHex = exports.keccak512AsU8a = exports.keccak256AsU8a = exports.keccakAsU8a = undefined;\n\nvar _sha = require(\"@noble/hashes/sha3\");\n\nvar _wasmCrypto = require(\"@polkadot/wasm-crypto\");\n\nvar _helpers = require(\"../helpers.js\");\n\n/**\n * @name keccakAsU8a\n * @summary Creates a keccak Uint8Array from the input.\n * @description\n * From either a `string` or a `Buffer` input, create the keccak and return the result as a `Uint8Array`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { keccakAsU8a } from '@polkadot/util-crypto';\n *\n * keccakAsU8a('123'); // => Uint8Array\n * ```\n */\n\nconst keccakAsU8a = exports.keccakAsU8a = (0, _helpers.createDualHasher)({\n  256: _wasmCrypto.keccak256,\n  512: _wasmCrypto.keccak512\n}, {\n  256: _sha.keccak_256,\n  512: _sha.keccak_512\n});\n/**\n * @name keccak256AsU8a\n * @description Creates a keccak256 Uint8Array from the input.\n */\n\n// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst keccak256AsU8a = exports.keccak256AsU8a = (0, _helpers.createBitHasher)(256, keccakAsU8a);\n/**\n * @name keccak512AsU8a\n * @description Creates a keccak512 Uint8Array from the input.\n */\n\nconst keccak512AsU8a = exports.keccak512AsU8a = (0, _helpers.createBitHasher)(512, keccakAsU8a);\n/**\n * @name keccakAsHex\n * @description Creates a keccak hex string from the input.\n */\n\nconst keccakAsHex = exports.keccakAsHex = (0, _helpers.createAsHex)(keccakAsU8a);"},"hash":"bfc8e86b0ef3e684a8ab3b8ea78e7a0a"}