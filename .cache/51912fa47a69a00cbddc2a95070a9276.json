{"dependencies":[{"name":"@polkadot/util","loc":{"line":3,"column":25}},{"name":"@polkadot/wasm-crypto","loc":{"line":4,"column":26}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sr25519VrfVerify = sr25519VrfVerify;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _wasmCrypto = require(\"@polkadot/wasm-crypto\");\n\n// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst EMPTY_U8A = new Uint8Array();\n/**\n * @name sr25519VrfVerify\n * @description Verify with sr25519 vrf verification\n */\n\nfunction sr25519VrfVerify(message, signOutput, publicKey, context = EMPTY_U8A, extra = EMPTY_U8A) {\n  const publicKeyU8a = (0, _util.u8aToU8a)(publicKey);\n  const proofU8a = (0, _util.u8aToU8a)(signOutput);\n\n  if (publicKeyU8a.length !== 32) {\n    throw new Error('Invalid publicKey, expected 32-bytes');\n  } else if (proofU8a.length !== 96) {\n    throw new Error('Invalid vrfSign output, expected 96 bytes');\n  }\n\n  return (0, _wasmCrypto.vrfVerify)(publicKeyU8a, (0, _util.u8aToU8a)(context), (0, _util.u8aToU8a)(message), (0, _util.u8aToU8a)(extra), proofU8a);\n}"},"hash":"f99cda26f32fddfc22ee36bc051c8259"}