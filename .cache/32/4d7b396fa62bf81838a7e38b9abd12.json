{"id":"node_modules/@polkadot/util/compact/stripLength.js","dependencies":[{"name":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\package.json","includedInParent":true,"mtime":1657538422482},{"name":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util\\package.json","includedInParent":true,"mtime":1657539547526},{"name":"./fromU8a.js","loc":{"line":3,"column":31,"index":131},"parent":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util\\compact\\stripLength.js","resolved":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util\\compact\\fromU8a.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.compactStripLength = compactStripLength;\n\nvar _fromU8a = require(\"./fromU8a.js\");\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/**\n * @name compactStripLength\n * @description Removes the length prefix, returning both the total length (including the value + compact encoding) and the decoded value with the correct length\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactStripLength } from '@polkadot/util';\n *\n * console.log(compactStripLength(new Uint8Array([2 << 2, 0xde, 0xad]))); // [2, Uint8Array[0xde, 0xad]]\n * ```\n */\nfunction compactStripLength(input) {\n  var _compactFromU8a = (0, _fromU8a.compactFromU8a)(input),\n      _compactFromU8a2 = _slicedToArray(_compactFromU8a, 2),\n      offset = _compactFromU8a2[0],\n      length = _compactFromU8a2[1];\n\n  var total = offset + length.toNumber();\n  return [total, input.subarray(offset, total)];\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":3,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":4,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":5,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":6,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":7,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":8,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":9,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":10,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":11,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":12,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":13,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":14,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":15,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":17,"column":7}},{"generated":{"line":34,"column":9},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":17,"column":16},"name":"compactStripLength"},{"generated":{"line":34,"column":27},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":17,"column":7}},{"generated":{"line":34,"column":28},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":17,"column":35},"name":"input"},{"generated":{"line":34,"column":33},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":17,"column":7}},{"generated":{"line":34,"column":35},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":17,"column":42}},{"generated":{"line":35,"column":2},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":18,"column":2}},{"generated":{"line":35,"column":24},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":18,"column":27}},{"generated":{"line":35,"column":28},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":18,"column":27},"name":"compactFromU8a"},{"generated":{"line":35,"column":51},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":18,"column":27}},{"generated":{"line":35,"column":53},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":18,"column":42},"name":"input"},{"generated":{"line":35,"column":58},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":18,"column":27}},{"generated":{"line":35,"column":59},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":18,"column":2}},{"generated":{"line":36,"column":2},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":18,"column":2}},{"generated":{"line":37,"column":2},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":18,"column":2}},{"generated":{"line":37,"column":6},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":18,"column":9},"name":"offset"},{"generated":{"line":37,"column":12},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":18,"column":2}},{"generated":{"line":38,"column":2},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":18,"column":2}},{"generated":{"line":38,"column":6},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":18,"column":17},"name":"length"},{"generated":{"line":38,"column":12},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":18,"column":2}},{"generated":{"line":40,"column":2},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":19,"column":2}},{"generated":{"line":40,"column":6},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":19,"column":8},"name":"total"},{"generated":{"line":40,"column":11},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":19,"column":13}},{"generated":{"line":40,"column":14},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":19,"column":16},"name":"offset"},{"generated":{"line":40,"column":20},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":19,"column":22}},{"generated":{"line":40,"column":23},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":19,"column":25},"name":"length"},{"generated":{"line":40,"column":29},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":19,"column":31}},{"generated":{"line":40,"column":30},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":19,"column":32},"name":"toNumber"},{"generated":{"line":40,"column":38},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":19,"column":25}},{"generated":{"line":40,"column":40},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":19,"column":2}},{"generated":{"line":41,"column":2},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":20,"column":2}},{"generated":{"line":41,"column":9},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":20,"column":9}},{"generated":{"line":41,"column":10},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":20,"column":10},"name":"total"},{"generated":{"line":41,"column":15},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":20,"column":9}},{"generated":{"line":41,"column":17},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":20,"column":17},"name":"input"},{"generated":{"line":41,"column":22},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":20,"column":22}},{"generated":{"line":41,"column":23},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":20,"column":23},"name":"subarray"},{"generated":{"line":41,"column":31},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":20,"column":17}},{"generated":{"line":41,"column":32},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":20,"column":32},"name":"offset"},{"generated":{"line":41,"column":38},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":20,"column":17}},{"generated":{"line":41,"column":40},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":20,"column":40},"name":"total"},{"generated":{"line":41,"column":45},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":20,"column":17}},{"generated":{"line":41,"column":46},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":20,"column":9}},{"generated":{"line":41,"column":47},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":20,"column":2}},{"generated":{"line":42,"column":0},"source":"node_modules/@polkadot/util/compact/stripLength.js","original":{"line":21,"column":1}}],"sources":{"node_modules/@polkadot/util/compact/stripLength.js":"// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { compactFromU8a } from \"./fromU8a.js\";\n/**\n * @name compactStripLength\n * @description Removes the length prefix, returning both the total length (including the value + compact encoding) and the decoded value with the correct length\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactStripLength } from '@polkadot/util';\n *\n * console.log(compactStripLength(new Uint8Array([2 << 2, 0xde, 0xad]))); // [2, Uint8Array[0xde, 0xad]]\n * ```\n */\n\nexport function compactStripLength(input) {\n  const [offset, length] = compactFromU8a(input);\n  const total = offset + length.toNumber();\n  return [total, input.subarray(offset, total)];\n}"},"lineCount":null}},"error":null,"hash":"d7ddc83afdcbf047ca86e2e230ee7285","cacheData":{"env":{}}}