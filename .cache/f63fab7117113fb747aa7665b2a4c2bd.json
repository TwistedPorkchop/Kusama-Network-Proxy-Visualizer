{"dependencies":[{"name":"@noble/hashes/scrypt","loc":{"line":3,"column":35}},{"name":"@polkadot/util","loc":{"line":4,"column":50}},{"name":"@polkadot/wasm-crypto","loc":{"line":5,"column":32}},{"name":"../random/asU8a.js","loc":{"line":6,"column":28}},{"name":"./defaults.js","loc":{"line":7,"column":31}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.scryptEncode = scryptEncode;\n\nvar _scrypt = require(\"@noble/hashes/scrypt\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _wasmCrypto = require(\"@polkadot/wasm-crypto\");\n\nvar _asU8a = require(\"../random/asU8a.js\");\n\nvar _defaults = require(\"./defaults.js\");\n\nfunction scryptEncode(passphrase, salt = (0, _asU8a.randomAsU8a)(), params = _defaults.DEFAULT_PARAMS, onlyJs) {\n  const u8a = (0, _util.u8aToU8a)(passphrase);\n  return {\n    params,\n    password: !_util.hasBigInt || !onlyJs && (0, _wasmCrypto.isReady)() ? (0, _wasmCrypto.scrypt)(u8a, salt, Math.log2(params.N), params.r, params.p) : (0, _scrypt.scrypt)(u8a, salt, (0, _util.objectSpread)({\n      dkLen: 64\n    }, params)),\n    salt\n  };\n} // Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0"},"hash":"6fa9a14ad9a6de7abd28fc134138b707"}