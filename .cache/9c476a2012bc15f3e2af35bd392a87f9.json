{"dependencies":[{"name":"@scure/base","loc":{"line":3,"column":23}},{"name":"../base32/helpers.js","loc":{"line":4,"column":69}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.base64Encode = exports.base64Decode = exports.isBase64 = exports.base64Validate = undefined;\n\nvar _base = require(\"@scure/base\");\n\nvar _helpers = require(\"../base32/helpers.js\");\n\n// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst config = {\n  chars: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  coder: _base.base64,\n  type: 'base64'\n};\n/**\n * @name base64Validate\n * @summary Validates a base64 value.\n * @description\n * Validates that the supplied value is valid base64\n */\n\nconst base64Validate = exports.base64Validate = (0, _helpers.createValidate)(config);\n/**\n * @name isBase64\n * @description Checks if the input is in base64, returning true/false\n */\n\nconst isBase64 = exports.isBase64 = (0, _helpers.createIs)(base64Validate);\n/**\n * @name base64Decode\n * @summary Decodes a base64 value.\n * @description\n * From the provided input, decode the base64 and return the result as an `Uint8Array`.\n */\n\nconst base64Decode = exports.base64Decode = (0, _helpers.createDecode)(config, base64Validate);\n/**\n * @name base64Encode\n * @summary Creates a base64 value.\n * @description\n * From the provided input, create the base64 and return the result as a string.\n */\n\nconst base64Encode = exports.base64Encode = (0, _helpers.createEncode)(config);"},"hash":"53fc3bde8e583ba3a363bc03bd976c95"}