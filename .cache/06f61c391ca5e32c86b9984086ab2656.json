{"dependencies":[{"name":"@polkadot/util","loc":{"line":3,"column":30}},{"name":"@polkadot/util-crypto","loc":{"line":4,"column":32}},{"name":"./defaults.js","loc":{"line":5,"column":81}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodePair = decodePair;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _utilCrypto = require(\"@polkadot/util-crypto\");\n\nvar _defaults = require(\"./defaults.js\");\n\nconst SEED_OFFSET = _defaults.PKCS8_HEADER.length; // Copyright 2017-2022 @polkadot/keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction decodePair(passphrase, encrypted, _encType) {\n  const encType = Array.isArray(_encType) || _encType === undefined ? _encType : [_encType];\n  const decrypted = (0, _utilCrypto.jsonDecryptData)(encrypted, passphrase, encType);\n  const header = decrypted.subarray(0, _defaults.PKCS8_HEADER.length);\n  (0, _util.assert)((0, _util.u8aEq)(header, _defaults.PKCS8_HEADER), 'Invalid Pkcs8 header found in body');\n  let secretKey = decrypted.subarray(SEED_OFFSET, SEED_OFFSET + _defaults.SEC_LENGTH);\n  let divOffset = SEED_OFFSET + _defaults.SEC_LENGTH;\n  let divider = decrypted.subarray(divOffset, divOffset + _defaults.PKCS8_DIVIDER.length); // old-style, we have the seed here\n\n  if (!(0, _util.u8aEq)(divider, _defaults.PKCS8_DIVIDER)) {\n    divOffset = SEED_OFFSET + _defaults.SEED_LENGTH;\n    secretKey = decrypted.subarray(SEED_OFFSET, divOffset);\n    divider = decrypted.subarray(divOffset, divOffset + _defaults.PKCS8_DIVIDER.length);\n    (0, _util.assert)((0, _util.u8aEq)(divider, _defaults.PKCS8_DIVIDER), 'Invalid Pkcs8 divider found in body');\n  }\n\n  const pubOffset = divOffset + _defaults.PKCS8_DIVIDER.length;\n  const publicKey = decrypted.subarray(pubOffset, pubOffset + _defaults.PUB_LENGTH);\n  return {\n    publicKey,\n    secretKey\n  };\n}"},"hash":"01444e43f13d343499524e694fd93817"}