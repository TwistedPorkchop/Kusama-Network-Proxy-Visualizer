{"dependencies":[{"name":"@noble/hashes/hmac","loc":{"line":3,"column":21}},{"name":"@noble/hashes/sha256","loc":{"line":4,"column":23}},{"name":"@noble/hashes/sha512","loc":{"line":5,"column":23}},{"name":"@polkadot/util","loc":{"line":6,"column":36}},{"name":"@polkadot/wasm-crypto","loc":{"line":7,"column":48}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hmacSha512AsU8a = exports.hmacSha256AsU8a = undefined;\nexports.hmacShaAsU8a = hmacShaAsU8a;\n\nvar _hmac = require(\"@noble/hashes/hmac\");\n\nvar _sha = require(\"@noble/hashes/sha256\");\n\nvar _sha2 = require(\"@noble/hashes/sha512\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _wasmCrypto = require(\"@polkadot/wasm-crypto\");\n\nconst JS_HASH = {\n  256: _sha.sha256,\n  512: _sha2.sha512\n}; // Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nconst WA_MHAC = {\n  256: _wasmCrypto.hmacSha256,\n  512: _wasmCrypto.hmacSha512\n};\n\nfunction createSha(bitLength) {\n  return (key, data, onlyJs) => hmacShaAsU8a(key, data, bitLength, onlyJs);\n}\n/**\n * @name hmacShaAsU8a\n * @description creates a Hmac Sha (256/512) Uint8Array from the key & data\n */\n\nfunction hmacShaAsU8a(key, data, bitLength = 256, onlyJs) {\n  const u8aKey = (0, _util.u8aToU8a)(key);\n  return !_util.hasBigInt || !onlyJs && (0, _wasmCrypto.isReady)() ? WA_MHAC[bitLength](u8aKey, data) : (0, _hmac.hmac)(JS_HASH[bitLength], u8aKey, data);\n}\n/**\n * @name hmacSha256AsU8a\n * @description creates a Hmac Sha256 Uint8Array from the key & data\n */\n\nconst hmacSha256AsU8a = exports.hmacSha256AsU8a = createSha(256);\n/**\n * @name hmacSha512AsU8a\n * @description creates a Hmac Sha512 Uint8Array from the key & data\n */\n\nconst hmacSha512AsU8a = exports.hmacSha512AsU8a = createSha(512);"},"hash":"2dbb5ab400508ecd42473a46c04d4552"}