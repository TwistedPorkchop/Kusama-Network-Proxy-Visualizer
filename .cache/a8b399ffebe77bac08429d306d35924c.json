{"dependencies":[{"name":"@noble/hashes/pbkdf2","loc":{"line":3,"column":35}},{"name":"@noble/hashes/sha512","loc":{"line":4,"column":23}},{"name":"@polkadot/util","loc":{"line":5,"column":36}},{"name":"@polkadot/wasm-crypto","loc":{"line":6,"column":32}},{"name":"../random/asU8a.js","loc":{"line":7,"column":28}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pbkdf2Encode = pbkdf2Encode;\n\nvar _pbkdf = require(\"@noble/hashes/pbkdf2\");\n\nvar _sha = require(\"@noble/hashes/sha512\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _wasmCrypto = require(\"@polkadot/wasm-crypto\");\n\nvar _asU8a = require(\"../random/asU8a.js\");\n\nfunction pbkdf2Encode(passphrase, salt = (0, _asU8a.randomAsU8a)(), rounds = 2048, onlyJs) {\n  const u8aPass = (0, _util.u8aToU8a)(passphrase);\n  const u8aSalt = (0, _util.u8aToU8a)(salt);\n  return {\n    password: !_util.hasBigInt || !onlyJs && (0, _wasmCrypto.isReady)() ? (0, _wasmCrypto.pbkdf2)(u8aPass, u8aSalt, rounds) : (0, _pbkdf.pbkdf2)(_sha.sha512, u8aPass, u8aSalt, {\n      c: rounds,\n      dkLen: 64\n    }),\n    rounds,\n    salt\n  };\n} // Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0"},"hash":"ee98bae92606869205e96da187ed5018"}