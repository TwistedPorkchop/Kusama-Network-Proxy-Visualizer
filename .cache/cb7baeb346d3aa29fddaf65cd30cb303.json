{"dependencies":[{"name":"@polkadot/util","loc":{"line":3,"column":26}},{"name":"../../hmac/index.js","loc":{"line":4,"column":29}},{"name":"../../mnemonic/bip39.js","loc":{"line":5,"column":35}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ledgerMaster = ledgerMaster;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _index = require(\"../../hmac/index.js\");\n\nvar _bip = require(\"../../mnemonic/bip39.js\");\n\nconst ED25519_CRYPTO = 'ed25519 seed'; // gets an xprv from a mnemonic\n\n// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction ledgerMaster(mnemonic, password) {\n  const seed = (0, _bip.mnemonicToSeedSync)(mnemonic, password);\n  const chainCode = (0, _index.hmacShaAsU8a)(ED25519_CRYPTO, new Uint8Array([1, ...seed]), 256);\n  let priv;\n\n  while (!priv || priv[31] & 0b00100000) {\n    priv = (0, _index.hmacShaAsU8a)(ED25519_CRYPTO, priv || seed, 512);\n  }\n\n  priv[0] &= 0b11111000;\n  priv[31] &= 0b01111111;\n  priv[31] |= 0b01000000;\n  return (0, _util.u8aConcat)(priv, chainCode);\n}"},"hash":"8a571f3009c208b34c8c5b1f085c9e37"}