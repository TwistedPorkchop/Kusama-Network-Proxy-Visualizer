{"dependencies":[{"name":"@noble/secp256k1","loc":{"line":3,"column":22}},{"name":"@polkadot/util","loc":{"line":4,"column":46}},{"name":"@polkadot/wasm-crypto","loc":{"line":5,"column":49}},{"name":"../bn.js","loc":{"line":6,"column":31}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.secp256k1Expand = secp256k1Expand;\n\nvar _secp256k = require(\"@noble/secp256k1\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _wasmCrypto = require(\"@polkadot/wasm-crypto\");\n\nvar _bn = require(\"../bn.js\");\n\n// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction secp256k1Expand(publicKey, onlyJs) {\n  if (publicKey.length === 65) {\n    return publicKey.subarray(1);\n  }\n\n  if (publicKey.length !== 33) {\n    throw new Error('Invalid publicKey provided');\n  }\n\n  if (!_util.hasBigInt || !onlyJs && (0, _wasmCrypto.isReady)()) {\n    return (0, _wasmCrypto.secp256k1Expand)(publicKey).subarray(1);\n  }\n\n  const {\n    x,\n    y\n  } = _secp256k.Point.fromHex(publicKey);\n  return (0, _util.u8aConcat)((0, _util.bnToU8a)(x, _bn.BN_BE_256_OPTS), (0, _util.bnToU8a)(y, _bn.BN_BE_256_OPTS));\n}"},"hash":"0ecb2bec49d8d27d255aa9a9c03d3c20"}