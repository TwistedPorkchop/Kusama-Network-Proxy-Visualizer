{"dependencies":[{"name":"../hex/toU8a.js","loc":{"line":3,"column":25}},{"name":"./toHex.js","loc":{"line":4,"column":28}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.numberToU8a = numberToU8a;\n\nvar _toU8a = require(\"../hex/toU8a.js\");\n\nvar _toHex = require(\"./toHex.js\");\n\n/**\n * @name numberToU8a\n * @summary Creates a Uint8Array object from a number.\n * @description\n * `null`/`undefined`/`NaN` inputs returns an empty `Uint8Array` result. `number` input values return the actual bytes value converted to a `Uint8Array`. With `bitLength`, it converts the value to the equivalent size.\n * @example\n * <BR>\n *\n * ```javascript\n * import { numberToU8a } from '@polkadot/util';\n *\n * numberToU8a(0x1234); // => [0x12, 0x34]\n * ```\n */\n\n// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction numberToU8a(value, bitLength = -1) {\n  return value === undefined || value === null || isNaN(value) ? new Uint8Array() : (0, _toU8a.hexToU8a)((0, _toHex.numberToHex)(value, bitLength));\n}"},"hash":"e74bca79c13e1cc442488e6713b76c7e"}