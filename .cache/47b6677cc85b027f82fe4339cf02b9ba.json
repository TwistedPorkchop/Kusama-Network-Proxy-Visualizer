{"dependencies":[{"name":"../base58/index.js","loc":{"line":3,"column":29}},{"name":"./checksum.js","loc":{"line":4,"column":37}},{"name":"./defaults.js","loc":{"line":5,"column":25}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkAddress = checkAddress;\n\nvar _index = require(\"../base58/index.js\");\n\nvar _checksum = require(\"./checksum.js\");\n\nvar _defaults = require(\"./defaults.js\");\n\n/**\n * @name checkAddress\n * @summary Validates an ss58 address.\n * @description\n * From the provided input, validate that the address is a valid input.\n */\n\nfunction checkAddress(address, prefix) {\n  let decoded;\n\n  try {\n    decoded = (0, _index.base58Decode)(address);\n  } catch (error) {\n    return [false, error.message];\n  }\n\n  const [isValid,,, ss58Decoded] = (0, _checksum.checkAddressChecksum)(decoded);\n\n  if (ss58Decoded !== prefix) {\n    return [false, `Prefix mismatch, expected ${prefix}, found ${ss58Decoded}`];\n  } else if (!_defaults.defaults.allowedEncodedLengths.includes(decoded.length)) {\n    return [false, 'Invalid decoded address length'];\n  }\n\n  return [isValid, isValid ? null : 'Invalid decoded address checksum'];\n} // Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0"},"hash":"2c99f1add001972674a947053aacdedb"}