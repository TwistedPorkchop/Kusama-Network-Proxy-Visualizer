{"id":"node_modules/@polkadot/util-crypto/sha/asU8a.js","dependencies":[{"name":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\package.json","includedInParent":true,"mtime":1657916549112},{"name":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util-crypto\\package.json","includedInParent":true,"mtime":1657539547586},{"name":"@noble/hashes/sha256","loc":{"line":3,"column":35,"index":142},"parent":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util-crypto\\sha\\asU8a.js","resolved":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@noble\\hashes\\sha256.js"},{"name":"@noble/hashes/sha512","loc":{"line":4,"column":35,"index":201},"parent":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util-crypto\\sha\\asU8a.js","resolved":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@noble\\hashes\\sha512.js"},{"name":"@polkadot/wasm-crypto","loc":{"line":5,"column":31,"index":256},"parent":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util-crypto\\sha\\asU8a.js","resolved":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\wasm-crypto\\index.js"},{"name":"../helpers.js","loc":{"line":6,"column":50,"index":331},"parent":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util-crypto\\sha\\asU8a.js","resolved":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util-crypto\\helpers.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shaAsU8a = exports.sha512AsU8a = exports.sha256AsU8a = void 0;\n\nvar _sha = require(\"@noble/hashes/sha256\");\n\nvar _sha2 = require(\"@noble/hashes/sha512\");\n\nvar _wasmCrypto = require(\"@polkadot/wasm-crypto\");\n\nvar _helpers = require(\"../helpers.js\");\n\n// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name shaAsU8a\n * @summary Creates a sha Uint8Array from the input.\n */\nvar shaAsU8a = (0, _helpers.createDualHasher)({\n  256: _wasmCrypto.sha256,\n  512: _wasmCrypto.sha512\n}, {\n  256: _sha.sha256,\n  512: _sha2.sha512\n});\n/**\n * @name sha256AsU8a\n * @summary Creates a sha256 Uint8Array from the input.\n */\n\nexports.shaAsU8a = shaAsU8a;\nvar sha256AsU8a = (0, _helpers.createBitHasher)(256, shaAsU8a);\n/**\n * @name sha512AsU8a\n * @summary Creates a sha512 Uint8Array from the input.\n */\n\nexports.sha256AsU8a = sha256AsU8a;\nvar sha512AsU8a = (0, _helpers.createBitHasher)(512, shaAsU8a);\nexports.sha512AsU8a = sha512AsU8a;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":5,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":6,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":1,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":2,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":7,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":8,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":9,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":10,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":12,"column":7}},{"generated":{"line":23,"column":4},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":12,"column":13},"name":"shaAsU8a"},{"generated":{"line":23,"column":12},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":12,"column":21}},{"generated":{"line":23,"column":15},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":12,"column":24}},{"generated":{"line":23,"column":19},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":12,"column":24},"name":"createDualHasher"},{"generated":{"line":23,"column":44},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":12,"column":24}},{"generated":{"line":23,"column":46},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":12,"column":41}},{"generated":{"line":24,"column":2},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":13,"column":2}},{"generated":{"line":24,"column":7},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":13,"column":7},"name":"sha256"},{"generated":{"line":24,"column":25},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":12,"column":41}},{"generated":{"line":25,"column":2},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":14,"column":2}},{"generated":{"line":25,"column":7},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":14,"column":7},"name":"sha512"},{"generated":{"line":26,"column":0},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":12,"column":41}},{"generated":{"line":26,"column":1},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":12,"column":24}},{"generated":{"line":26,"column":3},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":15,"column":3}},{"generated":{"line":27,"column":2},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":16,"column":2}},{"generated":{"line":27,"column":7},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":16,"column":7},"name":"sha256Js"},{"generated":{"line":27,"column":18},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":15,"column":3}},{"generated":{"line":28,"column":2},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":17,"column":2}},{"generated":{"line":28,"column":7},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":17,"column":7},"name":"sha512Js"},{"generated":{"line":29,"column":0},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":15,"column":3}},{"generated":{"line":29,"column":1},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":12,"column":24}},{"generated":{"line":29,"column":2},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":12,"column":7}},{"generated":{"line":30,"column":0},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":19,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":20,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":21,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":22,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":24,"column":7}},{"generated":{"line":36,"column":4},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":24,"column":13},"name":"sha256AsU8a"},{"generated":{"line":36,"column":15},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":24,"column":24}},{"generated":{"line":36,"column":18},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":24,"column":27}},{"generated":{"line":36,"column":22},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":24,"column":27},"name":"createBitHasher"},{"generated":{"line":36,"column":46},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":24,"column":27}},{"generated":{"line":36,"column":48},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":24,"column":43}},{"generated":{"line":36,"column":51},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":24,"column":27}},{"generated":{"line":36,"column":53},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":24,"column":48},"name":"shaAsU8a"},{"generated":{"line":36,"column":61},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":24,"column":27}},{"generated":{"line":36,"column":62},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":24,"column":7}},{"generated":{"line":37,"column":0},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":25,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":26,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":27,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":28,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":30,"column":7}},{"generated":{"line":43,"column":4},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":30,"column":13},"name":"sha512AsU8a"},{"generated":{"line":43,"column":15},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":30,"column":24}},{"generated":{"line":43,"column":18},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":30,"column":27}},{"generated":{"line":43,"column":22},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":30,"column":27},"name":"createBitHasher"},{"generated":{"line":43,"column":46},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":30,"column":27}},{"generated":{"line":43,"column":48},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":30,"column":43}},{"generated":{"line":43,"column":51},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":30,"column":27}},{"generated":{"line":43,"column":53},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":30,"column":48},"name":"shaAsU8a"},{"generated":{"line":43,"column":61},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":30,"column":27}},{"generated":{"line":43,"column":62},"source":"node_modules/@polkadot/util-crypto/sha/asU8a.js","original":{"line":30,"column":7}}],"sources":{"node_modules/@polkadot/util-crypto/sha/asU8a.js":"// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { sha256 as sha256Js } from '@noble/hashes/sha256';\nimport { sha512 as sha512Js } from '@noble/hashes/sha512';\nimport { sha256, sha512 } from '@polkadot/wasm-crypto';\nimport { createBitHasher, createDualHasher } from \"../helpers.js\";\n/**\n * @name shaAsU8a\n * @summary Creates a sha Uint8Array from the input.\n */\n\nexport const shaAsU8a = createDualHasher({\n  256: sha256,\n  512: sha512\n}, {\n  256: sha256Js,\n  512: sha512Js\n});\n/**\n * @name sha256AsU8a\n * @summary Creates a sha256 Uint8Array from the input.\n */\n\nexport const sha256AsU8a = createBitHasher(256, shaAsU8a);\n/**\n * @name sha512AsU8a\n * @summary Creates a sha512 Uint8Array from the input.\n */\n\nexport const sha512AsU8a = createBitHasher(512, shaAsU8a);"},"lineCount":null}},"error":null,"hash":"5fe13da0c95c683c8761a00577db9953","cacheData":{"env":{}}}