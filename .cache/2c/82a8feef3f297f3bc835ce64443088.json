{"id":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","dependencies":[{"name":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\package.json","includedInParent":true,"mtime":1657538422482},{"name":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util-crypto\\package.json","includedInParent":true,"mtime":1657539547586},{"name":"./decode.js","loc":{"line":3,"column":30,"index":137},"parent":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util-crypto\\address\\addressToEvm.js","resolved":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util-crypto\\address\\decode.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addressToEvm = addressToEvm;\n\nvar _decode = require(\"./decode.js\");\n\n// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name addressToEvm\n * @summary Converts an SS58 address to its corresponding EVM address.\n */\nfunction addressToEvm(address, ignoreChecksum) {\n  return (0, _decode.decodeAddress)(address, ignoreChecksum).subarray(0, 20);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":2,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":4,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":5,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":6,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":7,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":9,"column":7}},{"generated":{"line":17,"column":9},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":9,"column":16},"name":"addressToEvm"},{"generated":{"line":17,"column":21},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":9,"column":7}},{"generated":{"line":17,"column":22},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":9,"column":29},"name":"address"},{"generated":{"line":17,"column":29},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":9,"column":7}},{"generated":{"line":17,"column":31},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":9,"column":38},"name":"ignoreChecksum"},{"generated":{"line":17,"column":45},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":9,"column":7}},{"generated":{"line":17,"column":47},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":9,"column":54}},{"generated":{"line":18,"column":2},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":10,"column":2}},{"generated":{"line":18,"column":9},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":10,"column":9}},{"generated":{"line":18,"column":13},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":10,"column":9},"name":"decodeAddress"},{"generated":{"line":18,"column":34},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":10,"column":9}},{"generated":{"line":18,"column":36},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":10,"column":23},"name":"address"},{"generated":{"line":18,"column":43},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":10,"column":9}},{"generated":{"line":18,"column":45},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":10,"column":32},"name":"ignoreChecksum"},{"generated":{"line":18,"column":59},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":10,"column":9}},{"generated":{"line":18,"column":61},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":10,"column":48},"name":"subarray"},{"generated":{"line":18,"column":69},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":10,"column":9}},{"generated":{"line":18,"column":70},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":10,"column":57}},{"generated":{"line":18,"column":71},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":10,"column":9}},{"generated":{"line":18,"column":73},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":10,"column":60}},{"generated":{"line":18,"column":75},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":10,"column":9}},{"generated":{"line":18,"column":76},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":10,"column":2}},{"generated":{"line":19,"column":0},"source":"node_modules/@polkadot/util-crypto/address/addressToEvm.js","original":{"line":11,"column":1}}],"sources":{"node_modules/@polkadot/util-crypto/address/addressToEvm.js":"// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { decodeAddress } from \"./decode.js\";\n/**\n * @name addressToEvm\n * @summary Converts an SS58 address to its corresponding EVM address.\n */\n\nexport function addressToEvm(address, ignoreChecksum) {\n  return decodeAddress(address, ignoreChecksum).subarray(0, 20);\n}"},"lineCount":null}},"error":null,"hash":"da652b6d82f2e4aabbf95fc06ea41727","cacheData":{"env":{}}}