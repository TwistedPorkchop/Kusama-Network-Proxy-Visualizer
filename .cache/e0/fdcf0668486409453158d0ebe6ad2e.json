{"id":"app.js","dependencies":[{"name":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\package.json","includedInParent":true,"mtime":1657916549112},{"name":"@polkadot/api","loc":{"line":2,"column":39,"index":50},"parent":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\app.js","resolved":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\api\\index.js"},{"name":"cytoscape","loc":{"line":4,"column":22,"index":92},"parent":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\app.js","resolved":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\cytoscape\\dist\\cytoscape.cjs.js"}],"generated":{"js":"\"use strict\";\n\nvar _api = require(\"@polkadot/api\");\n\nvar _cytoscape2 = _interopRequireDefault(require(\"cytoscape\"));\n\nvar _cytoscape;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar cy = (0, _cytoscape2.default)((_cytoscape = {\n  container: document.getElementById('viewport'),\n  // container to render in\n  elements: [// list of graph elements to start with\n  {\n    // node a\n    data: {\n      id: 'a'\n    }\n  }, {\n    // node b\n    data: {\n      id: 'b'\n    }\n  }, {\n    // edge ab\n    data: {\n      id: 'ab',\n      source: 'a',\n      target: 'b'\n    }\n  }],\n  style: [// the stylesheet for the graph\n  {\n    selector: 'node',\n    style: {\n      'background-color': '#666',\n      'label': 'data(id)'\n    }\n  }, {\n    selector: 'edge',\n    style: {\n      'width': 3,\n      'line-color': '#ccc',\n      'target-arrow-color': '#ccc',\n      'target-arrow-shape': 'triangle',\n      'curve-style': 'bezier'\n    }\n  }],\n  layout: {\n    name: 'grid',\n    rows: 1\n  }\n}, _defineProperty(_cytoscape, \"container\", undefined), _defineProperty(_cytoscape, \"elements\", [\n  /* ... */\n]), _defineProperty(_cytoscape, \"style\", [\n  /* ... */\n]), _defineProperty(_cytoscape, \"layout\", {\n  name: 'grid'\n  /* , ... */\n\n}), _defineProperty(_cytoscape, \"data\", {\n  /* ... */\n}), _defineProperty(_cytoscape, \"zoom\", 1), _defineProperty(_cytoscape, \"pan\", {\n  x: 0,\n  y: 0\n}), _defineProperty(_cytoscape, \"minZoom\", 1e-50), _defineProperty(_cytoscape, \"maxZoom\", 1e50), _defineProperty(_cytoscape, \"zoomingEnabled\", true), _defineProperty(_cytoscape, \"userZoomingEnabled\", true), _defineProperty(_cytoscape, \"panningEnabled\", true), _defineProperty(_cytoscape, \"userPanningEnabled\", true), _defineProperty(_cytoscape, \"boxSelectionEnabled\", true), _defineProperty(_cytoscape, \"selectionType\", 'single'), _defineProperty(_cytoscape, \"touchTapThreshold\", 8), _defineProperty(_cytoscape, \"desktopTapThreshold\", 4), _defineProperty(_cytoscape, \"autolock\", false), _defineProperty(_cytoscape, \"autoungrabify\", false), _defineProperty(_cytoscape, \"autounselectify\", false), _defineProperty(_cytoscape, \"multiClickDebounceTime\", 250), _defineProperty(_cytoscape, \"headless\", false), _defineProperty(_cytoscape, \"styleEnabled\", true), _defineProperty(_cytoscape, \"hideEdgesOnViewport\", false), _defineProperty(_cytoscape, \"textureOnViewport\", false), _defineProperty(_cytoscape, \"motionBlur\", false), _defineProperty(_cytoscape, \"motionBlurOpacity\", 0.2), _defineProperty(_cytoscape, \"wheelSensitivity\", 1), _defineProperty(_cytoscape, \"pixelRatio\", 'auto'), _cytoscape));\n\nfunction draw() {\n  return _draw.apply(this, arguments);\n}\n\nfunction _draw() {\n  _draw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var wsProvider, api;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // Construct\n            wsProvider = new _api.WsProvider('wss://kusama-rpc.polkadot.io');\n            _context.next = 3;\n            return _api.ApiPromise.create({\n              provider: wsProvider\n            });\n\n          case 3:\n            api = _context.sent;\n            _context.next = 6;\n            return api.query.proxy.proxies.entries();\n\n          case 6:\n            nodes = _context.sent;\n            _context.next = 9;\n            return api.query.proxy.announcements.entries();\n\n          case 9:\n            proxy_actions = _context.sent;\n\n            for (node in nodes) {\n              node_point = nodes[node][0].toHuman(); //nodes in graph\n\n              edges = nodes[node][1]; //node edges/graph connections\n\n              console.log(node_point);\n            }\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _draw.apply(this, arguments);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"app.js","original":{"line":2,"column":0}},{"generated":{"line":5,"column":0},"source":"app.js","original":{"line":4,"column":0}},{"generated":{"line":13,"column":47},"source":"app.js","original":{"line":2,"column":0}},{"generated":{"line":21,"column":0},"source":"app.js","original":{"line":6,"column":0}},{"generated":{"line":21,"column":4},"source":"app.js","original":{"line":6,"column":4},"name":"cy"},{"generated":{"line":21,"column":6},"source":"app.js","original":{"line":6,"column":6}},{"generated":{"line":21,"column":9},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":21,"column":13},"source":"app.js","original":{"line":6,"column":9},"name":"cytoscape"},{"generated":{"line":21,"column":32},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":22,"column":2},"source":"app.js","original":{"line":8,"column":2},"name":"container"},{"generated":{"line":22,"column":11},"source":"app.js","original":{"line":8,"column":11}},{"generated":{"line":22,"column":13},"source":"app.js","original":{"line":8,"column":13},"name":"document"},{"generated":{"line":22,"column":21},"source":"app.js","original":{"line":8,"column":21}},{"generated":{"line":22,"column":22},"source":"app.js","original":{"line":8,"column":22},"name":"getElementById"},{"generated":{"line":22,"column":36},"source":"app.js","original":{"line":8,"column":13}},{"generated":{"line":22,"column":37},"source":"app.js","original":{"line":8,"column":37}},{"generated":{"line":22,"column":47},"source":"app.js","original":{"line":8,"column":13}},{"generated":{"line":22,"column":48},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":23,"column":2},"source":"app.js","original":{"line":8,"column":50}},{"generated":{"line":24,"column":2},"source":"app.js","original":{"line":10,"column":2},"name":"elements"},{"generated":{"line":24,"column":10},"source":"app.js","original":{"line":10,"column":10}},{"generated":{"line":24,"column":12},"source":"app.js","original":{"line":10,"column":12}},{"generated":{"line":24,"column":13},"source":"app.js","original":{"line":10,"column":14}},{"generated":{"line":25,"column":2},"source":"app.js","original":{"line":11,"column":4}},{"generated":{"line":26,"column":4},"source":"app.js","original":{"line":11,"column":6}},{"generated":{"line":27,"column":4},"source":"app.js","original":{"line":12,"column":6},"name":"data"},{"generated":{"line":27,"column":8},"source":"app.js","original":{"line":12,"column":10}},{"generated":{"line":27,"column":10},"source":"app.js","original":{"line":12,"column":12}},{"generated":{"line":28,"column":6},"source":"app.js","original":{"line":12,"column":14},"name":"id"},{"generated":{"line":28,"column":8},"source":"app.js","original":{"line":12,"column":16}},{"generated":{"line":28,"column":10},"source":"app.js","original":{"line":12,"column":18}},{"generated":{"line":29,"column":4},"source":"app.js","original":{"line":12,"column":12}},{"generated":{"line":30,"column":2},"source":"app.js","original":{"line":11,"column":4}},{"generated":{"line":30,"column":3},"source":"app.js","original":{"line":10,"column":12}},{"generated":{"line":30,"column":5},"source":"app.js","original":{"line":14,"column":4}},{"generated":{"line":31,"column":4},"source":"app.js","original":{"line":14,"column":6}},{"generated":{"line":32,"column":4},"source":"app.js","original":{"line":15,"column":6},"name":"data"},{"generated":{"line":32,"column":8},"source":"app.js","original":{"line":15,"column":10}},{"generated":{"line":32,"column":10},"source":"app.js","original":{"line":15,"column":12}},{"generated":{"line":33,"column":6},"source":"app.js","original":{"line":15,"column":14},"name":"id"},{"generated":{"line":33,"column":8},"source":"app.js","original":{"line":15,"column":16}},{"generated":{"line":33,"column":10},"source":"app.js","original":{"line":15,"column":18}},{"generated":{"line":34,"column":4},"source":"app.js","original":{"line":15,"column":12}},{"generated":{"line":35,"column":2},"source":"app.js","original":{"line":14,"column":4}},{"generated":{"line":35,"column":3},"source":"app.js","original":{"line":10,"column":12}},{"generated":{"line":35,"column":5},"source":"app.js","original":{"line":17,"column":4}},{"generated":{"line":36,"column":4},"source":"app.js","original":{"line":17,"column":6}},{"generated":{"line":37,"column":4},"source":"app.js","original":{"line":18,"column":6},"name":"data"},{"generated":{"line":37,"column":8},"source":"app.js","original":{"line":18,"column":10}},{"generated":{"line":37,"column":10},"source":"app.js","original":{"line":18,"column":12}},{"generated":{"line":38,"column":6},"source":"app.js","original":{"line":18,"column":14},"name":"id"},{"generated":{"line":38,"column":8},"source":"app.js","original":{"line":18,"column":16}},{"generated":{"line":38,"column":10},"source":"app.js","original":{"line":18,"column":18}},{"generated":{"line":38,"column":14},"source":"app.js","original":{"line":18,"column":12}},{"generated":{"line":39,"column":6},"source":"app.js","original":{"line":18,"column":24},"name":"source"},{"generated":{"line":39,"column":12},"source":"app.js","original":{"line":18,"column":30}},{"generated":{"line":39,"column":14},"source":"app.js","original":{"line":18,"column":32}},{"generated":{"line":39,"column":17},"source":"app.js","original":{"line":18,"column":12}},{"generated":{"line":40,"column":6},"source":"app.js","original":{"line":18,"column":37},"name":"target"},{"generated":{"line":40,"column":12},"source":"app.js","original":{"line":18,"column":43}},{"generated":{"line":40,"column":14},"source":"app.js","original":{"line":18,"column":45}},{"generated":{"line":41,"column":4},"source":"app.js","original":{"line":18,"column":12}},{"generated":{"line":42,"column":2},"source":"app.js","original":{"line":17,"column":4}},{"generated":{"line":42,"column":3},"source":"app.js","original":{"line":10,"column":12}},{"generated":{"line":42,"column":4},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":43,"column":2},"source":"app.js","original":{"line":22,"column":2},"name":"style"},{"generated":{"line":43,"column":7},"source":"app.js","original":{"line":22,"column":7}},{"generated":{"line":43,"column":9},"source":"app.js","original":{"line":22,"column":9}},{"generated":{"line":43,"column":10},"source":"app.js","original":{"line":22,"column":11}},{"generated":{"line":44,"column":2},"source":"app.js","original":{"line":23,"column":4}},{"generated":{"line":45,"column":4},"source":"app.js","original":{"line":24,"column":6},"name":"selector"},{"generated":{"line":45,"column":12},"source":"app.js","original":{"line":24,"column":14}},{"generated":{"line":45,"column":14},"source":"app.js","original":{"line":24,"column":16}},{"generated":{"line":45,"column":20},"source":"app.js","original":{"line":23,"column":4}},{"generated":{"line":46,"column":4},"source":"app.js","original":{"line":25,"column":6},"name":"style"},{"generated":{"line":46,"column":9},"source":"app.js","original":{"line":25,"column":11}},{"generated":{"line":46,"column":11},"source":"app.js","original":{"line":25,"column":13}},{"generated":{"line":47,"column":6},"source":"app.js","original":{"line":26,"column":8}},{"generated":{"line":47,"column":26},"source":"app.js","original":{"line":26,"column":28}},{"generated":{"line":47,"column":32},"source":"app.js","original":{"line":25,"column":13}},{"generated":{"line":48,"column":6},"source":"app.js","original":{"line":27,"column":8}},{"generated":{"line":48,"column":15},"source":"app.js","original":{"line":27,"column":17}},{"generated":{"line":49,"column":4},"source":"app.js","original":{"line":25,"column":13}},{"generated":{"line":50,"column":2},"source":"app.js","original":{"line":23,"column":4}},{"generated":{"line":50,"column":3},"source":"app.js","original":{"line":22,"column":9}},{"generated":{"line":50,"column":5},"source":"app.js","original":{"line":31,"column":4}},{"generated":{"line":51,"column":4},"source":"app.js","original":{"line":32,"column":6},"name":"selector"},{"generated":{"line":51,"column":12},"source":"app.js","original":{"line":32,"column":14}},{"generated":{"line":51,"column":14},"source":"app.js","original":{"line":32,"column":16}},{"generated":{"line":51,"column":20},"source":"app.js","original":{"line":31,"column":4}},{"generated":{"line":52,"column":4},"source":"app.js","original":{"line":33,"column":6},"name":"style"},{"generated":{"line":52,"column":9},"source":"app.js","original":{"line":33,"column":11}},{"generated":{"line":52,"column":11},"source":"app.js","original":{"line":33,"column":13}},{"generated":{"line":53,"column":6},"source":"app.js","original":{"line":34,"column":8}},{"generated":{"line":53,"column":15},"source":"app.js","original":{"line":34,"column":17}},{"generated":{"line":53,"column":16},"source":"app.js","original":{"line":33,"column":13}},{"generated":{"line":54,"column":6},"source":"app.js","original":{"line":35,"column":8}},{"generated":{"line":54,"column":20},"source":"app.js","original":{"line":35,"column":22}},{"generated":{"line":54,"column":26},"source":"app.js","original":{"line":33,"column":13}},{"generated":{"line":55,"column":6},"source":"app.js","original":{"line":36,"column":8}},{"generated":{"line":55,"column":28},"source":"app.js","original":{"line":36,"column":30}},{"generated":{"line":55,"column":34},"source":"app.js","original":{"line":33,"column":13}},{"generated":{"line":56,"column":6},"source":"app.js","original":{"line":37,"column":8}},{"generated":{"line":56,"column":28},"source":"app.js","original":{"line":37,"column":30}},{"generated":{"line":56,"column":38},"source":"app.js","original":{"line":33,"column":13}},{"generated":{"line":57,"column":6},"source":"app.js","original":{"line":38,"column":8}},{"generated":{"line":57,"column":21},"source":"app.js","original":{"line":38,"column":23}},{"generated":{"line":58,"column":4},"source":"app.js","original":{"line":33,"column":13}},{"generated":{"line":59,"column":2},"source":"app.js","original":{"line":31,"column":4}},{"generated":{"line":59,"column":3},"source":"app.js","original":{"line":22,"column":9}},{"generated":{"line":59,"column":4},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":60,"column":2},"source":"app.js","original":{"line":43,"column":2},"name":"layout"},{"generated":{"line":60,"column":8},"source":"app.js","original":{"line":43,"column":8}},{"generated":{"line":60,"column":10},"source":"app.js","original":{"line":43,"column":10}},{"generated":{"line":61,"column":4},"source":"app.js","original":{"line":44,"column":4},"name":"name"},{"generated":{"line":61,"column":8},"source":"app.js","original":{"line":44,"column":8}},{"generated":{"line":61,"column":10},"source":"app.js","original":{"line":44,"column":10}},{"generated":{"line":61,"column":16},"source":"app.js","original":{"line":43,"column":10}},{"generated":{"line":62,"column":4},"source":"app.js","original":{"line":45,"column":4},"name":"rows"},{"generated":{"line":62,"column":8},"source":"app.js","original":{"line":45,"column":8}},{"generated":{"line":62,"column":10},"source":"app.js","original":{"line":45,"column":10}},{"generated":{"line":63,"column":2},"source":"app.js","original":{"line":43,"column":10}},{"generated":{"line":64,"column":0},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":64,"column":44},"source":"app.js","original":{"line":49,"column":13},"name":"undefined"},{"generated":{"line":64,"column":53},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":64,"column":96},"source":"app.js","original":{"line":50,"column":12}},{"generated":{"line":65,"column":2},"source":"app.js","original":{"line":50,"column":14}},{"generated":{"line":66,"column":0},"source":"app.js","original":{"line":50,"column":12}},{"generated":{"line":66,"column":1},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":66,"column":41},"source":"app.js","original":{"line":51,"column":9}},{"generated":{"line":67,"column":2},"source":"app.js","original":{"line":51,"column":11}},{"generated":{"line":68,"column":0},"source":"app.js","original":{"line":51,"column":9}},{"generated":{"line":68,"column":1},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":68,"column":42},"source":"app.js","original":{"line":52,"column":10}},{"generated":{"line":69,"column":2},"source":"app.js","original":{"line":52,"column":12},"name":"name"},{"generated":{"line":69,"column":6},"source":"app.js","original":{"line":52,"column":16}},{"generated":{"line":69,"column":8},"source":"app.js","original":{"line":52,"column":18}},{"generated":{"line":70,"column":2},"source":"app.js","original":{"line":52,"column":25}},{"generated":{"line":72,"column":0},"source":"app.js","original":{"line":52,"column":10}},{"generated":{"line":72,"column":1},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":72,"column":40},"source":"app.js","original":{"line":53,"column":8}},{"generated":{"line":73,"column":2},"source":"app.js","original":{"line":53,"column":10}},{"generated":{"line":74,"column":0},"source":"app.js","original":{"line":53,"column":8}},{"generated":{"line":74,"column":1},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":74,"column":40},"source":"app.js","original":{"line":56,"column":8}},{"generated":{"line":74,"column":41},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":74,"column":79},"source":"app.js","original":{"line":57,"column":7}},{"generated":{"line":75,"column":2},"source":"app.js","original":{"line":57,"column":9},"name":"x"},{"generated":{"line":75,"column":3},"source":"app.js","original":{"line":57,"column":10}},{"generated":{"line":75,"column":5},"source":"app.js","original":{"line":57,"column":12}},{"generated":{"line":75,"column":6},"source":"app.js","original":{"line":57,"column":7}},{"generated":{"line":76,"column":2},"source":"app.js","original":{"line":57,"column":15},"name":"y"},{"generated":{"line":76,"column":3},"source":"app.js","original":{"line":57,"column":16}},{"generated":{"line":76,"column":5},"source":"app.js","original":{"line":57,"column":18}},{"generated":{"line":77,"column":0},"source":"app.js","original":{"line":57,"column":7}},{"generated":{"line":77,"column":1},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":77,"column":43},"source":"app.js","original":{"line":60,"column":11}},{"generated":{"line":77,"column":48},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":77,"column":90},"source":"app.js","original":{"line":61,"column":11}},{"generated":{"line":77,"column":94},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":77,"column":143},"source":"app.js","original":{"line":62,"column":18}},{"generated":{"line":77,"column":147},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":77,"column":200},"source":"app.js","original":{"line":63,"column":22}},{"generated":{"line":77,"column":204},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":77,"column":253},"source":"app.js","original":{"line":64,"column":18}},{"generated":{"line":77,"column":257},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":77,"column":310},"source":"app.js","original":{"line":65,"column":22}},{"generated":{"line":77,"column":314},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":77,"column":368},"source":"app.js","original":{"line":66,"column":23}},{"generated":{"line":77,"column":372},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":77,"column":420},"source":"app.js","original":{"line":67,"column":17}},{"generated":{"line":77,"column":428},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":77,"column":480},"source":"app.js","original":{"line":68,"column":21}},{"generated":{"line":77,"column":481},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":77,"column":535},"source":"app.js","original":{"line":69,"column":23}},{"generated":{"line":77,"column":536},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":77,"column":579},"source":"app.js","original":{"line":70,"column":12}},{"generated":{"line":77,"column":584},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":77,"column":632},"source":"app.js","original":{"line":71,"column":17}},{"generated":{"line":77,"column":637},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":77,"column":687},"source":"app.js","original":{"line":72,"column":19}},{"generated":{"line":77,"column":692},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":77,"column":749},"source":"app.js","original":{"line":73,"column":26}},{"generated":{"line":77,"column":752},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":77,"column":795},"source":"app.js","original":{"line":76,"column":12}},{"generated":{"line":77,"column":800},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":77,"column":847},"source":"app.js","original":{"line":77,"column":16}},{"generated":{"line":77,"column":851},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":77,"column":905},"source":"app.js","original":{"line":78,"column":23}},{"generated":{"line":77,"column":910},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":77,"column":962},"source":"app.js","original":{"line":79,"column":21}},{"generated":{"line":77,"column":967},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":77,"column":1012},"source":"app.js","original":{"line":80,"column":14}},{"generated":{"line":77,"column":1017},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":77,"column":1069},"source":"app.js","original":{"line":81,"column":21}},{"generated":{"line":77,"column":1072},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":77,"column":1123},"source":"app.js","original":{"line":82,"column":20}},{"generated":{"line":77,"column":1124},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":77,"column":1169},"source":"app.js","original":{"line":83,"column":14}},{"generated":{"line":77,"column":1175},"source":"app.js","original":{"line":6,"column":9}},{"generated":{"line":77,"column":1190},"source":"app.js","original":{"line":6,"column":0}},{"generated":{"line":79,"column":9},"source":"app.js","original":{"line":86,"column":15},"name":"draw"},{"generated":{"line":84,"column":69},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":85,"column":4},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":86,"column":4},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":87,"column":6},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":88,"column":8},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":89,"column":10},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":90,"column":12},"source":"app.js","original":{"line":87,"column":2}},{"generated":{"line":91,"column":12},"source":"app.js","original":{"line":88,"column":8},"name":"wsProvider"},{"generated":{"line":91,"column":22},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":91,"column":25},"source":"app.js","original":{"line":88,"column":21}},{"generated":{"line":91,"column":29},"source":"app.js","original":{"line":88,"column":25},"name":"WsProvider"},{"generated":{"line":91,"column":44},"source":"app.js","original":{"line":88,"column":21}},{"generated":{"line":91,"column":45},"source":"app.js","original":{"line":88,"column":36}},{"generated":{"line":91,"column":75},"source":"app.js","original":{"line":88,"column":21}},{"generated":{"line":91,"column":76},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":92,"column":12},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":93,"column":12},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":93,"column":19},"source":"app.js","original":{"line":89,"column":20},"name":"ApiPromise"},{"generated":{"line":93,"column":34},"source":"app.js","original":{"line":89,"column":20}},{"generated":{"line":93,"column":35},"source":"app.js","original":{"line":89,"column":31},"name":"create"},{"generated":{"line":93,"column":41},"source":"app.js","original":{"line":89,"column":20}},{"generated":{"line":93,"column":42},"source":"app.js","original":{"line":89,"column":38}},{"generated":{"line":94,"column":14},"source":"app.js","original":{"line":89,"column":40},"name":"provider"},{"generated":{"line":94,"column":22},"source":"app.js","original":{"line":89,"column":48}},{"generated":{"line":94,"column":24},"source":"app.js","original":{"line":89,"column":50},"name":"wsProvider"},{"generated":{"line":95,"column":12},"source":"app.js","original":{"line":89,"column":38}},{"generated":{"line":95,"column":13},"source":"app.js","original":{"line":89,"column":20}},{"generated":{"line":95,"column":14},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":97,"column":10},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":98,"column":12},"source":"app.js","original":{"line":89,"column":8},"name":"api"},{"generated":{"line":98,"column":15},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":99,"column":12},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":100,"column":12},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":100,"column":19},"source":"app.js","original":{"line":93,"column":16},"name":"api"},{"generated":{"line":100,"column":22},"source":"app.js","original":{"line":93,"column":19}},{"generated":{"line":100,"column":23},"source":"app.js","original":{"line":93,"column":20},"name":"query"},{"generated":{"line":100,"column":28},"source":"app.js","original":{"line":93,"column":16}},{"generated":{"line":100,"column":29},"source":"app.js","original":{"line":93,"column":26},"name":"proxy"},{"generated":{"line":100,"column":34},"source":"app.js","original":{"line":93,"column":16}},{"generated":{"line":100,"column":35},"source":"app.js","original":{"line":93,"column":32},"name":"proxies"},{"generated":{"line":100,"column":42},"source":"app.js","original":{"line":93,"column":16}},{"generated":{"line":100,"column":43},"source":"app.js","original":{"line":93,"column":40},"name":"entries"},{"generated":{"line":100,"column":50},"source":"app.js","original":{"line":93,"column":16}},{"generated":{"line":100,"column":52},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":102,"column":10},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":103,"column":12},"source":"app.js","original":{"line":93,"column":2},"name":"nodes"},{"generated":{"line":103,"column":17},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":104,"column":12},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":105,"column":12},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":105,"column":19},"source":"app.js","original":{"line":94,"column":24},"name":"api"},{"generated":{"line":105,"column":22},"source":"app.js","original":{"line":94,"column":27}},{"generated":{"line":105,"column":23},"source":"app.js","original":{"line":94,"column":28},"name":"query"},{"generated":{"line":105,"column":28},"source":"app.js","original":{"line":94,"column":24}},{"generated":{"line":105,"column":29},"source":"app.js","original":{"line":94,"column":34},"name":"proxy"},{"generated":{"line":105,"column":34},"source":"app.js","original":{"line":94,"column":24}},{"generated":{"line":105,"column":35},"source":"app.js","original":{"line":94,"column":40},"name":"announcements"},{"generated":{"line":105,"column":48},"source":"app.js","original":{"line":94,"column":24}},{"generated":{"line":105,"column":49},"source":"app.js","original":{"line":94,"column":54},"name":"entries"},{"generated":{"line":105,"column":56},"source":"app.js","original":{"line":94,"column":24}},{"generated":{"line":105,"column":58},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":107,"column":10},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":108,"column":12},"source":"app.js","original":{"line":94,"column":2},"name":"proxy_actions"},{"generated":{"line":108,"column":25},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":110,"column":12},"source":"app.js","original":{"line":95,"column":2}},{"generated":{"line":110,"column":17},"source":"app.js","original":{"line":95,"column":6},"name":"node"},{"generated":{"line":110,"column":21},"source":"app.js","original":{"line":95,"column":2}},{"generated":{"line":110,"column":25},"source":"app.js","original":{"line":95,"column":14},"name":"nodes"},{"generated":{"line":110,"column":30},"source":"app.js","original":{"line":95,"column":2}},{"generated":{"line":110,"column":32},"source":"app.js","original":{"line":95,"column":20}},{"generated":{"line":111,"column":14},"source":"app.js","original":{"line":96,"column":4},"name":"node_point"},{"generated":{"line":111,"column":24},"source":"app.js","original":{"line":96,"column":14}},{"generated":{"line":111,"column":27},"source":"app.js","original":{"line":96,"column":17},"name":"nodes"},{"generated":{"line":111,"column":32},"source":"app.js","original":{"line":96,"column":22}},{"generated":{"line":111,"column":33},"source":"app.js","original":{"line":96,"column":23},"name":"node"},{"generated":{"line":111,"column":37},"source":"app.js","original":{"line":96,"column":22}},{"generated":{"line":111,"column":38},"source":"app.js","original":{"line":96,"column":17}},{"generated":{"line":111,"column":39},"source":"app.js","original":{"line":96,"column":29}},{"generated":{"line":111,"column":40},"source":"app.js","original":{"line":96,"column":17}},{"generated":{"line":111,"column":42},"source":"app.js","original":{"line":96,"column":32},"name":"toHuman"},{"generated":{"line":111,"column":49},"source":"app.js","original":{"line":96,"column":17}},{"generated":{"line":111,"column":51},"source":"app.js","original":{"line":96,"column":4}},{"generated":{"line":111,"column":52},"source":"app.js","original":{"line":95,"column":20}},{"generated":{"line":111,"column":53},"source":"app.js","original":{"line":96,"column":42}},{"generated":{"line":113,"column":14},"source":"app.js","original":{"line":97,"column":4},"name":"edges"},{"generated":{"line":113,"column":19},"source":"app.js","original":{"line":97,"column":9}},{"generated":{"line":113,"column":22},"source":"app.js","original":{"line":97,"column":12},"name":"nodes"},{"generated":{"line":113,"column":27},"source":"app.js","original":{"line":97,"column":17}},{"generated":{"line":113,"column":28},"source":"app.js","original":{"line":97,"column":18},"name":"node"},{"generated":{"line":113,"column":32},"source":"app.js","original":{"line":97,"column":17}},{"generated":{"line":113,"column":33},"source":"app.js","original":{"line":97,"column":12}},{"generated":{"line":113,"column":34},"source":"app.js","original":{"line":97,"column":24}},{"generated":{"line":113,"column":35},"source":"app.js","original":{"line":97,"column":12}},{"generated":{"line":113,"column":36},"source":"app.js","original":{"line":97,"column":4}},{"generated":{"line":113,"column":37},"source":"app.js","original":{"line":95,"column":20}},{"generated":{"line":113,"column":38},"source":"app.js","original":{"line":97,"column":27}},{"generated":{"line":115,"column":14},"source":"app.js","original":{"line":99,"column":4},"name":"console"},{"generated":{"line":115,"column":21},"source":"app.js","original":{"line":99,"column":11}},{"generated":{"line":115,"column":22},"source":"app.js","original":{"line":99,"column":12},"name":"log"},{"generated":{"line":115,"column":25},"source":"app.js","original":{"line":99,"column":4}},{"generated":{"line":115,"column":26},"source":"app.js","original":{"line":99,"column":16},"name":"node_point"},{"generated":{"line":115,"column":36},"source":"app.js","original":{"line":99,"column":4}},{"generated":{"line":116,"column":12},"source":"app.js","original":{"line":100,"column":3}},{"generated":{"line":118,"column":10},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":119,"column":10},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":120,"column":12},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":121,"column":8},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":122,"column":6},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":123,"column":4},"source":"app.js","original":{"line":86,"column":0}},{"generated":{"line":124,"column":2},"source":"app.js","original":{"line":86,"column":0}}],"sources":{"app.js":"//Imports\r\nimport { ApiPromise, WsProvider } from '@polkadot/api';\r\n\r\nimport cytoscape from 'cytoscape';\r\n\r\nvar cy = cytoscape({\r\n\r\n  container: document.getElementById('viewport'), // container to render in\r\n\r\n  elements: [ // list of graph elements to start with\r\n    { // node a\r\n      data: { id: 'a' }\r\n    },\r\n    { // node b\r\n      data: { id: 'b' }\r\n    },\r\n    { // edge ab\r\n      data: { id: 'ab', source: 'a', target: 'b' }\r\n    }\r\n  ],\r\n\r\n  style: [ // the stylesheet for the graph\r\n    {\r\n      selector: 'node',\r\n      style: {\r\n        'background-color': '#666',\r\n        'label': 'data(id)'\r\n      }\r\n    },\r\n\r\n    {\r\n      selector: 'edge',\r\n      style: {\r\n        'width': 3,\r\n        'line-color': '#ccc',\r\n        'target-arrow-color': '#ccc',\r\n        'target-arrow-shape': 'triangle',\r\n        'curve-style': 'bezier'\r\n      }\r\n    }\r\n  ],\r\n\r\n  layout: {\r\n    name: 'grid',\r\n    rows: 1\r\n  },\r\n\r\n  // very commonly used options\r\n  container: undefined,\r\n  elements: [ /* ... */ ],\r\n  style: [ /* ... */ ],\r\n  layout: { name: 'grid' /* , ... */ },\r\n  data: { /* ... */ },\r\n\r\n  // initial viewport state:\r\n  zoom: 1,\r\n  pan: { x: 0, y: 0 },\r\n\r\n  // interaction options:\r\n  minZoom: 1e-50,\r\n  maxZoom: 1e50,\r\n  zoomingEnabled: true,\r\n  userZoomingEnabled: true,\r\n  panningEnabled: true,\r\n  userPanningEnabled: true,\r\n  boxSelectionEnabled: true,\r\n  selectionType: 'single',\r\n  touchTapThreshold: 8,\r\n  desktopTapThreshold: 4,\r\n  autolock: false,\r\n  autoungrabify: false,\r\n  autounselectify: false,\r\n  multiClickDebounceTime: 250,\r\n\r\n  // rendering options:\r\n  headless: false,\r\n  styleEnabled: true,\r\n  hideEdgesOnViewport: false,\r\n  textureOnViewport: false,\r\n  motionBlur: false,\r\n  motionBlurOpacity: 0.2,\r\n  wheelSensitivity: 1,\r\n  pixelRatio: 'auto'\r\n});\r\n\r\nasync function draw() {\r\n  // Construct\r\n  const wsProvider = new WsProvider('wss://kusama-rpc.polkadot.io');\r\n  const api = await ApiPromise.create({ provider: wsProvider });\r\n\r\n  // Do all of this in a subscription\r\n\r\n  nodes = await api.query.proxy.proxies.entries()\r\n  proxy_actions = await api.query.proxy.announcements.entries()\r\n  for(node in nodes){\r\n    node_point = nodes[node][0].toHuman() //nodes in graph\r\n    edges = nodes[node][1] //node edges/graph connections\r\n    \r\n    console.log(node_point)\r\n  }\r\n}"},"lineCount":null}},"error":null,"hash":"5e3ac03ef24566884d7df8c2b2eab849","cacheData":{"env":{}}}