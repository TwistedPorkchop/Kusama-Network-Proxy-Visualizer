{"dependencies":[{"name":"./toU8a.js","loc":{"line":3,"column":25}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.u8aCmp = u8aCmp;\n\nvar _toU8a = require(\"./toU8a.js\");\n\n/**\n * @name u8aCmp\n * @summary Compares two Uint8Arrays for sorting.\n * @description\n * For `UInt8Array` (or hex string) input values returning -1, 0 or +1\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aCmp } from '@polkadot/util';\n *\n * u8aCmp(new Uint8Array([0x67, 0x65]), new Uint8Array([0x68, 0x65])); // -1\n * u8aCmp(new Uint8Array([0x68, 0x65]), new Uint8Array([0x68, 0x65])); // 0\n * u8aCmp(new Uint8Array([0x69, 0x65]), new Uint8Array([0x68, 0x65])); // +1\n * ```\n */\n\nfunction u8aCmp(a, b) {\n  const u8aa = (0, _toU8a.u8aToU8a)(a);\n  const u8ab = (0, _toU8a.u8aToU8a)(b);\n  let i = 0;\n\n  while (true) {\n    const overA = i >= u8aa.length;\n    const overB = i >= u8ab.length;\n\n    if (overA && overB) {\n      // both ends reached\n      return 0;\n    } else if (overA) {\n      // a has no more data, b has data\n      return -1;\n    } else if (overB) {\n      // b has no more data, a has data\n      return 1;\n    } else if (u8aa[i] !== u8ab[i]) {\n      // the number in this index doesn't match\n      // (we don't use u8aa[i] - u8ab[i] since that doesn't match with localeCompare)\n      return u8aa[i] > u8ab[i] ? 1 : -1;\n    }\n\n    i++;\n  }\n} // Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0"},"hash":"7e084e3c3a63bc7169734a383997e2b8"}