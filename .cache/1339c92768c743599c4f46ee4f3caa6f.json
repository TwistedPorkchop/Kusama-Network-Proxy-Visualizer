{"dependencies":[{"name":"@polkadot/util","loc":{"line":3,"column":54}},{"name":"../../bn.js","loc":{"line":4,"column":58}},{"name":"../../hmac/index.js","loc":{"line":5,"column":29}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ledgerDerivePrivate = ledgerDerivePrivate;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _bn = require(\"../../bn.js\");\n\nvar _index = require(\"../../hmac/index.js\");\n\n// performs hard-only derivation on the xprv\n\nfunction ledgerDerivePrivate(xprv, index) {\n  const kl = xprv.subarray(0, 32);\n  const kr = xprv.subarray(32, 64);\n  const cc = xprv.subarray(64, 96);\n  const data = (0, _util.u8aConcat)([0], kl, kr, (0, _util.bnToU8a)(index, _bn.BN_LE_32_OPTS));\n  const z = (0, _index.hmacShaAsU8a)(cc, data, 512);\n  data[0] = 0x01;\n  return (0, _util.u8aConcat)((0, _util.bnToU8a)((0, _util.u8aToBn)(kl, _bn.BN_LE_OPTS).iadd((0, _util.u8aToBn)(z.subarray(0, 28), _bn.BN_LE_OPTS).imul(_util.BN_EIGHT)), _bn.BN_LE_512_OPTS).subarray(0, 32), (0, _util.bnToU8a)((0, _util.u8aToBn)(kr, _bn.BN_LE_OPTS).iadd((0, _util.u8aToBn)(z.subarray(32, 64), _bn.BN_LE_OPTS)), _bn.BN_LE_512_OPTS).subarray(0, 32), (0, _index.hmacShaAsU8a)(cc, data, 512).subarray(32, 64));\n} // Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0"},"hash":"ff25699a70749f8615f7ad069544cd42"}