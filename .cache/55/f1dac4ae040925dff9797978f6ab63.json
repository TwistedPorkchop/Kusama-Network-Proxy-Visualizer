{"id":"node_modules/@polkadot/util/bn/toHex.js","dependencies":[{"name":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\package.json","includedInParent":true,"mtime":1657829461884},{"name":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util\\package.json","includedInParent":true,"mtime":1657539547526},{"name":"../is/number.js","loc":{"line":3,"column":25,"index":125},"parent":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util\\bn\\toHex.js","resolved":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util\\is\\number.js"},{"name":"../object/spread.js","loc":{"line":4,"column":29,"index":173},"parent":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util\\bn\\toHex.js","resolved":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util\\object\\spread.js"},{"name":"../u8a/index.js","loc":{"line":5,"column":25,"index":221},"parent":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util\\bn\\toHex.js","resolved":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util\\u8a\\index.js"},{"name":"./toU8a.js","loc":{"line":6,"column":24,"index":264},"parent":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util\\bn\\toHex.js","resolved":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util\\bn\\toU8a.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bnToHex = bnToHex;\n\nvar _number = require(\"../is/number.js\");\n\nvar _spread = require(\"../object/spread.js\");\n\nvar _index = require(\"../u8a/index.js\");\n\nvar _toU8a = require(\"./toU8a.js\");\n\n// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nvar ZERO_STR = '0x00';\nvar DEFAULT_OPTS = {\n  bitLength: -1,\n  isLe: false,\n  isNegative: false\n};\n/**\n * @name bnToHex\n * @summary Creates a hex value from a BN.js bignumber object.\n * @description\n * `null` inputs returns a `0x` result, BN values return the actual value as a `0x` prefixed hex value. Anything that is not a BN object throws an error. With `bitLength` set, it fixes the number to the specified length.\n * @example\n * <BR>\n *\n * ```javascript\n * import BN from 'bn.js';\n * import { bnToHex } from '@polkadot/util';\n *\n * bnToHex(new BN(0x123456)); // => '0x123456'\n * ```\n */\n\n/** @deprecated Use bnToHex (value?: ExtToBn | BN | bigint | number | null, options?: NumberOptions) */\n\nfunction bnToHex(value) {\n  var arg1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTS;\n  var arg2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return !value ? ZERO_STR : (0, _index.u8aToHex)((0, _toU8a.bnToU8a)(value, (0, _spread.objectSpread)( // We spread here, the default for hex values is BE (JSONRPC via substrate)\n  {\n    isLe: false,\n    isNegative: false\n  }, (0, _number.isNumber)(arg1) ? {\n    bitLength: arg1,\n    isLe: arg2\n  } : arg1)));\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":5,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":6,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":1,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":2,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":7,"column":0}},{"generated":{"line":18,"column":4},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":7,"column":6},"name":"ZERO_STR"},{"generated":{"line":18,"column":12},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":7,"column":14}},{"generated":{"line":18,"column":15},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":7,"column":17}},{"generated":{"line":18,"column":21},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":7,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":8,"column":0}},{"generated":{"line":19,"column":4},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":8,"column":6},"name":"DEFAULT_OPTS"},{"generated":{"line":19,"column":16},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":8,"column":18}},{"generated":{"line":19,"column":19},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":8,"column":21}},{"generated":{"line":20,"column":2},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":9,"column":2},"name":"bitLength"},{"generated":{"line":20,"column":11},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":9,"column":11}},{"generated":{"line":20,"column":13},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":9,"column":13}},{"generated":{"line":20,"column":14},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":9,"column":14}},{"generated":{"line":20,"column":15},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":8,"column":21}},{"generated":{"line":21,"column":2},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":10,"column":2},"name":"isLe"},{"generated":{"line":21,"column":6},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":10,"column":6}},{"generated":{"line":21,"column":8},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":10,"column":8}},{"generated":{"line":21,"column":13},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":8,"column":21}},{"generated":{"line":22,"column":2},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":11,"column":2},"name":"isNegative"},{"generated":{"line":22,"column":12},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":11,"column":12}},{"generated":{"line":22,"column":14},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":11,"column":14}},{"generated":{"line":23,"column":0},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":8,"column":21}},{"generated":{"line":23,"column":1},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":8,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":13,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":14,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":15,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":16,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":17,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":18,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":19,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":20,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":21,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":22,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":23,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":24,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":25,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":26,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":27,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":29,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":30,"column":0}},{"generated":{"line":42,"column":9},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":30,"column":9},"name":"bnToHex"},{"generated":{"line":42,"column":16},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":30,"column":0}},{"generated":{"line":42,"column":17},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":30,"column":17},"name":"value"},{"generated":{"line":42,"column":22},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":30,"column":0}},{"generated":{"line":42,"column":24},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":30,"column":59}},{"generated":{"line":43,"column":2},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":30,"column":59}},{"generated":{"line":43,"column":6},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":30,"column":24},"name":"arg1"},{"generated":{"line":43,"column":10},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":30,"column":59}},{"generated":{"line":43,"column":81},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":30,"column":31},"name":"DEFAULT_OPTS"},{"generated":{"line":43,"column":93},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":30,"column":59}},{"generated":{"line":44,"column":2},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":30,"column":59}},{"generated":{"line":44,"column":6},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":30,"column":45},"name":"arg2"},{"generated":{"line":44,"column":10},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":30,"column":59}},{"generated":{"line":44,"column":81},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":30,"column":52}},{"generated":{"line":44,"column":86},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":30,"column":59}},{"generated":{"line":45,"column":2},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":31,"column":2}},{"generated":{"line":45,"column":9},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":31,"column":9}},{"generated":{"line":45,"column":10},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":31,"column":10},"name":"value"},{"generated":{"line":45,"column":15},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":31,"column":9}},{"generated":{"line":45,"column":18},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":31,"column":18},"name":"ZERO_STR"},{"generated":{"line":45,"column":26},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":31,"column":9}},{"generated":{"line":45,"column":29},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":31,"column":29}},{"generated":{"line":45,"column":33},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":31,"column":29},"name":"u8aToHex"},{"generated":{"line":45,"column":48},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":31,"column":29}},{"generated":{"line":45,"column":50},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":31,"column":38}},{"generated":{"line":45,"column":54},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":31,"column":38},"name":"bnToU8a"},{"generated":{"line":45,"column":68},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":31,"column":38}},{"generated":{"line":45,"column":70},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":31,"column":46},"name":"value"},{"generated":{"line":45,"column":75},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":31,"column":38}},{"generated":{"line":45,"column":77},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":31,"column":53}},{"generated":{"line":45,"column":81},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":31,"column":53},"name":"objectSpread"},{"generated":{"line":45,"column":101},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":31,"column":53}},{"generated":{"line":45,"column":104},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":31,"column":67}},{"generated":{"line":46,"column":2},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":32,"column":2}},{"generated":{"line":47,"column":4},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":33,"column":4},"name":"isLe"},{"generated":{"line":47,"column":8},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":33,"column":8}},{"generated":{"line":47,"column":10},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":33,"column":10}},{"generated":{"line":47,"column":15},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":32,"column":2}},{"generated":{"line":48,"column":4},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":34,"column":4},"name":"isNegative"},{"generated":{"line":48,"column":14},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":34,"column":14}},{"generated":{"line":48,"column":16},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":34,"column":16}},{"generated":{"line":49,"column":2},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":32,"column":2}},{"generated":{"line":49,"column":3},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":31,"column":53}},{"generated":{"line":49,"column":5},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":35,"column":5}},{"generated":{"line":49,"column":9},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":35,"column":5},"name":"isNumber"},{"generated":{"line":49,"column":25},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":35,"column":5}},{"generated":{"line":49,"column":27},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":35,"column":14},"name":"arg1"},{"generated":{"line":49,"column":31},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":35,"column":5}},{"generated":{"line":49,"column":35},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":35,"column":22}},{"generated":{"line":50,"column":4},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":36,"column":4},"name":"bitLength"},{"generated":{"line":50,"column":13},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":36,"column":13}},{"generated":{"line":50,"column":15},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":36,"column":15},"name":"arg1"},{"generated":{"line":50,"column":19},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":35,"column":22}},{"generated":{"line":51,"column":4},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":37,"column":4},"name":"isLe"},{"generated":{"line":51,"column":8},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":37,"column":8}},{"generated":{"line":51,"column":10},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":37,"column":10},"name":"arg2"},{"generated":{"line":52,"column":2},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":35,"column":22}},{"generated":{"line":52,"column":3},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":35,"column":5}},{"generated":{"line":52,"column":6},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":38,"column":6},"name":"arg1"},{"generated":{"line":52,"column":10},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":31,"column":53}},{"generated":{"line":52,"column":11},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":31,"column":38}},{"generated":{"line":52,"column":12},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":31,"column":29}},{"generated":{"line":52,"column":13},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":31,"column":2}},{"generated":{"line":53,"column":0},"source":"node_modules/@polkadot/util/bn/toHex.js","original":{"line":39,"column":1}}],"sources":{"node_modules/@polkadot/util/bn/toHex.js":"// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isNumber } from \"../is/number.js\";\nimport { objectSpread } from \"../object/spread.js\";\nimport { u8aToHex } from \"../u8a/index.js\";\nimport { bnToU8a } from \"./toU8a.js\";\nconst ZERO_STR = '0x00';\nconst DEFAULT_OPTS = {\n  bitLength: -1,\n  isLe: false,\n  isNegative: false\n};\n/**\n * @name bnToHex\n * @summary Creates a hex value from a BN.js bignumber object.\n * @description\n * `null` inputs returns a `0x` result, BN values return the actual value as a `0x` prefixed hex value. Anything that is not a BN object throws an error. With `bitLength` set, it fixes the number to the specified length.\n * @example\n * <BR>\n *\n * ```javascript\n * import BN from 'bn.js';\n * import { bnToHex } from '@polkadot/util';\n *\n * bnToHex(new BN(0x123456)); // => '0x123456'\n * ```\n */\n\n/** @deprecated Use bnToHex (value?: ExtToBn | BN | bigint | number | null, options?: NumberOptions) */\nfunction bnToHex(value, arg1 = DEFAULT_OPTS, arg2 = false) {\n  return !value ? ZERO_STR : u8aToHex(bnToU8a(value, objectSpread( // We spread here, the default for hex values is BE (JSONRPC via substrate)\n  {\n    isLe: false,\n    isNegative: false\n  }, isNumber(arg1) ? {\n    bitLength: arg1,\n    isLe: arg2\n  } : arg1)));\n}\n\nexport { bnToHex };"},"lineCount":null}},"error":null,"hash":"1daac94cd7ebbeffe7dfcab472f5c8b1","cacheData":{"env":{}}}