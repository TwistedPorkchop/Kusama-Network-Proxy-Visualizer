{"dependencies":[{"name":"@polkadot/util","loc":{"line":3,"column":64}},{"name":"../blake2/asU8a.js","loc":{"line":4,"column":28}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.secp256k1DeriveHard = secp256k1DeriveHard;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _asU8a = require(\"../blake2/asU8a.js\");\n\n// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst HDKD = (0, _util.compactAddLength)((0, _util.stringToU8a)('Secp256k1HDKD'));\nfunction secp256k1DeriveHard(seed, chainCode) {\n  if (!(0, _util.isU8a)(chainCode) || chainCode.length !== 32) {\n    throw new Error('Invalid chainCode passed to derive');\n  } // NOTE This is specific to the Substrate HDD derivation, so always use the blake2 hasher\n\n\n  return (0, _asU8a.blake2AsU8a)((0, _util.u8aConcat)(HDKD, seed, chainCode), 256);\n}"},"hash":"f8acd4a1cb04c3e77652655ae3bf5c10"}