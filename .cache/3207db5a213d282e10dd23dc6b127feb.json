{"dependencies":[{"name":"../u8a/toU8a.js","loc":{"line":3,"column":25}},{"name":"./hex.js","loc":{"line":4,"column":22}},{"name":"./string.js","loc":{"line":5,"column":25}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isAscii = isAscii;\n\nvar _toU8a = require(\"../u8a/toU8a.js\");\n\nvar _hex = require(\"./hex.js\");\n\nvar _string = require(\"./string.js\");\n\n/** @internal */\n\nfunction isAsciiStr(str) {\n  const count = str.length;\n\n  for (let i = 0; i < count; i++) {\n    const b = str.charCodeAt(i); // check is inlined here, it is faster than making a call\n\n    if (!(b < 127 && (b >= 32 || b === 10 || b === 9 || b === 13))) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/** @internal */\n\n// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction isAsciiBytes(u8a) {\n  const count = u8a.length;\n\n  for (let i = 0; i < count; i++) {\n    const b = u8a[i]; // check is inlined here, it is faster than making a call\n\n    if (!(b < 127 && (b >= 32 || b === 10 || b === 9 || b === 13))) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @name isAscii\n * @summary Tests if the input is printable ASCII\n * @description\n * Checks to see if the input string or Uint8Array is printable ASCII, 32-127 + formatters\n */\n\nfunction isAscii(value) {\n  return (0, _string.isString)(value) ? (0, _hex.isHex)(value) ? isAsciiBytes((0, _toU8a.u8aToU8a)(value)) : isAsciiStr(value) : value ? isAsciiBytes(value) : false;\n}"},"hash":"59a2b9543bdbe8a4cd17082c31055918"}