{"dependencies":[{"name":"@polkadot/util","loc":{"line":3,"column":23}},{"name":"./DeriveJunction.js","loc":{"line":4,"column":31}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.keyExtractPath = keyExtractPath;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _DeriveJunction = require(\"./DeriveJunction.js\");\n\n// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst RE_JUNCTION = /\\/(\\/?)([^/]+)/g;\n\n/**\n * @description Extract derivation junctions from the supplied path\n */\nfunction keyExtractPath(derivePath) {\n  const parts = derivePath.match(RE_JUNCTION);\n  const path = [];\n  let constructed = '';\n\n  if (parts) {\n    constructed = parts.join('');\n\n    for (const p of parts) {\n      path.push(_DeriveJunction.DeriveJunction.from(p.substring(1)));\n    }\n  }\n\n  (0, _util.assert)(constructed === derivePath, () => `Re-constructed path \"${constructed}\" does not match input`);\n  return {\n    parts,\n    path\n  };\n}"},"hash":"5b28ab6c112c67d6c7eedc77a5cbb2bb"}