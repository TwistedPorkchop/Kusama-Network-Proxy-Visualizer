{"id":"node_modules/@polkadot/types-codec/extended/Linkage.js","dependencies":[{"name":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\package.json","includedInParent":true,"mtime":1657570398707},{"name":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\types-codec\\package.json","includedInParent":true,"mtime":1657539547205},{"name":"../base/Option.js","loc":{"line":3,"column":23,"index":130},"parent":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\types-codec\\extended\\Linkage.js","resolved":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\types-codec\\base\\Option.js"},{"name":"../base/Tuple.js","loc":{"line":4,"column":22,"index":173},"parent":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\types-codec\\extended\\Linkage.js","resolved":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\types-codec\\base\\Tuple.js"},{"name":"../base/Vec.js","loc":{"line":5,"column":20,"index":213},"parent":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\types-codec\\extended\\Linkage.js","resolved":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\types-codec\\base\\Vec.js"},{"name":"../native/Struct.js","loc":{"line":6,"column":23,"index":254},"parent":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\types-codec\\extended\\Linkage.js","resolved":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\types-codec\\native\\Struct.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LinkageResult = exports.Linkage = void 0;\n\nvar _Option = require(\"../base/Option.js\");\n\nvar _Tuple2 = require(\"../base/Tuple.js\");\n\nvar _Vec = require(\"../base/Vec.js\");\n\nvar _Struct2 = require(\"../native/Struct.js\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar EMPTY = new Uint8Array();\n/**\n * @name Linkage\n * @description The wrapper for the result from a LinkedMap\n */\n\nvar Linkage = /*#__PURE__*/function (_Struct) {\n  _inherits(Linkage, _Struct);\n\n  var _super = _createSuper(Linkage);\n\n  function Linkage(registry, Type, value) {\n    _classCallCheck(this, Linkage);\n\n    return _super.call(this, registry, {\n      previous: _Option.Option.with(Type),\n      // eslint-disable-next-line sort-keys\n      next: _Option.Option.with(Type)\n    }, value);\n  }\n\n  _createClass(Linkage, [{\n    key: \"previous\",\n    get: function get() {\n      return this.get('previous');\n    }\n  }, {\n    key: \"next\",\n    get: function get() {\n      return this.get('next');\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n\n  }, {\n    key: \"toRawType\",\n    value: function toRawType() {\n      return \"Linkage<\".concat(this.next.toRawType(true), \">\");\n    }\n    /**\n     * @description Custom toU8a which with bare mode does not return the linkage if empty\n     */\n\n  }, {\n    key: \"toU8a\",\n    value: function toU8a() {\n      // As part of a storage query (where these appear), in the case of empty, the values\n      // are NOT populated by the node - follow the same logic, leaving it empty\n      return this.isEmpty ? EMPTY : _get(_getPrototypeOf(Linkage.prototype), \"toU8a\", this).call(this);\n    }\n  }], [{\n    key: \"withKey\",\n    value: function withKey(Type) {\n      return /*#__PURE__*/function (_Linkage) {\n        _inherits(_class, _Linkage);\n\n        var _super2 = _createSuper(_class);\n\n        function _class(registry, value) {\n          _classCallCheck(this, _class);\n\n          return _super2.call(this, registry, Type, value);\n        }\n\n        return _createClass(_class);\n      }(Linkage);\n    }\n  }]);\n\n  return Linkage;\n}(_Struct2.Struct);\n/**\n * @name LinkageResult\n * @description A Linkage keys/Values tuple\n */\n\n\nexports.Linkage = Linkage;\n\nvar LinkageResult = /*#__PURE__*/function (_Tuple) {\n  _inherits(LinkageResult, _Tuple);\n\n  var _super3 = _createSuper(LinkageResult);\n\n  function LinkageResult(registry, _ref, _ref2) {\n    var _ref3 = _slicedToArray(_ref, 2),\n        TypeKey = _ref3[0],\n        keys = _ref3[1];\n\n    var _ref4 = _slicedToArray(_ref2, 2),\n        TypeValue = _ref4[0],\n        values = _ref4[1];\n\n    _classCallCheck(this, LinkageResult);\n\n    return _super3.call(this, registry, {\n      Keys: _Vec.Vec.with(TypeKey),\n      Values: _Vec.Vec.with(TypeValue)\n    }, [keys, values]);\n  }\n\n  return _createClass(LinkageResult);\n}(_Tuple2.Tuple);\n\nexports.LinkageResult = LinkageResult;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":5,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":6,"column":0}},{"generated":{"line":54,"column":0},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":7,"column":0}},{"generated":{"line":54,"column":4},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":7,"column":6},"name":"EMPTY"},{"generated":{"line":54,"column":9},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":7,"column":11}},{"generated":{"line":54,"column":12},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":7,"column":14}},{"generated":{"line":54,"column":16},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":7,"column":18},"name":"Uint8Array"},{"generated":{"line":54,"column":26},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":7,"column":14}},{"generated":{"line":54,"column":28},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":7,"column":0}},{"generated":{"line":55,"column":0},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":8,"column":0}},{"generated":{"line":56,"column":0},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":9,"column":0}},{"generated":{"line":57,"column":0},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":10,"column":0}},{"generated":{"line":58,"column":0},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":11,"column":0}},{"generated":{"line":60,"column":4},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":13,"column":13},"name":"Linkage"},{"generated":{"line":65,"column":2},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":14,"column":2}},{"generated":{"line":65,"column":19},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":14,"column":14},"name":"registry"},{"generated":{"line":65,"column":27},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":14,"column":2}},{"generated":{"line":65,"column":29},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":14,"column":24},"name":"Type"},{"generated":{"line":65,"column":33},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":14,"column":2}},{"generated":{"line":65,"column":35},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":14,"column":30},"name":"value"},{"generated":{"line":65,"column":40},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":14,"column":2}},{"generated":{"line":65,"column":42},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":14,"column":37}},{"generated":{"line":66,"column":4},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":14,"column":37}},{"generated":{"line":68,"column":4},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":14,"column":37}},{"generated":{"line":68,"column":29},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":15,"column":10},"name":"registry"},{"generated":{"line":68,"column":37},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":14,"column":37}},{"generated":{"line":68,"column":39},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":15,"column":20}},{"generated":{"line":69,"column":6},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":16,"column":6},"name":"previous"},{"generated":{"line":69,"column":14},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":16,"column":14}},{"generated":{"line":69,"column":16},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":16,"column":16},"name":"Option"},{"generated":{"line":69,"column":30},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":16,"column":16}},{"generated":{"line":69,"column":31},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":16,"column":23},"name":"with"},{"generated":{"line":69,"column":35},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":16,"column":16}},{"generated":{"line":69,"column":36},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":16,"column":28},"name":"Type"},{"generated":{"line":69,"column":40},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":16,"column":16}},{"generated":{"line":69,"column":41},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":15,"column":20}},{"generated":{"line":70,"column":6},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":17,"column":6}},{"generated":{"line":71,"column":6},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":18,"column":6},"name":"next"},{"generated":{"line":71,"column":10},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":18,"column":10}},{"generated":{"line":71,"column":12},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":18,"column":12},"name":"Option"},{"generated":{"line":71,"column":26},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":18,"column":12}},{"generated":{"line":71,"column":27},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":18,"column":19},"name":"with"},{"generated":{"line":71,"column":31},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":18,"column":12}},{"generated":{"line":71,"column":32},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":18,"column":24},"name":"Type"},{"generated":{"line":71,"column":36},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":18,"column":12}},{"generated":{"line":72,"column":4},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":15,"column":20}},{"generated":{"line":72,"column":5},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":14,"column":37}},{"generated":{"line":72,"column":7},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":19,"column":7},"name":"value"},{"generated":{"line":72,"column":12},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":14,"column":37}},{"generated":{"line":73,"column":2},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":20,"column":3}},{"generated":{"line":77,"column":9},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":31,"column":2}},{"generated":{"line":77,"column":24},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":31,"column":17}},{"generated":{"line":78,"column":6},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":32,"column":4}},{"generated":{"line":78,"column":13},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":32,"column":11}},{"generated":{"line":78,"column":18},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":32,"column":16},"name":"get"},{"generated":{"line":78,"column":21},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":32,"column":11}},{"generated":{"line":78,"column":22},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":32,"column":20}},{"generated":{"line":78,"column":32},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":32,"column":11}},{"generated":{"line":78,"column":33},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":32,"column":4}},{"generated":{"line":79,"column":4},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":33,"column":3}},{"generated":{"line":82,"column":9},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":35,"column":2}},{"generated":{"line":82,"column":24},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":35,"column":13}},{"generated":{"line":83,"column":6},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":36,"column":4}},{"generated":{"line":83,"column":13},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":36,"column":11}},{"generated":{"line":83,"column":18},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":36,"column":16},"name":"get"},{"generated":{"line":83,"column":21},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":36,"column":11}},{"generated":{"line":83,"column":22},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":36,"column":20}},{"generated":{"line":83,"column":28},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":36,"column":11}},{"generated":{"line":83,"column":29},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":36,"column":4}},{"generated":{"line":84,"column":4},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":37,"column":3}},{"generated":{"line":85,"column":4},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":38,"column":2}},{"generated":{"line":86,"column":0},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":39,"column":0}},{"generated":{"line":87,"column":0},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":40,"column":0}},{"generated":{"line":91,"column":11},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":43,"column":2}},{"generated":{"line":91,"column":32},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":43,"column":14}},{"generated":{"line":92,"column":6},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":44,"column":4}},{"generated":{"line":92,"column":31},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":44,"column":22}},{"generated":{"line":92,"column":36},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":44,"column":27},"name":"next"},{"generated":{"line":92,"column":40},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":44,"column":22}},{"generated":{"line":92,"column":41},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":44,"column":32},"name":"toRawType"},{"generated":{"line":92,"column":50},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":44,"column":22}},{"generated":{"line":92,"column":51},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":44,"column":42}},{"generated":{"line":92,"column":55},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":44,"column":22}},{"generated":{"line":92,"column":56},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":44,"column":4}},{"generated":{"line":93,"column":4},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":45,"column":3}},{"generated":{"line":94,"column":4},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":46,"column":2}},{"generated":{"line":95,"column":0},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":47,"column":0}},{"generated":{"line":96,"column":0},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":48,"column":0}},{"generated":{"line":100,"column":11},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":51,"column":2}},{"generated":{"line":100,"column":28},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":51,"column":10}},{"generated":{"line":101,"column":6},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":52,"column":4}},{"generated":{"line":102,"column":6},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":53,"column":4}},{"generated":{"line":103,"column":6},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":54,"column":4}},{"generated":{"line":103,"column":13},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":54,"column":11}},{"generated":{"line":103,"column":18},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":54,"column":16},"name":"isEmpty"},{"generated":{"line":103,"column":25},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":54,"column":11}},{"generated":{"line":103,"column":28},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":54,"column":26},"name":"EMPTY"},{"generated":{"line":103,"column":33},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":54,"column":11}},{"generated":{"line":103,"column":102},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":54,"column":4}},{"generated":{"line":104,"column":4},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":55,"column":3}},{"generated":{"line":107,"column":11},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":22,"column":2}},{"generated":{"line":107,"column":28},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":22,"column":17},"name":"Type"},{"generated":{"line":107,"column":32},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":22,"column":2}},{"generated":{"line":107,"column":34},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":22,"column":23}},{"generated":{"line":108,"column":6},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":23,"column":4}},{"generated":{"line":109,"column":8},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":23,"column":4}},{"generated":{"line":111,"column":8},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":23,"column":4}},{"generated":{"line":113,"column":8},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":24,"column":6}},{"generated":{"line":113,"column":24},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":24,"column":18},"name":"registry"},{"generated":{"line":113,"column":32},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":24,"column":6}},{"generated":{"line":113,"column":34},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":24,"column":28},"name":"value"},{"generated":{"line":113,"column":39},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":24,"column":6}},{"generated":{"line":113,"column":41},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":24,"column":35}},{"generated":{"line":114,"column":10},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":24,"column":35}},{"generated":{"line":116,"column":10},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":24,"column":35}},{"generated":{"line":116,"column":36},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":25,"column":14},"name":"registry"},{"generated":{"line":116,"column":44},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":24,"column":35}},{"generated":{"line":116,"column":46},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":25,"column":24},"name":"Type"},{"generated":{"line":116,"column":50},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":24,"column":35}},{"generated":{"line":116,"column":52},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":25,"column":30},"name":"value"},{"generated":{"line":116,"column":57},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":24,"column":35}},{"generated":{"line":117,"column":8},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":26,"column":7}},{"generated":{"line":119,"column":8},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":23,"column":4}},{"generated":{"line":120,"column":6},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":23,"column":4}},{"generated":{"line":120,"column":8},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":23,"column":25},"name":"Linkage"},{"generated":{"line":120,"column":15},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":23,"column":4}},{"generated":{"line":121,"column":4},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":29,"column":3}},{"generated":{"line":125,"column":2},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":13,"column":29},"name":"Struct"},{"generated":{"line":126,"column":0},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":58,"column":0}},{"generated":{"line":127,"column":0},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":59,"column":0}},{"generated":{"line":128,"column":0},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":60,"column":0}},{"generated":{"line":129,"column":0},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":61,"column":0}},{"generated":{"line":134,"column":4},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":63,"column":13},"name":"LinkageResult"},{"generated":{"line":139,"column":2},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":64,"column":2}},{"generated":{"line":139,"column":25},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":64,"column":14},"name":"registry"},{"generated":{"line":139,"column":33},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":64,"column":2}},{"generated":{"line":139,"column":48},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":64,"column":62}},{"generated":{"line":140,"column":4},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":64,"column":62}},{"generated":{"line":141,"column":4},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":64,"column":62}},{"generated":{"line":141,"column":8},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":64,"column":25},"name":"TypeKey"},{"generated":{"line":141,"column":15},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":64,"column":62}},{"generated":{"line":142,"column":4},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":64,"column":62}},{"generated":{"line":142,"column":8},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":64,"column":34},"name":"keys"},{"generated":{"line":142,"column":12},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":64,"column":62}},{"generated":{"line":144,"column":4},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":64,"column":62}},{"generated":{"line":145,"column":4},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":64,"column":62}},{"generated":{"line":145,"column":8},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":64,"column":42},"name":"TypeValue"},{"generated":{"line":145,"column":17},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":64,"column":62}},{"generated":{"line":146,"column":4},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":64,"column":62}},{"generated":{"line":146,"column":8},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":64,"column":53},"name":"values"},{"generated":{"line":146,"column":14},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":64,"column":62}},{"generated":{"line":148,"column":4},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":64,"column":62}},{"generated":{"line":150,"column":4},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":64,"column":62}},{"generated":{"line":150,"column":30},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":65,"column":10},"name":"registry"},{"generated":{"line":150,"column":38},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":64,"column":62}},{"generated":{"line":150,"column":40},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":65,"column":20}},{"generated":{"line":151,"column":6},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":66,"column":6},"name":"Keys"},{"generated":{"line":151,"column":10},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":66,"column":10}},{"generated":{"line":151,"column":12},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":66,"column":12},"name":"Vec"},{"generated":{"line":151,"column":20},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":66,"column":12}},{"generated":{"line":151,"column":21},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":66,"column":16},"name":"with"},{"generated":{"line":151,"column":25},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":66,"column":12}},{"generated":{"line":151,"column":26},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":66,"column":21},"name":"TypeKey"},{"generated":{"line":151,"column":33},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":66,"column":12}},{"generated":{"line":151,"column":34},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":65,"column":20}},{"generated":{"line":152,"column":6},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":67,"column":6},"name":"Values"},{"generated":{"line":152,"column":12},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":67,"column":12}},{"generated":{"line":152,"column":14},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":67,"column":14},"name":"Vec"},{"generated":{"line":152,"column":22},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":67,"column":14}},{"generated":{"line":152,"column":23},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":67,"column":18},"name":"with"},{"generated":{"line":152,"column":27},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":67,"column":14}},{"generated":{"line":152,"column":28},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":67,"column":23},"name":"TypeValue"},{"generated":{"line":152,"column":37},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":67,"column":14}},{"generated":{"line":153,"column":4},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":65,"column":20}},{"generated":{"line":153,"column":5},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":64,"column":62}},{"generated":{"line":153,"column":7},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":68,"column":7}},{"generated":{"line":153,"column":8},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":68,"column":8},"name":"keys"},{"generated":{"line":153,"column":12},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":68,"column":7}},{"generated":{"line":153,"column":14},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":68,"column":14},"name":"values"},{"generated":{"line":153,"column":20},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":68,"column":7}},{"generated":{"line":153,"column":21},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":64,"column":62}},{"generated":{"line":154,"column":2},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":69,"column":3}},{"generated":{"line":157,"column":2},"source":"node_modules/@polkadot/types-codec/extended/Linkage.js","original":{"line":63,"column":35},"name":"Tuple"}],"sources":{"node_modules/@polkadot/types-codec/extended/Linkage.js":"// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Option } from \"../base/Option.js\";\nimport { Tuple } from \"../base/Tuple.js\";\nimport { Vec } from \"../base/Vec.js\";\nimport { Struct } from \"../native/Struct.js\";\nconst EMPTY = new Uint8Array();\n/**\n * @name Linkage\n * @description The wrapper for the result from a LinkedMap\n */\n\nexport class Linkage extends Struct {\n  constructor(registry, Type, value) {\n    super(registry, {\n      previous: Option.with(Type),\n      // eslint-disable-next-line sort-keys\n      next: Option.with(Type)\n    }, value);\n  }\n\n  static withKey(Type) {\n    return class extends Linkage {\n      constructor(registry, value) {\n        super(registry, Type, value);\n      }\n\n    };\n  }\n\n  get previous() {\n    return this.get('previous');\n  }\n\n  get next() {\n    return this.get('next');\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `Linkage<${this.next.toRawType(true)}>`;\n  }\n  /**\n   * @description Custom toU8a which with bare mode does not return the linkage if empty\n   */\n\n\n  toU8a() {\n    // As part of a storage query (where these appear), in the case of empty, the values\n    // are NOT populated by the node - follow the same logic, leaving it empty\n    return this.isEmpty ? EMPTY : super.toU8a();\n  }\n\n}\n/**\n * @name LinkageResult\n * @description A Linkage keys/Values tuple\n */\n\nexport class LinkageResult extends Tuple {\n  constructor(registry, [TypeKey, keys], [TypeValue, values]) {\n    super(registry, {\n      Keys: Vec.with(TypeKey),\n      Values: Vec.with(TypeValue)\n    }, [keys, values]);\n  }\n\n}"},"lineCount":null}},"error":null,"hash":"a94bf3b153bcdb05bdcf86fcdfcc310b","cacheData":{"env":{}}}