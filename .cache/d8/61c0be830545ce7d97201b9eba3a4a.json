{"id":"node_modules/@polkadot/util-crypto/key/extractPath.js","dependencies":[{"name":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\package.json","includedInParent":true,"mtime":1657570398707},{"name":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util-crypto\\package.json","includedInParent":true,"mtime":1657539547586},{"name":"@polkadot/util","loc":{"line":3,"column":23,"index":130},"parent":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util-crypto\\key\\extractPath.js","resolved":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util\\index.js"},{"name":"./DeriveJunction.js","loc":{"line":4,"column":31,"index":179},"parent":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util-crypto\\key\\extractPath.js","resolved":"C:\\Users\\pc\\Desktop\\MyCode\\Rust\\Project\\Kusama-Network-Proxy-Visualizer\\node_modules\\@polkadot\\util-crypto\\key\\DeriveJunction.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.keyExtractPath = keyExtractPath;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _DeriveJunction = require(\"./DeriveJunction.js\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar RE_JUNCTION = /\\/(\\/?)([^/]+)/g;\n/**\n * @description Extract derivation junctions from the supplied path\n */\n\nfunction keyExtractPath(derivePath) {\n  var parts = derivePath.match(RE_JUNCTION);\n  var path = [];\n  var constructed = '';\n\n  if (parts) {\n    constructed = parts.join('');\n\n    var _iterator = _createForOfIteratorHelper(parts),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var p = _step.value;\n        path.push(_DeriveJunction.DeriveJunction.from(p.substring(1)));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  (0, _util.assert)(constructed === derivePath, function () {\n    return \"Re-constructed path \\\"\".concat(constructed, \"\\\" does not match input\");\n  });\n  return {\n    parts: parts,\n    path: path\n  };\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":4,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":5,"column":0}},{"generated":{"line":18,"column":4},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":5,"column":6},"name":"RE_JUNCTION"},{"generated":{"line":18,"column":15},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":5,"column":17}},{"generated":{"line":18,"column":18},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":5,"column":20}},{"generated":{"line":18,"column":35},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":5,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":7,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":8,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":9,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":10,"column":7}},{"generated":{"line":23,"column":9},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":10,"column":16},"name":"keyExtractPath"},{"generated":{"line":23,"column":23},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":10,"column":7}},{"generated":{"line":23,"column":24},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":10,"column":31},"name":"derivePath"},{"generated":{"line":23,"column":34},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":10,"column":7}},{"generated":{"line":23,"column":36},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":10,"column":43}},{"generated":{"line":24,"column":2},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":11,"column":2}},{"generated":{"line":24,"column":6},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":11,"column":8},"name":"parts"},{"generated":{"line":24,"column":11},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":11,"column":13}},{"generated":{"line":24,"column":14},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":11,"column":16},"name":"derivePath"},{"generated":{"line":24,"column":24},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":11,"column":26}},{"generated":{"line":24,"column":25},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":11,"column":27},"name":"match"},{"generated":{"line":24,"column":30},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":11,"column":16}},{"generated":{"line":24,"column":31},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":11,"column":33},"name":"RE_JUNCTION"},{"generated":{"line":24,"column":42},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":11,"column":16}},{"generated":{"line":24,"column":43},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":11,"column":2}},{"generated":{"line":25,"column":2},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":12,"column":2}},{"generated":{"line":25,"column":6},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":12,"column":8},"name":"path"},{"generated":{"line":25,"column":10},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":12,"column":12}},{"generated":{"line":25,"column":13},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":12,"column":15}},{"generated":{"line":25,"column":15},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":12,"column":2}},{"generated":{"line":26,"column":2},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":13,"column":2}},{"generated":{"line":26,"column":6},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":13,"column":6},"name":"constructed"},{"generated":{"line":26,"column":17},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":13,"column":17}},{"generated":{"line":26,"column":20},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":13,"column":20}},{"generated":{"line":26,"column":22},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":13,"column":2}},{"generated":{"line":28,"column":2},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":15,"column":2}},{"generated":{"line":28,"column":6},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":15,"column":6},"name":"parts"},{"generated":{"line":28,"column":11},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":15,"column":2}},{"generated":{"line":28,"column":13},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":15,"column":13}},{"generated":{"line":29,"column":4},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":16,"column":4},"name":"constructed"},{"generated":{"line":29,"column":15},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":16,"column":15}},{"generated":{"line":29,"column":18},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":16,"column":18},"name":"parts"},{"generated":{"line":29,"column":23},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":16,"column":23}},{"generated":{"line":29,"column":24},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":16,"column":24},"name":"join"},{"generated":{"line":29,"column":28},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":16,"column":18}},{"generated":{"line":29,"column":29},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":16,"column":29}},{"generated":{"line":29,"column":31},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":16,"column":18}},{"generated":{"line":29,"column":32},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":16,"column":4}},{"generated":{"line":31,"column":4},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":15,"column":13}},{"generated":{"line":31,"column":47},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":18,"column":20},"name":"parts"},{"generated":{"line":31,"column":52},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":15,"column":13}},{"generated":{"line":32,"column":4},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":15,"column":13}},{"generated":{"line":34,"column":4},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":15,"column":13}},{"generated":{"line":35,"column":6},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":18,"column":4}},{"generated":{"line":35,"column":58},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":18,"column":27}},{"generated":{"line":36,"column":8},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":18,"column":27}},{"generated":{"line":36,"column":12},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":18,"column":15},"name":"p"},{"generated":{"line":36,"column":13},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":18,"column":27}},{"generated":{"line":37,"column":8},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":19,"column":6},"name":"path"},{"generated":{"line":37,"column":12},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":19,"column":10}},{"generated":{"line":37,"column":13},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":19,"column":11},"name":"push"},{"generated":{"line":37,"column":17},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":19,"column":6}},{"generated":{"line":37,"column":18},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":19,"column":16},"name":"DeriveJunction"},{"generated":{"line":37,"column":48},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":19,"column":16}},{"generated":{"line":37,"column":49},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":19,"column":31},"name":"from"},{"generated":{"line":37,"column":53},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":19,"column":16}},{"generated":{"line":37,"column":54},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":19,"column":36},"name":"p"},{"generated":{"line":37,"column":55},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":19,"column":37}},{"generated":{"line":37,"column":56},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":19,"column":38},"name":"substring"},{"generated":{"line":37,"column":65},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":19,"column":36}},{"generated":{"line":37,"column":66},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":19,"column":48}},{"generated":{"line":37,"column":67},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":19,"column":36}},{"generated":{"line":37,"column":68},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":19,"column":16}},{"generated":{"line":37,"column":69},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":19,"column":6}},{"generated":{"line":38,"column":6},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":20,"column":5}},{"generated":{"line":39,"column":4},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":15,"column":13}},{"generated":{"line":40,"column":6},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":15,"column":13}},{"generated":{"line":41,"column":4},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":15,"column":13}},{"generated":{"line":42,"column":6},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":15,"column":13}},{"generated":{"line":43,"column":4},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":15,"column":13}},{"generated":{"line":44,"column":2},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":21,"column":3}},{"generated":{"line":46,"column":2},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":23,"column":2}},{"generated":{"line":46,"column":6},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":23,"column":2},"name":"assert"},{"generated":{"line":46,"column":18},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":23,"column":2}},{"generated":{"line":46,"column":20},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":23,"column":9},"name":"constructed"},{"generated":{"line":46,"column":31},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":23,"column":20}},{"generated":{"line":46,"column":36},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":23,"column":25},"name":"derivePath"},{"generated":{"line":46,"column":46},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":23,"column":2}},{"generated":{"line":46,"column":48},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":23,"column":37}},{"generated":{"line":47,"column":4},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":23,"column":37}},{"generated":{"line":47,"column":43},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":23,"column":67},"name":"constructed"},{"generated":{"line":47,"column":54},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":23,"column":37}},{"generated":{"line":48,"column":2},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":23,"column":37}},{"generated":{"line":48,"column":3},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":23,"column":2}},{"generated":{"line":49,"column":2},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":24,"column":2}},{"generated":{"line":49,"column":9},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":24,"column":9}},{"generated":{"line":50,"column":4},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":25,"column":4},"name":"parts"},{"generated":{"line":50,"column":9},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":25,"column":9}},{"generated":{"line":50,"column":11},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":25,"column":4},"name":"parts"},{"generated":{"line":50,"column":16},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":24,"column":9}},{"generated":{"line":51,"column":4},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":26,"column":4},"name":"path"},{"generated":{"line":51,"column":8},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":26,"column":8}},{"generated":{"line":51,"column":10},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":26,"column":4},"name":"path"},{"generated":{"line":52,"column":2},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":24,"column":9}},{"generated":{"line":52,"column":3},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":24,"column":2}},{"generated":{"line":53,"column":0},"source":"node_modules/@polkadot/util-crypto/key/extractPath.js","original":{"line":28,"column":1}}],"sources":{"node_modules/@polkadot/util-crypto/key/extractPath.js":"// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert } from '@polkadot/util';\nimport { DeriveJunction } from \"./DeriveJunction.js\";\nconst RE_JUNCTION = /\\/(\\/?)([^/]+)/g;\n\n/**\n * @description Extract derivation junctions from the supplied path\n */\nexport function keyExtractPath(derivePath) {\n  const parts = derivePath.match(RE_JUNCTION);\n  const path = [];\n  let constructed = '';\n\n  if (parts) {\n    constructed = parts.join('');\n\n    for (const p of parts) {\n      path.push(DeriveJunction.from(p.substring(1)));\n    }\n  }\n\n  assert(constructed === derivePath, () => `Re-constructed path \"${constructed}\" does not match input`);\n  return {\n    parts,\n    path\n  };\n}"},"lineCount":null}},"error":null,"hash":"93f129bc852725572d35b1bbc3c4321c","cacheData":{"env":{}}}