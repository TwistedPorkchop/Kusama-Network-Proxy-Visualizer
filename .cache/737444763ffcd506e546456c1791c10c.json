{"dependencies":[{"name":"@polkadot/util","loc":{"line":3,"column":25}},{"name":"@polkadot/wasm-crypto","loc":{"line":4,"column":29}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sr25519Agreement = sr25519Agreement;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _wasmCrypto = require(\"@polkadot/wasm-crypto\");\n\n/**\n * @name sr25519Agreement\n * @description Key agreement between other's public key and self secret key\n */\n\n// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction sr25519Agreement(secretKey, publicKey) {\n  const secretKeyU8a = (0, _util.u8aToU8a)(secretKey);\n  const publicKeyU8a = (0, _util.u8aToU8a)(publicKey);\n\n  if (publicKeyU8a.length !== 32) {\n    throw new Error(`Invalid publicKey, received ${publicKeyU8a.length} bytes, expected 32`);\n  } else if (secretKeyU8a.length !== 64) {\n    throw new Error(`Invalid secretKey, received ${secretKeyU8a.length} bytes, expected 64`);\n  }\n\n  return (0, _wasmCrypto.sr25519Agree)(publicKeyU8a, secretKeyU8a);\n}"},"hash":"cf5410f1675ce15058e723c2f0600c88"}