{"dependencies":[{"name":"../hex/fixLength.js","loc":{"line":3,"column":29}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.numberToHex = numberToHex;\n\nvar _fixLength = require(\"../hex/fixLength.js\");\n\n/**\n * @name numberToHex\n * @summary Creates a hex value from a number.\n * @description\n * `null`/`undefined`/`NaN` inputs returns an empty `0x` result. `number` input values return the actual bytes value converted to a `hex`. With `bitLength` set, it converts the number to the equivalent size.\n * @example\n * <BR>\n *\n * ```javascript\n * import { numberToHex } from '@polkadot/util';\n *\n * numberToHex(0x1234); // => '0x1234'\n * numberToHex(0x1234, 32); // => 0x00001234\n * ```\n */\n\nfunction numberToHex(value, bitLength = -1) {\n  if (value === undefined || value === null || isNaN(value)) {\n    return '0x';\n  }\n\n  const hex = value.toString(16);\n  return (0, _fixLength.hexFixLength)(hex.length % 2 ? `0${hex}` : hex, bitLength, true);\n} // Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0"},"hash":"ad5a3be9951f77027a9ac4acbbfca751"}